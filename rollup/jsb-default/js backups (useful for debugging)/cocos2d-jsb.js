(function(t, e, i) {
function n(i, r) {
var s = e[i];
if (!s) {
var o = t[i];
if (!o) return;
var a = {};
s = e[i] = {
exports: a
};
o[0]((function(t) {
return n(o[1][t] || t);
}), s, a);
}
return s.exports;
}
for (var r = 0; r < i.length; r++) n(i[r]);
})({
1: [ (function(t, e, i) {
"use strict";
t("../core/platform/CCClass");
var n = t("../core/utils/misc");
cc.Action = cc.Class({
name: "cc.Action",
ctor: function() {
this.originalTarget = null;
this.target = null;
this.tag = cc.Action.TAG_INVALID;
},
clone: function() {
var t = new cc.Action();
t.originalTarget = null;
t.target = null;
t.tag = this.tag;
return t;
},
isDone: function() {
return !0;
},
startWithTarget: function(t) {
this.originalTarget = t;
this.target = t;
},
stop: function() {
this.target = null;
},
step: function(t) {
cc.logID(1006);
},
update: function(t) {
cc.logID(1007);
},
getTarget: function() {
return this.target;
},
setTarget: function(t) {
this.target = t;
},
getOriginalTarget: function() {
return this.originalTarget;
},
setOriginalTarget: function(t) {
this.originalTarget = t;
},
getTag: function() {
return this.tag;
},
setTag: function(t) {
this.tag = t;
},
retain: function() {},
release: function() {}
});
cc.Action.TAG_INVALID = -1;
cc.FiniteTimeAction = cc.Class({
name: "cc.FiniteTimeAction",
extends: cc.Action,
ctor: function() {
this._duration = 0;
},
getDuration: function() {
return this._duration * (this._timesForRepeat || 1);
},
setDuration: function(t) {
this._duration = t;
},
reverse: function() {
cc.logID(1008);
return null;
},
clone: function() {
return new cc.FiniteTimeAction();
}
});
cc.Speed = cc.Class({
name: "cc.Speed",
extends: cc.Action,
ctor: function(t, e) {
this._speed = 0;
this._innerAction = null;
t && this.initWithAction(t, e);
},
getSpeed: function() {
return this._speed;
},
setSpeed: function(t) {
this._speed = t;
},
initWithAction: function(t, e) {
if (!t) {
cc.errorID(1021);
return !1;
}
this._innerAction = t;
this._speed = e;
return !0;
},
clone: function() {
var t = new cc.Speed();
t.initWithAction(this._innerAction.clone(), this._speed);
return t;
},
startWithTarget: function(t) {
cc.Action.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
stop: function() {
this._innerAction.stop();
cc.Action.prototype.stop.call(this);
},
step: function(t) {
this._innerAction.step(t * this._speed);
},
isDone: function() {
return this._innerAction.isDone();
},
reverse: function() {
return new cc.Speed(this._innerAction.reverse(), this._speed);
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.speed = function(t, e) {
return new cc.Speed(t, e);
};
cc.Follow = cc.Class({
name: "cc.Follow",
extends: cc.Action,
ctor: function(t, e) {
this._followedNode = null;
this._boundarySet = !1;
this._boundaryFullyCovered = !1;
this._halfScreenSize = null;
this._fullScreenSize = null;
this.leftBoundary = 0;
this.rightBoundary = 0;
this.topBoundary = 0;
this.bottomBoundary = 0;
this._worldRect = cc.rect(0, 0, 0, 0);
t && (e ? this.initWithTarget(t, e) : this.initWithTarget(t));
},
clone: function() {
var t = new cc.Follow(), e = this._worldRect, i = new cc.Rect(e.x, e.y, e.width, e.height);
t.initWithTarget(this._followedNode, i);
return t;
},
isBoundarySet: function() {
return this._boundarySet;
},
setBoudarySet: function(t) {
this._boundarySet = t;
},
initWithTarget: function(t, e) {
if (!t) {
cc.errorID(1022);
return !1;
}
e = e || cc.rect(0, 0, 0, 0);
this._followedNode = t;
this._worldRect = e;
this._boundarySet = !(0 === e.width && 0 === e.height);
this._boundaryFullyCovered = !1;
var i = cc.winSize;
this._fullScreenSize = cc.v2(i.width, i.height);
this._halfScreenSize = this._fullScreenSize.mul(.5);
if (this._boundarySet) {
this.leftBoundary = -(e.x + e.width - this._fullScreenSize.x);
this.rightBoundary = -e.x;
this.topBoundary = -e.y;
this.bottomBoundary = -(e.y + e.height - this._fullScreenSize.y);
this.rightBoundary < this.leftBoundary && (this.rightBoundary = this.leftBoundary = (this.leftBoundary + this.rightBoundary) / 2);
this.topBoundary < this.bottomBoundary && (this.topBoundary = this.bottomBoundary = (this.topBoundary + this.bottomBoundary) / 2);
this.topBoundary === this.bottomBoundary && this.leftBoundary === this.rightBoundary && (this._boundaryFullyCovered = !0);
}
return !0;
},
step: function(t) {
var e = this.target.convertToWorldSpaceAR(cc.Vec2.ZERO), i = this._followedNode.convertToWorldSpaceAR(cc.Vec2.ZERO), r = e.sub(i), s = this.target.parent.convertToNodeSpaceAR(r.add(this._halfScreenSize));
if (this._boundarySet) {
if (this._boundaryFullyCovered) return;
this.target.setPosition(n.clampf(s.x, this.leftBoundary, this.rightBoundary), n.clampf(s.y, this.bottomBoundary, this.topBoundary));
} else this.target.setPosition(s.x, s.y);
},
isDone: function() {
return !this._followedNode.activeInHierarchy;
},
stop: function() {
this.target = null;
cc.Action.prototype.stop.call(this);
}
});
cc.follow = function(t, e) {
return new cc.Follow(t, e);
};
}), {
"../core/platform/CCClass": 126,
"../core/utils/misc": 200
} ],
2: [ (function(t, e, i) {
"use strict";
function n(t, e, i, n, r, s) {
var o = s * s, a = o * s, c = (1 - r) / 2, l = c * (2 * o - a - s), u = c * (-a + o) + (2 * a - 3 * o + 1), h = c * (a - 2 * o + s) + (-2 * a + 3 * o), _ = c * (a - o), f = t.x * l + e.x * u + i.x * h + n.x * _, d = t.y * l + e.y * u + i.y * h + n.y * _;
return cc.v2(f, d);
}
function r(t, e) {
return t[Math.min(t.length - 1, Math.max(e, 0))];
}
function s(t) {
for (var e = [], i = t.length - 1; i >= 0; i--) e.push(cc.v2(t[i].x, t[i].y));
return e;
}
function o(t) {
for (var e = [], i = 0; i < t.length; i++) e.push(cc.v2(t[i].x, t[i].y));
return e;
}
cc.CardinalSplineTo = cc.Class({
name: "cc.CardinalSplineTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._points = [];
this._deltaT = 0;
this._tension = 0;
this._previousPosition = null;
this._accumulatedDiff = null;
void 0 !== i && cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (!e || 0 === e.length) {
cc.errorID(1024);
return !1;
}
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this.setPoints(e);
this._tension = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.CardinalSplineTo();
t.initWithDuration(this._duration, o(this._points), this._tension);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._deltaT = 1 / (this._points.length - 1);
this._previousPosition = cc.v2(this.target.x, this.target.y);
this._accumulatedDiff = cc.v2(0, 0);
},
update: function(t) {
t = this._computeEaseTime(t);
var e, i, s = this._points;
if (1 === t) {
e = s.length - 1;
i = 1;
} else {
var o = this._deltaT;
i = (t - o * (e = 0 | t / o)) / o;
}
var a = n(r(s, e - 1), r(s, e - 0), r(s, e + 1), r(s, e + 2), this._tension, i);
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var c, l;
c = this.target.x - this._previousPosition.x;
l = this.target.y - this._previousPosition.y;
if (0 !== c || 0 !== l) {
var u = this._accumulatedDiff;
c = u.x + c;
l = u.y + l;
u.x = c;
u.y = l;
a.x += c;
a.y += l;
}
}
this.updatePosition(a);
},
reverse: function() {
var t = s(this._points);
return cc.cardinalSplineTo(this._duration, t, this._tension);
},
updatePosition: function(t) {
this.target.setPosition(t);
this._previousPosition = t;
},
getPoints: function() {
return this._points;
},
setPoints: function(t) {
this._points = t;
}
});
cc.cardinalSplineTo = function(t, e, i) {
return new cc.CardinalSplineTo(t, e, i);
};
cc.CardinalSplineBy = cc.Class({
name: "cc.CardinalSplineBy",
extends: cc.CardinalSplineTo,
ctor: function(t, e, i) {
this._startPosition = cc.v2(0, 0);
void 0 !== i && this.initWithDuration(t, e, i);
},
startWithTarget: function(t) {
cc.CardinalSplineTo.prototype.startWithTarget.call(this, t);
this._startPosition.x = t.x;
this._startPosition.y = t.y;
},
reverse: function() {
for (var t, e = this._points.slice(), i = e[0], n = 1; n < e.length; ++n) {
t = e[n];
e[n] = t.sub(i);
i = t;
}
var r = s(e);
i = r[r.length - 1];
r.pop();
i.x = -i.x;
i.y = -i.y;
r.unshift(i);
for (n = 1; n < r.length; ++n) {
(t = r[n]).x = -t.x;
t.y = -t.y;
t.x += i.x;
t.y += i.y;
r[n] = t;
i = t;
}
return cc.cardinalSplineBy(this._duration, r, this._tension);
},
updatePosition: function(t) {
var e = this._startPosition, i = t.x + e.x, n = t.y + e.y;
this._previousPosition.x = i;
this._previousPosition.y = n;
this.target.setPosition(i, n);
},
clone: function() {
var t = new cc.CardinalSplineBy();
t.initWithDuration(this._duration, o(this._points), this._tension);
return t;
}
});
cc.cardinalSplineBy = function(t, e, i) {
return new cc.CardinalSplineBy(t, e, i);
};
cc.CatmullRomTo = cc.Class({
name: "cc.CatmullRomTo",
extends: cc.CardinalSplineTo,
ctor: function(t, e) {
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
return cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, .5);
},
clone: function() {
var t = new cc.CatmullRomTo();
t.initWithDuration(this._duration, o(this._points));
return t;
}
});
cc.catmullRomTo = function(t, e) {
return new cc.CatmullRomTo(t, e);
};
cc.CatmullRomBy = cc.Class({
name: "cc.CatmullRomBy",
extends: cc.CardinalSplineBy,
ctor: function(t, e) {
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
return cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, .5);
},
clone: function() {
var t = new cc.CatmullRomBy();
t.initWithDuration(this._duration, o(this._points));
return t;
}
});
cc.catmullRomBy = function(t, e) {
return new cc.CatmullRomBy(t, e);
};
}), {} ],
3: [ (function(t, e, i) {
"use strict";
cc.easeIn = function(t) {
return {
_rate: t,
easing: function(t) {
return Math.pow(t, this._rate);
},
reverse: function() {
return cc.easeIn(1 / this._rate);
}
};
};
cc.easeOut = function(t) {
return {
_rate: t,
easing: function(t) {
return Math.pow(t, 1 / this._rate);
},
reverse: function() {
return cc.easeOut(1 / this._rate);
}
};
};
cc.easeInOut = function(t) {
return {
_rate: t,
easing: function(t) {
return (t *= 2) < 1 ? .5 * Math.pow(t, this._rate) : 1 - .5 * Math.pow(2 - t, this._rate);
},
reverse: function() {
return cc.easeInOut(this._rate);
}
};
};
var n = {
easing: function(t) {
return 0 === t ? 0 : Math.pow(2, 10 * (t - 1));
},
reverse: function() {
return r;
}
};
cc.easeExponentialIn = function() {
return n;
};
var r = {
easing: function(t) {
return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
},
reverse: function() {
return n;
}
};
cc.easeExponentialOut = function() {
return r;
};
var s = {
easing: function(t) {
return 1 !== t && 0 !== t ? (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1))) : t;
},
reverse: function() {
return s;
}
};
cc.easeExponentialInOut = function() {
return s;
};
var o = {
easing: function(t) {
return 0 === t || 1 === t ? t : -1 * Math.cos(t * Math.PI / 2) + 1;
},
reverse: function() {
return a;
}
};
cc.easeSineIn = function() {
return o;
};
var a = {
easing: function(t) {
return 0 === t || 1 === t ? t : Math.sin(t * Math.PI / 2);
},
reverse: function() {
return o;
}
};
cc.easeSineOut = function() {
return a;
};
var c = {
easing: function(t) {
return 0 === t || 1 === t ? t : -.5 * (Math.cos(Math.PI * t) - 1);
},
reverse: function() {
return c;
}
};
cc.easeSineInOut = function() {
return c;
};
var l = {
easing: function(t) {
if (0 === t || 1 === t) return t;
t -= 1;
return -Math.pow(2, 10 * t) * Math.sin((t - .075) * Math.PI * 2 / .3);
},
reverse: function() {
return u;
}
};
cc.easeElasticIn = function(t) {
return t && .3 !== t ? {
_period: t,
easing: function(t) {
if (0 === t || 1 === t) return t;
t -= 1;
return -Math.pow(2, 10 * t) * Math.sin((t - this._period / 4) * Math.PI * 2 / this._period);
},
reverse: function() {
return cc.easeElasticOut(this._period);
}
} : l;
};
var u = {
easing: function(t) {
return 0 === t || 1 === t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * Math.PI * 2 / .3) + 1;
},
reverse: function() {
return l;
}
};
cc.easeElasticOut = function(t) {
return t && .3 !== t ? {
_period: t,
easing: function(t) {
return 0 === t || 1 === t ? t : Math.pow(2, -10 * t) * Math.sin((t - this._period / 4) * Math.PI * 2 / this._period) + 1;
},
reverse: function() {
return cc.easeElasticIn(this._period);
}
} : u;
};
cc.easeElasticInOut = function(t) {
return {
_period: t = t || .3,
easing: function(t) {
var e = 0, i = this._period;
if (0 === t || 1 === t) e = t; else {
t *= 2;
i || (i = this._period = .3 * 1.5);
var n = i / 4;
e = (t -= 1) < 0 ? -.5 * Math.pow(2, 10 * t) * Math.sin((t - n) * Math.PI * 2 / i) : Math.pow(2, -10 * t) * Math.sin((t - n) * Math.PI * 2 / i) * .5 + 1;
}
return e;
},
reverse: function() {
return cc.easeElasticInOut(this._period);
}
};
};
function h(t) {
return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
}
var _ = {
easing: function(t) {
return 1 - h(1 - t);
},
reverse: function() {
return f;
}
};
cc.easeBounceIn = function() {
return _;
};
var f = {
easing: function(t) {
return h(t);
},
reverse: function() {
return _;
}
};
cc.easeBounceOut = function() {
return f;
};
var d = {
easing: function(t) {
return t < .5 ? .5 * (1 - h(1 - (t *= 2))) : .5 * h(2 * t - 1) + .5;
},
reverse: function() {
return d;
}
};
cc.easeBounceInOut = function() {
return d;
};
var p = {
easing: function(t) {
return 0 === t || 1 === t ? t : t * t * (2.70158 * t - 1.70158);
},
reverse: function() {
return m;
}
};
cc.easeBackIn = function() {
return p;
};
var m = {
easing: function(t) {
return (t -= 1) * t * (2.70158 * t + 1.70158) + 1;
},
reverse: function() {
return p;
}
};
cc.easeBackOut = function() {
return m;
};
var y = {
easing: function(t) {
return (t *= 2) < 1 ? t * t * (3.5949095 * t - 2.5949095) / 2 : (t -= 2) * t * (3.5949095 * t + 2.5949095) / 2 + 1;
},
reverse: function() {
return y;
}
};
cc.easeBackInOut = function() {
return y;
};
cc.easeBezierAction = function(t, e, i, n) {
return {
easing: function(r) {
return Math.pow(1 - r, 3) * t + 3 * r * Math.pow(1 - r, 2) * e + 3 * Math.pow(r, 2) * (1 - r) * i + Math.pow(r, 3) * n;
},
reverse: function() {
return cc.easeBezierAction(n, i, e, t);
}
};
};
var v = {
easing: function(t) {
return Math.pow(t, 2);
},
reverse: function() {
return v;
}
};
cc.easeQuadraticActionIn = function() {
return v;
};
var g = {
easing: function(t) {
return -t * (t - 2);
},
reverse: function() {
return g;
}
};
cc.easeQuadraticActionOut = function() {
return g;
};
var C = {
easing: function(t) {
return (t *= 2) < 1 ? t * t * .5 : -.5 * (--t * (t - 2) - 1);
},
reverse: function() {
return C;
}
};
cc.easeQuadraticActionInOut = function() {
return C;
};
var x = {
easing: function(t) {
return t * t * t * t;
},
reverse: function() {
return x;
}
};
cc.easeQuarticActionIn = function() {
return x;
};
var A = {
easing: function(t) {
return -((t -= 1) * t * t * t - 1);
},
reverse: function() {
return A;
}
};
cc.easeQuarticActionOut = function() {
return A;
};
var b = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);
},
reverse: function() {
return b;
}
};
cc.easeQuarticActionInOut = function() {
return b;
};
var S = {
easing: function(t) {
return t * t * t * t * t;
},
reverse: function() {
return S;
}
};
cc.easeQuinticActionIn = function() {
return S;
};
var w = {
easing: function(t) {
return (t -= 1) * t * t * t * t + 1;
},
reverse: function() {
return w;
}
};
cc.easeQuinticActionOut = function() {
return w;
};
var T = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);
},
reverse: function() {
return T;
}
};
cc.easeQuinticActionInOut = function() {
return T;
};
var B = {
easing: function(t) {
return -1 * (Math.sqrt(1 - t * t) - 1);
},
reverse: function() {
return B;
}
};
cc.easeCircleActionIn = function() {
return B;
};
var E = {
easing: function(t) {
t -= 1;
return Math.sqrt(1 - t * t);
},
reverse: function() {
return E;
}
};
cc.easeCircleActionOut = function() {
return E;
};
var M = {
easing: function(t) {
if ((t *= 2) < 1) return -.5 * (Math.sqrt(1 - t * t) - 1);
t -= 2;
return .5 * (Math.sqrt(1 - t * t) + 1);
},
reverse: function() {
return M;
}
};
cc.easeCircleActionInOut = function() {
return M;
};
var I = {
easing: function(t) {
return t * t * t;
},
reverse: function() {
return I;
}
};
cc.easeCubicActionIn = function() {
return I;
};
var R = {
easing: function(t) {
return (t -= 1) * t * t + 1;
},
reverse: function() {
return R;
}
};
cc.easeCubicActionOut = function() {
return R;
};
var D = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);
},
reverse: function() {
return D;
}
};
cc.easeCubicActionInOut = function() {
return D;
};
}), {} ],
4: [ (function(t, e, i) {
"use strict";
cc.ActionInstant = cc.Class({
name: "cc.ActionInstant",
extends: cc.FiniteTimeAction,
isDone: function() {
return !0;
},
step: function(t) {
this.update(1);
},
update: function(t) {},
reverse: function() {
return this.clone();
},
clone: function() {
return new cc.ActionInstant();
}
});
cc.Show = cc.Class({
name: "cc.Show",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
e[i].enabled = !0;
}
},
reverse: function() {
return new cc.Hide();
},
clone: function() {
return new cc.Show();
}
});
cc.show = function() {
return new cc.Show();
};
cc.Hide = cc.Class({
name: "cc.Hide",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
e[i].enabled = !1;
}
},
reverse: function() {
return new cc.Show();
},
clone: function() {
return new cc.Hide();
}
});
cc.hide = function() {
return new cc.Hide();
};
cc.ToggleVisibility = cc.Class({
name: "cc.ToggleVisibility",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
var n = e[i];
n.enabled = !n.enabled;
}
},
reverse: function() {
return new cc.ToggleVisibility();
},
clone: function() {
return new cc.ToggleVisibility();
}
});
cc.toggleVisibility = function() {
return new cc.ToggleVisibility();
};
cc.RemoveSelf = cc.Class({
name: "cc.RemoveSelf",
extends: cc.ActionInstant,
ctor: function(t) {
this._isNeedCleanUp = !0;
void 0 !== t && this.init(t);
},
update: function(t) {
this.target.removeFromParent(this._isNeedCleanUp);
},
init: function(t) {
this._isNeedCleanUp = t;
return !0;
},
reverse: function() {
return new cc.RemoveSelf(this._isNeedCleanUp);
},
clone: function() {
return new cc.RemoveSelf(this._isNeedCleanUp);
}
});
cc.removeSelf = function(t) {
return new cc.RemoveSelf(t);
};
cc.FlipX = cc.Class({
name: "cc.FlipX",
extends: cc.ActionInstant,
ctor: function(t) {
this._flippedX = !1;
void 0 !== t && this.initWithFlipX(t);
},
initWithFlipX: function(t) {
this._flippedX = t;
return !0;
},
update: function(t) {
this.target.scaleX = Math.abs(this.target.scaleX) * (this._flippedX ? -1 : 1);
},
reverse: function() {
return new cc.FlipX(!this._flippedX);
},
clone: function() {
var t = new cc.FlipX();
t.initWithFlipX(this._flippedX);
return t;
}
});
cc.flipX = function(t) {
return new cc.FlipX(t);
};
cc.FlipY = cc.Class({
name: "cc.FlipY",
extends: cc.ActionInstant,
ctor: function(t) {
this._flippedY = !1;
void 0 !== t && this.initWithFlipY(t);
},
initWithFlipY: function(t) {
this._flippedY = t;
return !0;
},
update: function(t) {
this.target.scaleY = Math.abs(this.target.scaleY) * (this._flippedY ? -1 : 1);
},
reverse: function() {
return new cc.FlipY(!this._flippedY);
},
clone: function() {
var t = new cc.FlipY();
t.initWithFlipY(this._flippedY);
return t;
}
});
cc.flipY = function(t) {
return new cc.FlipY(t);
};
cc.Place = cc.Class({
name: "cc.Place",
extends: cc.ActionInstant,
ctor: function(t, e) {
this._x = 0;
this._y = 0;
if (void 0 !== t) {
if (void 0 !== t.x) {
e = t.y;
t = t.x;
}
this.initWithPosition(t, e);
}
},
initWithPosition: function(t, e) {
this._x = t;
this._y = e;
return !0;
},
update: function(t) {
this.target.setPosition(this._x, this._y);
},
clone: function() {
var t = new cc.Place();
t.initWithPosition(this._x, this._y);
return t;
}
});
cc.place = function(t, e) {
return new cc.Place(t, e);
};
cc.CallFunc = cc.Class({
name: "cc.CallFunc",
extends: cc.ActionInstant,
ctor: function(t, e, i) {
this._selectorTarget = null;
this._function = null;
this._data = null;
this.initWithFunction(t, e, i);
},
initWithFunction: function(t, e, i) {
t && (this._function = t);
e && (this._selectorTarget = e);
void 0 !== i && (this._data = i);
return !0;
},
execute: function() {
this._function && this._function.call(this._selectorTarget, this.target, this._data);
},
update: function(t) {
this.execute();
},
getTargetCallback: function() {
return this._selectorTarget;
},
setTargetCallback: function(t) {
if (t !== this._selectorTarget) {
this._selectorTarget && (this._selectorTarget = null);
this._selectorTarget = t;
}
},
clone: function() {
var t = new cc.CallFunc();
t.initWithFunction(this._function, this._selectorTarget, this._data);
return t;
}
});
cc.callFunc = function(t, e, i) {
return new cc.CallFunc(t, e, i);
};
}), {} ],
5: [ (function(t, e, i) {
"use strict";
cc.ActionInterval = cc.Class({
name: "cc.ActionInterval",
extends: cc.FiniteTimeAction,
ctor: function(t) {
this.MAX_VALUE = 2;
this._elapsed = 0;
this._firstTick = !1;
this._easeList = null;
this._speed = 1;
this._timesForRepeat = 1;
this._repeatForever = !1;
this._repeatMethod = !1;
this._speedMethod = !1;
void 0 !== t && cc.ActionInterval.prototype.initWithDuration.call(this, t);
},
getElapsed: function() {
return this._elapsed;
},
initWithDuration: function(t) {
this._duration = 0 === t ? cc.macro.FLT_EPSILON : t;
this._elapsed = 0;
this._firstTick = !0;
return !0;
},
isDone: function() {
return this._elapsed >= this._duration;
},
_cloneDecoration: function(t) {
t._repeatForever = this._repeatForever;
t._speed = this._speed;
t._timesForRepeat = this._timesForRepeat;
t._easeList = this._easeList;
t._speedMethod = this._speedMethod;
t._repeatMethod = this._repeatMethod;
},
_reverseEaseList: function(t) {
if (this._easeList) {
t._easeList = [];
for (var e = 0; e < this._easeList.length; e++) t._easeList.push(this._easeList[e].reverse());
}
},
clone: function() {
var t = new cc.ActionInterval(this._duration);
this._cloneDecoration(t);
return t;
},
easing: function(t) {
this._easeList ? this._easeList.length = 0 : this._easeList = [];
for (var e = 0; e < arguments.length; e++) this._easeList.push(arguments[e]);
return this;
},
_computeEaseTime: function(t) {
var e = this._easeList;
if (!e || 0 === e.length) return t;
for (var i = 0, n = e.length; i < n; i++) t = e[i].easing(t);
return t;
},
step: function(t) {
if (this._firstTick) {
this._firstTick = !1;
this._elapsed = 0;
} else this._elapsed += t;
var e = this._elapsed / (this._duration > 1.192092896e-7 ? this._duration : 1.192092896e-7);
e = 1 > e ? e : 1;
this.update(e > 0 ? e : 0);
if (this._repeatMethod && this._timesForRepeat > 1 && this.isDone()) {
this._repeatForever || this._timesForRepeat--;
this.startWithTarget(this.target);
this.step(this._elapsed - this._duration);
}
},
startWithTarget: function(t) {
cc.Action.prototype.startWithTarget.call(this, t);
this._elapsed = 0;
this._firstTick = !0;
},
reverse: function() {
cc.logID(1010);
return null;
},
setAmplitudeRate: function(t) {
cc.logID(1011);
},
getAmplitudeRate: function() {
cc.logID(1012);
return 0;
},
speed: function(t) {
if (t <= 0) {
cc.logID(1013);
return this;
}
this._speedMethod = !0;
this._speed *= t;
return this;
},
getSpeed: function() {
return this._speed;
},
setSpeed: function(t) {
this._speed = t;
return this;
},
repeat: function(t) {
t = Math.round(t);
if (isNaN(t) || t < 1) {
cc.logID(1014);
return this;
}
this._repeatMethod = !0;
this._timesForRepeat *= t;
return this;
},
repeatForever: function() {
this._repeatMethod = !0;
this._timesForRepeat = this.MAX_VALUE;
this._repeatForever = !0;
return this;
}
});
cc.actionInterval = function(t) {
return new cc.ActionInterval(t);
};
cc.Sequence = cc.Class({
name: "cc.Sequence",
extends: cc.ActionInterval,
ctor: function(t) {
this._actions = [];
this._split = null;
this._last = 0;
this._reversed = !1;
var e = t instanceof Array ? t : arguments;
if (1 !== e.length) {
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
if (i >= 0) {
for (var n, r = e[0], s = 1; s < i; s++) if (e[s]) {
n = r;
r = cc.Sequence._actionOneTwo(n, e[s]);
}
this.initWithTwoActions(r, e[i]);
}
} else cc.errorID(1019);
},
initWithTwoActions: function(t, e) {
if (!t || !e) {
cc.errorID(1025);
return !1;
}
var i = t._duration, n = e._duration, r = (i *= t._repeatMethod ? t._timesForRepeat : 1) + (n *= e._repeatMethod ? e._timesForRepeat : 1);
this.initWithDuration(r);
this._actions[0] = t;
this._actions[1] = e;
return !0;
},
clone: function() {
var t = new cc.Sequence();
this._cloneDecoration(t);
t.initWithTwoActions(this._actions[0].clone(), this._actions[1].clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._split = this._actions[0]._duration / this._duration;
this._split *= this._actions[0]._repeatMethod ? this._actions[0]._timesForRepeat : 1;
this._last = -1;
},
stop: function() {
-1 !== this._last && this._actions[this._last].stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
var e, i, n = 0, r = this._split, s = this._actions, o = this._last;
if ((t = this._computeEaseTime(t)) < r) {
e = 0 !== r ? t / r : 1;
if (0 === n && 1 === o && this._reversed) {
s[1].update(0);
s[1].stop();
}
} else {
n = 1;
e = 1 === r ? 1 : (t - r) / (1 - r);
if (-1 === o) {
s[0].startWithTarget(this.target);
s[0].update(1);
s[0].stop();
}
if (0 === o) {
s[0].update(1);
s[0].stop();
}
}
i = s[n];
if (o !== n || !i.isDone()) {
o !== n && i.startWithTarget(this.target);
e *= i._timesForRepeat;
i.update(e > 1 ? e % 1 : e);
this._last = n;
}
},
reverse: function() {
var t = cc.Sequence._actionOneTwo(this._actions[1].reverse(), this._actions[0].reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
t._reversed = !0;
return t;
}
});
cc.sequence = function(t) {
var e = t instanceof Array ? t : arguments;
if (1 === e.length) {
cc.errorID(1019);
return null;
}
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
var n = null;
if (i >= 0) {
n = e[0];
for (var r = 1; r <= i; r++) e[r] && (n = cc.Sequence._actionOneTwo(n, e[r]));
}
return n;
};
cc.Sequence._actionOneTwo = function(t, e) {
var i = new cc.Sequence();
i.initWithTwoActions(t, e);
return i;
};
cc.Repeat = cc.Class({
name: "cc.Repeat",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._times = 0;
this._total = 0;
this._nextDt = 0;
this._actionInstant = !1;
this._innerAction = null;
void 0 !== e && this.initWithAction(t, e);
},
initWithAction: function(t, e) {
var i = t._duration * e;
if (this.initWithDuration(i)) {
this._times = e;
this._innerAction = t;
if (t instanceof cc.ActionInstant) {
this._actionInstant = !0;
this._times -= 1;
}
this._total = 0;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Repeat();
this._cloneDecoration(t);
t.initWithAction(this._innerAction.clone(), this._times);
return t;
},
startWithTarget: function(t) {
this._total = 0;
this._nextDt = this._innerAction._duration / this._duration;
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
stop: function() {
this._innerAction.stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
t = this._computeEaseTime(t);
var e = this._innerAction, i = this._duration, n = this._times, r = this._nextDt;
if (t >= r) {
for (;t > r && this._total < n; ) {
e.update(1);
this._total++;
e.stop();
e.startWithTarget(this.target);
r += e._duration / i;
this._nextDt = r > 1 ? 1 : r;
}
if (t >= 1 && this._total < n) {
e.update(1);
this._total++;
}
this._actionInstant || (this._total === n ? e.stop() : e.update(t - (r - e._duration / i)));
} else e.update(t * n % 1);
},
isDone: function() {
return this._total === this._times;
},
reverse: function() {
var t = new cc.Repeat(this._innerAction.reverse(), this._times);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.repeat = function(t, e) {
return new cc.Repeat(t, e);
};
cc.RepeatForever = cc.Class({
name: "cc.RepeatForever",
extends: cc.ActionInterval,
ctor: function(t) {
this._innerAction = null;
t && this.initWithAction(t);
},
initWithAction: function(t) {
if (!t) {
cc.errorID(1026);
return !1;
}
this._innerAction = t;
return !0;
},
clone: function() {
var t = new cc.RepeatForever();
this._cloneDecoration(t);
t.initWithAction(this._innerAction.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
step: function(t) {
var e = this._innerAction;
e.step(t);
if (e.isDone()) {
e.startWithTarget(this.target);
e.step(e.getElapsed() - e._duration);
}
},
isDone: function() {
return !1;
},
reverse: function() {
var t = new cc.RepeatForever(this._innerAction.reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.repeatForever = function(t) {
return new cc.RepeatForever(t);
};
cc.Spawn = cc.Class({
name: "cc.Spawn",
extends: cc.ActionInterval,
ctor: function(t) {
this._one = null;
this._two = null;
var e = t instanceof Array ? t : arguments;
if (1 !== e.length) {
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
if (i >= 0) {
for (var n, r = e[0], s = 1; s < i; s++) if (e[s]) {
n = r;
r = cc.Spawn._actionOneTwo(n, e[s]);
}
this.initWithTwoActions(r, e[i]);
}
} else cc.errorID(1020);
},
initWithTwoActions: function(t, e) {
if (!t || !e) {
cc.errorID(1027);
return !1;
}
var i = !1, n = t._duration, r = e._duration;
if (this.initWithDuration(Math.max(n, r))) {
this._one = t;
this._two = e;
n > r ? this._two = cc.Sequence._actionOneTwo(e, cc.delayTime(n - r)) : n < r && (this._one = cc.Sequence._actionOneTwo(t, cc.delayTime(r - n)));
i = !0;
}
return i;
},
clone: function() {
var t = new cc.Spawn();
this._cloneDecoration(t);
t.initWithTwoActions(this._one.clone(), this._two.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._one.startWithTarget(t);
this._two.startWithTarget(t);
},
stop: function() {
this._one.stop();
this._two.stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
t = this._computeEaseTime(t);
this._one && this._one.update(t);
this._two && this._two.update(t);
},
reverse: function() {
var t = cc.Spawn._actionOneTwo(this._one.reverse(), this._two.reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.spawn = function(t) {
var e = t instanceof Array ? t : arguments;
if (1 === e.length) {
cc.errorID(1020);
return null;
}
e.length > 0 && null == e[e.length - 1] && cc.logID(1015);
for (var i = e[0], n = 1; n < e.length; n++) null != e[n] && (i = cc.Spawn._actionOneTwo(i, e[n]));
return i;
};
cc.Spawn._actionOneTwo = function(t, e) {
var i = new cc.Spawn();
i.initWithTwoActions(t, e);
return i;
};
cc.RotateTo = cc.Class({
name: "cc.RotateTo",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._startAngle = 0;
this._dstAngle = 0;
this._angle = 0;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._dstAngle = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.RotateTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._dstAngle);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.angle % 360, i = cc.macro.ROTATE_ACTION_CCW ? this._dstAngle - e : this._dstAngle + e;
i > 180 && (i -= 360);
i < -180 && (i += 360);
this._startAngle = e;
this._angle = cc.macro.ROTATE_ACTION_CCW ? i : -i;
},
reverse: function() {
cc.logID(1016);
},
update: function(t) {
t = this._computeEaseTime(t);
this.target && (this.target.angle = this._startAngle + this._angle * t);
}
});
cc.rotateTo = function(t, e) {
return new cc.RotateTo(t, e);
};
cc.RotateBy = cc.Class({
name: "cc.RotateBy",
extends: cc.ActionInterval,
ctor: function(t, e) {
e *= cc.macro.ROTATE_ACTION_CCW ? 1 : -1;
this._deltaAngle = 0;
this._startAngle = 0;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._deltaAngle = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.RotateBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._deltaAngle);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startAngle = t.angle;
},
update: function(t) {
t = this._computeEaseTime(t);
this.target && (this.target.angle = this._startAngle + this._deltaAngle * t);
},
reverse: function() {
var t = new cc.RotateBy(this._duration, -this._deltaAngle);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.rotateBy = function(t, e) {
return new cc.RotateBy(t, e);
};
cc.MoveBy = cc.Class({
name: "cc.MoveBy",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._positionDelta = cc.v2(0, 0);
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
void 0 !== e && cc.MoveBy.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
if (void 0 !== e.x) {
i = e.y;
e = e.x;
}
this._positionDelta.x = e;
this._positionDelta.y = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.MoveBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._positionDelta);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = this._positionDelta.x * t, i = this._positionDelta.y * t, n = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var r = this.target.x, s = this.target.y, o = this._previousPosition;
n.x = n.x + r - o.x;
n.y = n.y + s - o.y;
e += n.x;
i += n.y;
o.x = e;
o.y = i;
this.target.setPosition(e, i);
} else this.target.setPosition(n.x + e, n.y + i);
}
},
reverse: function() {
var t = new cc.MoveBy(this._duration, cc.v2(-this._positionDelta.x, -this._positionDelta.y));
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.moveBy = function(t, e, i) {
return new cc.MoveBy(t, e, i);
};
cc.MoveTo = cc.Class({
name: "cc.MoveTo",
extends: cc.MoveBy,
ctor: function(t, e, i) {
this._endPosition = cc.v2(0, 0);
void 0 !== e && this.initWithDuration(t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.MoveBy.prototype.initWithDuration.call(this, t, e, i)) {
if (void 0 !== e.x) {
i = e.y;
e = e.x;
}
this._endPosition.x = e;
this._endPosition.y = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.MoveTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endPosition);
return t;
},
startWithTarget: function(t) {
cc.MoveBy.prototype.startWithTarget.call(this, t);
this._positionDelta.x = this._endPosition.x - t.x;
this._positionDelta.y = this._endPosition.y - t.y;
}
});
cc.moveTo = function(t, e, i) {
return new cc.MoveTo(t, e, i);
};
cc.SkewTo = cc.Class({
name: "cc.SkewTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._skewX = 0;
this._skewY = 0;
this._startSkewX = 0;
this._startSkewY = 0;
this._endSkewX = 0;
this._endSkewY = 0;
this._deltaX = 0;
this._deltaY = 0;
void 0 !== i && cc.SkewTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
var n = !1;
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._endSkewX = e;
this._endSkewY = i;
n = !0;
}
return n;
},
clone: function() {
var t = new cc.SkewTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endSkewX, this._endSkewY);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startSkewX = t.skewX % 180;
this._deltaX = this._endSkewX - this._startSkewX;
this._deltaX > 180 && (this._deltaX -= 360);
this._deltaX < -180 && (this._deltaX += 360);
this._startSkewY = t.skewY % 360;
this._deltaY = this._endSkewY - this._startSkewY;
this._deltaY > 180 && (this._deltaY -= 360);
this._deltaY < -180 && (this._deltaY += 360);
},
update: function(t) {
t = this._computeEaseTime(t);
this.target.skewX = this._startSkewX + this._deltaX * t;
this.target.skewY = this._startSkewY + this._deltaY * t;
}
});
cc.skewTo = function(t, e, i) {
return new cc.SkewTo(t, e, i);
};
cc.SkewBy = cc.Class({
name: "cc.SkewBy",
extends: cc.SkewTo,
ctor: function(t, e, i) {
void 0 !== i && this.initWithDuration(t, e, i);
},
initWithDuration: function(t, e, i) {
var n = !1;
if (cc.SkewTo.prototype.initWithDuration.call(this, t, e, i)) {
this._skewX = e;
this._skewY = i;
n = !0;
}
return n;
},
clone: function() {
var t = new cc.SkewBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._skewX, this._skewY);
return t;
},
startWithTarget: function(t) {
cc.SkewTo.prototype.startWithTarget.call(this, t);
this._deltaX = this._skewX;
this._deltaY = this._skewY;
this._endSkewX = this._startSkewX + this._deltaX;
this._endSkewY = this._startSkewY + this._deltaY;
},
reverse: function() {
var t = new cc.SkewBy(this._duration, -this._skewX, -this._skewY);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.skewBy = function(t, e, i) {
return new cc.SkewBy(t, e, i);
};
cc.JumpBy = cc.Class({
name: "cc.JumpBy",
extends: cc.ActionInterval,
ctor: function(t, e, i, n, r) {
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
this._delta = cc.v2(0, 0);
this._height = 0;
this._jumps = 0;
void 0 !== n && cc.JumpBy.prototype.initWithDuration.call(this, t, e, i, n, r);
},
initWithDuration: function(t, e, i, n, r) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
if (void 0 === r) {
r = n;
n = i;
i = e.y;
e = e.x;
}
this._delta.x = e;
this._delta.y = i;
this._height = n;
this._jumps = r;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.JumpBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._delta, this._height, this._jumps);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = t * this._jumps % 1, i = 4 * this._height * e * (1 - e);
i += this._delta.y * t;
var n = this._delta.x * t, r = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var s = this.target.x, o = this.target.y, a = this._previousPosition;
r.x = r.x + s - a.x;
r.y = r.y + o - a.y;
n += r.x;
i += r.y;
a.x = n;
a.y = i;
this.target.setPosition(n, i);
} else this.target.setPosition(r.x + n, r.y + i);
}
},
reverse: function() {
var t = new cc.JumpBy(this._duration, cc.v2(-this._delta.x, -this._delta.y), this._height, this._jumps);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.jumpBy = function(t, e, i, n, r) {
return new cc.JumpBy(t, e, i, n, r);
};
cc.JumpTo = cc.Class({
name: "cc.JumpTo",
extends: cc.JumpBy,
ctor: function(t, e, i, n, r) {
this._endPosition = cc.v2(0, 0);
void 0 !== n && this.initWithDuration(t, e, i, n, r);
},
initWithDuration: function(t, e, i, n, r) {
if (cc.JumpBy.prototype.initWithDuration.call(this, t, e, i, n, r)) {
if (void 0 === r) {
i = e.y;
e = e.x;
}
this._endPosition.x = e;
this._endPosition.y = i;
return !0;
}
return !1;
},
startWithTarget: function(t) {
cc.JumpBy.prototype.startWithTarget.call(this, t);
this._delta.x = this._endPosition.x - this._startPosition.x;
this._delta.y = this._endPosition.y - this._startPosition.y;
},
clone: function() {
var t = new cc.JumpTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endPosition, this._height, this._jumps);
return t;
}
});
cc.jumpTo = function(t, e, i, n, r) {
return new cc.JumpTo(t, e, i, n, r);
};
function n(t, e, i, n, r) {
return Math.pow(1 - r, 3) * t + 3 * r * Math.pow(1 - r, 2) * e + 3 * Math.pow(r, 2) * (1 - r) * i + Math.pow(r, 3) * n;
}
cc.BezierBy = cc.Class({
name: "cc.BezierBy",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._config = [];
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
e && cc.BezierBy.prototype.initWithDuration.call(this, t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._config = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.BezierBy();
this._cloneDecoration(t);
for (var e = [], i = 0; i < this._config.length; i++) {
var n = this._config[i];
e.push(cc.v2(n.x, n.y));
}
t.initWithDuration(this._duration, e);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = this._config, i = e[0].x, r = e[1].x, s = e[2].x, o = e[0].y, a = e[1].y, c = e[2].y, l = n(0, i, r, s, t), u = n(0, o, a, c, t), h = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var _ = this.target.x, f = this.target.y, d = this._previousPosition;
h.x = h.x + _ - d.x;
h.y = h.y + f - d.y;
l += h.x;
u += h.y;
d.x = l;
d.y = u;
this.target.setPosition(l, u);
} else this.target.setPosition(h.x + l, h.y + u);
}
},
reverse: function() {
var t = this._config, e = t[0].x, i = t[0].y, n = t[1].x, r = t[1].y, s = t[2].x, o = t[2].y, a = [ cc.v2(n - s, r - o), cc.v2(e - s, i - o), cc.v2(-s, -o) ], c = new cc.BezierBy(this._duration, a);
this._cloneDecoration(c);
this._reverseEaseList(c);
return c;
}
});
cc.bezierBy = function(t, e) {
return new cc.BezierBy(t, e);
};
cc.BezierTo = cc.Class({
name: "cc.BezierTo",
extends: cc.BezierBy,
ctor: function(t, e) {
this._toConfig = [];
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._toConfig = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.BezierTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toConfig);
return t;
},
startWithTarget: function(t) {
cc.BezierBy.prototype.startWithTarget.call(this, t);
var e = this._startPosition, i = this._toConfig, n = this._config;
n[0] = i[0].sub(e);
n[1] = i[1].sub(e);
n[2] = i[2].sub(e);
}
});
cc.bezierTo = function(t, e) {
return new cc.BezierTo(t, e);
};
cc.ScaleTo = cc.Class({
name: "cc.ScaleTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._scaleX = 1;
this._scaleY = 1;
this._startScaleX = 1;
this._startScaleY = 1;
this._endScaleX = 0;
this._endScaleY = 0;
this._deltaX = 0;
this._deltaY = 0;
void 0 !== e && cc.ScaleTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._endScaleX = e;
this._endScaleY = null != i ? i : e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.ScaleTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endScaleX, this._endScaleY);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startScaleX = t.scaleX;
this._startScaleY = t.scaleY;
this._deltaX = this._endScaleX - this._startScaleX;
this._deltaY = this._endScaleY - this._startScaleY;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
this.target.scaleX = this._startScaleX + this._deltaX * t;
this.target.scaleY = this._startScaleY + this._deltaY * t;
}
}
});
cc.scaleTo = function(t, e, i) {
return new cc.ScaleTo(t, e, i);
};
cc.ScaleBy = cc.Class({
name: "cc.ScaleBy",
extends: cc.ScaleTo,
startWithTarget: function(t) {
cc.ScaleTo.prototype.startWithTarget.call(this, t);
this._deltaX = this._startScaleX * this._endScaleX - this._startScaleX;
this._deltaY = this._startScaleY * this._endScaleY - this._startScaleY;
},
reverse: function() {
var t = new cc.ScaleBy(this._duration, 1 / this._endScaleX, 1 / this._endScaleY);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.ScaleBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endScaleX, this._endScaleY);
return t;
}
});
cc.scaleBy = function(t, e, i) {
return new cc.ScaleBy(t, e, i);
};
cc.Blink = cc.Class({
name: "cc.Blink",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._times = 0;
this._originalState = !1;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._times = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Blink();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._times);
return t;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target && !this.isDone()) {
var e = 1 / this._times, i = t % e;
this.target.opacity = i > e / 2 ? 255 : 0;
}
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._originalState = t.opacity;
},
stop: function() {
this.target.opacity = this._originalState;
cc.ActionInterval.prototype.stop.call(this);
},
reverse: function() {
var t = new cc.Blink(this._duration, this._times);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.blink = function(t, e) {
return new cc.Blink(t, e);
};
cc.FadeTo = cc.Class({
name: "cc.FadeTo",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._toOpacity = 0;
this._fromOpacity = 0;
void 0 !== e && cc.FadeTo.prototype.initWithDuration.call(this, t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._toOpacity = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.FadeTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
},
update: function(t) {
t = this._computeEaseTime(t);
var e = void 0 !== this._fromOpacity ? this._fromOpacity : 255;
this.target.opacity = e + (this._toOpacity - e) * t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._fromOpacity = t.opacity;
}
});
cc.fadeTo = function(t, e) {
return new cc.FadeTo(t, e);
};
cc.FadeIn = cc.Class({
name: "cc.FadeIn",
extends: cc.FadeTo,
ctor: function(t) {
null == t && (t = 0);
this._reverseAction = null;
this.initWithDuration(t, 255);
},
reverse: function() {
var t = new cc.FadeOut();
t.initWithDuration(this._duration, 0);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.FadeIn();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
},
startWithTarget: function(t) {
this._reverseAction && (this._toOpacity = this._reverseAction._fromOpacity);
cc.FadeTo.prototype.startWithTarget.call(this, t);
}
});
cc.fadeIn = function(t) {
return new cc.FadeIn(t);
};
cc.FadeOut = cc.Class({
name: "cc.FadeOut",
extends: cc.FadeTo,
ctor: function(t) {
null == t && (t = 0);
this._reverseAction = null;
this.initWithDuration(t, 0);
},
reverse: function() {
var t = new cc.FadeIn();
t._reverseAction = this;
t.initWithDuration(this._duration, 255);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.FadeOut();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
}
});
cc.fadeOut = function(t) {
return new cc.FadeOut(t);
};
cc.TintTo = cc.Class({
name: "cc.TintTo",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._to = cc.color(0, 0, 0);
this._from = cc.color(0, 0, 0);
if (e instanceof cc.Color) {
n = e.b;
i = e.g;
e = e.r;
}
void 0 !== n && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, n) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._to = cc.color(e, i, n);
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TintTo();
this._cloneDecoration(t);
var e = this._to;
t.initWithDuration(this._duration, e.r, e.g, e.b);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._from = this.target.color;
},
update: function(t) {
t = this._computeEaseTime(t);
var e = this._from, i = this._to;
e && (this.target.color = cc.color(e.r + (i.r - e.r) * t, e.g + (i.g - e.g) * t, e.b + (i.b - e.b) * t));
}
});
cc.tintTo = function(t, e, i, n) {
return new cc.TintTo(t, e, i, n);
};
cc.TintBy = cc.Class({
name: "cc.TintBy",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._deltaR = 0;
this._deltaG = 0;
this._deltaB = 0;
this._fromR = 0;
this._fromG = 0;
this._fromB = 0;
void 0 !== n && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, n) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._deltaR = e;
this._deltaG = i;
this._deltaB = n;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TintBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._deltaR, this._deltaG, this._deltaB);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.color;
this._fromR = e.r;
this._fromG = e.g;
this._fromB = e.b;
},
update: function(t) {
t = this._computeEaseTime(t);
this.target.color = cc.color(this._fromR + this._deltaR * t, this._fromG + this._deltaG * t, this._fromB + this._deltaB * t);
},
reverse: function() {
var t = new cc.TintBy(this._duration, -this._deltaR, -this._deltaG, -this._deltaB);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.tintBy = function(t, e, i, n) {
return new cc.TintBy(t, e, i, n);
};
cc.DelayTime = cc.Class({
name: "cc.DelayTime",
extends: cc.ActionInterval,
update: function(t) {},
reverse: function() {
var t = new cc.DelayTime(this._duration);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.DelayTime();
this._cloneDecoration(t);
t.initWithDuration(this._duration);
return t;
}
});
cc.delayTime = function(t) {
return new cc.DelayTime(t);
};
cc.ReverseTime = cc.Class({
name: "cc.ReverseTime",
extends: cc.ActionInterval,
ctor: function(t) {
this._other = null;
t && this.initWithAction(t);
},
initWithAction: function(t) {
if (!t) {
cc.errorID(1028);
return !1;
}
if (t === this._other) {
cc.errorID(1029);
return !1;
}
if (cc.ActionInterval.prototype.initWithDuration.call(this, t._duration)) {
this._other = t;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.ReverseTime();
this._cloneDecoration(t);
t.initWithAction(this._other.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._other.startWithTarget(t);
},
update: function(t) {
t = this._computeEaseTime(t);
this._other && this._other.update(1 - t);
},
reverse: function() {
return this._other.clone();
},
stop: function() {
this._other.stop();
cc.Action.prototype.stop.call(this);
}
});
cc.reverseTime = function(t) {
return new cc.ReverseTime(t);
};
cc.TargetedAction = cc.Class({
name: "cc.TargetedAction",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._action = null;
this._forcedTarget = null;
e && this.initWithTarget(t, e);
},
initWithTarget: function(t, e) {
if (this.initWithDuration(e._duration)) {
this._forcedTarget = t;
this._action = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TargetedAction();
this._cloneDecoration(t);
t.initWithTarget(this._forcedTarget, this._action.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._action.startWithTarget(this._forcedTarget);
},
stop: function() {
this._action.stop();
},
update: function(t) {
t = this._computeEaseTime(t);
this._action.update(t);
},
getForcedTarget: function() {
return this._forcedTarget;
},
setForcedTarget: function(t) {
this._forcedTarget !== t && (this._forcedTarget = t);
}
});
cc.targetedAction = function(t, e) {
return new cc.TargetedAction(t, e);
};
}), {} ],
6: [ (function(t, e, i) {
"use strict";
t("../core/platform/CCClass");
var n = t("../core/platform/js"), r = function() {
this.actions = [];
this.target = null;
this.actionIndex = 0;
this.currentAction = null;
this.paused = !1;
this.lock = !1;
};
cc.ActionManager = function() {
this._hashTargets = n.createMap(!0);
this._arrayTargets = [];
this._currentTarget = null;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
};
cc.ActionManager.prototype = {
constructor: cc.ActionManager,
_elementPool: [],
_searchElementByTarget: function(t, e) {
for (var i = 0; i < t.length; i++) if (e === t[i].target) return t[i];
return null;
},
_getElement: function(t, e) {
var i = this._elementPool.pop();
i || (i = new r());
i.target = t;
i.paused = !!e;
return i;
},
_putElement: function(t) {
t.actions.length = 0;
t.actionIndex = 0;
t.currentAction = null;
t.paused = !1;
t.target = null;
t.lock = !1;
this._elementPool.push(t);
},
addAction: function(t, e, i) {
if (t && e) {
var n = this._hashTargets[e._id];
if (n) n.actions || (n.actions = []); else {
n = this._getElement(e, i);
this._hashTargets[e._id] = n;
this._arrayTargets.push(n);
}
n.actions.push(t);
t.startWithTarget(e);
} else cc.errorID(1e3);
},
removeAllActions: function() {
for (var t = this._arrayTargets, e = 0; e < t.length; e++) {
var i = t[e];
i && this._putElement(i);
}
this._arrayTargets.length = 0;
this._hashTargets = n.createMap(!0);
},
removeAllActionsFromTarget: function(t, e) {
if (null != t) {
var i = this._hashTargets[t._id];
if (i) {
i.actions.length = 0;
this._deleteHashElement(i);
}
}
},
removeAction: function(t) {
if (null != t) {
var e = t.getOriginalTarget(), i = this._hashTargets[e._id];
if (i) {
for (var n = 0; n < i.actions.length; n++) if (i.actions[n] === t) {
i.actions.splice(n, 1);
i.actionIndex >= n && i.actionIndex--;
break;
}
} else cc.logID(1001);
}
},
removeActionByTag: function(t, e) {
t === cc.Action.TAG_INVALID && cc.logID(1002);
cc.assertID(e, 1003);
var i = this._hashTargets[e._id];
if (i) for (var n = i.actions.length, r = 0; r < n; ++r) {
var s = i.actions[r];
if (s && s.getTag() === t && s.getOriginalTarget() === e) {
this._removeActionAtIndex(r, i);
break;
}
}
},
getActionByTag: function(t, e) {
t === cc.Action.TAG_INVALID && cc.logID(1004);
var i = this._hashTargets[e._id];
if (i) {
if (null != i.actions) for (var n = 0; n < i.actions.length; ++n) {
var r = i.actions[n];
if (r && r.getTag() === t) return r;
}
cc.logID(1005, t);
}
return null;
},
getNumberOfRunningActionsInTarget: function(t) {
var e = this._hashTargets[t._id];
return e && e.actions ? e.actions.length : 0;
},
pauseTarget: function(t) {
var e = this._hashTargets[t._id];
e && (e.paused = !0);
},
resumeTarget: function(t) {
var e = this._hashTargets[t._id];
e && (e.paused = !1);
},
pauseAllRunningActions: function() {
for (var t = [], e = this._arrayTargets, i = 0; i < e.length; i++) {
var n = e[i];
if (n && !n.paused) {
n.paused = !0;
t.push(n.target);
}
}
return t;
},
resumeTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) t[e] && this.resumeTarget(t[e]);
},
pauseTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) t[e] && this.pauseTarget(t[e]);
},
purgeSharedManager: function() {
cc.director.getScheduler().unscheduleUpdate(this);
},
_removeActionAtIndex: function(t, e) {
e.actions[t];
e.actions.splice(t, 1);
e.actionIndex >= t && e.actionIndex--;
0 === e.actions.length && this._deleteHashElement(e);
},
_deleteHashElement: function(t) {
var e = !1;
if (t && !t.lock && this._hashTargets[t.target._id]) {
delete this._hashTargets[t.target._id];
for (var i = this._arrayTargets, n = 0, r = i.length; n < r; n++) if (i[n] === t) {
i.splice(n, 1);
break;
}
this._putElement(t);
e = !0;
}
return e;
},
update: function(t) {
for (var e, i = this._arrayTargets, n = 0; n < i.length; n++) {
this._currentTarget = i[n];
if (!(e = this._currentTarget).paused && e.actions) {
e.lock = !0;
for (e.actionIndex = 0; e.actionIndex < e.actions.length; e.actionIndex++) {
e.currentAction = e.actions[e.actionIndex];
if (e.currentAction) {
e.currentAction.step(t * (e.currentAction._speedMethod ? e.currentAction._speed : 1));
if (e.currentAction && e.currentAction.isDone()) {
e.currentAction.stop();
var r = e.currentAction;
e.currentAction = null;
this.removeAction(r);
}
e.currentAction = null;
}
}
e.lock = !1;
}
0 === e.actions.length && this._deleteHashElement(e) && n--;
}
}
};
0;
}), {
"../core/platform/CCClass": 126,
"../core/platform/js": 146
} ],
7: [ (function(t, e, i) {
"use strict";
t("./CCActionManager");
t("./CCAction");
t("./CCActionInterval");
t("./CCActionInstant");
t("./CCActionEase");
t("./CCActionCatmullRom");
t("./tween");
}), {
"./CCAction": 1,
"./CCActionCatmullRom": 2,
"./CCActionEase": 3,
"./CCActionInstant": 4,
"./CCActionInterval": 5,
"./CCActionManager": 6,
"./tween": 8
} ],
8: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TweenAction",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._opts = i = i || Object.create(null);
this._props = Object.create(null);
i.progress = i.progress || this.progress;
if (i.easing && "string" == typeof i.easing) {
var n = i.easing;
i.easing = cc.easing[n];
!i.easing && cc.warnID(1031, n);
}
var r = this._opts.relative;
for (var s in e) {
var o = e[s], a = void 0, c = void 0;
if (void 0 !== o.value && (o.easing || o.progress)) {
"string" == typeof o.easing ? !(a = cc.easing[o.easing]) && cc.warnID(1031, o.easing) : a = o.easing;
c = o.progress;
o = o.value;
}
if ("number" == typeof o || o.lerp && (!r || o.add || o.mul) && o.clone) {
var l = Object.create(null);
l.value = o;
l.easing = a;
l.progress = c;
this._props[s] = l;
} else cc.warn("Can not animate " + s + " property, because it do not have [lerp, (add|mul), clone] function.");
}
this._originProps = e;
this.initWithDuration(t);
},
clone: function() {
var t = new n(this._duration, this._originProps, this._opts);
this._cloneDecoration(t);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = !!this._opts.relative, i = this._props;
for (var n in i) {
var r = t[n], s = i[n];
if ("number" == typeof r) {
s.start = r;
s.current = r;
s.end = e ? r + s.value : s.value;
} else {
s.start = r.clone();
s.current = r.clone();
s.end = e ? (r.add || r.mul).call(r, s.value) : s.value;
}
}
},
update: function(t) {
var e = this._opts, i = t;
e.easing && (i = e.easing(t));
var n = this.target;
if (n) {
var r = this._props, s = this._opts.progress;
for (var o in r) {
var a = r[o], c = a.easing ? a.easing(t) : i, l = a.current = (a.progress || s)(a.start, a.end, a.current, c);
n[o] = l;
}
}
},
progress: function(t, e, i, n) {
"number" == typeof t ? i = t + (e - t) * n : t.lerp(e, n, i);
return i;
}
}), r = cc.Class({
name: "cc.SetAction",
extends: cc.ActionInstant,
ctor: function(t) {
this._props = {};
void 0 !== t && this.init(t);
},
init: function(t) {
for (var e in t) this._props[e] = t[e];
return !0;
},
update: function() {
var t = this._props, e = this.target;
for (var i in t) e[i] = t[i];
},
clone: function() {
var t = new r();
t.init(this._props);
return t;
}
});
function s(t) {
this._actions = [];
this._finalAction = null;
this._target = t;
}
s.prototype.then = function(t) {
t instanceof cc.Action ? this._actions.push(t.clone()) : this._actions.push(t._union());
return this;
};
s.prototype.target = function(t) {
this._target = t;
return this;
};
s.prototype.start = function() {
if (!this._target) {
cc.warn("Please set target to tween first");
return this;
}
this._finalAction && cc.director.getActionManager().removeAction(this._finalAction);
this._finalAction = this._union();
cc.director.getActionManager().addAction(this._finalAction, this._target, !1);
return this;
};
s.prototype.stop = function() {
this._finalAction && cc.director.getActionManager().removeAction(this._finalAction);
return this;
};
s.prototype.clone = function(t) {
var e = this._union();
return cc.tween(t).then(e.clone());
};
s.prototype.union = function() {
var t = this._union();
this._actions.length = 0;
this._actions.push(t);
return this;
};
s.prototype._union = function() {
var t = this._actions;
return t = 1 === t.length ? t[0] : cc.sequence(t);
};
var o = [];
function a(t) {
return function() {
o.length = 0;
for (var e = arguments.length, i = 0; i < e; i++) {
var n = o[i] = arguments[i];
n instanceof s && (o[i] = n._union());
}
return t.apply(this, o);
};
}
for (var c = {
to: function(t, e, i) {
(i = i || Object.create(null)).relative = !1;
return new n(t, e, i);
},
by: function(t, e, i) {
(i = i || Object.create(null)).relative = !0;
return new n(t, e, i);
},
set: function(t) {
return new r(t);
},
delay: cc.delayTime,
call: cc.callFunc,
hide: cc.hide,
show: cc.show,
removeSelf: cc.removeSelf,
sequence: a(cc.sequence),
parallel: a(cc.spawn)
}, l = {
repeat: cc.repeat,
repeatForever: function(t) {
return cc.repeat(t, 1e9);
},
reverseTime: cc.reverseTime
}, u = Object.keys(c), h = function(t) {
var e = u[t];
s.prototype[e] = function() {
var t = c[e].apply(c, arguments);
this._actions.push(t);
return this;
};
}, _ = 0; _ < u.length; _++) h(_);
u = Object.keys(l);
var f = function(t) {
var e = u[t];
s.prototype[e] = function() {
var t = this._actions, i = arguments[arguments.length - 1], n = arguments.length - 1;
if (i instanceof cc.Tween) i = i._union(); else if (!(i instanceof cc.Action)) {
i = t[t.length - 1];
t.length -= 1;
n += 1;
}
for (var r = [ i ], s = 0; s < n; s++) r.push(arguments[s]);
i = l[e].apply(this, r);
t.push(i);
return this;
};
};
for (_ = 0; _ < u.length; _++) f(_);
cc.tween = function(t) {
return new s(t);
};
cc.Tween = s;
}), {} ],
9: [ (function(t, e, i) {
"use strict";
var n = t("../core/event/event-target"), r = t("../core/platform/CCSys"), s = t("../core/assets/CCAudioClip").LoadMode, o = !1, a = [], c = function t(e) {
n.call(this);
this._src = e;
this._element = null;
this.id = 0;
this._volume = 1;
this._loop = !1;
this._nextTime = 0;
this._state = t.State.INITIALZING;
this._onended = function() {
this._state = t.State.STOPPED;
this.emit("ended");
}.bind(this);
};
cc.js.extend(c, n);
c.State = {
ERROR: -1,
INITIALZING: 0,
PLAYING: 1,
PAUSED: 2,
STOPPED: 3
};
(function(t) {
t._bindEnded = function(t) {
t = t || this._onended;
var e = this._element;
this._src && e instanceof HTMLAudioElement ? e.addEventListener("ended", t) : e.onended = t;
};
t._unbindEnded = function() {
var t = this._element;
t instanceof HTMLAudioElement ? t.removeEventListener("ended", this._onended) : t && (t.onended = null);
};
t._onLoaded = function() {
this._createElement();
this.setVolume(this._volume);
this.setLoop(this._loop);
0 !== this._nextTime && this.setCurrentTime(this._nextTime);
this.getState() === c.State.PLAYING ? this.play() : this._state = c.State.INITIALZING;
};
t._createElement = function() {
var t = this._src._nativeAsset;
if (t instanceof HTMLAudioElement) {
this._element || (this._element = document.createElement("audio"));
this._element.src = t.src;
} else this._element = new u(t, this);
};
t.play = function() {
this._state = c.State.PLAYING;
if (this._element) {
this._bindEnded();
this._element.play();
this._touchToPlay();
}
};
t._touchToPlay = function() {
this._src && this._src.loadMode === s.DOM_AUDIO && this._element.paused && a.push({
instance: this,
offset: 0,
audio: this._element
});
if (!o) {
o = !0;
var t = "ontouchend" in window ? "touchend" : "mousedown";
cc.game.canvas.addEventListener(t, (function() {
for (var t = void 0; t = a.pop(); ) t.audio.play(t.offset);
}));
}
};
t.destroy = function() {
this._element = null;
};
t.pause = function() {
if (this._element && this.getState() === c.State.PLAYING) {
this._unbindEnded();
this._element.pause();
this._state = c.State.PAUSED;
}
};
t.resume = function() {
if (this._element && this.getState() === c.State.PAUSED) {
this._bindEnded();
this._element.play();
this._state = c.State.PLAYING;
}
};
t.stop = function() {
if (this._element) {
this._element.pause();
try {
this._element.currentTime = 0;
} catch (t) {}
for (var t = 0; t < a.length; t++) if (a[t].instance === this) {
a.splice(t, 1);
break;
}
this._unbindEnded();
this.emit("stop");
this._state = c.State.STOPPED;
}
};
t.setLoop = function(t) {
this._loop = t;
this._element && (this._element.loop = t);
};
t.getLoop = function() {
return this._loop;
};
t.setVolume = function(t) {
this._volume = t;
this._element && (this._element.volume = t);
};
t.getVolume = function() {
return this._volume;
};
t.setCurrentTime = function(t) {
if (this._element) {
this._nextTime = 0;
this._unbindEnded();
this._bindEnded(function() {
this._bindEnded();
}.bind(this));
try {
this._element.currentTime = t;
} catch (i) {
var e = this._element;
if (e.addEventListener) {
e.addEventListener("loadedmetadata", (function i() {
e.removeEventListener("loadedmetadata", i);
e.currentTime = t;
}));
}
}
} else this._nextTime = t;
};
t.getCurrentTime = function() {
return this._element ? this._element.currentTime : 0;
};
t.getDuration = function() {
return this._element ? this._element.duration : 0;
};
t.getState = function() {
this._forceUpdatingState();
return this._state;
};
t._forceUpdatingState = function() {
var t = this._element;
t && (c.State.PLAYING === this._state && t.paused ? this._state = c.State.STOPPED : c.State.STOPPED !== this._state || t.paused || (this._state = c.State.PLAYING));
};
Object.defineProperty(t, "src", {
get: function() {
return this._src;
},
set: function(t) {
this._unbindEnded();
if (t) {
this._src = t;
if (t.loaded) this._onLoaded(); else {
var e = this;
t.once("load", (function() {
t === e._src && e._onLoaded();
}));
cc.loader.load({
url: t.nativeUrl,
skips: [ "Loader" ]
}, (function(e, i) {
e ? cc.error(e) : t.loaded || (t._nativeAsset = i);
}));
}
} else {
this._src = null;
this._element instanceof HTMLAudioElement ? this._element.src = "" : this._element = null;
this._state = c.State.INITIALZING;
}
return t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "paused", {
get: function() {
return !this._element || this._element.paused;
},
enumerable: !0,
configurable: !0
});
})(c.prototype);
var l = void 0;
l = cc.sys.browserType === cc.sys.BROWSER_TYPE_EDGE || cc.sys.browserType === cc.sys.BROWSER_TYPE_BAIDU || cc.sys.browserType === cc.sys.BROWSER_TYPE_UC ? .01 : 0;
var u = function(t, e) {
this._audio = e;
this._context = r.__audioSupport.context;
this._buffer = t;
this._gainObj = this._context.createGain();
this.volume = 1;
this._gainObj.connect(this._context.destination);
this._loop = !1;
this._startTime = -1;
this._currentSource = null;
this.playedLength = 0;
this._currentTimer = null;
this._endCallback = function() {
this.onended && this.onended(this);
}.bind(this);
};
(function(t) {
t.play = function(t) {
if (this._currentSource && !this.paused) {
this._currentSource.onended = null;
this._currentSource.stop(0);
this.playedLength = 0;
}
var e = this._context.createBufferSource();
e.buffer = this._buffer;
e.connect(this._gainObj);
e.loop = this._loop;
this._startTime = this._context.currentTime;
(t = t || this.playedLength) && (this._startTime -= t);
var i = this._buffer.duration, n = t, r = void 0;
if (this._loop) e.start ? e.start(0, n) : e.notoGrainOn ? e.noteGrainOn(0, n) : e.noteOn(0, n); else {
r = i - t;
e.start ? e.start(0, n, r) : e.noteGrainOn ? e.noteGrainOn(0, n, r) : e.noteOn(0, n, r);
}
this._currentSource = e;
e.onended = this._endCallback;
if ((!e.context.state || "suspended" === e.context.state) && 0 === this._context.currentTime) {
var s = this;
clearTimeout(this._currentTimer);
this._currentTimer = setTimeout((function() {
0 === s._context.currentTime && a.push({
instance: s._audio,
offset: t,
audio: s
});
}), 10);
}
};
t.pause = function() {
clearTimeout(this._currentTimer);
if (!this.paused) {
this.playedLength = this._context.currentTime - this._startTime;
this.playedLength %= this._buffer.duration;
var t = this._currentSource;
this._currentSource = null;
this._startTime = -1;
t && t.stop(0);
}
};
Object.defineProperty(t, "paused", {
get: function() {
return (!this._currentSource || !this._currentSource.loop) && (-1 === this._startTime || this._context.currentTime - this._startTime > this._buffer.duration);
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "loop", {
get: function() {
return this._loop;
},
set: function(t) {
this._currentSource && (this._currentSource.loop = t);
return this._loop = t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "volume", {
get: function() {
return this._volume;
},
set: function(t) {
this._volume = t;
if (this._gainObj.gain.setTargetAtTime) try {
this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, l);
} catch (e) {
this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, .01);
} else this._gainObj.gain.value = t;
if (r.os === r.OS_IOS && !this.paused && this._currentSource) {
this._currentSource.onended = null;
this.pause();
this.play();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "currentTime", {
get: function() {
if (this.paused) return this.playedLength;
this.playedLength = this._context.currentTime - this._startTime;
this.playedLength %= this._buffer.duration;
return this.playedLength;
},
set: function(t) {
if (this.paused) this.playedLength = t; else {
this.pause();
this.playedLength = t;
this.play();
}
return t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "duration", {
get: function() {
return this._buffer.duration;
},
enumerable: !0,
configurable: !0
});
})(u.prototype);
e.exports = cc.Audio = c;
}), {
"../core/assets/CCAudioClip": 20,
"../core/event/event-target": 72,
"../core/platform/CCSys": 135
} ],
10: [ (function(t, e, i) {
"use strict";
var n = t("./CCAudio"), r = t("../core/assets/CCAudioClip"), s = cc.js, o = 0, a = s.createMap(!0), c = {}, l = [], u = function(t) {
t._finishCallback = null;
t.off("ended");
t.off("stop");
t.src = null;
l.includes(t) || (l.length < 32 ? l.push(t) : t.destroy());
}, h = function(t) {
var e = o++, i = c[t];
i || (i = c[t] = []);
if (d._maxAudioInstance <= i.length) {
var r = i.shift();
_(r).stop();
}
var s = l.pop() || new n(), h = function() {
if (_(this.id)) {
delete a[this.id];
var t = i.indexOf(this.id);
cc.js.array.fastRemoveAt(i, t);
}
u(this);
};
s.on("ended", (function() {
this._finishCallback && this._finishCallback();
h.call(this);
}), s);
s.on("stop", h, s);
s.id = e;
a[e] = s;
i.push(e);
return s;
}, _ = function(t) {
return a[t];
}, f = function(t) {
void 0 === t ? t = 1 : "string" == typeof t && (t = Number.parseFloat(t));
return t;
}, d = {
AudioState: n.State,
_maxWebAudioSize: 2097152,
_maxAudioInstance: 24,
_id2audio: a,
play: function(t, e, i) {
var n, s = t;
if ("string" == typeof t) {
cc.warnID(8401, "cc.audioEngine", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
n = h(s = t);
r._loadByUrl(s, (function(t, e) {
e && (n.src = e);
}));
} else {
if (!t) return;
s = t.nativeUrl;
(n = h(s)).src = t;
}
n.setLoop(e || !1);
i = f(i);
n.setVolume(i);
n.play();
return n.id;
},
setLoop: function(t, e) {
var i = _(t);
i && i.setLoop && i.setLoop(e);
},
isLoop: function(t) {
var e = _(t);
return !(!e || !e.getLoop) && e.getLoop();
},
setVolume: function(t, e) {
var i = _(t);
i && i.setVolume(e);
},
getVolume: function(t) {
var e = _(t);
return e ? e.getVolume() : 1;
},
setCurrentTime: function(t, e) {
var i = _(t);
if (i) {
i.setCurrentTime(e);
return !0;
}
return !1;
},
getCurrentTime: function(t) {
var e = _(t);
return e ? e.getCurrentTime() : 0;
},
getDuration: function(t) {
var e = _(t);
return e ? e.getDuration() : 0;
},
getState: function(t) {
var e = _(t);
return e ? e.getState() : this.AudioState.ERROR;
},
setFinishCallback: function(t, e) {
var i = _(t);
i && (i._finishCallback = e);
},
pause: function(t) {
var e = _(t);
if (e) {
e.pause();
return !0;
}
return !1;
},
_pauseIDCache: [],
pauseAll: function() {
for (var t in a) {
var e = a[t];
if (e.getState() === n.State.PLAYING) {
this._pauseIDCache.push(t);
e.pause();
}
}
},
resume: function(t) {
var e = _(t);
e && e.resume();
},
resumeAll: function() {
for (var t = 0; t < this._pauseIDCache.length; ++t) {
var e = this._pauseIDCache[t], i = _(e);
i && i.resume();
}
this._pauseIDCache.length = 0;
},
stop: function(t) {
var e = _(t);
if (e) {
e.stop();
return !0;
}
return !1;
},
stopAll: function() {
for (var t in a) {
var e = a[t];
e && e.stop();
}
},
setMaxAudioInstance: function(t) {
this._maxAudioInstance = t;
},
getMaxAudioInstance: function() {
return this._maxAudioInstance;
},
uncache: function(t) {
var e = t;
if ("string" == typeof t) {
cc.warnID(8401, "cc.audioEngine", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
e = t;
} else {
if (!t) return;
e = t.nativeUrl;
}
var i = c[e];
if (i) for (;i.length > 0; ) {
var n = i.pop(), r = a[n];
if (r) {
r.stop();
delete a[n];
}
}
},
uncacheAll: function() {
this.stopAll();
var t = void 0;
for (var e in a) (t = a[e]) && t.destroy();
for (;t = l.pop(); ) t.destroy();
a = s.createMap(!0);
c = {};
},
getProfile: function(t) {},
preload: function(t, e) {
0;
cc.loader.load(t, e && function(t) {
t || e();
});
},
setMaxWebAudioSize: function(t) {
this._maxWebAudioSize = 1024 * t;
},
_breakCache: null,
_break: function() {
this._breakCache = [];
for (var t in a) {
var e = a[t];
if (e.getState() === n.State.PLAYING) {
this._breakCache.push(t);
e.pause();
}
}
},
_restore: function() {
if (this._breakCache) {
for (;this._breakCache.length > 0; ) {
var t = this._breakCache.pop(), e = _(t);
e && e.resume && e.resume();
}
this._breakCache = null;
}
},
_music: {
id: -1,
loop: !1,
volume: 1
},
_effect: {
volume: 1,
pauseCache: []
},
playMusic: function(t, e) {
var i = this._music;
this.stop(i.id);
i.id = this.play(t, e, i.volume);
i.loop = e;
return i.id;
},
stopMusic: function() {
this.stop(this._music.id);
},
pauseMusic: function() {
this.pause(this._music.id);
return this._music.id;
},
resumeMusic: function() {
this.resume(this._music.id);
return this._music.id;
},
getMusicVolume: function() {
return this._music.volume;
},
setMusicVolume: function(t) {
t = f(t);
var e = this._music;
e.volume = t;
this.setVolume(e.id, e.volume);
return e.volume;
},
isMusicPlaying: function() {
return this.getState(this._music.id) === this.AudioState.PLAYING;
},
playEffect: function(t, e) {
return this.play(t, e || !1, this._effect.volume);
},
setEffectsVolume: function(t) {
t = f(t);
var e = this._music.id;
this._effect.volume = t;
for (var i in a) {
var n = a[i];
n && n.id !== e && d.setVolume(i, t);
}
},
getEffectsVolume: function() {
return this._effect.volume;
},
pauseEffect: function(t) {
return this.pause(t);
},
pauseAllEffects: function() {
var t = this._music.id, e = this._effect;
e.pauseCache.length = 0;
for (var i in a) {
var n = a[i];
if (n && n.id !== t) {
if (n.getState() === this.AudioState.PLAYING) {
e.pauseCache.push(i);
n.pause();
}
}
}
},
resumeEffect: function(t) {
this.resume(t);
},
resumeAllEffects: function() {
for (var t = this._effect.pauseCache, e = 0; e < t.length; ++e) {
var i = t[e], n = a[i];
n && n.resume();
}
},
stopEffect: function(t) {
return this.stop(t);
},
stopAllEffects: function() {
var t = this._music.id;
for (var e in a) {
var i = a[e];
if (i && i.id !== t) {
i.getState() === d.AudioState.PLAYING && i.stop();
}
}
}
};
e.exports = cc.audioEngine = d;
}), {
"../core/assets/CCAudioClip": 20,
"./CCAudio": 9
} ],
11: [ (function(t, e, i) {
"use strict";
var n = t("../vmath"), r = t("../CCNode"), s = r.EventType, o = r._LocalDirtyFlag, a = t("../renderer/render-flow"), c = Math.PI / 180, l = 1, u = 2;
function h() {
if (this._localMatDirty) {
var t = this._matrix, e = t.m;
n.mat4.fromTRSArray(t, this._trs);
if (this._skewX || this._skewY) {
var i = e[0], r = e[1], s = e[4], o = e[5], a = Math.tan(this._skewX * c), l = Math.tan(this._skewY * c);
Infinity === a && (a = 99999999);
Infinity === l && (l = 99999999);
e[0] = i + s * l;
e[1] = r + o * l;
e[4] = s + i * a;
e[5] = o + r * a;
}
this._localMatDirty = 0;
this._worldMatDirty = !0;
}
}
function _() {
this._localMatDirty && this._updateLocalMatrix();
if (this._parent) {
var t = this._parent._worldMatrix;
n.mat4.mul(this._worldMatrix, t, this._matrix);
} else n.mat4.copy(this._worldMatrix, this._matrix);
this._worldMatDirty = !1;
}
function f(t, e, i) {
var n = void 0;
if (void 0 === e) {
n = t.x;
e = t.y;
i = t.z || 0;
} else {
n = t;
i = i || 0;
}
var r = this._trs;
if (r[0] !== n || r[1] !== e || r[2] !== i) {
r[0] = n;
r[1] = e;
r[2] = i;
this.setLocalDirty(o.POSITION);
this._eventMask & l && this.emit(s.POSITION_CHANGED);
}
}
var d = cc.Node.prototype, p = d._updateLocalMatrix, m = d._calculWorldMatrix, y = d._upgrade_1x_to_2x, v = d._mulMat;
d.setPosition = f;
d.setScale = function(t, e, i) {
if (t && "number" != typeof t) {
e = t.y;
i = void 0 === t.z ? 1 : t.z;
t = t.x;
} else if (void 0 !== t && void 0 === e) {
e = t;
i = t;
} else void 0 === i && (i = 1);
var n = this._trs;
if (n[7] !== t || n[8] !== e || n[9] !== i) {
n[7] = t;
n[8] = e;
n[9] = i;
this.setLocalDirty(o.SCALE);
this._eventMask & u && this.emit(s.SCALE_CHANGED);
}
};
d._upgrade_1x_to_2x = function() {
this._is3DNode && this._update3DFunction();
y.call(this);
};
d._update3DFunction = function() {
if (this._is3DNode) {
this._updateLocalMatrix = h;
this._calculWorldMatrix = _;
this._mulMat = n.mat4.mul;
} else {
this._updateLocalMatrix = p;
this._calculWorldMatrix = m;
this._mulMat = v;
}
this._renderComponent && this._renderComponent._on3DNodeChanged && this._renderComponent._on3DNodeChanged();
this._renderFlag |= a.FLAG_TRANSFORM;
this._localMatDirty = o.ALL;
this._proxy.update3DNode();
};
cc.js.getset(d, "position", d.getPosition, f, !1, !0);
cc.js.getset(d, "is3DNode", (function() {
return this._is3DNode;
}), (function(t) {
this._is3DNode = t;
this._update3DFunction();
}));
cc.js.getset(d, "scaleZ", (function() {
return this._trs[9];
}), (function(t) {
if (this._trs[9] !== t) {
this._trs[9] = t;
this.setLocalDirty(o.SCALE);
this._eventMask & u && this.emit(s.SCALE_CHANGED);
}
}));
cc.js.getset(d, "z", (function() {
return this._trs[2];
}), (function(t) {
var e = this._trs;
if (t !== e[2]) {
e[2] = t;
this.setLocalDirty(o.POSITION);
this._eventMask & l && this.emit(s.POSITION_CHANGED);
}
}));
cc.js.getset(d, "eulerAngles", (function() {
return n.trs.toEuler(this._eulerAngles, this._trs);
}), (function(t) {
0;
n.trs.fromEuler(this._trs, t);
this.setLocalDirty(o.ROTATION);
}));
cc.js.getset(d, "quat", (function() {
var t = this._trs;
return cc.quat(t[3], t[4], t[5], t[6]);
}), d.setRotation);
}), {
"../CCNode": 15,
"../renderer/render-flow": 171,
"../vmath": 225
} ],
12: [ (function(t, e, i) {
"use strict";
var n = t("./platform/utils"), r = (t("../../DebugInfos"), "https://github.com/cocos-creator/engine/blob/master/EngineErrorMap.md"), s = void 0;
cc.log = cc.warn = cc.error = cc.assert = console.log.bind ? console.log.bind(console) : console.log;
cc._throw = function(t) {
n.callInNextTick((function() {
throw t;
}));
};
function o(t) {
return function() {
var e = arguments[0], i = t + " " + e + ", please go to " + r + "#" + e + " to see details.";
if (1 === arguments.length) return i;
if (2 === arguments.length) return i + " Arguments: " + arguments[1];
var n = cc.js.shiftArguments.apply(null, arguments);
return i + " Arguments: " + n.join(", ");
};
}
var a = o("Log");
cc.logID = function() {
cc.log(a.apply(null, arguments));
};
var c = o("Warning");
cc.warnID = function() {
cc.warn(c.apply(null, arguments));
};
var l = o("Error");
cc.errorID = function() {
cc.error(l.apply(null, arguments));
};
var u = o("Assert");
cc.assertID = function(t) {
t || cc.assert(!1, u.apply(null, cc.js.shiftArguments.apply(null, arguments)));
};
var h = cc.Enum({
NONE: 0,
INFO: 1,
WARN: 2,
ERROR: 3,
INFO_FOR_WEB_PAGE: 4,
WARN_FOR_WEB_PAGE: 5,
ERROR_FOR_WEB_PAGE: 6
});
e.exports = cc.debug = {
DebugMode: h,
_resetDebugSetting: function(t) {
cc.log = cc.warn = cc.error = cc.assert = function() {};
if (t !== h.NONE) {
if (t > h.ERROR) {
var e = function(t) {
if (cc.game.canvas) {
if (!s) {
var e = document.createElement("Div");
e.setAttribute("id", "logInfoDiv");
e.setAttribute("width", "200");
e.setAttribute("height", cc.game.canvas.height);
var i = e.style;
i.zIndex = "99999";
i.position = "absolute";
i.top = i.left = "0";
(s = document.createElement("textarea")).setAttribute("rows", "20");
s.setAttribute("cols", "30");
s.setAttribute("disabled", "true");
var n = s.style;
n.backgroundColor = "transparent";
n.borderBottom = "1px solid #cccccc";
n.borderTopWidth = n.borderLeftWidth = n.borderRightWidth = "0px";
n.borderTopStyle = n.borderLeftStyle = n.borderRightStyle = "none";
n.padding = "0px";
n.margin = 0;
e.appendChild(s);
cc.game.canvas.parentNode.appendChild(e);
}
s.value = s.value + t + "\r\n";
s.scrollTop = s.scrollHeight;
}
};
cc.error = function() {
e("ERROR :  " + cc.js.formatStr.apply(null, arguments));
};
cc.assert = function(t, i) {
if (!t && i) {
i = cc.js.formatStr.apply(null, cc.js.shiftArguments.apply(null, arguments));
e("ASSERT: " + i);
}
};
t !== h.ERROR_FOR_WEB_PAGE && (cc.warn = function() {
e("WARN :  " + cc.js.formatStr.apply(null, arguments));
});
t === h.INFO_FOR_WEB_PAGE && (cc.log = function() {
e(cc.js.formatStr.apply(null, arguments));
});
} else if (console && console.log.apply) {
console.error || (console.error = console.log);
console.warn || (console.warn = console.log);
console.error.bind ? cc.error = console.error.bind(console) : cc.error = console.error;
cc.assert = function(t, e) {
if (!t) {
e && (e = cc.js.formatStr.apply(null, cc.js.shiftArguments.apply(null, arguments)));
throw new Error(e);
}
};
}
t !== h.ERROR && (console.warn.bind ? cc.warn = console.warn.bind(console) : cc.warn = console.warn);
t === h.INFO && ("JavaScriptCore" === scriptEngineType ? cc.log = function() {
return console.log.apply(console, arguments);
} : cc.log = console.log);
}
},
getError: o("ERROR"),
isDisplayStats: function() {
return !!cc.profiler && cc.profiler.isShowingStats();
},
setDisplayStats: function(t) {
if (cc.profiler) {
t ? cc.profiler.showStats() : cc.profiler.hideStats();
cc.game.config.showFPS = !!t;
}
}
};
}), {
"../../DebugInfos": void 0,
"./platform/utils": 150
} ],
13: [ (function(t, e, i) {
"use strict";
var n = t("./event/event-target"), r = t("./load-pipeline/auto-release-utils"), s = t("./component-scheduler"), o = t("./node-activator"), a = t("./platform/CCObject"), c = t("./CCGame"), l = t("./renderer"), u = t("./event-manager"), h = t("./CCScheduler");
cc.Director = function() {
n.call(this);
this._paused = !1;
this._purgeDirectorInNextLoop = !1;
this._winSizeInPoints = null;
this._loadingScene = "";
this._scene = null;
this._totalFrames = 0;
this._lastUpdate = 0;
this._deltaTime = 0;
this._scheduler = null;
this._compScheduler = null;
this._nodeActivator = null;
this._actionManager = null;
var t = this;
c.on(c.EVENT_SHOW, (function() {
t._lastUpdate = performance.now();
}));
c.once(c.EVENT_ENGINE_INITED, this.init, this);
};
cc.Director.prototype = {
constructor: cc.Director,
init: function() {
this._totalFrames = 0;
this._lastUpdate = performance.now();
this._paused = !1;
this._purgeDirectorInNextLoop = !1;
this._winSizeInPoints = cc.size(0, 0);
this._scheduler = new h();
if (cc.ActionManager) {
this._actionManager = new cc.ActionManager();
this._scheduler.scheduleUpdate(this._actionManager, h.PRIORITY_SYSTEM, !1);
} else this._actionManager = null;
this.sharedInit();
return !0;
},
sharedInit: function() {
this._compScheduler = new s();
this._nodeActivator = new o();
u && u.setEnabled(!0);
if (cc.AnimationManager) {
this._animationManager = new cc.AnimationManager();
this._scheduler.scheduleUpdate(this._animationManager, h.PRIORITY_SYSTEM, !1);
} else this._animationManager = null;
if (cc.CollisionManager) {
this._collisionManager = new cc.CollisionManager();
this._scheduler.scheduleUpdate(this._collisionManager, h.PRIORITY_SYSTEM, !1);
} else this._collisionManager = null;
if (cc.PhysicsManager) {
this._physicsManager = new cc.PhysicsManager();
this._scheduler.scheduleUpdate(this._physicsManager, h.PRIORITY_SYSTEM, !1);
} else this._physicsManager = null;
cc._widgetManager && cc._widgetManager.init(this);
cc.loader.init(this);
},
calculateDeltaTime: function(t) {
t || (t = performance.now());
this._deltaTime = (t - this._lastUpdate) / 1e3;
0;
this._lastUpdate = t;
},
convertToGL: function(t) {
var e = c.container, i = cc.view, n = e.getBoundingClientRect(), r = n.left + window.pageXOffset - e.clientLeft, s = n.top + window.pageYOffset - e.clientTop, o = i._devicePixelRatio * (t.x - r), a = i._devicePixelRatio * (s + n.height - t.y);
return i._isRotated ? cc.v2(i._viewportRect.width - a, o) : cc.v2(o, a);
},
convertToUI: function(t) {
var e = c.container, i = cc.view, n = e.getBoundingClientRect(), r = n.left + window.pageXOffset - e.clientLeft, s = n.top + window.pageYOffset - e.clientTop, o = cc.v2(0, 0);
if (i._isRotated) {
o.x = r + t.y / i._devicePixelRatio;
o.y = s + n.height - (i._viewportRect.width - t.x) / i._devicePixelRatio;
} else {
o.x = r + t.x * i._devicePixelRatio;
o.y = s + n.height - t.y * i._devicePixelRatio;
}
return o;
},
end: function() {
this._purgeDirectorInNextLoop = !0;
},
getWinSize: function() {
return cc.size(cc.winSize);
},
getWinSizeInPixels: function() {
return cc.size(cc.winSize);
},
pause: function() {
this._paused || (this._paused = !0);
},
purgeCachedData: function() {
cc.loader.releaseAll();
},
purgeDirector: function() {
this._scheduler.unscheduleAll();
this._compScheduler.unscheduleAll();
this._nodeActivator.reset();
u && u.setEnabled(!1);
cc.isValid(this._scene) && this._scene.destroy();
this._scene = null;
cc.renderer.clear();
cc.AssetLibrary.resetBuiltins();
cc.game.pause();
cc.loader.releaseAll();
},
reset: function() {
this.purgeDirector();
u && u.setEnabled(!0);
this._actionManager && this._scheduler.scheduleUpdate(this._actionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._animationManager && this._scheduler.scheduleUpdate(this._animationManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._collisionManager && this._scheduler.scheduleUpdate(this._collisionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._physicsManager && this._scheduler.scheduleUpdate(this._physicsManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
cc.game.resume();
},
runSceneImmediate: function(t, e, i) {
cc.assertID(t instanceof cc.Scene, 1216);
t._load();
for (var n = Object.keys(c._persistRootNodes).map((function(t) {
return c._persistRootNodes[t];
})), s = 0; s < n.length; s++) {
var o = n[s], l = t.getChildByUuid(o.uuid);
if (l) {
var u = l.getSiblingIndex();
l._destroyImmediate();
t.insertChild(o, u);
} else o.parent = t;
}
var h = this._scene, _ = h && h.autoReleaseAssets && h.dependAssets;
r.autoRelease(_, t.dependAssets, n);
cc.isValid(h) && h.destroy();
this._scene = null;
a._deferredDestroy();
e && e();
this.emit(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, t);
this._scene = t;
t._activate();
cc.game.resume();
i && i(null, t);
this.emit(cc.Director.EVENT_AFTER_SCENE_LAUNCH, t);
},
runScene: function(t, e, i) {
cc.assertID(t, 1205);
cc.assertID(t instanceof cc.Scene, 1216);
t._load();
this.once(cc.Director.EVENT_AFTER_UPDATE, (function() {
this.runSceneImmediate(t, e, i);
}), this);
},
_getSceneUuid: function(t) {
var e = c._sceneInfos;
if ("string" == typeof t) {
t.endsWith(".fire") || (t += ".fire");
"/" === t[0] || t.startsWith("db://") || (t = "/" + t);
for (var i = 0; i < e.length; i++) {
var n = e[i];
if (n.url.endsWith(t)) return n;
}
} else if ("number" == typeof t) {
if (0 <= t && t < e.length) return e[t];
cc.errorID(1206, t);
} else cc.errorID(1207, t);
return null;
},
loadScene: function(t, e, i) {
if (this._loadingScene) {
cc.errorID(1208, t, this._loadingScene);
return !1;
}
var n = this._getSceneUuid(t);
if (n) {
var r = n.uuid;
this.emit(cc.Director.EVENT_BEFORE_SCENE_LOADING, t);
this._loadingScene = t;
this._loadSceneByUuid(r, e, i);
return !0;
}
cc.errorID(1209, t);
return !1;
},
preloadScene: function(t, e, i) {
if (void 0 === i) {
i = e;
e = null;
}
var n = this._getSceneUuid(t);
if (n) {
this.emit(cc.Director.EVENT_BEFORE_SCENE_LOADING, t);
cc.loader.load({
uuid: n.uuid,
type: "uuid"
}, e, (function(e, n) {
e && cc.errorID(1210, t, e.message);
i && i(e, n);
}));
} else {
var r = 'Can not preload the scene "' + t + '" because it is not in the build settings.';
i(new Error(r));
cc.error("preloadScene: " + r);
}
},
_loadSceneByUuid: function(t, e, i, n) {
0;
console.time("LoadScene " + t);
cc.AssetLibrary.loadAsset(t, (function(n, r) {
console.timeEnd("LoadScene " + t);
var s = cc.director;
s._loadingScene = "";
if (n) {
n = "Failed to load scene: " + n;
cc.error(n);
} else {
if (r instanceof cc.SceneAsset) {
var o = r.scene;
o._id = r._uuid;
o._name = r._name;
s.runSceneImmediate(o, i, e);
return;
}
n = "The asset " + t + " is not a scene";
cc.error(n);
}
e && e(n);
}));
},
resume: function() {
if (this._paused) {
this._lastUpdate = performance.now();
this._lastUpdate || cc.logID(1200);
this._paused = !1;
this._deltaTime = 0;
}
},
setDepthTest: function(t) {
cc.Camera.main && (cc.Camera.main.depth = !!t);
},
setClearColor: function(t) {
cc.Camera.main && (cc.Camera.main.backgroundColor = t);
},
getRunningScene: function() {
return this._scene;
},
getScene: function() {
return this._scene;
},
getAnimationInterval: function() {
return 1e3 / c.getFrameRate();
},
setAnimationInterval: function(t) {
c.setFrameRate(Math.round(1e3 / t));
},
getDeltaTime: function() {
return this._deltaTime;
},
getTotalFrames: function() {
return this._totalFrames;
},
isPaused: function() {
return this._paused;
},
getScheduler: function() {
return this._scheduler;
},
setScheduler: function(t) {
this._scheduler !== t && (this._scheduler = t);
},
getActionManager: function() {
return this._actionManager;
},
setActionManager: function(t) {
if (this._actionManager !== t) {
this._actionManager && this._scheduler.unscheduleUpdate(this._actionManager);
this._actionManager = t;
this._scheduler.scheduleUpdate(this._actionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
}
},
getAnimationManager: function() {
return this._animationManager;
},
getCollisionManager: function() {
return this._collisionManager;
},
getPhysicsManager: function() {
return this._physicsManager;
},
startAnimation: function() {
cc.game.resume();
},
stopAnimation: function() {
cc.game.pause();
},
_resetDeltaTime: function() {
this._lastUpdate = performance.now();
this._deltaTime = 0;
},
mainLoop: function(t) {
if (this._purgeDirectorInNextLoop) {
this._purgeDirectorInNextLoop = !1;
this.purgeDirector();
} else {
this.calculateDeltaTime(t);
if (!this._paused) {
this.emit(cc.Director.EVENT_BEFORE_UPDATE);
this._compScheduler.startPhase();
this._compScheduler.updatePhase(this._deltaTime);
this._scheduler.update(this._deltaTime);
this._compScheduler.lateUpdatePhase(this._deltaTime);
this.emit(cc.Director.EVENT_AFTER_UPDATE);
a._deferredDestroy();
}
this.emit(cc.Director.EVENT_BEFORE_DRAW);
l.render(this._scene, this._deltaTime);
this.emit(cc.Director.EVENT_AFTER_DRAW);
u.frameUpdateListeners();
this._totalFrames++;
}
},
__fastOn: function(t, e, i) {
this.on(t, e, i);
},
__fastOff: function(t, e, i) {
this.off(t, e, i);
}
};
cc.js.addon(cc.Director.prototype, n.prototype);
cc.Director.EVENT_PROJECTION_CHANGED = "director_projection_changed";
cc.Director.EVENT_BEFORE_SCENE_LOADING = "director_before_scene_loading";
cc.Director.EVENT_BEFORE_SCENE_LAUNCH = "director_before_scene_launch";
cc.Director.EVENT_AFTER_SCENE_LAUNCH = "director_after_scene_launch";
cc.Director.EVENT_BEFORE_UPDATE = "director_before_update";
cc.Director.EVENT_AFTER_UPDATE = "director_after_update";
cc.Director.EVENT_BEFORE_VISIT = "director_before_draw";
cc.Director.EVENT_AFTER_VISIT = "director_before_draw";
cc.Director.EVENT_BEFORE_DRAW = "director_before_draw";
cc.Director.EVENT_AFTER_DRAW = "director_after_draw";
cc.Director.PROJECTION_2D = 0;
cc.Director.PROJECTION_3D = 1;
cc.Director.PROJECTION_CUSTOM = 3;
cc.Director.PROJECTION_DEFAULT = cc.Director.PROJECTION_2D;
cc.director = new cc.Director();
e.exports = cc.director;
}), {
"./CCGame": 14,
"./CCScheduler": 18,
"./component-scheduler": 50,
"./event-manager": 70,
"./event/event-target": 72,
"./load-pipeline/auto-release-utils": 82,
"./node-activator": 98,
"./platform/CCObject": 132,
"./renderer": 170
} ],
14: [ (function(t, e, i) {
"use strict";
var n = t("./event/event-target");
t("../audio/CCAudioEngine");
var r = t("./CCDebug"), s = t("./renderer/index.js"), o = t("../core/renderer/utils/dynamic-atlas/manager"), a = {
EVENT_HIDE: "game_on_hide",
EVENT_SHOW: "game_on_show",
EVENT_RESTART: "game_on_restart",
EVENT_GAME_INITED: "game_inited",
EVENT_ENGINE_INITED: "engine_inited",
EVENT_RENDERER_INITED: "engine_inited",
RENDER_TYPE_CANVAS: 0,
RENDER_TYPE_WEBGL: 1,
RENDER_TYPE_OPENGL: 2,
_persistRootNodes: {},
_paused: !0,
_configLoaded: !1,
_isCloning: !1,
_prepared: !1,
_rendererInitialized: !1,
_renderContext: null,
_intervalId: null,
_lastTime: null,
_frameTime: null,
_sceneInfos: [],
frame: null,
container: null,
canvas: null,
renderType: -1,
config: null,
onStart: null,
setFrameRate: function(t) {
this.config.frameRate = t;
this._intervalId && window.cancelAnimFrame(this._intervalId);
this._intervalId = 0;
this._paused = !0;
this._setAnimFrame();
this._runMainLoop();
},
getFrameRate: function() {
return this.config.frameRate;
},
step: function() {
cc.director.mainLoop();
},
pause: function() {
if (!this._paused) {
this._paused = !0;
cc.audioEngine && cc.audioEngine._break();
this._intervalId && window.cancelAnimFrame(this._intervalId);
this._intervalId = 0;
}
},
resume: function() {
if (this._paused) {
this._paused = !1;
cc.audioEngine && cc.audioEngine._restore();
cc.director._resetDeltaTime();
this._runMainLoop();
}
},
isPaused: function() {
return this._paused;
},
restart: function() {
cc.director.once(cc.Director.EVENT_AFTER_DRAW, (function() {
for (var t in a._persistRootNodes) a.removePersistRootNode(a._persistRootNodes[t]);
cc.director.getScene().destroy();
cc.Object._deferredDestroy();
cc.audioEngine && cc.audioEngine.uncacheAll();
cc.director.reset();
a.pause();
cc.AssetLibrary._loadBuiltins((function() {
a.onStart();
a.emit(a.EVENT_RESTART);
}));
}));
},
end: function() {
close();
},
_initEngine: function() {
if (!this._rendererInitialized) {
this._initRenderer();
this._initEvents();
this.emit(this.EVENT_ENGINE_INITED);
}
},
_prepareFinished: function(t) {
var e = this;
0;
this._initEngine();
this._setAnimFrame();
cc.AssetLibrary._loadBuiltins((function() {
console.log("Cocos Creator v" + cc.ENGINE_VERSION);
e._prepared = !0;
e._runMainLoop();
e.emit(e.EVENT_GAME_INITED);
t && t();
}));
},
eventTargetOn: n.prototype.on,
eventTargetOnce: n.prototype.once,
on: function(t, e, i) {
this._prepared && t === this.EVENT_ENGINE_INITED || !this._paused && t === this.EVENT_GAME_INITED ? e.call(i) : this.eventTargetOn(t, e, i);
},
once: function(t, e, i) {
this._prepared && t === this.EVENT_ENGINE_INITED || !this._paused && t === this.EVENT_GAME_INITED ? e.call(i) : this.eventTargetOnce(t, e, i);
},
prepare: function(t) {
if (this._prepared) t && t(); else {
var e = this.config.jsList;
if (e && e.length > 0) {
var i = this;
cc.loader.load(e, (function(e) {
if (e) throw new Error(JSON.stringify(e));
i._prepareFinished(t);
}));
} else this._prepareFinished(t);
}
},
run: function(t, e) {
this._initConfig(t);
this.onStart = e;
this.prepare(a.onStart && a.onStart.bind(a));
},
addPersistRootNode: function(t) {
if (cc.Node.isNode(t) && t.uuid) {
var e = t.uuid;
if (!this._persistRootNodes[e]) {
var i = cc.director._scene;
if (cc.isValid(i)) if (t.parent) {
if (!(t.parent instanceof cc.Scene)) {
cc.warnID(3801);
return;
}
if (t.parent !== i) {
cc.warnID(3802);
return;
}
} else t.parent = i;
this._persistRootNodes[e] = t;
t._persistNode = !0;
}
} else cc.warnID(3800);
},
removePersistRootNode: function(t) {
var e = t.uuid || "";
if (t === this._persistRootNodes[e]) {
delete this._persistRootNodes[e];
t._persistNode = !1;
}
},
isPersistRootNode: function(t) {
return t._persistNode;
},
_setAnimFrame: function() {
this._lastTime = performance.now();
var t = a.config.frameRate;
this._frameTime = 1e3 / t;
jsb.setPreferredFramesPerSecond(t);
window.requestAnimFrame = window.requestAnimationFrame;
window.cancelAnimFrame = window.cancelAnimationFrame;
},
_stTime: function(t) {
var e = performance.now(), i = Math.max(0, a._frameTime - (e - a._lastTime)), n = window.setTimeout((function() {
t();
}), i);
a._lastTime = e + i;
return n;
},
_ctTime: function(t) {
window.clearTimeout(t);
},
_runMainLoop: function() {
0;
if (this._prepared) {
var t, e = this, i = e.config, n = cc.director;
i.frameRate;
r.setDisplayStats(i.showFPS);
t = function(i) {
if (!e._paused) {
e._intervalId = window.requestAnimFrame(t);
0;
n.mainLoop(i);
}
};
e._intervalId = window.requestAnimFrame(t);
e._paused = !1;
}
},
_initConfig: function(t) {
"number" != typeof t.debugMode && (t.debugMode = 0);
t.exposeClassName = !!t.exposeClassName;
"number" != typeof t.frameRate && (t.frameRate = 60);
var e = t.renderMode;
("number" != typeof e || e > 2 || e < 0) && (t.renderMode = 0);
"boolean" != typeof t.registerSystemEvent && (t.registerSystemEvent = !0);
t.showFPS = !!t.showFPS;
this._sceneInfos = t.scenes || [];
this.collisionMatrix = t.collisionMatrix || [];
this.groupList = t.groupList || [];
r._resetDebugSetting(t.debugMode);
this.config = t;
this._configLoaded = !0;
},
_determineRenderType: function() {
var t = this.config, e = parseInt(t.renderMode) || 0;
this.renderType = this.RENDER_TYPE_CANVAS;
var i = !1;
if (0 === e) {
if (cc.sys.capabilities.opengl) {
this.renderType = this.RENDER_TYPE_WEBGL;
i = !0;
} else if (cc.sys.capabilities.canvas) {
this.renderType = this.RENDER_TYPE_CANVAS;
i = !0;
}
} else if (1 === e && cc.sys.capabilities.canvas) {
this.renderType = this.RENDER_TYPE_CANVAS;
i = !0;
} else if (2 === e && cc.sys.capabilities.opengl) {
this.renderType = this.RENDER_TYPE_WEBGL;
i = !0;
}
if (!i) throw new Error(r.getError(3820, e));
},
_initRenderer: function() {
if (!this._rendererInitialized) {
this.config.id;
var t = void 0, e = void 0;
this.container = e = document.createElement("DIV");
this.frame = e.parentNode === document.body ? document.documentElement : e.parentNode;
t = window.__canvas;
this.canvas = t;
this._determineRenderType();
if (this.renderType === this.RENDER_TYPE_WEBGL) {
var i = {
stencil: !0,
antialias: cc.macro.ENABLE_WEBGL_ANTIALIAS,
alpha: cc.macro.ENABLE_TRANSPARENT_CANVAS
};
s.initWebGL(t, i);
this._renderContext = s.device._gl;
!cc.macro.CLEANUP_IMAGE_CACHE && o && (o.enabled = !0);
}
if (!this._renderContext) {
this.renderType = this.RENDER_TYPE_CANVAS;
s.initCanvas(t);
this._renderContext = s.device._ctx;
}
this.canvas.oncontextmenu = function() {
if (!cc._isContextMenuEnable) return !1;
};
this._rendererInitialized = !0;
}
},
_initEvents: function() {
var t, e = window;
this.config.registerSystemEvent && _cc.inputManager.registerSystemEvent(this.canvas);
"undefined" != typeof document.hidden ? t = "hidden" : "undefined" != typeof document.mozHidden ? t = "mozHidden" : "undefined" != typeof document.msHidden ? t = "msHidden" : "undefined" != typeof document.webkitHidden && (t = "webkitHidden");
var i = !1;
function n() {
if (!i) {
i = !0;
a.emit(a.EVENT_HIDE);
}
}
function r(t, e, n, r, s) {
if (i) {
i = !1;
a.emit(a.EVENT_SHOW, t, e, n, r, s);
}
}
if (t) for (var s = [ "visibilitychange", "mozvisibilitychange", "msvisibilitychange", "webkitvisibilitychange", "qbrowserVisibilityChange" ], o = 0; o < s.length; o++) document.addEventListener(s[o], (function(e) {
var i = document[t];
(i = i || e.hidden) ? n() : r();
})); else {
e.addEventListener("blur", n);
e.addEventListener("focus", r);
}
navigator.userAgent.indexOf("MicroMessenger") > -1 && (e.onfocus = r);
if ("onpageshow" in window && "onpagehide" in window) {
e.addEventListener("pagehide", n);
e.addEventListener("pageshow", r);
document.addEventListener("pagehide", n);
document.addEventListener("pageshow", r);
}
this.on(a.EVENT_HIDE, (function() {
a.pause();
}));
this.on(a.EVENT_SHOW, (function() {
a.resume();
}));
}
};
n.call(a);
cc.js.addon(a, n.prototype);
cc.game = e.exports = a;
}), {
"../audio/CCAudioEngine": 10,
"../core/renderer/utils/dynamic-atlas/manager": void 0,
"./CCDebug": 12,
"./event/event-target": 72,
"./renderer/index.js": 170
} ],
15: [ (function(t, e, i) {
"use strict";
var n = t("./vmath"), r = t("./utils/base-node"), s = t("./utils/prefab-helper"), o = t("./utils/trans-pool").NodeMemPool, a = t("./utils/affine-transform"), c = t("./event-manager"), l = t("./platform/CCMacro"), u = t("./platform/js"), h = (t("./event/event"), 
t("./event/event-target")), _ = t("./renderer/render-flow"), f = cc.Object.Flags.Destroying, d = Math.PI / 180, p = !!cc.ActionManager, m = function() {}, y = cc.v3(), v = cc.quat(), g = cc.v3(), C = cc.v3(), x = cc.quat(), A = cc.quat(), b = cc.v3(), S = cc.v3(), w = cc.v3(), T = cc.v3(), B = cc.v3(), E = cc.quat(), M = cc.quat(), I = cc.v3(), R = n.quat.create(), D = cc.v3(), P = cc.v3(), V = cc.quat(), L = cc.quat(), O = (cc.quat(), 
n.mat4.create()), F = n.vec3.create(), N = new Array(16);
N.length = 0;
var G = cc.Enum({
DEBUG: 31
}), z = cc.Enum({
POSITION: 1,
SCALE: 2,
ROTATION: 4,
SKEW: 8,
TRS: 7,
RS: 6,
ALL: 65535
}), k = cc.Enum({
TOUCH_START: "touchstart",
TOUCH_MOVE: "touchmove",
TOUCH_END: "touchend",
TOUCH_CANCEL: "touchcancel",
MOUSE_DOWN: "mousedown",
MOUSE_MOVE: "mousemove",
MOUSE_ENTER: "mouseenter",
MOUSE_LEAVE: "mouseleave",
MOUSE_UP: "mouseup",
MOUSE_WHEEL: "mousewheel",
POSITION_CHANGED: "position-changed",
ROTATION_CHANGED: "rotation-changed",
SCALE_CHANGED: "scale-changed",
SIZE_CHANGED: "size-changed",
ANCHOR_CHANGED: "anchor-changed",
COLOR_CHANGED: "color-changed",
CHILD_ADDED: "child-added",
CHILD_REMOVED: "child-removed",
CHILD_REORDER: "child-reorder",
GROUP_CHANGED: "group-changed",
SIBLING_ORDER_CHANGED: "sibling-order-changed"
}), U = [ k.TOUCH_START, k.TOUCH_MOVE, k.TOUCH_END, k.TOUCH_CANCEL ], j = [ k.MOUSE_DOWN, k.MOUSE_ENTER, k.MOUSE_MOVE, k.MOUSE_LEAVE, k.MOUSE_UP, k.MOUSE_WHEEL ], W = null, H = function(t, e) {
var i = t.getLocation(), n = this.owner;
if (n._hitTest(i, this)) {
e.type = k.TOUCH_START;
e.touch = t;
e.bubbles = !0;
n.dispatchEvent(e);
return !0;
}
return !1;
}, q = function(t, e) {
var i = this.owner;
e.type = k.TOUCH_MOVE;
e.touch = t;
e.bubbles = !0;
i.dispatchEvent(e);
}, X = function(t, e) {
var i = t.getLocation(), n = this.owner;
n._hitTest(i, this) ? e.type = k.TOUCH_END : e.type = k.TOUCH_CANCEL;
e.touch = t;
e.bubbles = !0;
n.dispatchEvent(e);
}, Y = function(t, e) {
t.getLocation();
var i = this.owner;
e.type = k.TOUCH_CANCEL;
e.touch = t;
e.bubbles = !0;
i.dispatchEvent(e);
}, J = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = k.MOUSE_DOWN;
t.bubbles = !0;
i.dispatchEvent(t);
}
}, Z = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
if (!this._previousIn) {
if (W && W._mouseListener) {
t.type = k.MOUSE_LEAVE;
W.dispatchEvent(t);
W._mouseListener._previousIn = !1;
}
W = this.owner;
t.type = k.MOUSE_ENTER;
i.dispatchEvent(t);
this._previousIn = !0;
}
t.type = k.MOUSE_MOVE;
t.bubbles = !0;
i.dispatchEvent(t);
} else {
if (!this._previousIn) return;
t.type = k.MOUSE_LEAVE;
i.dispatchEvent(t);
this._previousIn = !1;
W = null;
}
t.stopPropagation();
}, K = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = k.MOUSE_UP;
t.bubbles = !0;
i.dispatchEvent(t);
t.stopPropagation();
}
}, Q = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = k.MOUSE_WHEEL;
t.bubbles = !0;
i.dispatchEvent(t);
t.stopPropagation();
}
};
function $(t) {
var e = cc.Mask;
if (e) for (var i = 0, n = t; n && cc.Node.isNode(n); n = n._parent, ++i) if (n.getComponent(e)) return {
index: i,
node: n
};
return null;
}
function tt(t, e) {
if (!(t._objFlags & f)) {
var i = 0;
if (t._bubblingListeners) for (;i < e.length; ++i) if (t._bubblingListeners.hasEventListener(e[i])) return !0;
if (t._capturingListeners) for (;i < e.length; ++i) if (t._capturingListeners.hasEventListener(e[i])) return !0;
return !1;
}
return !0;
}
function et(t, e) {
var i, n;
e.target = t;
N.length = 0;
t._getCapturingTargets(e.type, N);
e.eventPhase = 1;
for (n = N.length - 1; n >= 0; --n) if ((i = N[n])._capturingListeners) {
e.currentTarget = i;
i._capturingListeners.emit(e.type, e, N);
if (e._propagationStopped) {
N.length = 0;
return;
}
}
N.length = 0;
e.eventPhase = 2;
e.currentTarget = t;
t._capturingListeners && t._capturingListeners.emit(e.type, e);
!e._propagationImmediateStopped && t._bubblingListeners && t._bubblingListeners.emit(e.type, e);
if (!e._propagationStopped && e.bubbles) {
t._getBubblingTargets(e.type, N);
e.eventPhase = 3;
for (n = 0; n < N.length; ++n) if ((i = N[n])._bubblingListeners) {
e.currentTarget = i;
i._bubblingListeners.emit(e.type, e);
if (e._propagationStopped) {
N.length = 0;
return;
}
}
}
N.length = 0;
}
function it(t) {
var e = t.groupIndex;
0 === e && t.parent && (e = it(t.parent));
return e;
}
function nt(t) {
var e = it(t);
t._cullingMask = 1 << e;
t._proxy && t._proxy.updateCullingMask();
for (var i = 0; i < t._children.length; i++) nt(t._children[i]);
}
var rt = {
name: "cc.Node",
extends: r,
properties: {
_opacity: 255,
_color: cc.Color.WHITE,
_contentSize: cc.Size,
_anchorPoint: cc.v2(.5, .5),
_position: void 0,
_scale: void 0,
_trs: null,
_eulerAngles: cc.Vec3,
_skewX: 0,
_skewY: 0,
_zIndex: {
default: void 0,
type: cc.Integer
},
_localZOrder: {
default: 0,
serializable: !1
},
_is3DNode: !1,
_groupIndex: {
default: 0,
formerlySerializedAs: "groupIndex"
},
groupIndex: {
get: function() {
return this._groupIndex;
},
set: function(t) {
this._groupIndex = t;
nt(this);
this.emit(k.GROUP_CHANGED, this);
}
},
group: {
get: function() {
return cc.game.groupList[this.groupIndex] || "";
},
set: function(t) {
this.groupIndex = cc.game.groupList.indexOf(t);
}
},
x: {
get: function() {
return this._trs[0];
},
set: function(t) {
var e = this._trs;
if (t !== e[0]) {
0;
e[0] = t;
this.setLocalDirty(z.POSITION);
1 & this._eventMask && this.emit(k.POSITION_CHANGED);
}
}
},
y: {
get: function() {
return this._trs[1];
},
set: function(t) {
var e = this._trs;
if (t !== e[1]) {
0;
e[1] = t;
this.setLocalDirty(z.POSITION);
1 & this._eventMask && this.emit(k.POSITION_CHANGED);
}
}
},
rotation: {
get: function() {
0;
return -this.angle;
},
set: function(t) {
0;
this.angle = -t;
}
},
angle: {
get: function() {
return this._eulerAngles.z;
},
set: function(t) {
n.vec3.set(this._eulerAngles, 0, 0, t);
n.trs.fromAngleZ(this._trs, t);
this.setLocalDirty(z.ROTATION);
4 & this._eventMask && this.emit(k.ROTATION_CHANGED);
}
},
rotationX: {
get: function() {
0;
return this._eulerAngles.x;
},
set: function(t) {
0;
if (this._eulerAngles.x !== t) {
this._eulerAngles.x = t;
this._eulerAngles.x === this._eulerAngles.y ? n.trs.fromAngleZ(this._trs, -t) : n.trs.fromEulerNumber(this._trs, t, this._eulerAngles.y, 0);
this.setLocalDirty(z.ROTATION);
4 & this._eventMask && this.emit(k.ROTATION_CHANGED);
}
}
},
rotationY: {
get: function() {
0;
return this._eulerAngles.y;
},
set: function(t) {
0;
if (this._eulerAngles.y !== t) {
this._eulerAngles.y = t;
this._eulerAngles.x === this._eulerAngles.y ? n.trs.fromAngleZ(this._trs, -t) : n.trs.fromEulerNumber(this._trs, this._eulerAngles.x, t, 0);
this.setLocalDirty(z.ROTATION);
4 & this._eventMask && this.emit(k.ROTATION_CHANGED);
}
}
},
scale: {
get: function() {
return this._trs[7];
},
set: function(t) {
this.setScale(t);
}
},
scaleX: {
get: function() {
return this._trs[7];
},
set: function(t) {
if (this._trs[7] !== t) {
this._trs[7] = t;
this.setLocalDirty(z.SCALE);
2 & this._eventMask && this.emit(k.SCALE_CHANGED);
}
}
},
scaleY: {
get: function() {
return this._trs[8];
},
set: function(t) {
if (this._trs[8] !== t) {
this._trs[8] = t;
this.setLocalDirty(z.SCALE);
2 & this._eventMask && this.emit(k.SCALE_CHANGED);
}
}
},
skewX: {
get: function() {
return this._skewX;
},
set: function(t) {
this._skewX = t;
this.setLocalDirty(z.SKEW);
}
},
skewY: {
get: function() {
return this._skewY;
},
set: function(t) {
this._skewY = t;
this.setLocalDirty(z.SKEW);
}
},
opacity: {
get: function() {
return this._opacity;
},
set: function(t) {
t = cc.misc.clampf(t, 0, 255);
if (this._opacity !== t) {
this._opacity = t;
this._proxy.updateOpacity();
this._renderFlag |= _.FLAG_OPACITY_COLOR;
}
},
range: [ 0, 255 ]
},
color: {
get: function() {
return this._color.clone();
},
set: function(t) {
if (!this._color.equals(t)) {
this._color.set(t);
0;
this._renderFlag |= _.FLAG_COLOR;
32 & this._eventMask && this.emit(k.COLOR_CHANGED, t);
}
}
},
anchorX: {
get: function() {
return this._anchorPoint.x;
},
set: function(t) {
var e = this._anchorPoint;
if (e.x !== t) {
e.x = t;
16 & this._eventMask && this.emit(k.ANCHOR_CHANGED);
}
}
},
anchorY: {
get: function() {
return this._anchorPoint.y;
},
set: function(t) {
var e = this._anchorPoint;
if (e.y !== t) {
e.y = t;
16 & this._eventMask && this.emit(k.ANCHOR_CHANGED);
}
}
},
width: {
get: function() {
return this._contentSize.width;
},
set: function(t) {
if (t !== this._contentSize.width) {
this._contentSize.width = t;
8 & this._eventMask && this.emit(k.SIZE_CHANGED);
}
}
},
height: {
get: function() {
return this._contentSize.height;
},
set: function(t) {
if (t !== this._contentSize.height) {
this._contentSize.height = t;
8 & this._eventMask && this.emit(k.SIZE_CHANGED);
}
}
},
zIndex: {
get: function() {
return this._localZOrder >> 16;
},
set: function(t) {
if (t > l.MAX_ZINDEX) {
cc.warnID(1636);
t = l.MAX_ZINDEX;
} else if (t < l.MIN_ZINDEX) {
cc.warnID(1637);
t = l.MIN_ZINDEX;
}
if (this.zIndex !== t) {
this._localZOrder = 65535 & this._localZOrder | t << 16;
this.emit(k.SIBLING_ORDER_CHANGED);
this._parent && this._onSiblingIndexChanged();
}
this._proxy.updateZOrder();
}
}
},
ctor: function() {
this._reorderChildDirty = !1;
this._widget = null;
this._renderComponent = null;
this._capturingListeners = null;
this._bubblingListeners = null;
this._touchListener = null;
this._mouseListener = null;
this._initDataFromPool();
this._eventMask = 0;
this._cullingMask = 1;
this._childArrivalOrder = 1;
this._proxy = new renderer.NodeProxy(this._spaceInfo.unitID, this._spaceInfo.index, this._id, this._name);
this._proxy.init(this);
},
statics: {
EventType: k,
_LocalDirtyFlag: z,
isNode: function(t) {
return t instanceof st && (t.constructor === st || !(t instanceof cc.Scene));
},
BuiltinGroupIndex: G
},
_onSiblingIndexChanged: function() {
for (var t = this._parent, e = t._children, i = 0, n = e.length; i < n; i++) e[i]._updateOrderOfArrival();
t._delaySort();
},
_onPreDestroy: function() {
this._onPreDestroyBase();
p && cc.director.getActionManager().removeAllActionsFromTarget(this);
W === this && (W = null);
if (this._touchListener || this._mouseListener) {
c.removeListeners(this);
if (this._touchListener) {
this._touchListener.owner = null;
this._touchListener.mask = null;
this._touchListener = null;
}
if (this._mouseListener) {
this._mouseListener.owner = null;
this._mouseListener.mask = null;
this._mouseListener = null;
}
}
this._proxy.destroy();
this._proxy = null;
this._backDataIntoPool();
this._reorderChildDirty && cc.director.__fastOff(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
},
_onPostActivated: function(t) {
var e = p ? cc.director.getActionManager() : null;
if (t) {
this._renderFlag |= _.FLAG_WORLD_TRANSFORM;
e && e.resumeTarget(this);
c.resumeTarget(this);
if (this._touchListener) {
var i = this._touchListener.mask = $(this);
this._mouseListener && (this._mouseListener.mask = i);
} else this._mouseListener && (this._mouseListener.mask = $(this));
} else {
e && e.pauseTarget(this);
c.pauseTarget(this);
}
},
_onHierarchyChanged: function(t) {
this._updateOrderOfArrival();
this.groupIndex = it(this);
this._parent && this._parent._delaySort();
this._renderFlag |= _.FLAG_WORLD_TRANSFORM;
this._onHierarchyChangedBase(t);
cc._widgetManager && (cc._widgetManager._nodesOrderDirty = !0);
this._proxy.updateParent();
},
_initDataFromPool: function() {
this._spaceInfo || (this._spaceInfo = o.pop());
var t = this._spaceInfo;
this._matrix = n.mat4.create(t.localMat);
n.mat4.identity(this._matrix);
this._worldMatrix = n.mat4.create(t.worldMat);
n.mat4.identity(this._worldMatrix);
this._localMatDirty = z.ALL;
this._worldMatDirty = !0;
var e = this._trs = this._spaceInfo.trs;
e[0] = 0;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 0;
e[5] = 0;
e[6] = 1;
e[7] = 1;
e[8] = 1;
e[9] = 1;
},
_backDataIntoPool: function() {
o.push(this._spaceInfo);
this._matrix = null;
this._worldMatrix = null;
this._trs = null;
this._spaceInfo = null;
},
_toEuler: function() {
if (this.is3DNode) n.trs.toEuler(this._eulerAngles, this._trs); else {
var t = Math.asin(this._trs[5]) / d * 2;
n.vec3.set(this._eulerAngles, 0, 0, t);
}
},
_fromEuler: function() {
this.is3DNode ? n.trs.fromEuler(this._trs, this._eulerAngles) : n.trs.fromAngleZ(this._trs, this._eulerAngles.z);
},
_upgrade_1x_to_2x: function() {
var t = this._trs;
if (t) {
var e = t;
t = this._trs = this._spaceInfo.trs;
11 === e.length ? t.set(e.subarray(1)) : t.set(e);
} else t = this._trs = this._spaceInfo.trs;
if (void 0 !== this._zIndex) {
this._localZOrder = this._zIndex << 16;
this._zIndex = void 0;
}
this._fromEuler();
0 !== this._localZOrder && (this._zIndex = (4294901760 & this._localZOrder) >> 16);
if (this._color.a < 255 && 255 === this._opacity) {
this._opacity = this._color.a;
this._color.a = 255;
}
this._renderFlag |= _.FLAG_TRANSFORM | _.FLAG_OPACITY_COLOR;
},
_onBatchCreated: function() {
var t = this._prefab;
if (t && t.sync && t.root === this) {
0;
s.syncWithPrefab(this);
}
this._upgrade_1x_to_2x();
this._updateOrderOfArrival();
this.groupIndex = it(this);
if (!this._activeInHierarchy) {
p && cc.director.getActionManager().pauseTarget(this);
c.pauseTarget(this);
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i]._onBatchCreated();
e.length > 0 && (this._renderFlag |= _.FLAG_CHILDREN);
this._proxy.initNative();
},
_onBatchRestored: function() {
this._upgrade_1x_to_2x();
this.groupIndex = it(this);
if (!this._activeInHierarchy) {
var t = cc.director.getActionManager();
t && t.pauseTarget(this);
c.pauseTarget(this);
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i]._onBatchRestored();
e.length > 0 && (this._renderFlag |= _.FLAG_CHILDREN);
this._proxy.initNative();
},
_checknSetupSysEvent: function(t) {
var e = !1, i = !1;
if (-1 !== U.indexOf(t)) {
if (!this._touchListener) {
this._touchListener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
owner: this,
mask: $(this),
onTouchBegan: H,
onTouchMoved: q,
onTouchEnded: X,
onTouchCancelled: Y
});
c.addListener(this._touchListener, this);
e = !0;
}
i = !0;
} else if (-1 !== j.indexOf(t)) {
if (!this._mouseListener) {
this._mouseListener = cc.EventListener.create({
event: cc.EventListener.MOUSE,
_previousIn: !1,
owner: this,
mask: $(this),
onMouseDown: J,
onMouseMove: Z,
onMouseUp: K,
onMouseScroll: Q
});
c.addListener(this._mouseListener, this);
e = !0;
}
i = !0;
}
e && !this._activeInHierarchy && cc.director.getScheduler().schedule((function() {
this._activeInHierarchy || c.pauseTarget(this);
}), this, 0, 0, 0, !1);
return i;
},
on: function(t, e, i, n) {
if (this._checknSetupSysEvent(t)) return this._onDispatch(t, e, i, n);
switch (t) {
case k.POSITION_CHANGED:
this._eventMask |= 1;
break;

case k.SCALE_CHANGED:
this._eventMask |= 2;
break;

case k.ROTATION_CHANGED:
this._eventMask |= 4;
break;

case k.SIZE_CHANGED:
this._eventMask |= 8;
break;

case k.ANCHOR_CHANGED:
this._eventMask |= 16;
break;

case k.COLOR_CHANGED:
this._eventMask |= 32;
}
this._bubblingListeners || (this._bubblingListeners = new h());
return this._bubblingListeners.on(t, e, i);
},
once: function(t, e, i, n) {
(this._checknSetupSysEvent(t) && n ? this._capturingListeners = this._capturingListeners || new h() : this._bubblingListeners = this._bubblingListeners || new h()).once(t, e, i);
},
_onDispatch: function(t, e, i, n) {
if ("boolean" == typeof i) {
n = i;
i = void 0;
} else n = !!n;
if (e) {
var r = null;
if (!(r = n ? this._capturingListeners = this._capturingListeners || new h() : this._bubblingListeners = this._bubblingListeners || new h()).hasEventListener(t, e, i)) {
r.on(t, e, i);
i && i.__eventTargets && i.__eventTargets.push(this);
}
return e;
}
cc.errorID(6800);
},
off: function(t, e, i, n) {
var r = -1 !== U.indexOf(t), s = !r && -1 !== j.indexOf(t);
if (r || s) {
this._offDispatch(t, e, i, n);
if (r) {
if (this._touchListener && !tt(this, U)) {
c.removeListener(this._touchListener);
this._touchListener = null;
}
} else if (s && this._mouseListener && !tt(this, j)) {
c.removeListener(this._mouseListener);
this._mouseListener = null;
}
} else if (this._bubblingListeners) {
this._bubblingListeners.off(t, e, i);
if (!this._bubblingListeners.hasEventListener(t)) switch (t) {
case k.POSITION_CHANGED:
this._eventMask &= -2;
break;

case k.SCALE_CHANGED:
this._eventMask &= -3;
break;

case k.ROTATION_CHANGED:
this._eventMask &= -5;
break;

case k.SIZE_CHANGED:
this._eventMask &= -9;
break;

case k.ANCHOR_CHANGED:
this._eventMask &= -17;
break;

case k.COLOR_CHANGED:
this._eventMask &= -33;
}
}
},
_offDispatch: function(t, e, i, n) {
if ("boolean" == typeof i) {
n = i;
i = void 0;
} else n = !!n;
if (e) {
var r = n ? this._capturingListeners : this._bubblingListeners;
if (r) {
r.off(t, e, i);
i && i.__eventTargets && u.array.fastRemove(i.__eventTargets, this);
}
} else {
this._capturingListeners && this._capturingListeners.removeAll(t);
this._bubblingListeners && this._bubblingListeners.removeAll(t);
}
},
targetOff: function(t) {
var e = this._bubblingListeners;
if (e) {
e.targetOff(t);
1 & this._eventMask && !e.hasEventListener(k.POSITION_CHANGED) && (this._eventMask &= -2);
2 & this._eventMask && !e.hasEventListener(k.SCALE_CHANGED) && (this._eventMask &= -3);
4 & this._eventMask && !e.hasEventListener(k.ROTATION_CHANGED) && (this._eventMask &= -5);
8 & this._eventMask && !e.hasEventListener(k.SIZE_CHANGED) && (this._eventMask &= -9);
16 & this._eventMask && !e.hasEventListener(k.ANCHOR_CHANGED) && (this._eventMask &= -17);
32 & this._eventMask && !e.hasEventListener(k.COLOR_CHANGED) && (this._eventMask &= -33);
}
this._capturingListeners && this._capturingListeners.targetOff(t);
t && t.__eventTargets && u.array.fastRemove(t.__eventTargets, this);
if (this._touchListener && !tt(this, U)) {
c.removeListener(this._touchListener);
this._touchListener = null;
}
if (this._mouseListener && !tt(this, j)) {
c.removeListener(this._mouseListener);
this._mouseListener = null;
}
},
hasEventListener: function(t) {
var e = !1;
this._bubblingListeners && (e = this._bubblingListeners.hasEventListener(t));
!e && this._capturingListeners && (e = this._capturingListeners.hasEventListener(t));
return e;
},
emit: function(t, e, i, n, r, s) {
this._bubblingListeners && this._bubblingListeners.emit(t, e, i, n, r, s);
},
dispatchEvent: function(t) {
et(this, t);
N.length = 0;
},
pauseSystemEvents: function(t) {
c.pauseTarget(this, t);
},
resumeSystemEvents: function(t) {
c.resumeTarget(this, t);
},
_hitTest: function(t, e) {
var i = this._contentSize.width, r = this._contentSize.height, s = D, o = P, a = cc.Camera.findCamera(this);
a ? a.getScreenToWorldPoint(t, s) : s.set(t);
this._updateWorldMatrix();
if (!n.mat4.invert(O, this._worldMatrix)) return !1;
n.vec2.transformMat4(o, s, O);
o.x += this._anchorPoint.x * i;
o.y += this._anchorPoint.y * r;
if (o.x >= 0 && o.y >= 0 && o.x <= i && o.y <= r) {
if (e && e.mask) {
for (var c = e.mask, l = this, u = 0; l && u < c.index; ++u, l = l.parent) ;
if (l === c.node) {
var h = l.getComponent(cc.Mask);
return !h || !h.enabledInHierarchy || h._hitTest(s);
}
e.mask = null;
return !0;
}
return !0;
}
return !1;
},
_getCapturingTargets: function(t, e) {
for (var i = this.parent; i; ) {
i._capturingListeners && i._capturingListeners.hasEventListener(t) && e.push(i);
i = i.parent;
}
},
_getBubblingTargets: function(t, e) {
for (var i = this.parent; i; ) {
i._bubblingListeners && i._bubblingListeners.hasEventListener(t) && e.push(i);
i = i.parent;
}
},
runAction: p ? function(t) {
if (this.active) {
cc.assertID(t, 1618);
cc.director.getActionManager().addAction(t, this, !1);
return t;
}
} : m,
pauseAllActions: p ? function() {
cc.director.getActionManager().pauseTarget(this);
} : m,
resumeAllActions: p ? function() {
cc.director.getActionManager().resumeTarget(this);
} : m,
stopAllActions: p ? function() {
cc.director.getActionManager().removeAllActionsFromTarget(this);
} : m,
stopAction: p ? function(t) {
cc.director.getActionManager().removeAction(t);
} : m,
stopActionByTag: p ? function(t) {
t !== cc.Action.TAG_INVALID ? cc.director.getActionManager().removeActionByTag(t, this) : cc.logID(1612);
} : m,
getActionByTag: p ? function(t) {
if (t === cc.Action.TAG_INVALID) {
cc.logID(1613);
return null;
}
return cc.director.getActionManager().getActionByTag(t, this);
} : function() {
return null;
},
getNumberOfRunningActions: p ? function() {
return cc.director.getActionManager().getNumberOfRunningActionsInTarget(this);
} : function() {
return 0;
},
getPosition: function(t) {
t = t || cc.v3();
return n.trs.toPosition(t, this._trs);
},
setPosition: function(t, e) {
var i;
if (void 0 === e) {
i = t.x;
e = t.y;
} else i = t;
var n = this._trs;
if (n[0] !== i || n[1] !== e) {
n[0] = i;
n[1] = e;
this.setLocalDirty(z.POSITION);
1 & this._eventMask && this.emit(k.POSITION_CHANGED);
}
},
getScale: function(t) {
if (void 0 !== t) return n.trs.toScale(t, this._trs);
cc.warnID(1400, "cc.Node.getScale", "cc.Node.scale or cc.Node.getScale(cc.Vec3)");
return this._trs[7];
},
setScale: function(t, e) {
if (t && "number" != typeof t) {
e = t.y;
t = t.x;
} else void 0 === e && (e = t);
var i = this._trs;
if (i[7] !== t || i[8] !== e) {
i[7] = t;
i[8] = e;
this.setLocalDirty(z.SCALE);
2 & this._eventMask && this.emit(k.SCALE_CHANGED);
}
},
getRotation: function(t) {
if (t instanceof cc.Quat) return n.trs.toRotation(t, this._trs);
0;
return -this.angle;
},
setRotation: function(t, e, i, n) {
if ("number" == typeof t && void 0 === e) {
0;
this.angle = -t;
} else {
var r = t;
if (void 0 === e) {
r = t.x;
e = t.y;
i = t.z;
n = t.w;
}
var s = this._trs;
if (s[3] !== r || s[4] !== e || s[5] !== i || s[6] !== n) {
s[3] = r;
s[4] = e;
s[5] = i;
s[6] = n;
this.setLocalDirty(z.ROTATION);
4 & this._eventMask && this.emit(k.ROTATION_CHANGED);
0;
}
}
},
getContentSize: function() {
return cc.size(this._contentSize.width, this._contentSize.height);
},
setContentSize: function(t, e) {
var i = this._contentSize;
if (void 0 === e) {
if (t.width === i.width && t.height === i.height) return;
0;
i.width = t.width;
i.height = t.height;
} else {
if (t === i.width && e === i.height) return;
0;
i.width = t;
i.height = e;
}
8 & this._eventMask && this.emit(k.SIZE_CHANGED);
},
getAnchorPoint: function() {
return cc.v2(this._anchorPoint);
},
setAnchorPoint: function(t, e) {
var i = this._anchorPoint;
if (void 0 === e) {
if (t.x === i.x && t.y === i.y) return;
i.x = t.x;
i.y = t.y;
} else {
if (t === i.x && e === i.y) return;
i.x = t;
i.y = e;
}
this.setLocalDirty(z.POSITION);
16 & this._eventMask && this.emit(k.ANCHOR_CHANGED);
},
_invTransformPoint: function(t, e) {
this._parent ? this._parent._invTransformPoint(t, e) : n.vec3.copy(t, e);
var i = this._trs;
n.trs.toPosition(g, i);
n.vec3.sub(t, t, g);
n.trs.toRotation(x, i);
n.quat.conjugate(A, x);
n.vec3.transformQuat(t, t, A);
n.trs.toScale(g, i);
n.vec3.inverseSafe(C, g);
n.vec3.mul(t, t, C);
return t;
},
getWorldPosition: function(t) {
n.trs.toPosition(t, this._trs);
for (var e = this._parent, i = void 0; e; ) {
i = e._trs;
n.trs.toScale(y, i);
n.vec3.mul(t, t, y);
n.trs.toRotation(v, i);
n.vec3.transformQuat(t, t, v);
n.trs.toPosition(y, i);
n.vec3.add(t, t, y);
e = e._parent;
}
return t;
},
setWorldPosition: function(t) {
var e = this._trs;
this._parent ? this._parent._invTransformPoint(b, t) : n.vec3.copy(b, t);
n.trs.fromPosition(e, b);
this.setLocalDirty(z.POSITION);
1 & this._eventMask && this.emit(k.POSITION_CHANGED);
},
getWorldRotation: function(t) {
n.trs.toRotation(V, this._trs);
n.quat.copy(t, V);
for (var e = this._parent; e; ) {
n.trs.toRotation(V, e._trs);
n.quat.mul(t, V, t);
e = e._parent;
}
return t;
},
setWorldRotation: function(t) {
if (this._parent) {
this._parent.getWorldRotation(L);
n.quat.conjugate(L, L);
n.quat.mul(L, L, t);
} else n.quat.copy(L, t);
n.trs.fromRotation(this._trs, L);
0;
this.setLocalDirty(z.ROTATION);
},
getWorldScale: function(t) {
n.trs.toScale(S, this._trs);
n.vec3.copy(t, S);
for (var e = this._parent; e; ) {
n.trs.toScale(S, e._trs);
n.vec3.mul(t, t, S);
e = e._parent;
}
return t;
},
setWorldScale: function(t) {
if (this._parent) {
this._parent.getWorldScale(w);
n.vec3.div(w, t, w);
} else n.vec3.copy(w, t);
n.trs.fromScale(this._trs, w);
this.setLocalDirty(z.SCALE);
},
getWorldRT: function(t) {
var e = T, i = E, r = this._trs;
n.trs.toPosition(e, r);
n.trs.toRotation(i, r);
for (var s = this._parent; s; ) {
r = s._trs;
n.trs.toScale(B, r);
n.vec3.mul(e, e, B);
n.trs.toRotation(M, r);
n.vec3.transformQuat(e, e, M);
n.trs.toPosition(B, r);
n.vec3.add(e, e, B);
n.quat.mul(i, M, i);
s = s._parent;
}
n.mat4.fromRT(t, i, e);
return t;
},
lookAt: function(t, e) {
this.getWorldPosition(I);
n.vec3.sub(I, I, t);
n.vec3.normalize(I, I);
n.quat.fromViewUp(R, I, e);
this.setWorldRotation(R);
},
_updateLocalMatrix: function() {
var t = this._localMatDirty;
if (t) {
var e = this._matrix.m, i = this._trs;
if (t & (z.RS | z.SKEW)) {
var n = -this._eulerAngles.z, r = this._skewX || this._skewY, s = i[7], o = i[8];
if (n || r) {
var a = 1, c = 0, l = 0, u = 1;
if (n) {
var h = n * d;
l = Math.sin(h);
a = u = Math.cos(h);
c = -l;
}
e[0] = a *= s;
e[1] = c *= s;
e[4] = l *= o;
e[5] = u *= o;
if (r) {
var _ = e[0], f = e[1], p = e[4], m = e[5], y = Math.tan(this._skewX * d), v = Math.tan(this._skewY * d);
Infinity === y && (y = 99999999);
Infinity === v && (v = 99999999);
e[0] = _ + p * v;
e[1] = f + m * v;
e[4] = p + _ * y;
e[5] = m + f * y;
}
} else {
e[0] = s;
e[1] = 0;
e[4] = 0;
e[5] = o;
}
}
e[12] = i[0];
e[13] = i[1];
this._localMatDirty = 0;
this._worldMatDirty = !0;
}
},
_calculWorldMatrix: function() {
this._localMatDirty && this._updateLocalMatrix();
var t = this._parent;
t ? this._mulMat(this._worldMatrix, t._worldMatrix, this._matrix) : n.mat4.copy(this._worldMatrix, this._matrix);
this._worldMatDirty = !1;
},
_mulMat: function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[4], l = n[5], u = n[12], h = n[13], _ = r[0], f = r[1], d = r[4], p = r[5], m = r[12], y = r[13];
if (0 !== a || 0 !== c) {
s[0] = _ * o + f * c;
s[1] = _ * a + f * l;
s[4] = d * o + p * c;
s[5] = d * a + p * l;
s[12] = o * m + c * y + u;
s[13] = a * m + l * y + h;
} else {
s[0] = _ * o;
s[1] = f * l;
s[4] = d * o;
s[5] = p * l;
s[12] = o * m + u;
s[13] = l * y + h;
}
},
_updateWorldMatrix: function() {
this._parent && this._parent._updateWorldMatrix();
if (this._worldMatDirty) {
this._calculWorldMatrix();
for (var t = this._children, e = 0, i = t.length; e < i; e++) t[e]._worldMatDirty = !0;
}
},
setLocalDirty: function(t) {
this._localMatDirty |= t;
this._worldMatDirty = !0;
t === z.POSITION ? this._renderFlag |= _.FLAG_WORLD_TRANSFORM : this._renderFlag |= _.FLAG_TRANSFORM;
},
setWorldDirty: function() {
this._worldMatDirty = !0;
},
getLocalMatrix: function(t) {
this._updateLocalMatrix();
return n.mat4.copy(t, this._matrix);
},
getWorldMatrix: function(t) {
this._updateWorldMatrix();
return n.mat4.copy(t, this._worldMatrix);
},
convertToNodeSpaceAR: function(t, e) {
this._updateWorldMatrix();
n.mat4.invert(O, this._worldMatrix);
if (t instanceof cc.Vec2) {
e = e || new cc.Vec2();
return n.vec2.transformMat4(e, t, O);
}
e = e || new cc.Vec3();
return n.vec3.transformMat4(e, t, O);
},
convertToWorldSpaceAR: function(t, e) {
this._updateWorldMatrix();
if (t instanceof cc.Vec2) {
e = e || new cc.Vec2();
return n.vec2.transformMat4(e, t, this._worldMatrix);
}
e = e || new cc.Vec3();
return n.vec3.transformMat4(e, t, this._worldMatrix);
},
convertToNodeSpace: function(t) {
this._updateWorldMatrix();
n.mat4.invert(O, this._worldMatrix);
var e = new cc.Vec2();
n.vec2.transformMat4(e, t, O);
e.x += this._anchorPoint.x * this._contentSize.width;
e.y += this._anchorPoint.y * this._contentSize.height;
return e;
},
convertToWorldSpace: function(t) {
this._updateWorldMatrix();
var e = new cc.Vec2(t.x - this._anchorPoint.x * this._contentSize.width, t.y - this._anchorPoint.y * this._contentSize.height);
return n.vec2.transformMat4(e, e, this._worldMatrix);
},
getNodeToParentTransform: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
var e = this._contentSize;
F.x = -this._anchorPoint.x * e.width;
F.y = -this._anchorPoint.y * e.height;
n.mat4.copy(O, this._matrix);
n.mat4.translate(O, O, F);
return a.fromMat4(t, O);
},
getNodeToParentTransformAR: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
return a.fromMat4(t, this._matrix);
},
getNodeToWorldTransform: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
var e = this._contentSize;
F.x = -this._anchorPoint.x * e.width;
F.y = -this._anchorPoint.y * e.height;
n.mat4.copy(O, this._worldMatrix);
n.mat4.translate(O, O, F);
return a.fromMat4(t, O);
},
getNodeToWorldTransformAR: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
return a.fromMat4(t, this._worldMatrix);
},
getParentToNodeTransform: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
n.mat4.invert(O, this._matrix);
return a.fromMat4(t, O);
},
getWorldToNodeTransform: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
n.mat4.invert(O, this._worldMatrix);
return a.fromMat4(t, O);
},
convertTouchToNodeSpace: function(t) {
return this.convertToNodeSpace(t.getLocation());
},
convertTouchToNodeSpaceAR: function(t) {
return this.convertToNodeSpaceAR(t.getLocation());
},
getBoundingBox: function() {
this._updateLocalMatrix();
var t = this._contentSize.width, e = this._contentSize.height, i = cc.rect(-this._anchorPoint.x * t, -this._anchorPoint.y * e, t, e);
return i.transformMat4(i, this._matrix);
},
getBoundingBoxToWorld: function() {
if (this._parent) {
this._parent._updateWorldMatrix();
return this._getBoundingBoxTo(this._parent._worldMatrix);
}
return this.getBoundingBox();
},
_getBoundingBoxTo: function(t) {
this._updateLocalMatrix();
var e = this._contentSize.width, i = this._contentSize.height, r = cc.rect(-this._anchorPoint.x * e, -this._anchorPoint.y * i, e, i);
t = n.mat4.mul(this._worldMatrix, t, this._matrix);
r.transformMat4(r, t);
if (!this._children) return r;
for (var s = this._children, o = 0; o < s.length; o++) {
var a = s[o];
if (a && a.active) {
var c = a._getBoundingBoxTo(t);
c && r.union(r, c);
}
}
return r;
},
_updateOrderOfArrival: function() {
var t = this._parent ? ++this._parent._childArrivalOrder : 0;
this._localZOrder = 4294901760 & this._localZOrder | t;
if (65535 === t) {
var e = this._parent._children;
e.forEach((function(t, e) {
t._localZOrder = 4294901760 & t._localZOrder | e + 1;
}));
this._parent._childArrivalOrder = e.length;
}
this.emit(k.SIBLING_ORDER_CHANGED);
},
addChild: function(t, e, i) {
0;
cc.assertID(t, 1606);
cc.assertID(null === t._parent, 1605);
t.parent = this;
void 0 !== e && (t.zIndex = e);
void 0 !== i && (t.name = i);
},
cleanup: function() {
p && cc.director.getActionManager().removeAllActionsFromTarget(this);
c.removeListeners(this);
var t, e, i = this._children.length;
for (t = 0; t < i; ++t) (e = this._children[t]) && e.cleanup();
},
sortAllChildren: function() {
if (this._reorderChildDirty) {
c._setDirtyForNode(this);
this._reorderChildDirty = !1;
var t = this._children;
if (t.length > 1) {
var e, i, n, r = t.length;
for (e = 1; e < r; e++) {
n = t[e];
i = e - 1;
for (;i >= 0 && n._localZOrder < t[i]._localZOrder; ) {
t[i + 1] = t[i];
i--;
}
t[i + 1] = n;
}
this.emit(k.CHILD_REORDER, this);
}
cc.director.__fastOff(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
}
},
_delaySort: function() {
if (!this._reorderChildDirty) {
this._reorderChildDirty = !0;
cc.director.__fastOn(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
}
},
_restoreProperties: !1,
onRestore: !1
};
0;
var st = cc.Class(rt), ot = st.prototype;
u.getset(ot, "position", ot.getPosition, ot.setPosition, !1, !0);
cc.Node = e.exports = st;
}), {
"./event-manager": 70,
"./event/event": 73,
"./event/event-target": 72,
"./platform/CCMacro": 131,
"./platform/js": 146,
"./renderer/render-flow": 171,
"./utils/affine-transform": 193,
"./utils/base-node": 194,
"./utils/prefab-helper": 202,
"./utils/trans-pool": 208,
"./vmath": 225
} ],
16: [ (function(t, e, i) {
"use strict";
var n = t("./CCNode"), r = (t("./renderer/render-flow"), cc.Object.Flags.HideInHierarchy, 
n._LocalDirtyFlag), s = cc.Class({
name: "cc.PrivateNode",
extends: n,
properties: {
x: {
get: function() {
return this._originPos.x;
},
set: function(t) {
var e = this._originPos;
if (t !== e.x) {
e.x = t;
this._posDirty(!0);
}
},
override: !0
},
y: {
get: function() {
return this._originPos.y;
},
set: function(t) {
var e = this._originPos;
if (t !== e.y) {
e.y = t;
this._posDirty(!0);
}
},
override: !0
},
zIndex: {
get: function() {
return cc.macro.MIN_ZINDEX;
},
set: function() {
cc.warnID(1638);
},
override: !0
},
showInEditor: {
default: !1,
editorOnly: !0,
override: !0
}
},
ctor: function(t) {
this._localZOrder = cc.macro.MIN_ZINDEX << 16;
this._originPos = cc.v2();
0;
},
_posDirty: function(t) {
this.setLocalDirty(r.POSITION);
!0 === t && 1 & this._eventMask && this.emit(n.EventType.POSITION_CHANGED);
},
_updateLocalMatrix: function() {
if (this._localMatDirty) {
var t = this.parent;
if (t) {
this._trs[0] = this._originPos.x - (t._anchorPoint.x - .5) * t._contentSize.width;
this._trs[1] = this._originPos.y - (t._anchorPoint.y - .5) * t._contentSize.height;
}
this._super();
}
},
getPosition: function() {
return new cc.Vec2(this._originPos);
},
setPosition: function(t, e) {
void 0 === e && (e = (t = t.x).y);
var i = this._originPos;
if (i.x !== t || i.y !== e) {
i.x = t;
i.y = e;
this._posDirty(!0);
}
},
setParent: function(t) {
var e = this._parent;
this._super(t);
if (e !== t) {
e && e.off(n.EventType.ANCHOR_CHANGED, this._posDirty, this);
t && t.on(n.EventType.ANCHOR_CHANGED, this._posDirty, this);
}
},
_updateOrderOfArrival: function() {}
});
cc.js.getset(s.prototype, "parent", s.prototype.getParent, s.prototype.setParent);
cc.js.getset(s.prototype, "position", s.prototype.getPosition, s.prototype.setPosition);
cc.PrivateNode = e.exports = s;
}), {
"./CCNode": 15,
"./renderer/render-flow": 171
} ],
17: [ (function(t, e, i) {
"use strict";
cc.Scene = cc.Class({
name: "cc.Scene",
extends: t("./CCNode"),
properties: {
_is3DNode: {
default: !0,
override: !0
},
autoReleaseAssets: {
default: void 0,
type: cc.Boolean
}
},
ctor: function() {
this._anchorPoint.x = 0;
this._anchorPoint.y = 0;
this._activeInHierarchy = !1;
this._inited = !cc.game._isCloning;
0;
this.dependAssets = null;
},
destroy: function() {
if (cc.Object.prototype.destroy.call(this)) for (var t = this._children, e = 0; e < t.length; ++e) t[e].active = !1;
this._active = !1;
this._activeInHierarchy = !1;
},
_onHierarchyChanged: function() {},
_instantiate: null,
_load: function() {
if (!this._inited) {
0;
this._onBatchCreated();
this._inited = !0;
}
},
_activate: function(t) {
t = !1 !== t;
0;
cc.director._nodeActivator.activateNode(this, t);
}
});
e.exports = cc.Scene;
}), {
"./CCNode": 15
} ],
18: [ (function(t, e, i) {
"use strict";
var n = t("./platform/js"), r = new (t("./platform/id-generater"))("Scheduler"), s = function(t, e, i, n) {
this.target = t;
this.priority = e;
this.paused = i;
this.markedForDeletion = n;
}, o = [];
s.get = function(t, e, i, n) {
var r = o.pop();
if (r) {
r.target = t;
r.priority = e;
r.paused = i;
r.markedForDeletion = n;
} else r = new s(t, e, i, n);
return r;
};
s.put = function(t) {
if (o.length < 20) {
t.target = null;
o.push(t);
}
};
var a = function(t, e, i, n) {
this.list = t;
this.entry = e;
this.target = i;
this.callback = n;
}, c = [];
a.get = function(t, e, i, n) {
var r = c.pop();
if (r) {
r.list = t;
r.entry = e;
r.target = i;
r.callback = n;
} else r = new a(t, e, i, n);
return r;
};
a.put = function(t) {
if (c.length < 20) {
t.list = t.entry = t.target = t.callback = null;
c.push(t);
}
};
var l = function(t, e, i, n, r, s) {
var o = this;
o.timers = t;
o.target = e;
o.timerIndex = i;
o.currentTimer = n;
o.currentTimerSalvaged = r;
o.paused = s;
}, u = [];
l.get = function(t, e, i, n, r, s) {
var o = u.pop();
if (o) {
o.timers = t;
o.target = e;
o.timerIndex = i;
o.currentTimer = n;
o.currentTimerSalvaged = r;
o.paused = s;
} else o = new l(t, e, i, n, r, s);
return o;
};
l.put = function(t) {
if (u.length < 20) {
t.timers = t.target = t.currentTimer = null;
u.push(t);
}
};
function h() {
this._lock = !1;
this._scheduler = null;
this._elapsed = -1;
this._runForever = !1;
this._useDelay = !1;
this._timesExecuted = 0;
this._repeat = 0;
this._delay = 0;
this._interval = 0;
this._target = null;
this._callback = null;
}
var _ = h.prototype;
_.initWithCallback = function(t, e, i, n, r, s) {
this._lock = !1;
this._scheduler = t;
this._target = i;
this._callback = e;
this._elapsed = -1;
this._interval = n;
this._delay = s;
this._useDelay = this._delay > 0;
this._repeat = r;
this._runForever = this._repeat === cc.macro.REPEAT_FOREVER;
return !0;
};
_.getInterval = function() {
return this._interval;
};
_.setInterval = function(t) {
this._interval = t;
};
_.update = function(t) {
if (-1 === this._elapsed) {
this._elapsed = 0;
this._timesExecuted = 0;
} else {
this._elapsed += t;
if (this._runForever && !this._useDelay) {
if (this._elapsed >= this._interval) {
this.trigger();
this._elapsed = 0;
}
} else {
if (this._useDelay) {
if (this._elapsed >= this._delay) {
this.trigger();
this._elapsed -= this._delay;
this._timesExecuted += 1;
this._useDelay = !1;
}
} else if (this._elapsed >= this._interval) {
this.trigger();
this._elapsed = 0;
this._timesExecuted += 1;
}
this._callback && !this._runForever && this._timesExecuted > this._repeat && this.cancel();
}
}
};
_.getCallback = function() {
return this._callback;
};
_.trigger = function() {
if (this._target && this._callback) {
this._lock = !0;
this._callback.call(this._target, this._elapsed);
this._lock = !1;
}
};
_.cancel = function() {
this._scheduler.unschedule(this._callback, this._target);
};
var f = [];
h.get = function() {
return f.pop() || new h();
};
h.put = function(t) {
if (f.length < 20 && !t._lock) {
t._scheduler = t._target = t._callback = null;
f.push(t);
}
};
cc.Scheduler = function() {
this._timeScale = 1;
this._updatesNegList = [];
this._updates0List = [];
this._updatesPosList = [];
this._hashForUpdates = n.createMap(!0);
this._hashForTimers = n.createMap(!0);
this._currentTarget = null;
this._currentTargetSalvaged = !1;
this._updateHashLocked = !1;
this._arrayForTimers = [];
};
cc.Scheduler.prototype = {
constructor: cc.Scheduler,
_removeHashElement: function(t) {
delete this._hashForTimers[t.target._id];
for (var e = this._arrayForTimers, i = 0, n = e.length; i < n; i++) if (e[i] === t) {
e.splice(i, 1);
break;
}
l.put(t);
},
_removeUpdateFromHash: function(t) {
var e = t.target._id, i = this._hashForUpdates[e];
if (i) {
for (var n = i.list, r = i.entry, o = 0, c = n.length; o < c; o++) if (n[o] === r) {
n.splice(o, 1);
break;
}
delete this._hashForUpdates[e];
s.put(r);
a.put(i);
}
},
_priorityIn: function(t, e, i) {
for (var n = 0; n < t.length; n++) if (i < t[n].priority) {
t.splice(n, 0, e);
return;
}
t.push(e);
},
_appendIn: function(t, e) {
t.push(e);
},
enableForTarget: function(t) {
t._id || (t.__instanceId ? cc.warnID(1513) : t._id = r.getNewId());
},
setTimeScale: function(t) {
this._timeScale = t;
},
getTimeScale: function() {
return this._timeScale;
},
update: function(t) {
this._updateHashLocked = !0;
1 !== this._timeScale && (t *= this._timeScale);
var e, i, n, r;
for (e = 0, n = (i = this._updatesNegList).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
for (e = 0, n = (i = this._updates0List).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
for (e = 0, n = (i = this._updatesPosList).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
var s, o = this._arrayForTimers;
for (e = 0; e < o.length; e++) {
s = o[e];
this._currentTarget = s;
this._currentTargetSalvaged = !1;
if (!s.paused) for (s.timerIndex = 0; s.timerIndex < s.timers.length; ++s.timerIndex) {
s.currentTimer = s.timers[s.timerIndex];
s.currentTimerSalvaged = !1;
s.currentTimer.update(t);
s.currentTimer = null;
}
if (this._currentTargetSalvaged && 0 === this._currentTarget.timers.length) {
this._removeHashElement(this._currentTarget);
--e;
}
}
for (e = 0, i = this._updatesNegList; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
for (e = 0, i = this._updates0List; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
for (e = 0, i = this._updatesPosList; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
this._updateHashLocked = !1;
this._currentTarget = null;
},
schedule: function(t, e, i, n, r, s) {
if ("function" != typeof t) {
var o = t;
t = e;
e = o;
}
if (4 === arguments.length || 5 === arguments.length) {
s = !!n;
n = cc.macro.REPEAT_FOREVER;
r = 0;
}
cc.assertID(e, 1502);
var a = e._id;
if (!a) if (e.__instanceId) {
cc.warnID(1513);
a = e._id = e.__instanceId;
} else cc.errorID(1510);
var c, u, _ = this._hashForTimers[a];
if (_) _.paused !== s && cc.warnID(1511); else {
_ = l.get(null, e, 0, null, null, s);
this._arrayForTimers.push(_);
this._hashForTimers[a] = _;
}
if (null == _.timers) _.timers = []; else for (u = 0; u < _.timers.length; ++u) if ((c = _.timers[u]) && t === c._callback) {
cc.logID(1507, c.getInterval(), i);
c._interval = i;
return;
}
(c = h.get()).initWithCallback(this, t, e, i, n, r);
_.timers.push(c);
this._currentTarget === _ && this._currentTargetSalvaged && (this._currentTargetSalvaged = !1);
},
scheduleUpdate: function(t, e, i) {
var n = t._id;
if (!n) if (t.__instanceId) {
cc.warnID(1513);
n = t._id = t.__instanceId;
} else cc.errorID(1510);
var r = this._hashForUpdates[n];
if (r && r.entry) {
if (r.entry.priority === e) {
r.entry.markedForDeletion = !1;
r.entry.paused = i;
return;
}
if (this._updateHashLocked) {
cc.logID(1506);
r.entry.markedForDeletion = !1;
r.entry.paused = i;
return;
}
this.unscheduleUpdate(t);
}
var o, c = s.get(t, e, i, !1);
if (0 === e) {
o = this._updates0List;
this._appendIn(o, c);
} else {
o = e < 0 ? this._updatesNegList : this._updatesPosList;
this._priorityIn(o, c, e);
}
this._hashForUpdates[n] = a.get(o, c, t, null);
},
unschedule: function(t, e) {
if (e && t) {
var i = e._id;
if (!i) if (e.__instanceId) {
cc.warnID(1513);
i = e._id = e.__instanceId;
} else cc.errorID(1510);
var n = this._hashForTimers[i];
if (n) for (var r = n.timers, s = 0, o = r.length; s < o; s++) {
var a = r[s];
if (t === a._callback) {
a !== n.currentTimer || n.currentTimerSalvaged || (n.currentTimerSalvaged = !0);
r.splice(s, 1);
h.put(a);
n.timerIndex >= s && n.timerIndex--;
0 === r.length && (this._currentTarget === n ? this._currentTargetSalvaged = !0 : this._removeHashElement(n));
return;
}
}
}
},
unscheduleUpdate: function(t) {
if (t) {
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForUpdates[e];
i && (this._updateHashLocked ? i.entry.markedForDeletion = !0 : this._removeUpdateFromHash(i.entry));
}
},
unscheduleAllForTarget: function(t) {
if (t) {
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
if (i) {
var n = i.timers;
n.indexOf(i.currentTimer) > -1 && !i.currentTimerSalvaged && (i.currentTimerSalvaged = !0);
for (var r = 0, s = n.length; r < s; r++) h.put(n[r]);
n.length = 0;
this._currentTarget === i ? this._currentTargetSalvaged = !0 : this._removeHashElement(i);
}
this.unscheduleUpdate(t);
}
},
unscheduleAll: function() {
this.unscheduleAllWithMinPriority(cc.Scheduler.PRIORITY_SYSTEM);
},
unscheduleAllWithMinPriority: function(t) {
var e, i, n, r = this._arrayForTimers;
for (e = r.length - 1; e >= 0; e--) {
i = r[e];
this.unscheduleAllForTarget(i.target);
}
var s = 0;
if (t < 0) for (e = 0; e < this._updatesNegList.length; ) {
s = this._updatesNegList.length;
(n = this._updatesNegList[e]) && n.priority >= t && this.unscheduleUpdate(n.target);
s == this._updatesNegList.length && e++;
}
if (t <= 0) for (e = 0; e < this._updates0List.length; ) {
s = this._updates0List.length;
(n = this._updates0List[e]) && this.unscheduleUpdate(n.target);
s == this._updates0List.length && e++;
}
for (e = 0; e < this._updatesPosList.length; ) {
s = this._updatesPosList.length;
(n = this._updatesPosList[e]) && n.priority >= t && this.unscheduleUpdate(n.target);
s == this._updatesPosList.length && e++;
}
},
isScheduled: function(t, e) {
cc.assertID(t, 1508);
cc.assertID(e, 1509);
var i = e._id;
if (!i) if (e.__instanceId) {
cc.warnID(1513);
i = e._id = e.__instanceId;
} else cc.errorID(1510);
var n = this._hashForTimers[i];
if (!n) return !1;
if (null == n.timers) return !1;
for (var r = n.timers, s = 0; s < r.length; ++s) {
if (t === r[s]._callback) return !0;
}
return !1;
},
pauseAllTargets: function() {
return this.pauseAllTargetsWithMinPriority(cc.Scheduler.PRIORITY_SYSTEM);
},
pauseAllTargetsWithMinPriority: function(t) {
var e, i, n, r, s = [], o = this._arrayForTimers;
for (i = 0, n = o.length; i < n; i++) if (e = o[i]) {
e.paused = !0;
s.push(e.target);
}
if (t < 0) for (i = 0; i < this._updatesNegList.length; i++) if ((r = this._updatesNegList[i]) && r.priority >= t) {
r.paused = !0;
s.push(r.target);
}
if (t <= 0) for (i = 0; i < this._updates0List.length; i++) if (r = this._updates0List[i]) {
r.paused = !0;
s.push(r.target);
}
for (i = 0; i < this._updatesPosList.length; i++) if ((r = this._updatesPosList[i]) && r.priority >= t) {
r.paused = !0;
s.push(r.target);
}
return s;
},
resumeTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) this.resumeTarget(t[e]);
},
pauseTarget: function(t) {
cc.assertID(t, 1503);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
i && (i.paused = !0);
var n = this._hashForUpdates[e];
n && (n.entry.paused = !0);
},
resumeTarget: function(t) {
cc.assertID(t, 1504);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
i && (i.paused = !1);
var n = this._hashForUpdates[e];
n && (n.entry.paused = !1);
},
isTargetPaused: function(t) {
cc.assertID(t, 1505);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
if (i) return i.paused;
var n = this._hashForUpdates[e];
return !!n && n.entry.paused;
}
};
cc.Scheduler.PRIORITY_SYSTEM = 1 << 31;
cc.Scheduler.PRIORITY_NON_SYSTEM = cc.Scheduler.PRIORITY_SYSTEM + 1;
e.exports = cc.Scheduler;
}), {
"./platform/id-generater": 142,
"./platform/js": 146
} ],
19: [ (function(t, e, i) {
"use strict";
var n = t("./CCRawAsset");
cc.Asset = cc.Class({
name: "cc.Asset",
extends: n,
ctor: function() {
this.loaded = !0;
this.url = "";
},
properties: {
nativeUrl: {
get: function() {
if (this._native) {
var t = this._native;
if (47 === t.charCodeAt(0)) return t.slice(1);
if (cc.AssetLibrary) {
var e = cc.AssetLibrary.getLibUrlNoExt(this._uuid, !0);
return 46 === t.charCodeAt(0) ? e + t : e + "/" + t;
}
cc.errorID(6400);
}
return "";
},
visible: !1
},
_native: "",
_nativeAsset: {
get: function() {
return this._$nativeAsset;
},
set: function(t) {
this._$nativeAsset = t;
}
}
},
statics: {
deserialize: !1,
preventDeferredLoadDependents: !1,
preventPreloadNativeObject: !1
},
toString: function() {
return this.nativeUrl;
},
serialize: !1,
createNode: null,
_setRawAsset: function(t, e) {
this._native = !1 !== e ? t || void 0 : "/" + t;
}
});
e.exports = cc.Asset;
}), {
"./CCRawAsset": 28
} ],
20: [ (function(t, e, i) {
"use strict";
var n = t("./CCAsset"), r = t("../event/event-target"), s = cc.Enum({
WEB_AUDIO: 0,
DOM_AUDIO: 1
}), o = cc.Class({
name: "cc.AudioClip",
extends: n,
mixins: [ r ],
ctor: function() {
this.loaded = !1;
this._audio = null;
},
properties: {
loadMode: {
default: s.WEB_AUDIO,
type: s
},
_nativeAsset: {
get: function() {
return this._audio;
},
set: function(t) {
t instanceof cc.AudioClip ? this._audio = t._nativeAsset : this._audio = t;
if (this._audio) {
this.loaded = !0;
this.emit("load");
}
},
override: !0
}
},
statics: {
LoadMode: s,
_loadByUrl: function(t, e) {
var i = cc.loader.getItem(t) || cc.loader.getItem(t + "?useDom=1");
i && i.complete ? i._owner instanceof o ? e(null, i._owner) : e(null, i.content) : cc.loader.load(t, (function(n, r) {
if (n) return e(n);
i = cc.loader.getItem(t) || cc.loader.getItem(t + "?useDom=1");
e(null, i.content);
}));
}
},
destroy: function() {
cc.audioEngine.uncache(this);
this._super();
}
});
cc.AudioClip = o;
e.exports = o;
}), {
"../event/event-target": 72,
"./CCAsset": 19
} ],
21: [ (function(t, e, i) {
"use strict";
var n = function() {
this.u = 0;
this.v = 0;
this.w = 0;
this.h = 0;
this.offsetX = 0;
this.offsetY = 0;
this.textureID = 0;
this.valid = !1;
this.xAdvance = 0;
}, r = function(t) {
this._letterDefinitions = {};
this._texture = t;
};
r.prototype = {
constructor: r,
addLetterDefinitions: function(t, e) {
this._letterDefinitions[t] = e;
},
cloneLetterDefinition: function() {
var t = {};
for (var e in this._letterDefinitions) {
var i = new n();
cc.js.mixin(i, this._letterDefinitions[e]);
t[e] = i;
}
return t;
},
getTexture: function() {
return this._texture;
},
getLetter: function(t) {
return this._letterDefinitions[t];
},
getLetterDefinitionForChar: function(t) {
var e = t.charCodeAt(0);
return this._letterDefinitions.hasOwnProperty(e) ? this._letterDefinitions[e] : null;
},
clear: function() {
this._letterDefinitions = {};
}
};
var s = cc.Class({
name: "cc.BitmapFont",
extends: cc.Font,
properties: {
fntDataStr: {
default: ""
},
spriteFrame: {
default: null,
type: cc.SpriteFrame
},
fontSize: {
default: -1
},
_fntConfig: null,
_fontDefDictionary: null
},
onLoad: function() {
var t = this.spriteFrame;
!this._fontDefDictionary && t && (this._fontDefDictionary = new r(t._texture));
var e = this._fntConfig;
if (e) {
var i = e.fontDefDictionary;
for (var s in i) {
var o = new n(), a = i[s].rect;
o.offsetX = i[s].xOffset;
o.offsetY = i[s].yOffset;
o.w = a.width;
o.h = a.height;
o.u = a.x;
o.v = a.y;
o.textureID = 0;
o.valid = !0;
o.xAdvance = i[s].xAdvance;
this._fontDefDictionary.addLetterDefinitions(s, o);
}
}
}
});
cc.BitmapFont = s;
cc.BitmapFont.FontLetterDefinition = n;
cc.BitmapFont.FontAtlas = r;
e.exports = s;
}), {} ],
22: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.BufferAsset",
extends: cc.Asset,
ctor: function() {
this._buffer = null;
},
properties: {
_nativeAsset: {
get: function() {
return this._buffer;
},
set: function(t) {
this._buffer = t.buffer || t;
},
override: !0
},
buffer: function() {
return this._buffer;
}
}
});
cc.BufferAsset = e.exports = n;
}), {} ],
23: [ (function(t, e, i) {
"use strict";
var n = t("./CCAsset"), r = t("../../renderer/core/effect"), s = cc.Class({
name: "cc.EffectAsset",
extends: n,
ctor: function() {
this._effect = null;
},
properties: {
properties: Object,
techniques: [],
shaders: []
},
onLoad: function() {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
for (var t = cc.renderer._forward._programLib, e = 0; e < this.shaders.length; e++) t.define(this.shaders[e]);
this._initEffect();
}
},
_initEffect: function() {
this._effect || (this._effect = r.parseEffect(this));
},
getInstantiatedEffect: function() {
this._initEffect();
return this._effect.clone();
}
});
e.exports = cc.EffectAsset = s;
}), {
"../../renderer/core/effect": 241,
"./CCAsset": 19
} ],
24: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Font",
extends: cc.Asset
});
cc.Font = e.exports = n;
}), {} ],
25: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.JsonAsset",
extends: cc.Asset,
properties: {
json: null
}
});
e.exports = cc.JsonAsset = n;
}), {} ],
26: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelAtlas",
extends: cc.BitmapFont,
onLoad: function() {
this.spriteFrame ? this._fntConfig ? this._super() : cc.warnID(9101, this.name) : cc.warnID(9100, this.name);
}
});
cc.LabelAtlas = n;
e.exports = n;
}), {} ],
27: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
AUTO: 0,
SINGLE_INSTANCE: 1,
MULTI_INSTANCE: 2
}), r = cc.Class({
name: "cc.Prefab",
extends: cc.Asset,
ctor: function() {
this._createFunction = null;
this._instantiatedTimes = 0;
},
properties: {
data: null,
optimizationPolicy: n.AUTO,
asyncLoadAssets: !1,
readonly: {
default: !1,
editorOnly: !0
}
},
statics: {
OptimizationPolicy: n,
OptimizationPolicyThreshold: 3
},
createNode: !1,
compileCreateFunction: function() {
var e = t("../platform/instantiate-jit");
this._createFunction = e.compile(this.data);
},
_doInstantiate: function(t) {
this.data._prefab ? this.data._prefab._synced = !0 : cc.warnID(3700);
this._createFunction || this.compileCreateFunction();
return this._createFunction(t);
},
_instantiate: function() {
var t;
if (this.optimizationPolicy !== n.SINGLE_INSTANCE && (this.optimizationPolicy === n.MULTI_INSTANCE || this._instantiatedTimes + 1 >= r.OptimizationPolicyThreshold)) {
t = this._doInstantiate();
this.data._instantiate(t);
} else {
this.data._prefab._synced = !0;
t = this.data._instantiate();
}
++this._instantiatedTimes;
return t;
},
destroy: function() {
this.data && this.data.destroy();
this._super();
}
});
cc.Prefab = e.exports = r;
cc.js.obsolete(cc, "cc._Prefab", "Prefab");
}), {
"../platform/instantiate-jit": 144
} ],
28: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject"), r = t("../platform/js");
cc.RawAsset = cc.Class({
name: "cc.RawAsset",
extends: n,
ctor: function() {
Object.defineProperty(this, "_uuid", {
value: "",
writable: !0
});
}
});
r.value(cc.RawAsset, "isRawAssetType", (function(t) {
return r.isChildClassOf(t, cc.RawAsset) && !r.isChildClassOf(t, cc.Asset);
}));
r.value(cc.RawAsset, "wasRawAssetType", (function(t) {
return t === cc.Texture2D || t === cc.AudioClip || t === cc.ParticleAsset || t === cc.Asset;
}));
e.exports = cc.RawAsset;
}), {
"../platform/CCObject": 132,
"../platform/js": 146
} ],
29: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../renderer/gfx"));
var r = t("../renderer"), s = t("./CCTexture2D"), o = cc.Class({
name: "cc.RenderTexture",
extends: s,
ctor: function() {
this._framebuffer = null;
},
initWithSize: function(t, e, i) {
this.width = Math.floor(t || cc.visibleRect.width);
this.height = Math.floor(e || cc.visibleRect.height);
this._resetUnderlyingMipmaps();
var s = {
colors: [ this._texture ]
};
this._depthStencilBuffer && this._depthStencilBuffer.destroy();
var o = void 0;
if (i) {
o = new n.default.RenderBuffer(r.device, i, t, e);
i === n.default.RB_FMT_D24S8 ? s.depthStencil = o : i === n.default.RB_FMT_S8 ? s.stencil = o : i === n.default.RB_FMT_D16 && (s.depth = o);
}
this._depthStencilBuffer = o;
this._framebuffer && this._framebuffer.destroy();
this._framebuffer = new n.default.FrameBuffer(r.device, t, e, s);
this._packable = !1;
this.loaded = !0;
this.emit("load");
},
updateSize: function(t, e) {
this.width = Math.floor(t || cc.visibleRect.width);
this.height = Math.floor(e || cc.visibleRect.height);
this._resetUnderlyingMipmaps();
var i = this._depthStencilBuffer;
i && i.update(this.width, this.height);
this._framebuffer._width = t;
this._framebuffer._height = e;
},
drawTextureAt: function(t, e, i) {
t._image && this._texture.updateSubImage({
x: e,
y: i,
image: t._image,
width: t.width,
height: t.height,
level: 0,
flipY: !1,
premultiplyAlpha: t._premultiplyAlpha
});
},
readPixels: function(t, e, i, n, r) {
if (!this._framebuffer || !this._texture) return t;
e = e || 0;
i = i || 0;
var s = n || this.width, o = r || this.height;
t = t || new Uint8Array(s * o * 4);
var a = cc.game._renderContext, c = a.getParameter(a.FRAMEBUFFER_BINDING);
a.bindFramebuffer(a.FRAMEBUFFER, this._framebuffer.getHandle());
a.readPixels(e, i, s, o, a.RGBA, a.UNSIGNED_BYTE, t);
a.bindFramebuffer(a.FRAMEBUFFER, c);
return t;
},
destroy: function() {
this._super();
if (this._framebuffer) {
this._framebuffer.destroy();
this._framebuffer = null;
}
}
});
cc.RenderTexture = e.exports = o;
}), {
"../../renderer/gfx": 246,
"../renderer": 170,
"./CCTexture2D": 36
} ],
30: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.SceneAsset",
extends: cc.Asset,
properties: {
scene: null,
asyncLoadAssets: void 0
}
});
cc.SceneAsset = n;
e.exports = n;
}), {} ],
31: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Script",
extends: cc.Asset
});
cc._Script = n;
var r = cc.Class({
name: "cc.JavaScript",
extends: n
});
cc._JavaScript = r;
var s = cc.Class({
name: "cc.CoffeeScript",
extends: n
});
cc._CoffeeScript = s;
var o = cc.Class({
name: "cc.TypeScript",
extends: n
});
cc._TypeScript = o;
}), {} ],
32: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.SpriteAtlas",
extends: cc.Asset,
properties: {
_spriteFrames: {
default: {}
}
},
getTexture: function() {
var t = Object.keys(this._spriteFrames);
if (t.length > 0) {
var e = this._spriteFrames[t[0]];
return e ? e.getTexture() : null;
}
return null;
},
getSpriteFrame: function(t) {
var e = this._spriteFrames[t];
if (!e) return null;
e.name || (e.name = t);
return e;
},
getSpriteFrames: function() {
var t = [], e = this._spriteFrames;
for (var i in e) t.push(this.getSpriteFrame(i));
return t;
}
});
cc.SpriteAtlas = n;
e.exports = n;
}), {} ],
33: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../utils/texture-util"), s = [ {
u: 0,
v: 0
}, {
u: 0,
v: 0
}, {
u: 0,
v: 0
}, {
u: 0,
v: 0
} ], o = cc.Class({
name: "cc.SpriteFrame",
extends: t("../assets/CCAsset"),
mixins: [ n ],
properties: {
_textureSetter: {
set: function(t) {
if (t) {
0;
this._texture !== t && this._refreshTexture(t);
this._textureFilename = t.url;
}
}
},
insetTop: {
get: function() {
return this._capInsets[1];
},
set: function(t) {
this._capInsets[1] = t;
this._texture && this._calculateSlicedUV();
}
},
insetBottom: {
get: function() {
return this._capInsets[3];
},
set: function(t) {
this._capInsets[3] = t;
this._texture && this._calculateSlicedUV();
}
},
insetLeft: {
get: function() {
return this._capInsets[0];
},
set: function(t) {
this._capInsets[0] = t;
this._texture && this._calculateSlicedUV();
}
},
insetRight: {
get: function() {
return this._capInsets[2];
},
set: function(t) {
this._capInsets[2] = t;
this._texture && this._calculateSlicedUV();
}
}
},
ctor: function() {
n.call(this);
var t = arguments[0], e = arguments[1], i = arguments[2], r = arguments[3], s = arguments[4];
this._rect = null;
this.uv = [];
this._texture = null;
this._original = null;
this._offset = null;
this._originalSize = null;
this._rotated = !1;
this.vertices = null;
this._capInsets = [ 0, 0, 0, 0 ];
this.uvSliced = [];
this._textureFilename = "";
0;
void 0 !== t && this.setTexture(t, e, i, r, s);
},
textureLoaded: function() {
return this._texture && this._texture.loaded;
},
isRotated: function() {
return this._rotated;
},
setRotated: function(t) {
this._rotated = t;
this._texture && this._calculateUV();
},
getRect: function() {
return cc.rect(this._rect);
},
setRect: function(t) {
this._rect = t;
this._texture && this._calculateUV();
},
getOriginalSize: function() {
return cc.size(this._originalSize);
},
setOriginalSize: function(t) {
if (this._originalSize) {
this._originalSize.width = t.width;
this._originalSize.height = t.height;
} else this._originalSize = cc.size(t);
},
getTexture: function() {
return this._texture;
},
_textureLoadedCallback: function() {
var t = this._texture;
if (t) {
var e = t.width, i = t.height;
this._rect ? this._checkRect(this._texture) : this._rect = cc.rect(0, 0, e, i);
this._originalSize || this.setOriginalSize(cc.size(e, i));
this._offset || this.setOffset(cc.v2(0, 0));
this._calculateUV();
this.emit("load");
}
},
_refreshTexture: function(t) {
this._texture = t;
t.loaded ? this._textureLoadedCallback() : t.once("load", this._textureLoadedCallback, this);
},
getOffset: function() {
return cc.v2(this._offset);
},
setOffset: function(t) {
this._offset = cc.v2(t);
},
clone: function() {
return new o(this._texture || this._textureFilename, this._rect, this._rotated, this._offset, this._originalSize);
},
setTexture: function(t, e, i, n, r) {
this._rect = e || null;
n ? this.setOffset(n) : this._offset = null;
r ? this.setOriginalSize(r) : this._originalSize = null;
this._rotated = i || !1;
var s = t;
if ("string" == typeof s && s) {
this._textureFilename = s;
this._loadTexture();
}
s instanceof cc.Texture2D && this._texture !== s && this._refreshTexture(s);
return !0;
},
_loadTexture: function() {
if (this._textureFilename) {
var t = r.loadImage(this._textureFilename);
this._refreshTexture(t);
}
},
ensureLoadTexture: function() {
if (this._texture) {
if (!this._texture.loaded) {
this._refreshTexture(this._texture);
r.postLoadTexture(this._texture);
}
} else this._textureFilename && this._loadTexture();
},
_checkRect: function(t) {
var e = this._rect, i = e.x, n = e.y;
if (this._rotated) {
i += e.height;
n += e.width;
} else {
i += e.width;
n += e.height;
}
i > t.width && cc.errorID(3300, t.url + "/" + this.name, i, t.width);
n > t.height && cc.errorID(3400, t.url + "/" + this.name, n, t.height);
},
_calculateSlicedUV: function() {
var t = this._rect, e = this._texture.width, i = this._texture.height, n = this._capInsets[0], r = this._capInsets[2], o = t.width - n - r, a = this._capInsets[1], c = this._capInsets[3], l = t.height - a - c, u = this.uvSliced;
u.length = 0;
if (this._rotated) {
s[0].u = t.x / e;
s[1].u = (t.x + c) / e;
s[2].u = (t.x + c + l) / e;
s[3].u = (t.x + t.height) / e;
s[3].v = t.y / i;
s[2].v = (t.y + n) / i;
s[1].v = (t.y + n + o) / i;
s[0].v = (t.y + t.width) / i;
for (var h = 0; h < 4; ++h) for (var _ = s[h], f = 0; f < 4; ++f) {
var d = s[3 - f];
u.push({
u: _.u,
v: d.v
});
}
} else {
s[0].u = t.x / e;
s[1].u = (t.x + n) / e;
s[2].u = (t.x + n + o) / e;
s[3].u = (t.x + t.width) / e;
s[3].v = t.y / i;
s[2].v = (t.y + a) / i;
s[1].v = (t.y + a + l) / i;
s[0].v = (t.y + t.height) / i;
for (var p = 0; p < 4; ++p) for (var m = s[p], y = 0; y < 4; ++y) {
var v = s[y];
u.push({
u: v.u,
v: m.v
});
}
}
},
_setDynamicAtlasFrame: function(t) {
if (t) {
this._original = {
_texture: this._texture,
_x: this._rect.x,
_y: this._rect.y
};
this._texture = t.texture;
this._rect.x = t.x;
this._rect.y = t.y;
this._calculateUV();
}
},
_resetDynamicAtlasFrame: function() {
if (this._original) {
this._rect.x = this._original._x;
this._rect.y = this._original._y;
this._texture = this._original._texture;
this._original = null;
this._calculateUV();
}
},
_calculateUV: function() {
var t = this._rect, e = this._texture, i = this.uv, n = e.width, r = e.height;
if (this._rotated) {
var s = 0 === n ? 0 : t.x / n, o = 0 === n ? 0 : (t.x + t.height) / n, a = 0 === r ? 0 : (t.y + t.width) / r, c = 0 === r ? 0 : t.y / r;
i[0] = s;
i[1] = c;
i[2] = s;
i[3] = a;
i[4] = o;
i[5] = c;
i[6] = o;
i[7] = a;
} else {
var l = 0 === n ? 0 : t.x / n, u = 0 === n ? 0 : (t.x + t.width) / n, h = 0 === r ? 0 : (t.y + t.height) / r, _ = 0 === r ? 0 : t.y / r;
i[0] = l;
i[1] = h;
i[2] = u;
i[3] = h;
i[4] = l;
i[5] = _;
i[6] = u;
i[7] = _;
}
var f = this.vertices;
if (f) {
f.nu.length = 0;
f.nv.length = 0;
for (var d = 0; d < f.u.length; d++) {
f.nu[d] = f.u[d] / n;
f.nv[d] = f.v[d] / r;
}
}
this._calculateSlicedUV();
},
_serialize: !1,
_deserialize: function(t, e) {
var i = t.rect;
i && (this._rect = new cc.Rect(i[0], i[1], i[2], i[3]));
t.offset && this.setOffset(new cc.Vec2(t.offset[0], t.offset[1]));
t.originalSize && this.setOriginalSize(new cc.Size(t.originalSize[0], t.originalSize[1]));
this._rotated = 1 === t.rotated;
this._name = t.name;
var n = t.capInsets;
if (n) {
this._capInsets[0] = n[0];
this._capInsets[1] = n[1];
this._capInsets[2] = n[2];
this._capInsets[3] = n[3];
}
0;
this.vertices = t.vertices;
if (this.vertices) {
this.vertices.nu = [];
this.vertices.nv = [];
}
var r = t.texture;
r && e.result.push(this, "_textureSetter", r);
}
}), a = o.prototype;
a.copyWithZone = a.clone;
a.copy = a.clone;
a.initWithTexture = a.setTexture;
cc.SpriteFrame = o;
e.exports = o;
}), {
"../assets/CCAsset": 19,
"../event/event-target": 72,
"../utils/texture-util": 207
} ],
34: [ (function(t, e, i) {
"use strict";
var n = t("./CCFont"), r = cc.Class({
name: "cc.TTFFont",
extends: n,
properties: {
_fontFamily: null,
_nativeAsset: {
type: cc.String,
get: function() {
return this._fontFamily;
},
set: function(t) {
this._fontFamily = t || "Arial";
},
override: !0
}
}
});
cc.TTFFont = e.exports = r;
}), {
"./CCFont": 24
} ],
35: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TextAsset",
extends: cc.Asset,
properties: {
text: ""
},
toString: function() {
return this.text;
}
});
e.exports = cc.TextAsset = n;
}), {} ],
36: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../renderer/gfx"));
var r = t("../event/event-target"), s = t("../renderer");
t("../platform/CCClass");
var o = new (t("../platform/id-generater"))("Tex"), a = 1024, c = cc.Enum({
RGB565: n.default.TEXTURE_FMT_R5_G6_B5,
RGB5A1: n.default.TEXTURE_FMT_R5_G5_B5_A1,
RGBA4444: n.default.TEXTURE_FMT_R4_G4_B4_A4,
RGB888: n.default.TEXTURE_FMT_RGB8,
RGBA8888: n.default.TEXTURE_FMT_RGBA8,
RGBA32F: n.default.TEXTURE_FMT_RGBA32F,
A8: n.default.TEXTURE_FMT_A8,
I8: n.default.TEXTURE_FMT_L8,
AI8: n.default.TEXTURE_FMT_L8_A8,
RGB_PVRTC_2BPPV1: n.default.TEXTURE_FMT_RGB_PVRTC_2BPPV1,
RGBA_PVRTC_2BPPV1: n.default.TEXTURE_FMT_RGBA_PVRTC_2BPPV1,
RGB_A_PVRTC_2BPPV1: a++,
RGB_PVRTC_4BPPV1: n.default.TEXTURE_FMT_RGB_PVRTC_4BPPV1,
RGBA_PVRTC_4BPPV1: n.default.TEXTURE_FMT_RGBA_PVRTC_4BPPV1,
RGB_A_PVRTC_4BPPV1: a++,
RGB_ETC1: n.default.TEXTURE_FMT_RGB_ETC1,
RGBA_ETC1: a++,
RGB_ETC2: n.default.TEXTURE_FMT_RGB_ETC2,
RGBA_ETC2: n.default.TEXTURE_FMT_RGBA_ETC2
}), l = cc.Enum({
REPEAT: 10497,
CLAMP_TO_EDGE: 33071,
MIRRORED_REPEAT: 33648
}), u = cc.Enum({
LINEAR: 9729,
NEAREST: 9728
}), h = {
9728: 0,
9729: 1
}, _ = [], f = {
width: void 0,
height: void 0,
minFilter: void 0,
magFilter: void 0,
wrapS: void 0,
wrapT: void 0,
format: void 0,
genMipmaps: void 0,
images: void 0,
image: void 0,
flipY: void 0,
premultiplyAlpha: void 0
};
function d() {
for (var t in f) f[t] = void 0;
_.length = 0;
f.images = _;
f.flipY = !1;
return f;
}
var p = cc.Class({
name: "cc.Texture2D",
extends: t("../assets/CCAsset"),
mixins: [ r ],
properties: {
_nativeAsset: {
get: function() {
return this._image;
},
set: function(t) {
t._compressed && t._data ? this.initWithData(t._data, this._format, t.width, t.height) : this.initWithElement(t);
},
override: !0
},
_format: c.RGBA8888,
_premultiplyAlpha: !1,
_flipY: !1,
_minFilter: u.LINEAR,
_magFilter: u.LINEAR,
_mipFilter: u.LINEAR,
_wrapS: l.CLAMP_TO_EDGE,
_wrapT: l.CLAMP_TO_EDGE,
_genMipmaps: !1,
genMipmaps: {
get: function() {
return this._genMipmaps;
},
set: function(t) {
if (this._genMipmaps !== t) {
var e = d();
e.genMipmaps = t;
this.update(e);
}
}
},
_packable: !0,
packable: {
get: function() {
return this._packable;
},
set: function(t) {
this._packable = t;
}
}
},
statics: {
PixelFormat: c,
WrapMode: l,
Filter: u,
_FilterIndex: h,
extnames: [ ".png", ".jpg", ".jpeg", ".bmp", ".webp", ".pvr", ".pkm" ]
},
ctor: function() {
this._id = o.getNewId();
this.loaded = !1;
this.width = 0;
this.height = 0;
this._hashDirty = !0;
this._hash = 0;
this._texture = null;
0;
},
getImpl: function() {
return this._texture;
},
getId: function() {
return this._id;
},
toString: function() {
return this.url || "";
},
update: function(t) {
if (t) {
var e = !1;
void 0 !== t.width && (this.width = t.width);
void 0 !== t.height && (this.height = t.height);
if (void 0 !== t.minFilter) {
this._minFilter = t.minFilter;
t.minFilter = h[t.minFilter];
}
if (void 0 !== t.magFilter) {
this._magFilter = t.magFilter;
t.magFilter = h[t.magFilter];
}
if (void 0 !== t.mipFilter) {
this._mipFilter = t.mipFilter;
t.mipFilter = h[t.mipFilter];
}
void 0 !== t.wrapS && (this._wrapS = t.wrapS);
void 0 !== t.wrapT && (this._wrapT = t.wrapT);
void 0 !== t.format && (this._format = t.format);
if (void 0 !== t.flipY) {
this._flipY = t.flipY;
e = !0;
}
if (void 0 !== t.premultiplyAlpha) {
this._premultiplyAlpha = t.premultiplyAlpha;
e = !0;
}
void 0 !== t.genMipmaps && (this._genMipmaps = t.genMipmaps);
e && this._image && (t.image = this._image);
if (t.images && t.images.length > 0) this._image = t.images[0]; else if (void 0 !== t.image) {
this._image = t.image;
if (!t.images) {
_.length = 0;
t.images = _;
}
t.images.push(t.image);
}
t.images && t.images.length > 0 && this._texture.update(t);
this._hashDirty = !0;
}
},
initWithElement: function(t) {
if (t) {
this._image = t;
if (t.complete || t instanceof HTMLCanvasElement) this.handleLoadedTexture(); else {
var e = this;
t.addEventListener("load", (function() {
e.handleLoadedTexture();
}));
t.addEventListener("error", (function(t) {
cc.warnID(3119, t.message);
}));
}
}
},
initWithData: function(t, e, i, n) {
var r = d();
r.image = t;
r.images = [ r.image ];
r.genMipmaps = this._genMipmaps;
r.premultiplyAlpha = this._premultiplyAlpha;
r.flipY = this._flipY;
r.minFilter = h[this._minFilter];
r.magFilter = h[this._magFilter];
r.wrapS = this._wrapS;
r.wrapT = this._wrapT;
r.format = this._getGFXPixelFormat(e);
r.width = i;
r.height = n;
this._texture ? this._texture.update(r) : this._texture = new s.Texture2D(s.device, r);
this.width = i;
this.height = n;
this._checkPackable();
this.loaded = !0;
this.emit("load");
return !0;
},
getHtmlElementObj: function() {
return this._image;
},
destroy: function() {
this._image = null;
this._texture && this._texture.destroy();
this._super();
},
getPixelFormat: function() {
return this._format;
},
hasPremultipliedAlpha: function() {
return this._premultiplyAlpha || !1;
},
handleLoadedTexture: function() {
if (this._image && this._image.width && this._image.height) {
this.width = this._image.width;
this.height = this._image.height;
var t = d();
t.image = this._image;
t.images = [ t.image ];
t.width = this.width;
t.height = this.height;
t.genMipmaps = this._genMipmaps;
t.format = this._getGFXPixelFormat(this._format);
t.premultiplyAlpha = this._premultiplyAlpha;
t.flipY = this._flipY;
t.minFilter = h[this._minFilter];
t.magFilter = h[this._magFilter];
t.wrapS = this._wrapS;
t.wrapT = this._wrapT;
this._texture ? this._texture.update(t) : this._texture = new s.Texture2D(s.device, t);
this._checkPackable();
this.loaded = !0;
this.emit("load");
cc.macro.CLEANUP_IMAGE_CACHE && this._image instanceof HTMLImageElement && this._clearImage();
}
},
description: function() {
return "<cc.Texture2D | Name = " + this.url + " | Dimensions = " + this.width + " x " + this.height + ">";
},
releaseTexture: function() {
this._image = null;
this._texture && this._texture.destroy();
},
setWrapMode: function(t, e) {
if (this._wrapS !== t || this._wrapT !== e) {
var i = d();
i.wrapS = t;
i.wrapT = e;
this.update(i);
}
},
setFilters: function(t, e) {
if (this._minFilter !== t || this._magFilter !== e) {
var i = d();
i.minFilter = t;
i.magFilter = e;
this.update(i);
}
},
setFlipY: function(t) {
if (this._flipY !== t) {
var e = d();
e.flipY = t;
this.update(e);
}
},
setPremultiplyAlpha: function(t) {
if (this._premultiplyAlpha !== t) {
var e = d();
e.premultiplyAlpha = t;
this.update(e);
}
},
_checkPackable: function() {
var t = cc.dynamicAtlasManager;
if (t) if (this._isCompressed()) this._packable = !1; else {
var e = this.width, i = this.height;
!this._image || e > t.maxFrameSize || i > t.maxFrameSize || e <= t.minFrameSize || i <= t.minFrameSize || this._getHash() !== t.Atlas.DEFAULT_HASH ? this._packable = !1 : this._image && this._image instanceof HTMLCanvasElement && (this._packable = !0);
}
},
_getOpts: function() {
var t = d();
t.width = this.width;
t.height = this.height;
t.genMipmaps = this._genMipmaps;
t.format = this._format;
t.premultiplyAlpha = this._premultiplyAlpha;
t.anisotropy = this._anisotropy;
t.flipY = this._flipY;
t.minFilter = h[this._minFilter];
t.magFilter = h[this._magFilter];
t.mipFilter = h[this._mipFilter];
t.wrapS = this._wrapS;
t.wrapT = this._wrapT;
return t;
},
_getGFXPixelFormat: function(t) {
t === c.RGBA_ETC1 ? t = c.RGB_ETC1 : t === c.RGB_A_PVRTC_4BPPV1 ? t = c.RGB_PVRTC_4BPPV1 : t === c.RGB_A_PVRTC_2BPPV1 && (t = c.RGB_PVRTC_2BPPV1);
return t;
},
_resetUnderlyingMipmaps: function(t) {
var e = this._getOpts();
e.images = t || [ null ];
this._texture ? this._texture.update(e) : this._texture = new s.Texture2D(s.device, e);
},
_serialize: !1,
_deserialize: function(t, e) {
var i = cc.renderer.device, n = t.split(","), r = n[0];
if (r) {
for (var s = r.split("_"), o = "", a = "", l = 999, u = this._format, h = cc.macro.SUPPORT_TEXTURE_FORMATS, _ = 0; _ < s.length; _++) {
var f = s[_].split("@"), d = f[0];
d = p.extnames[d.charCodeAt(0) - 48] || d;
var m = h.indexOf(d);
if (-1 !== m && m < l) {
var y = f[1] ? parseInt(f[1]) : this._format;
if (".pvr" === d && !i.ext("WEBGL_compressed_texture_pvrtc")) continue;
if (!(y !== c.RGB_ETC1 && y !== c.RGBA_ETC1 || i.ext("WEBGL_compressed_texture_etc1"))) continue;
if (!(y !== c.RGB_ETC2 && y !== c.RGBA_ETC2 || i.ext("WEBGL_compressed_texture_etc"))) continue;
if (".webp" === d && !cc.sys.capabilities.webp) continue;
l = m;
a = d;
u = y;
} else o || (o = d);
}
if (a) {
this._setRawAsset(a);
this._format = u;
} else {
this._setRawAsset(o);
cc.warnID(3120, e.customEnv.url, o, o);
}
}
if (8 === n.length) {
this._minFilter = parseInt(n[1]);
this._magFilter = parseInt(n[2]);
this._wrapS = parseInt(n[3]);
this._wrapT = parseInt(n[4]);
this._premultiplyAlpha = 49 === n[5].charCodeAt(0);
this._genMipmaps = 49 === n[6].charCodeAt(0);
this._packable = 49 === n[7].charCodeAt(0);
}
},
_getHash: function() {
if (!this._hashDirty) return this._hash;
var t = this._genMipmaps ? 1 : 0, e = this._premultiplyAlpha ? 1 : 0, i = this._flipY ? 1 : 0, n = this._minFilter === u.LINEAR ? 1 : 2, r = this._magFilter === u.LINEAR ? 1 : 2, s = this._wrapS === l.REPEAT ? 1 : this._wrapS === l.CLAMP_TO_EDGE ? 2 : 3, o = this._wrapT === l.REPEAT ? 1 : this._wrapT === l.CLAMP_TO_EDGE ? 2 : 3, a = this._format, c = this._image;
if (c) {
6408 !== c._glFormat && (a = 0);
e = c._premultiplyAlpha;
}
this._hash = Number("" + n + r + a + s + o + t + e + i);
this._hashDirty = !1;
return this._hash;
},
_isCompressed: function() {
return this._texture && this._texture._compressed;
},
_clearImage: function() {
cc.loader.removeItem(this._image.id || this._image.src);
this._image.src = "";
}
});
cc.Texture2D = e.exports = p;
}), {
"../../renderer/gfx": 246,
"../assets/CCAsset": 19,
"../event/event-target": 72,
"../platform/CCClass": 126,
"../platform/id-generater": 142,
"../renderer": 170
} ],
37: [ (function(t, e, i) {
"use strict";
t("./CCRawAsset");
t("./CCAsset");
t("./CCFont");
t("./CCPrefab");
t("./CCAudioClip");
t("./CCScripts");
t("./CCSceneAsset");
t("./CCSpriteFrame");
t("./CCTexture2D");
t("./CCRenderTexture");
t("./CCTTFFont");
t("./CCSpriteAtlas");
t("./CCBitmapFont");
t("./CCLabelAtlas");
t("./CCTextAsset");
t("./CCJsonAsset");
t("./CCBufferAsset");
t("./CCEffectAsset");
t("./material/CCMaterial");
}), {
"./CCAsset": 19,
"./CCAudioClip": 20,
"./CCBitmapFont": 21,
"./CCBufferAsset": 22,
"./CCEffectAsset": 23,
"./CCFont": 24,
"./CCJsonAsset": 25,
"./CCLabelAtlas": 26,
"./CCPrefab": 27,
"./CCRawAsset": 28,
"./CCRenderTexture": 29,
"./CCSceneAsset": 30,
"./CCScripts": 31,
"./CCSpriteAtlas": 32,
"./CCSpriteFrame": 33,
"./CCTTFFont": 34,
"./CCTextAsset": 35,
"./CCTexture2D": 36,
"./material/CCMaterial": 38
} ],
38: [ (function(t, e, i) {
"use strict";
var n = s(t("../../../renderer/murmurhash2_gc")), r = s(t("./utils"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = t("../CCAsset"), a = t("../CCTexture2D"), c = a.PixelFormat, l = t("../CCEffectAsset"), u = t("../../utils/texture-util"), h = cc.Class({
name: "cc.Material",
extends: o,
ctor: function() {
this._manualHash = !1;
this._dirty = !0;
this._effect = null;
this._owner = null;
this._hash = 0;
},
properties: {
_effectAsset: {
type: l,
default: null
},
_defines: {
default: {},
type: Object
},
_props: {
default: {},
type: Object
},
effectName: void 0,
effectAsset: {
get: function() {
return this._effectAsset;
},
set: function(t) {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
this._effectAsset = t;
t ? this._effect = this._effectAsset.getInstantiatedEffect() : cc.error("Can not set an empty effect asset.");
}
}
},
effect: {
get: function() {
return this._effect;
}
},
owner: {
get: function() {
return this._owner;
}
}
},
statics: {
getBuiltinMaterial: function(t) {
return cc.AssetLibrary.getBuiltin("material", "builtin-" + t);
},
getInstantiatedBuiltinMaterial: function(t, e) {
var i = this.getBuiltinMaterial(t);
return h.getInstantiatedMaterial(i, e);
},
getInstantiatedMaterial: function(t, e) {
if (t._owner === e) return t;
var i = new h();
i.copy(t);
i._name = t._name + " (Instance)";
i._uuid = t._uuid;
i._owner = e;
return i;
}
},
copy: function(t) {
this.effectAsset = t.effectAsset;
for (var e in t._defines) this.define(e, t._defines[e]);
for (var i in t._props) this.setProperty(i, t._props[i]);
},
setProperty: function(t, e, i) {
if (this._props[t] !== e || i) {
this._props[t] = e;
this._dirty = !0;
if (this._effect) if (e instanceof a) {
var n = function() {
this._effect.setProperty(t, e);
var i = e.getPixelFormat();
i !== c.RGBA_ETC1 && i !== c.RGB_A_PVRTC_4BPPV1 && i !== c.RGB_A_PVRTC_2BPPV1 || this.define("CC_USE_ALPHA_ATLAS_" + t.toUpperCase(), !0);
};
if (e.loaded) n.call(this); else {
e.once("load", n, this);
u.postLoadTexture(e);
}
} else this._effect.setProperty(t, e);
}
},
getProperty: function(t) {
return this._props[t];
},
define: function(t, e, i) {
if (this._defines[t] !== e || i) {
this._defines[t] = e;
this._dirty = !0;
this._effect && this._effect.define(t, e);
}
},
getDefine: function(t) {
return this._defines[t];
},
setDirty: function(t) {
this._dirty = t;
},
updateHash: function(t) {
void 0 === t || null === t ? t = this.computeHash() : this._manualHash = !0;
this._dirty = !1;
this._hash = t;
this._effect && this._effect.updateHash(this._hash);
},
computeHash: function() {
var t = this._effect, e = "";
if (t) {
e += r.default.serializeDefines(t._defines);
e += r.default.serializeTechniques(t._techniques);
e += r.default.serializeUniforms(t._properties);
}
return (0, n.default)(e, 666);
},
getHash: function() {
if (!this._dirty) return this._hash;
this._manualHash || this.updateHash();
this._dirty = !1;
return this._hash;
},
onLoad: function() {
this.effectAsset = this._effectAsset;
if (this._effect) {
for (var t in this._defines) this.define(t, this._defines[t], !0);
for (var e in this._props) this.setProperty(e, this._props[e], !0);
}
}
});
e.exports = cc.Material = h;
}), {
"../../../renderer/murmurhash2_gc": 247,
"../../utils/texture-util": 207,
"../CCAsset": 19,
"../CCEffectAsset": 23,
"../CCTexture2D": 36,
"./utils": 39
} ],
39: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/enums"));
function r(t) {
var e = t._programName + t._cullMode;
t._blend && (e += t._blendEq + t._blendAlphaEq + t._blendSrc + t._blendDst + t._blendSrcAlpha + t._blendDstAlpha + t._blendColor);
t._depthTest && (e += t._depthWrite + t._depthFunc);
t._stencilTest && (e += t._stencilFuncFront + t._stencilRefFront + t._stencilMaskFront + t._stencilFailOpFront + t._stencilZFailOpFront + t._stencilZPassOpFront + t._stencilWriteMaskFront + t._stencilFuncBack + t._stencilRefBack + t._stencilMaskBack + t._stencilFailOpBack + t._stencilZFailOpBack + t._stencilZPassOpBack + t._stencilWriteMaskBack);
return e;
}
i.default = {
serializeDefines: function(t) {
var e = "";
for (var i in t) e += i + t[i];
return e;
},
serializeTechniques: function(t) {
for (var e = "", i = 0; i < t.length; i++) {
var n = t[i];
e += n.stageIDs;
for (var s = 0; s < n.passes.length; s++) e += r(n.passes[s]);
}
return e;
},
serializeUniforms: function(t) {
var e = "";
for (var i in t) {
var r = t[i], s = r.value;
if (s) switch (r.type) {
case n.default.PARAM_INT:
case n.default.PARAM_FLOAT:
e += s + ";";
break;

case n.default.PARAM_INT2:
case n.default.PARAM_FLOAT2:
e += s.x + "," + s.y + ";";
break;

case n.default.PARAM_INT4:
case n.default.PARAM_FLOAT4:
e += s.x + "," + s.y + "," + s.z + "," + s.w + ";";
break;

case n.default.PARAM_COLOR4:
e += s.r + "," + s.g + "," + s.b + "," + s.a + ";";
break;

case n.default.PARAM_MAT2:
e += s.m[0] + "," + s.m[1] + "," + s.m[2] + "," + s.m[3] + ";";
break;

case n.default.PARAM_TEXTURE_2D:
case n.default.PARAM_TEXTURE_CUBE:
e += s._id + ";";
break;

case n.default.PARAM_INT3:
case n.default.PARAM_FLOAT3:
case n.default.PARAM_COLOR3:
case n.default.PARAM_MAT3:
case n.default.PARAM_MAT4:
e += JSON.stringify(s) + ";";
}
}
return e;
}
};
e.exports = i.default;
}), {
"../../../renderer/enums": 245
} ],
40: [ (function(t, e, i) {
"use strict";
t("../CCNode").EventType;
var n = 56, r = 7, s = cc.Enum({
ONCE: 0,
ON_WINDOW_RESIZE: 1,
ALWAYS: 2
});
function o(t) {
return t instanceof cc.Scene ? cc.visibleRect : t._contentSize;
}
function a(t, e, i, n) {
for (var r = t._parent.scaleX, s = t._parent.scaleY, o = 0, a = 0, c = t._parent; ;) {
o += c.x;
a += c.y;
if (!(c = c._parent)) {
i.x = i.y = 0;
n.x = n.y = 1;
return;
}
if (c === e) break;
var l = c.scaleX, u = c.scaleY;
o *= l;
a *= u;
r *= l;
s *= u;
}
n.x = 0 !== r ? 1 / r : 1;
n.y = 0 !== s ? 1 / s : 1;
i.x = -o;
i.y = -a;
}
var c = cc.Vec2.ZERO, l = cc.Vec2.ONE;
function u(t, e) {
var i, s, u, h = e._target;
h ? a(t, i = h, s = c, u = l) : i = t._parent;
var _ = o(i), f = i._anchorPoint, d = i instanceof cc.Scene, p = t.x, m = t.y, y = t._anchorPoint;
if (e._alignFlags & n) {
var v, g, C = _.width;
if (d) {
v = cc.visibleRect.left.x;
g = cc.visibleRect.right.x;
} else g = (v = -f.x * C) + C;
v += e._isAbsLeft ? e._left : e._left * C;
g -= e._isAbsRight ? e._right : e._right * C;
if (h) {
v += s.x;
v *= u.x;
g += s.x;
g *= u.x;
}
var x, A = y.x, b = t.scaleX;
if (b < 0) {
A = 1 - A;
b = -b;
}
if (e.isStretchWidth) {
x = g - v;
0 !== b && (t.width = x / b);
p = v + A * x;
} else {
x = t.width * b;
if (e.isAlignHorizontalCenter) {
var S = e._isAbsHorizontalCenter ? e._horizontalCenter : e._horizontalCenter * C, w = (.5 - f.x) * _.width;
if (h) {
S *= u.x;
w += s.x;
w *= u.x;
}
p = w + (A - .5) * x + S;
} else p = e.isAlignLeft ? v + A * x : g + (A - 1) * x;
}
}
if (e._alignFlags & r) {
var T, B, E = _.height;
if (d) {
B = cc.visibleRect.bottom.y;
T = cc.visibleRect.top.y;
} else T = (B = -f.y * E) + E;
B += e._isAbsBottom ? e._bottom : e._bottom * E;
T -= e._isAbsTop ? e._top : e._top * E;
if (h) {
B += s.y;
B *= u.y;
T += s.y;
T *= u.y;
}
var M, I = y.y, R = t.scaleY;
if (R < 0) {
I = 1 - I;
R = -R;
}
if (e.isStretchHeight) {
M = T - B;
0 !== R && (t.height = M / R);
m = B + I * M;
} else {
M = t.height * R;
if (e.isAlignVerticalCenter) {
var D = e._isAbsVerticalCenter ? e._verticalCenter : e._verticalCenter * E, P = (.5 - f.y) * _.height;
if (h) {
D *= u.y;
P += s.y;
P *= u.y;
}
m = P + (I - .5) * M + D;
} else m = e.isAlignBottom ? B + I * M : T + (I - 1) * M;
}
}
t.setPosition(p, m);
}
function h(t) {
var e = t._widget;
if (e) {
0;
u(t, e);
e.alignMode !== s.ALWAYS ? e.enabled = !1 : f.push(e);
}
for (var i = t._children, n = 0; n < i.length; n++) {
var r = i[n];
r._active && h(r);
}
}
function _() {
var t = cc.director.getScene();
if (t) {
d.isAligning = !0;
if (d._nodesOrderDirty) {
f.length = 0;
h(t);
d._nodesOrderDirty = !1;
} else {
var e, i = d._activeWidgetsIterator;
for (i.i = 0; i.i < f.length; ++i.i) u((e = f[i.i]).node, e);
}
d.isAligning = !1;
}
0;
}
var f = [];
var d = cc._widgetManager = e.exports = {
_AlignFlags: {
TOP: 1,
MID: 2,
BOT: 4,
LEFT: 8,
CENTER: 16,
RIGHT: 32
},
isAligning: !1,
_nodesOrderDirty: !1,
_activeWidgetsIterator: new cc.js.array.MutableForwardIterator(f),
init: function(t) {
t.on(cc.Director.EVENT_AFTER_UPDATE, _);
cc.sys.isMobile ? window.addEventListener("resize", this.onResized.bind(this)) : cc.view.on("canvas-resize", this.onResized, this);
},
add: function(t) {
t.node._widget = t;
this._nodesOrderDirty = !0;
0;
},
remove: function(t) {
t.node._widget = null;
this._activeWidgetsIterator.remove(t);
0;
},
onResized: function() {
var t = cc.director.getScene();
t && this.refreshWidgetOnResized(t);
},
refreshWidgetOnResized: function(t) {
var e = cc.Node.isNode(t) && t.getComponent(cc.Widget);
e && e.alignMode === s.ON_WINDOW_RESIZE && (e.enabled = !0);
for (var i = t._children, n = 0; n < i.length; n++) {
var r = i[n];
this.refreshWidgetOnResized(r);
}
},
updateAlignment: function t(e) {
var i = e._parent;
cc.Node.isNode(i) && t(i);
var n = e._widget || e.getComponent(cc.Widget);
n && i && u(e, n);
},
AlignMode: s
};
0;
}), {
"../CCNode": 15
} ],
41: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../geom-utils"));
var r = t("../utils/affine-transform"), s = t("../renderer/index"), o = t("../renderer/render-flow"), a = t("../CCGame"), c = null;
c = window.renderer.Camera;
var l = cc.vmath.mat4, u = cc.vmath.vec2, h = cc.vmath.vec3, _ = l.create(), f = l.create(), d = cc.v3(), p = cc.v3(), m = cc.v3(), y = [], v = null;
function g() {
if (v) {
var t = v.getNode(), e = cc.game.canvas;
t.z = e.height / 1.1566;
t.x = e.width / 2;
t.y = e.height / 2;
}
}
var C = cc.Enum({
COLOR: 1,
DEPTH: 2,
STENCIL: 4
}), x = cc.Enum({
OPAQUE: 1,
TRANSPARENT: 2
}), A = cc.Class({
name: "cc.Camera",
extends: cc.Component,
ctor: function() {
if (a.renderType !== a.RENDER_TYPE_CANVAS) {
var t = new c();
t.setStages([ "opaque" ]);
t.dirty = !0;
this._inited = !1;
this._camera = t;
} else this._inited = !0;
},
editor: !1,
properties: {
_cullingMask: 4294967295,
_clearFlags: C.DEPTH | C.STENCIL,
_backgroundColor: cc.color(0, 0, 0, 255),
_depth: 0,
_zoomRatio: 1,
_targetTexture: null,
_fov: 60,
_orthoSize: 10,
_nearClip: 1,
_farClip: 4096,
_ortho: !0,
_rect: cc.rect(0, 0, 1, 1),
_renderStages: 1,
zoomRatio: {
get: function() {
return this._zoomRatio;
},
set: function(t) {
this._zoomRatio = t;
},
tooltip: !1
},
fov: {
get: function() {
return this._fov;
},
set: function(t) {
this._fov = t;
},
tooltip: !1
},
orthoSize: {
get: function() {
return this._orthoSize;
},
set: function(t) {
this._orthoSize = t;
},
tooltip: !1
},
nearClip: {
get: function() {
return this._nearClip;
},
set: function(t) {
this._nearClip = t;
this._updateClippingpPlanes();
},
tooltip: !1
},
farClip: {
get: function() {
return this._farClip;
},
set: function(t) {
this._farClip = t;
this._updateClippingpPlanes();
},
tooltip: !1
},
ortho: {
get: function() {
return this._ortho;
},
set: function(t) {
this._ortho = t;
this._updateProjection();
},
tooltip: !1
},
rect: {
get: function() {
return this._rect;
},
set: function(t) {
this._rect = t;
this._updateRect();
},
tooltip: !1
},
cullingMask: {
get: function() {
return this._cullingMask;
},
set: function(t) {
this._cullingMask = t;
this._updateCameraMask();
},
tooltip: !1
},
clearFlags: {
get: function() {
return this._clearFlags;
},
set: function(t) {
this._clearFlags = t;
this._camera && this._camera.setClearFlags(t);
},
tooltip: !1
},
backgroundColor: {
get: function() {
return this._backgroundColor;
},
set: function(t) {
this._backgroundColor = t;
this._updateBackgroundColor();
},
tooltip: !1
},
depth: {
get: function() {
return this._depth;
},
set: function(t) {
this._depth = t;
this._camera && this._camera.setPriority(t);
},
tooltip: !1
},
targetTexture: {
get: function() {
return this._targetTexture;
},
set: function(t) {
this._targetTexture = t;
this._updateTargetTexture();
},
tooltip: !1
},
renderStages: {
get: function() {
return this._renderStages;
},
set: function(t) {
this._renderStages = t;
this._updateStages();
},
tooltip: !1
},
_is3D: {
get: function() {
return this.node && this.node._is3DNode;
}
}
},
statics: {
main: null,
cameras: y,
ClearFlags: C,
findCamera: function(t) {
for (var e = 0, i = y.length; e < i; e++) {
var n = y[e];
if (n.containsNode(t)) return n;
}
return null;
},
_findRendererCamera: function(t) {
for (var e = s.scene._cameras, i = 0; i < e._count; i++) if (e._data[i]._cullingMask & t._cullingMask) return e._data[i];
return null;
},
_setupDebugCamera: function() {
if (!v && a.renderType !== a.RENDER_TYPE_CANVAS) {
var t = new c();
v = t;
t.setStages([ "opaque" ]);
t.setFov(60 * Math.PI / 180);
t.setNear(.1);
t.setFar(4096);
t.dirty = !0;
t.cullingMask = 1 << cc.Node.BuiltinGroupIndex.DEBUG;
t.setPriority(cc.macro.MAX_ZINDEX);
t.setClearFlags(0);
t.setColor(0, 0, 0, 0);
var e = new cc.Node();
t.setNode(e);
g();
cc.view.on("design-resolution-changed", g);
s.scene.addCamera(t);
}
}
},
_updateCameraMask: function() {
if (this._camera) {
var t = this._cullingMask & ~(1 << cc.Node.BuiltinGroupIndex.DEBUG);
this._camera.cullingMask = t;
}
},
_updateBackgroundColor: function() {
if (this._camera) {
var t = this._backgroundColor;
this._camera.setColor(t.r / 255, t.g / 255, t.b / 255, t.a / 255);
}
},
_updateTargetTexture: function() {
if (this._camera) {
var t = this._targetTexture;
this._camera.setFrameBuffer(t ? t._framebuffer : null);
}
},
_updateClippingpPlanes: function() {
if (this._camera) {
this._camera.setNear(this._nearClip);
this._camera.setFar(this._farClip);
}
},
_updateProjection: function() {
if (this._camera) {
var t = this._ortho ? 1 : 0;
this._camera.setType(t);
}
},
_updateRect: function() {
if (this._camera) {
var t = this._rect;
this._camera.setRect(t.x, t.y, t.width, t.height);
}
},
_updateStages: function() {
var t = this._renderStages, e = [];
t & x.OPAQUE && e.push("opaque");
t & x.TRANSPARENT && e.push("transparent");
this._camera.setStages(e);
},
_init: function() {
if (!this._inited) {
this._inited = !0;
var t = this._camera;
if (t) {
t.setNode(this.node);
t.setClearFlags(this._clearFlags);
t.setPriority(this._depth);
this._updateBackgroundColor();
this._updateCameraMask();
this._updateTargetTexture();
this._updateClippingpPlanes();
this._updateProjection();
this._updateStages();
this._updateRect();
this.beforeDraw();
}
}
},
onLoad: function() {
this._init();
},
onEnable: function() {
if (a.renderType !== a.RENDER_TYPE_CANVAS) {
cc.director.on(cc.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this);
s.scene.addCamera(this._camera);
}
y.push(this);
},
onDisable: function() {
if (a.renderType !== a.RENDER_TYPE_CANVAS) {
cc.director.off(cc.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this);
s.scene.removeCamera(this._camera);
}
cc.js.array.remove(y, this);
},
getScreenToWorldMatrix2D: function(t) {
this.getWorldToScreenMatrix2D(t);
l.invert(t, t);
return t;
},
getWorldToScreenMatrix2D: function(t) {
this.node.getWorldRT(_);
var e = this.zoomRatio, i = _.m;
i[0] *= e;
i[1] *= e;
i[4] *= e;
i[5] *= e;
var n = i[12], r = i[13], s = cc.visibleRect.center;
i[12] = s.x - (i[0] * n + i[4] * r);
i[13] = s.y - (i[1] * n + i[5] * r);
t !== _ && l.copy(t, _);
return t;
},
getScreenToWorldPoint: function(t, e) {
if (this.node.is3DNode) {
e = e || new cc.Vec3();
this._camera.screenToWorld(e, t, cc.visibleRect.width, cc.visibleRect.height);
} else {
e = e || new cc.Vec2();
this.getScreenToWorldMatrix2D(_);
u.transformMat4(e, t, _);
}
return e;
},
getWorldToScreenPoint: function(t, e) {
if (this.node.is3DNode) {
e = e || new cc.Vec3();
this._camera.worldToScreen(e, t, cc.visibleRect.width, cc.visibleRect.height);
} else {
e = e || new cc.Vec2();
this.getWorldToScreenMatrix2D(_);
u.transformMat4(e, t, _);
}
return e;
},
getRay: function(t) {
if (!n.default) return t;
h.set(m, t.x, t.y, 1);
this._camera.screenToWorld(p, m, cc.visibleRect.width, cc.visibleRect.height);
if (this.ortho) {
h.set(m, t.x, t.y, -1);
this._camera.screenToWorld(d, m, cc.visibleRect.width, cc.visibleRect.height);
} else this.node.getWorldPosition(d);
return n.default.Ray.fromPoints(n.default.Ray.create(), d, p);
},
containsNode: function(t) {
return t._cullingMask & this.cullingMask;
},
render: function(t) {
if (!(t = t || cc.director.getScene())) return null;
this.node.getWorldMatrix(_);
this.beforeDraw();
o.render(t);
0;
},
_layout2D: function() {
var t = cc.game.canvas.height / cc.view._scaleY;
this._targetTexture && (t = cc.visibleRect.height);
var e = this._fov * cc.macro.RAD;
this.node.z = t / (2 * Math.tan(e / 2));
e = 2 * Math.atan(Math.tan(e / 2) / this.zoomRatio);
this._camera.setFov(e);
this._camera.setOrthoHeight(t / 2 / this.zoomRatio);
},
beforeDraw: function() {
if (this._camera) {
if (this.node._is3DNode) {
this._camera.setFov(this._fov * cc.macro.RAD);
this._camera.setOrthoHeight(this._orthoSize);
} else this._layout2D();
this._camera.dirty = !0;
}
}
});
cc.js.mixin(A.prototype, {
getNodeToCameraTransform: function(t) {
var e = r.identity();
t.getWorldMatrix(f);
if (this.containsNode(t)) {
this.getWorldToCameraMatrix(_);
l.mul(f, f, _);
}
r.fromMat4(e, f);
return e;
},
getCameraToWorldPoint: function(t, e) {
return this.getScreenToWorldPoint(t, e);
},
getWorldToCameraPoint: function(t, e) {
return this.getWorldToScreenPoint(t, e);
},
getCameraToWorldMatrix: function(t) {
return this.getScreenToWorldMatrix2D(t);
},
getWorldToCameraMatrix: function(t) {
return this.getWorldToScreenMatrix2D(t);
}
});
e.exports = cc.Camera = A;
}), {
"../../renderer/scene/camera": void 0,
"../CCGame": 14,
"../geom-utils": void 0,
"../renderer/index": 170,
"../renderer/render-flow": 171,
"../utils/affine-transform": 193
} ],
42: [ (function(t, e, i) {
"use strict";
cc.Collider.Box = cc.Class({
properties: {
_offset: cc.v2(0, 0),
_size: cc.size(100, 100),
offset: {
tooltip: !1,
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
size: {
tooltip: !1,
get: function() {
return this._size;
},
set: function(t) {
this._size.width = t.width < 0 ? 0 : t.width;
this._size.height = t.height < 0 ? 0 : t.height;
},
type: cc.Size
}
},
resetInEditor: !1
});
var n = cc.Class({
name: "cc.BoxCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Box ],
editor: !1
});
cc.BoxCollider = e.exports = n;
}), {} ],
43: [ (function(t, e, i) {
"use strict";
cc.Collider.Circle = cc.Class({
properties: {
_offset: cc.v2(0, 0),
_radius: 50,
offset: {
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
radius: {
tooltip: !1,
get: function() {
return this._radius;
},
set: function(t) {
this._radius = t < 0 ? 0 : t;
}
}
},
resetInEditor: !1
});
var n = cc.Class({
name: "cc.CircleCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Circle ],
editor: !1
});
cc.CircleCollider = e.exports = n;
}), {} ],
44: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Collider",
extends: cc.Component,
properties: {
editing: {
default: !1,
serializable: !1,
tooltip: !1
},
tag: {
tooltip: !1,
default: 0,
range: [ 0, 1e7 ],
type: cc.Integer
}
},
onDisable: function() {
cc.director.getCollisionManager().removeCollider(this);
},
onEnable: function() {
cc.director.getCollisionManager().addCollider(this);
}
});
cc.Collider = e.exports = n;
}), {} ],
45: [ (function(t, e, i) {
"use strict";
var n = t("./CCContact"), r = n.CollisionType, s = t("../CCNode").EventType, o = cc.vmath, a = cc.v2();
function c(t, e, i, n, r, s) {
var o = t.x, a = t.y, c = t.width, l = t.height, u = e.m, h = u[0], _ = u[1], f = u[4], d = u[5], p = h * o + f * a + u[12], m = _ * o + d * a + u[13], y = h * c, v = _ * c, g = f * l, C = d * l;
n.x = p;
n.y = m;
r.x = y + p;
r.y = v + m;
i.x = g + p;
i.y = C + m;
s.x = y + g + p;
s.y = v + C + m;
}
var l = cc.Class({
mixins: [ cc.EventTarget ],
properties: {
enabled: !1,
enabledDrawBoundingBox: !1
},
ctor: function() {
this._contacts = [];
this._colliders = [];
this._debugDrawer = null;
this._enabledDebugDraw = !1;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
},
update: function(t) {
if (this.enabled) {
var e = void 0, i = void 0, n = this._colliders;
for (e = 0, i = n.length; e < i; e++) this.updateCollider(n[e]);
var s = this._contacts, o = [];
for (e = 0, i = s.length; e < i; e++) {
var a = s[e].updateState();
a !== r.None && o.push([ a, s[e] ]);
}
for (e = 0, i = o.length; e < i; e++) {
var c = o[e];
this._doCollide(c[0], c[1]);
}
this.drawColliders();
}
},
_doCollide: function(t, e) {
var i = void 0;
switch (t) {
case r.CollisionEnter:
i = "onCollisionEnter";
break;

case r.CollisionStay:
i = "onCollisionStay";
break;

case r.CollisionExit:
i = "onCollisionExit";
}
var n = e.collider1, s = e.collider2, o = n.node._components, a = s.node._components, c = void 0, l = void 0, u = void 0;
for (c = 0, l = o.length; c < l; c++) (u = o[c])[i] && u[i](s, n);
for (c = 0, l = a.length; c < l; c++) (u = a[c])[i] && u[i](n, s);
},
shouldCollide: function(t, e) {
var i = t.node, n = e.node, r = cc.game.collisionMatrix;
return i !== n && r[i.groupIndex][n.groupIndex];
},
initCollider: function(t) {
if (!t.world) {
var e = t.world = {};
e.aabb = cc.rect();
e.preAabb = cc.rect();
e.matrix = o.mat4.create();
e.radius = 0;
if (t instanceof cc.BoxCollider) {
e.position = null;
e.points = [ cc.v2(), cc.v2(), cc.v2(), cc.v2() ];
} else if (t instanceof cc.PolygonCollider) {
e.position = null;
e.points = t.points.map((function(t) {
return cc.v2(t.x, t.y);
}));
} else if (t instanceof cc.CircleCollider) {
e.position = cc.v2();
e.points = null;
}
}
},
updateCollider: function(t) {
var e = t.offset, i = t.world, n = i.aabb, r = i.matrix;
t.node.getWorldMatrix(r);
var s = i.preAabb;
s.x = n.x;
s.y = n.y;
s.width = n.width;
s.height = n.height;
if (t instanceof cc.BoxCollider) {
var l = t.size;
n.x = e.x - l.width / 2;
n.y = e.y - l.height / 2;
n.width = l.width;
n.height = l.height;
var u = i.points, h = u[0], _ = u[1], f = u[2], d = u[3];
c(n, r, h, _, f, d);
var p = Math.min(h.x, _.x, f.x, d.x), m = Math.min(h.y, _.y, f.y, d.y), y = Math.max(h.x, _.x, f.x, d.x), v = Math.max(h.y, _.y, f.y, d.y);
n.x = p;
n.y = m;
n.width = y - p;
n.height = v - m;
} else if (t instanceof cc.CircleCollider) {
o.vec2.transformMat4(a, t.offset, r);
i.position.x = a.x;
i.position.y = a.y;
var g = r.m, C = g[12], x = g[13];
g[12] = g[13] = 0;
a.x = t.radius;
a.y = 0;
o.vec2.transformMat4(a, a, r);
var A = Math.sqrt(a.x * a.x + a.y * a.y);
i.radius = A;
n.x = i.position.x - A;
n.y = i.position.y - A;
n.width = 2 * A;
n.height = 2 * A;
g[12] = C;
g[13] = x;
} else if (t instanceof cc.PolygonCollider) {
var b = t.points, S = i.points;
S.length = b.length;
for (var w = 1e6, T = 1e6, B = -1e6, E = -1e6, M = 0, I = b.length; M < I; M++) {
S[M] || (S[M] = cc.v2());
a.x = b[M].x + e.x;
a.y = b[M].y + e.y;
o.vec2.transformMat4(a, a, r);
var R = a.x, D = a.y;
S[M].x = R;
S[M].y = D;
R > B && (B = R);
R < w && (w = R);
D > E && (E = D);
D < T && (T = D);
}
n.x = w;
n.y = T;
n.width = B - w;
n.height = E - T;
}
},
addCollider: function(t) {
var e = this._colliders;
if (-1 === e.indexOf(t)) {
for (var i = 0, r = e.length; i < r; i++) {
var o = e[i];
if (this.shouldCollide(t, o)) {
var a = new n(t, o);
this._contacts.push(a);
}
}
e.push(t);
this.initCollider(t);
}
t.node.on(s.GROUP_CHANGED, this.onNodeGroupChanged, this);
},
removeCollider: function(t) {
var e = this._colliders, i = e.indexOf(t);
if (i >= 0) {
e.splice(i, 1);
for (var n = this._contacts, o = n.length - 1; o >= 0; o--) {
var a = n[o];
if (a.collider1 === t || a.collider2 === t) {
a.touching && this._doCollide(r.CollisionExit, a);
n.splice(o, 1);
}
}
t.node.off(s.GROUP_CHANGED, this.onNodeGroupChanged, this);
} else cc.errorID(6600);
},
onNodeGroupChanged: function(t) {
for (var e = t.getComponents(cc.Collider), i = 0, n = e.length; i < n; i++) {
var r = e[i];
if (!(cc.PhysicsCollider && r instanceof cc.PhysicsCollider)) {
this.removeCollider(r);
this.addCollider(r);
}
}
},
drawColliders: function() {
if (this._enabledDebugDraw) {
this._checkDebugDrawValid();
var t = this._debugDrawer;
t.clear();
for (var e = this._colliders, i = 0, n = e.length; i < n; i++) {
var r = e[i];
t.strokeColor = cc.Color.WHITE;
if (r instanceof cc.BoxCollider || r instanceof cc.PolygonCollider) {
var s = r.world.points;
if (s.length > 0) {
t.moveTo(s[0].x, s[0].y);
for (var o = 1; o < s.length; o++) t.lineTo(s[o].x, s[o].y);
t.close();
t.stroke();
}
} else if (r instanceof cc.CircleCollider) {
t.circle(r.world.position.x, r.world.position.y, r.world.radius);
t.stroke();
}
if (this.enabledDrawBoundingBox) {
var a = r.world.aabb;
t.strokeColor = cc.Color.BLUE;
t.moveTo(a.xMin, a.yMin);
t.lineTo(a.xMin, a.yMax);
t.lineTo(a.xMax, a.yMax);
t.lineTo(a.xMax, a.yMin);
t.close();
t.stroke();
}
}
}
},
_checkDebugDrawValid: function() {
if (!this._debugDrawer || !this._debugDrawer.isValid) {
var t = new cc.Node("COLLISION_MANAGER_DEBUG_DRAW");
t.zIndex = cc.macro.MAX_ZINDEX;
cc.game.addPersistRootNode(t);
this._debugDrawer = t.addComponent(cc.Graphics);
}
}
});
cc.js.getset(l.prototype, "enabledDebugDraw", (function() {
return this._enabledDebugDraw;
}), (function(t) {
if (t && !this._enabledDebugDraw) {
this._checkDebugDrawValid();
this._debugDrawer.node.active = !0;
} else if (!t && this._enabledDebugDraw) {
this._debugDrawer.clear(!0);
this._debugDrawer.node.active = !1;
}
this._enabledDebugDraw = t;
}));
cc.CollisionManager = e.exports = l;
}), {
"../CCNode": 15,
"./CCContact": 46
} ],
46: [ (function(t, e, i) {
"use strict";
var n = t("./CCIntersection"), r = cc.Enum({
None: 0,
CollisionEnter: 1,
CollisionStay: 2,
CollisionExit: 3
});
function s(t, e) {
this.collider1 = t;
this.collider2 = e;
this.touching = !1;
var i = t instanceof cc.BoxCollider || t instanceof cc.PolygonCollider, r = e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider, s = t instanceof cc.CircleCollider, o = e instanceof cc.CircleCollider;
if (i && r) this.testFunc = n.polygonPolygon; else if (s && o) this.testFunc = n.circleCircle; else if (i && o) this.testFunc = n.polygonCircle; else if (s && r) {
this.testFunc = n.polygonCircle;
this.collider1 = e;
this.collider2 = t;
} else cc.errorID(6601, cc.js.getClassName(t), cc.js.getClassName(e));
}
s.prototype.test = function() {
var t = this.collider1.world, e = this.collider2.world;
return !!t.aabb.intersects(e.aabb) && (this.testFunc === n.polygonPolygon ? this.testFunc(t.points, e.points) : this.testFunc === n.circleCircle ? this.testFunc(t, e) : this.testFunc === n.polygonCircle && this.testFunc(t.points, e));
};
s.prototype.updateState = function() {
var t = this.test(), e = r.None;
if (t && !this.touching) {
this.touching = !0;
e = r.CollisionEnter;
} else if (t && this.touching) e = r.CollisionStay; else if (!t && this.touching) {
this.touching = !1;
e = r.CollisionExit;
}
return e;
};
s.CollisionType = r;
e.exports = s;
}), {
"./CCIntersection": 47
} ],
47: [ (function(t, e, i) {
"use strict";
var n = {};
function r(t, e, i, n) {
var r = (n.x - i.x) * (t.y - i.y) - (n.y - i.y) * (t.x - i.x), s = (e.x - t.x) * (t.y - i.y) - (e.y - t.y) * (t.x - i.x), o = (n.y - i.y) * (e.x - t.x) - (n.x - i.x) * (e.y - t.y);
if (0 !== o) {
var a = r / o, c = s / o;
if (0 <= a && a <= 1 && 0 <= c && c <= 1) return !0;
}
return !1;
}
n.lineLine = r;
n.lineRect = function(t, e, i) {
var n = new cc.Vec2(i.x, i.y), s = new cc.Vec2(i.x, i.yMax), o = new cc.Vec2(i.xMax, i.yMax), a = new cc.Vec2(i.xMax, i.y);
return !!(r(t, e, n, s) || r(t, e, s, o) || r(t, e, o, a) || r(t, e, a, n));
};
function s(t, e, i) {
for (var n = i.length, s = 0; s < n; ++s) {
if (r(t, e, i[s], i[(s + 1) % n])) return !0;
}
return !1;
}
n.linePolygon = s;
n.rectRect = function(t, e) {
var i = t.x, n = t.y, r = t.x + t.width, s = t.y + t.height, o = e.x, a = e.y, c = e.x + e.width, l = e.y + e.height;
return i <= c && r >= o && n <= l && s >= a;
};
n.rectPolygon = function(t, e) {
var i, n, r = new cc.Vec2(t.x, t.y), a = new cc.Vec2(t.x, t.yMax), c = new cc.Vec2(t.xMax, t.yMax), l = new cc.Vec2(t.xMax, t.y);
if (s(r, a, e)) return !0;
if (s(a, c, e)) return !0;
if (s(c, l, e)) return !0;
if (s(l, r, e)) return !0;
for (i = 0, n = e.length; i < n; ++i) if (o(e[i], t)) return !0;
return !!(o(r, e) || o(a, e) || o(c, e) || o(l, e));
};
n.polygonPolygon = function(t, e) {
var i, n;
for (i = 0, n = t.length; i < n; ++i) if (s(t[i], t[(i + 1) % n], e)) return !0;
for (i = 0, n = e.length; i < n; ++i) if (o(e[i], t)) return !0;
for (i = 0, n = t.length; i < n; ++i) if (o(t[i], e)) return !0;
return !1;
};
n.circleCircle = function(t, e) {
return t.position.sub(e.position).mag() < t.radius + e.radius;
};
n.polygonCircle = function(t, e) {
var i = e.position;
if (o(i, t)) return !0;
for (var n = 0, r = t.length; n < r; n++) if (a(i, 0 === n ? t[t.length - 1] : t[n - 1], t[n], !0) < e.radius) return !0;
return !1;
};
function o(t, e) {
for (var i = !1, n = t.x, r = t.y, s = e.length, o = 0, a = s - 1; o < s; a = o++) {
var c = e[o].x, l = e[o].y, u = e[a].x, h = e[a].y;
l > r != h > r && n < (u - c) * (r - l) / (h - l) + c && (i = !i);
}
return i;
}
n.pointInPolygon = o;
function a(t, e, i, n) {
var r, s = i.x - e.x, o = i.y - e.y, a = s * s + o * o, c = ((t.x - e.x) * s + (t.y - e.y) * o) / a;
r = n ? a ? c < 0 ? e : c > 1 ? i : cc.v2(e.x + c * s, e.y + c * o) : e : cc.v2(e.x + c * s, e.y + c * o);
s = t.x - r.x;
o = t.y - r.y;
return Math.sqrt(s * s + o * o);
}
n.pointLineDistance = a;
cc.Intersection = e.exports = n;
}), {} ],
48: [ (function(t, e, i) {
"use strict";
cc.Collider.Polygon = cc.Class({
properties: {
threshold: {
default: 1,
serializable: !1,
visible: !1
},
_offset: cc.v2(0, 0),
offset: {
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
points: {
tooltip: !1,
default: function() {
return [ cc.v2(-50, -50), cc.v2(50, -50), cc.v2(50, 50), cc.v2(-50, 50) ];
},
type: [ cc.Vec2 ]
}
},
resetPointsByContour: !1
});
var n = cc.Class({
name: "cc.PolygonCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Polygon ],
editor: !1
});
cc.PolygonCollider = e.exports = n;
}), {} ],
49: [ (function(t, e, i) {
"use strict";
t("./CCCollisionManager");
t("./CCCollider");
t("./CCBoxCollider");
t("./CCCircleCollider");
t("./CCPolygonCollider");
}), {
"./CCBoxCollider": 42,
"./CCCircleCollider": 43,
"./CCCollider": 44,
"./CCCollisionManager": 45,
"./CCPolygonCollider": 48
} ],
50: [ (function(t, e, i) {
"use strict";
t("./platform/CCClass");
var n = t("./platform/CCObject").Flags, r = t("./platform/js").array, s = n.IsStartCalled, o = n.IsOnEnableCalled;
n.IsEditorOnEnableCalled;
function a(t, e) {
for (var i = e.constructor._executionOrder, n = e._id, r = 0, s = t.length - 1, o = s >>> 1; r <= s; o = r + s >>> 1) {
var a = t[o], c = a.constructor._executionOrder;
if (c > i) s = o - 1; else if (c < i) r = o + 1; else {
var l = a._id;
if (l > n) s = o - 1; else {
if (!(l < n)) return o;
r = o + 1;
}
}
}
return ~r;
}
function c(t, e) {
for (var i = t.array, n = t.i + 1; n < i.length; ) {
var r = i[n];
if (r._enabled && r.node._activeInHierarchy) ++n; else {
t.removeAt(n);
e && (r._objFlags &= ~e);
}
}
}
var l = cc.Class({
__ctor__: function(t) {
var e = r.MutableForwardIterator;
this._zero = new e([]);
this._neg = new e([]);
this._pos = new e([]);
0;
this._invoke = t;
},
statics: {
stableRemoveInactive: c
},
add: null,
remove: null,
invoke: null
});
function u(t, e) {
return t.constructor._executionOrder - e.constructor._executionOrder;
}
var h = cc.Class({
extends: l,
add: function(t) {
var e = t.constructor._executionOrder;
(0 === e ? this._zero : e < 0 ? this._neg : this._pos).array.push(t);
},
remove: function(t) {
var e = t.constructor._executionOrder;
(0 === e ? this._zero : e < 0 ? this._neg : this._pos).fastRemove(t);
},
cancelInactive: function(t) {
c(this._zero, t);
c(this._neg, t);
c(this._pos, t);
},
invoke: function() {
var t = this._neg;
if (t.array.length > 0) {
t.array.sort(u);
this._invoke(t);
t.array.length = 0;
}
this._invoke(this._zero);
this._zero.array.length = 0;
var e = this._pos;
if (e.array.length > 0) {
e.array.sort(u);
this._invoke(e);
e.array.length = 0;
}
}
}), _ = cc.Class({
extends: l,
add: function(t) {
var e = t.constructor._executionOrder;
if (0 === e) this._zero.array.push(t); else {
var i = e < 0 ? this._neg.array : this._pos.array, n = a(i, t);
n < 0 && i.splice(~n, 0, t);
}
},
remove: function(t) {
var e = t.constructor._executionOrder;
if (0 === e) this._zero.fastRemove(t); else {
var i = e < 0 ? this._neg : this._pos, n = a(i.array, t);
n >= 0 && i.removeAt(n);
}
},
invoke: function(t) {
this._neg.array.length > 0 && this._invoke(this._neg, t);
this._invoke(this._zero, t);
this._pos.array.length > 0 && this._invoke(this._pos, t);
}
});
function f(t, e, i, n) {
var r = "var a=it.array;for(it.i=0;it.i<a.length;++it.i){var c=a[it.i];" + t + "}";
n = e ? Function("it", "dt", r) : Function("it", r);
t = Function("c", "dt", t);
return function(e, r) {
try {
n(e, r);
} catch (n) {
cc._throw(n);
var s = e.array;
i && (s[e.i]._objFlags |= i);
++e.i;
for (;e.i < s.length; ++e.i) try {
t(s[e.i], r);
} catch (t) {
cc._throw(t);
i && (s[e.i]._objFlags |= i);
}
}
};
}
var d = f("c.start();c._objFlags|=" + s, !1, s), p = f("c.update(dt)", !0), m = f("c.lateUpdate(dt)", !0);
function y() {
this.startInvoker = new h(d);
this.updateInvoker = new _(p);
this.lateUpdateInvoker = new _(m);
this.scheduleInNextFrame = [];
this._updating = !1;
}
var v = cc.Class({
ctor: y,
unscheduleAll: y,
statics: {
LifeCycleInvoker: l,
OneOffInvoker: h,
createInvokeImpl: f,
invokeOnEnable: function(t) {
var e = cc.director._compScheduler, i = t.array;
for (t.i = 0; t.i < i.length; ++t.i) {
var n = i[t.i];
if (n._enabled) {
n.onEnable();
!n.node._activeInHierarchy || e._onEnabled(n);
}
}
}
},
_onEnabled: function(t) {
cc.director.getScheduler().resumeTarget(t);
t._objFlags |= o;
this._updating ? this.scheduleInNextFrame.push(t) : this._scheduleImmediate(t);
},
_onDisabled: function(t) {
cc.director.getScheduler().pauseTarget(t);
t._objFlags &= ~o;
var e = this.scheduleInNextFrame.indexOf(t);
if (e >= 0) r.fastRemoveAt(this.scheduleInNextFrame, e); else {
!t.start || t._objFlags & s || this.startInvoker.remove(t);
t.update && this.updateInvoker.remove(t);
t.lateUpdate && this.lateUpdateInvoker.remove(t);
}
},
enableComp: function(t, e) {
if (!(t._objFlags & o)) {
if (t.onEnable) {
if (e) {
e.add(t);
return;
}
t.onEnable();
if (!t.node._activeInHierarchy) return;
}
this._onEnabled(t);
}
},
disableComp: function(t) {
if (t._objFlags & o) {
t.onDisable && t.onDisable();
this._onDisabled(t);
}
},
_scheduleImmediate: function(t) {
!t.start || t._objFlags & s || this.startInvoker.add(t);
t.update && this.updateInvoker.add(t);
t.lateUpdate && this.lateUpdateInvoker.add(t);
},
_deferredSchedule: function() {
for (var t = this.scheduleInNextFrame, e = 0, i = t.length; e < i; e++) {
var n = t[e];
this._scheduleImmediate(n);
}
t.length = 0;
},
startPhase: function() {
this._updating = !0;
this.scheduleInNextFrame.length > 0 && this._deferredSchedule();
this.startInvoker.invoke();
},
updatePhase: function(t) {
this.updateInvoker.invoke(t);
},
lateUpdatePhase: function(t) {
this.lateUpdateInvoker.invoke(t);
this._updating = !1;
}
});
e.exports = v;
}), {
"./platform/CCClass": 126,
"./platform/CCObject": 132,
"./platform/js": 146,
"./utils/misc": 200
} ],
51: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = t("./CCComponent"), s = t("../assets/CCAudioClip"), o = cc.Class({
name: "cc.AudioSource",
extends: r,
editor: !1,
ctor: function() {
this.audio = new cc.Audio();
},
properties: {
_clip: {
default: null,
type: s
},
_volume: 1,
_mute: !1,
_loop: !1,
_pausedFlag: {
default: !1,
serializable: !1
},
isPlaying: {
get: function() {
return this.audio.getState() === cc.Audio.State.PLAYING;
},
visible: !1
},
clip: {
get: function() {
return this._clip;
},
set: function(t) {
if ("string" != typeof t) {
if (t !== this._clip) {
this._clip = t;
this.audio.stop();
this.preload && (this.audio.src = this._clip);
}
} else {
cc.warnID(8401, "cc.AudioSource", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
var e = this;
s._loadByUrl(t, (function(t, i) {
i && (e.clip = i);
}));
}
},
type: s,
tooltip: !1,
animatable: !1
},
volume: {
get: function() {
return this._volume;
},
set: function(t) {
t = n.clamp01(t);
this._volume = t;
this._mute || this.audio.setVolume(t);
return t;
},
tooltip: !1
},
mute: {
get: function() {
return this._mute;
},
set: function(t) {
this._mute = t;
this.audio.setVolume(t ? 0 : this._volume);
return t;
},
animatable: !1,
tooltip: !1
},
loop: {
get: function() {
return this._loop;
},
set: function(t) {
this._loop = t;
this.audio.setLoop(t);
return t;
},
animatable: !1,
tooltip: !1
},
playOnLoad: {
default: !1,
tooltip: !1,
animatable: !1
},
preload: {
default: !1,
animatable: !1
}
},
_ensureDataLoaded: function() {
this.audio.src !== this._clip && (this.audio.src = this._clip);
},
_pausedCallback: function() {
if (this.audio.getState() === cc.Audio.State.PLAYING) {
this.audio.pause();
this._pausedFlag = !0;
}
},
_restoreCallback: function() {
this._pausedFlag && this.audio.resume();
this._pausedFlag = !1;
},
onLoad: function() {
this.audio.setVolume(this._mute ? 0 : this._volume);
this.audio.setLoop(this._loop);
},
onEnable: function() {
this.preload && (this.audio.src = this._clip);
this.playOnLoad && this.play();
cc.game.on(cc.game.EVENT_HIDE, this._pausedCallback, this);
cc.game.on(cc.game.EVENT_SHOW, this._restoreCallback, this);
},
onDisable: function() {
this.stop();
cc.game.off(cc.game.EVENT_HIDE, this._pausedCallback, this);
cc.game.off(cc.game.EVENT_SHOW, this._restoreCallback, this);
},
onDestroy: function() {
this.stop();
this.audio.destroy();
cc.audioEngine.uncache(this._clip);
},
play: function() {
if (this._clip) {
var t = this.audio;
this._clip.loaded && t.stop();
this._ensureDataLoaded();
t.setCurrentTime(0);
t.play();
}
},
stop: function() {
this.audio.stop();
},
pause: function() {
this.audio.pause();
},
resume: function() {
this._ensureDataLoaded();
this.audio.resume();
},
rewind: function() {
this.audio.setCurrentTime(0);
},
getCurrentTime: function() {
return this.audio.getCurrentTime();
},
setCurrentTime: function(t) {
this.audio.setCurrentTime(t);
return t;
},
getDuration: function() {
return this.audio.getDuration();
}
});
cc.AudioSource = e.exports = o;
}), {
"../assets/CCAudioClip": 20,
"../utils/misc": 200,
"./CCComponent": 55
} ],
52: [ (function(t, e, i) {
"use strict";
var n = [ "touchstart", "touchmove", "touchend", "mousedown", "mousemove", "mouseup", "mouseenter", "mouseleave", "mousewheel" ];
function r(t) {
t.stopPropagation();
}
var s = cc.Class({
name: "cc.BlockInputEvents",
extends: t("./CCComponent"),
editor: {
menu: "i18n:MAIN_MENU.component.ui/Block Input Events",
inspector: "packages://inspector/inspectors/comps/block-input-events.js",
help: "i18n:COMPONENT.help_url.block_input_events"
},
onEnable: function() {
for (var t = 0; t < n.length; t++) this.node.on(n[t], r, this);
},
onDisable: function() {
for (var t = 0; t < n.length; t++) this.node.off(n[t], r, this);
}
});
cc.BlockInputEvents = e.exports = s;
}), {
"./CCComponent": 55
} ],
53: [ (function(t, e, i) {
"use strict";
var n = t("./CCComponent"), r = t("../utils/gray-sprite-state"), s = cc.Enum({
NONE: 0,
COLOR: 1,
SPRITE: 2,
SCALE: 3
}), o = cc.Enum({
NORMAL: 0,
HOVER: 1,
PRESSED: 2,
DISABLED: 3
}), a = cc.Class({
name: "cc.Button",
extends: n,
mixins: [ r ],
ctor: function() {
this._pressed = !1;
this._hovered = !1;
this._fromColor = null;
this._toColor = null;
this._time = 0;
this._transitionFinished = !0;
this._fromScale = cc.Vec2.ZERO;
this._toScale = cc.Vec2.ZERO;
this._originalScale = null;
this._graySpriteMaterial = null;
this._spriteMaterial = null;
this._sprite = null;
},
editor: !1,
properties: {
interactable: {
default: !0,
tooltip: !1,
notify: function() {
this._updateState();
this.interactable || this._resetState();
},
animatable: !1
},
_resizeToTarget: {
animatable: !1,
set: function(t) {
t && this._resizeNodeToTargetNode();
}
},
enableAutoGrayEffect: {
default: !1,
tooltip: !1,
notify: function() {
this._updateDisabledState();
}
},
transition: {
default: s.NONE,
tooltip: !1,
type: s,
animatable: !1,
notify: function(t) {
this._updateTransition(t);
},
formerlySerializedAs: "transition"
},
normalColor: {
default: cc.Color.WHITE,
displayName: "Normal",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.NORMAL && (this._getTarget().opacity = this.normalColor.a);
this._updateState();
}
},
pressedColor: {
default: cc.color(211, 211, 211),
displayName: "Pressed",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.PRESSED && (this._getTarget().opacity = this.pressedColor.a);
this._updateState();
},
formerlySerializedAs: "pressedColor"
},
hoverColor: {
default: cc.Color.WHITE,
displayName: "Hover",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.HOVER && (this._getTarget().opacity = this.hoverColor.a);
this._updateState();
},
formerlySerializedAs: "hoverColor"
},
disabledColor: {
default: cc.color(124, 124, 124),
displayName: "Disabled",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.DISABLED && (this._getTarget().opacity = this.disabledColor.a);
this._updateState();
}
},
duration: {
default: .1,
range: [ 0, 10 ],
tooltip: !1
},
zoomScale: {
default: 1.2,
tooltip: !1
},
normalSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Normal",
tooltip: !1,
notify: function() {
this._updateState();
}
},
pressedSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Pressed",
tooltip: !1,
formerlySerializedAs: "pressedSprite",
notify: function() {
this._updateState();
}
},
hoverSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Hover",
tooltip: !1,
formerlySerializedAs: "hoverSprite",
notify: function() {
this._updateState();
}
},
disabledSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Disabled",
tooltip: !1,
notify: function() {
this._updateState();
}
},
target: {
default: null,
type: cc.Node,
tooltip: !1,
notify: function(t) {
this._applyTarget();
t && this.target !== t && this._unregisterTargetEvent(t);
}
},
clickEvents: {
default: [],
type: cc.Component.EventHandler,
tooltip: !1
}
},
statics: {
Transition: s
},
__preload: function() {
this._applyTarget();
this._updateState();
},
_resetState: function() {
this._pressed = !1;
this._hovered = !1;
var t = this._getTarget(), e = this.transition, i = this._originalScale;
e === s.COLOR && this.interactable ? this._setTargetColor(this.normalColor) : e === s.SCALE && i && t.setScale(i.x, i.y);
this._transitionFinished = !0;
},
onEnable: function() {
this.normalSprite && this.normalSprite.ensureLoadTexture();
this.hoverSprite && this.hoverSprite.ensureLoadTexture();
this.pressedSprite && this.pressedSprite.ensureLoadTexture();
this.disabledSprite && this.disabledSprite.ensureLoadTexture();
this._registerNodeEvent();
},
onDisable: function() {
this._resetState();
this._unregisterNodeEvent();
},
_getTarget: function() {
return this.target ? this.target : this.node;
},
_onTargetSpriteFrameChanged: function(t) {
this.transition === s.SPRITE && this._setCurrentStateSprite(t.spriteFrame);
},
_onTargetColorChanged: function(t) {
this.transition === s.COLOR && this._setCurrentStateColor(t);
},
_onTargetScaleChanged: function() {
var t = this._getTarget();
if (this._originalScale && (this.transition !== s.SCALE || this._transitionFinished)) {
this._originalScale.x = t.scaleX;
this._originalScale.y = t.scaleY;
}
},
_setTargetColor: function(t) {
var e = this._getTarget();
e.color = t;
e.opacity = t.a;
},
_getStateColor: function(t) {
switch (t) {
case o.NORMAL:
return this.normalColor;

case o.HOVER:
return this.hoverColor;

case o.PRESSED:
return this.pressedColor;

case o.DISABLED:
return this.disabledColor;
}
},
_getStateSprite: function(t) {
switch (t) {
case o.NORMAL:
return this.normalSprite;

case o.HOVER:
return this.hoverSprite;

case o.PRESSED:
return this.pressedSprite;

case o.DISABLED:
return this.disabledSprite;
}
},
_setCurrentStateColor: function(t) {
switch (this._getButtonState()) {
case o.NORMAL:
this.normalColor = t;
break;

case o.HOVER:
this.hoverColor = t;
break;

case o.PRESSED:
this.pressedColor = t;
break;

case o.DISABLED:
this.disabledColor = t;
}
},
_setCurrentStateSprite: function(t) {
switch (this._getButtonState()) {
case o.NORMAL:
this.normalSprite = t;
break;

case o.HOVER:
this.hoverSprite = t;
break;

case o.PRESSED:
this.pressedSprite = t;
break;

case o.DISABLED:
this.disabledSprite = t;
}
},
update: function(t) {
var e = this._getTarget();
if (!this._transitionFinished && (this.transition === s.COLOR || this.transition === s.SCALE)) {
this.time += t;
var i = 1;
this.duration > 0 && (i = this.time / this.duration);
i >= 1 && (i = 1);
if (this.transition === s.COLOR) {
var n = this._fromColor.lerp(this._toColor, i);
this._setTargetColor(n);
} else this.transition === s.SCALE && this._originalScale && (e.scale = this._fromScale.lerp(this._toScale, i));
1 === i && (this._transitionFinished = !0);
}
},
_registerNodeEvent: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
this.node.on(cc.Node.EventType.MOUSE_ENTER, this._onMouseMoveIn, this);
this.node.on(cc.Node.EventType.MOUSE_LEAVE, this._onMouseMoveOut, this);
},
_unregisterNodeEvent: function() {
this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
this.node.off(cc.Node.EventType.MOUSE_ENTER, this._onMouseMoveIn, this);
this.node.off(cc.Node.EventType.MOUSE_LEAVE, this._onMouseMoveOut, this);
},
_registerTargetEvent: function(t) {
0;
t.on(cc.Node.EventType.SCALE_CHANGED, this._onTargetScaleChanged, this);
},
_unregisterTargetEvent: function(t) {
0;
t.off(cc.Node.EventType.SCALE_CHANGED, this._onTargetScaleChanged, this);
},
_getTargetSprite: function(t) {
var e = null;
t && (e = t.getComponent(cc.Sprite));
return e;
},
_applyTarget: function() {
var t = this._getTarget();
this._sprite = this._getTargetSprite(t);
this._originalScale || (this._originalScale = cc.Vec2.ZERO);
this._originalScale.x = t.scaleX;
this._originalScale.y = t.scaleY;
this._registerTargetEvent(t);
},
_onTouchBegan: function(t) {
if (this.interactable && this.enabledInHierarchy) {
this._pressed = !0;
this._updateState();
t.stopPropagation();
}
},
_onTouchMove: function(t) {
if (this.interactable && this.enabledInHierarchy && this._pressed) {
var e = t.touch, i = this.node._hitTest(e.getLocation()), n = this._getTarget(), r = this._originalScale;
if (this.transition === s.SCALE && r) if (i) {
this._fromScale.x = r.x;
this._fromScale.y = r.y;
this._toScale.x = r.x * this.zoomScale;
this._toScale.y = r.y * this.zoomScale;
this._transitionFinished = !1;
} else {
this.time = 0;
this._transitionFinished = !0;
n.setScale(r.x, r.y);
} else {
var a = void 0;
a = i ? o.PRESSED : o.NORMAL;
this._applyTransition(a);
}
t.stopPropagation();
}
},
_onTouchEnded: function(t) {
if (this.interactable && this.enabledInHierarchy) {
if (this._pressed) {
cc.Component.EventHandler.emitEvents(this.clickEvents, t);
this.node.emit("click", this);
}
this._pressed = !1;
this._updateState();
t.stopPropagation();
}
},
_onTouchCancel: function() {
if (this.interactable && this.enabledInHierarchy) {
this._pressed = !1;
this._updateState();
}
},
_onMouseMoveIn: function() {
if (!this._pressed && this.interactable && this.enabledInHierarchy && (this.transition !== s.SPRITE || this.hoverSprite) && !this._hovered) {
this._hovered = !0;
this._updateState();
}
},
_onMouseMoveOut: function() {
if (this._hovered) {
this._hovered = !1;
this._updateState();
}
},
_updateState: function() {
var t = this._getButtonState();
this._applyTransition(t);
this._updateDisabledState();
},
_getButtonState: function() {
return this.interactable ? this._pressed ? o.PRESSED : this._hovered ? o.HOVER : o.NORMAL : o.DISABLED;
},
_updateColorTransitionImmediately: function(t) {
var e = this._getStateColor(t);
this._setTargetColor(e);
},
_updateColorTransition: function(t) {
if (t === o.DISABLED) this._updateColorTransitionImmediately(t); else {
var e = this._getTarget(), i = this._getStateColor(t);
this._fromColor = e.color.clone();
this._toColor = i;
this.time = 0;
this._transitionFinished = !1;
}
},
_updateSpriteTransition: function(t) {
var e = this._getStateSprite(t);
this._sprite && e && (this._sprite.spriteFrame = e);
},
_updateScaleTransition: function(t) {
t === o.PRESSED ? this._zoomUp() : this._zoomBack();
},
_zoomUp: function() {
if (this._originalScale) {
this._fromScale.x = this._originalScale.x;
this._fromScale.y = this._originalScale.y;
this._toScale.x = this._originalScale.x * this.zoomScale;
this._toScale.y = this._originalScale.y * this.zoomScale;
this.time = 0;
this._transitionFinished = !1;
}
},
_zoomBack: function() {
if (this._originalScale) {
var t = this._getTarget();
this._fromScale.x = t.scaleX;
this._fromScale.y = t.scaleY;
this._toScale.x = this._originalScale.x;
this._toScale.y = this._originalScale.y;
this.time = 0;
this._transitionFinished = !1;
}
},
_updateTransition: function(t) {
t === s.COLOR ? this._updateColorTransitionImmediately(o.NORMAL) : t === s.SPRITE && this._updateSpriteTransition(o.NORMAL);
this._updateState();
},
_applyTransition: function(t) {
var e = this.transition;
e === s.COLOR ? this._updateColorTransition(t) : e === s.SPRITE ? this._updateSpriteTransition(t) : e === s.SCALE && this._updateScaleTransition(t);
},
_resizeNodeToTargetNode: !1,
_updateDisabledState: function() {
if (this._sprite) {
var t = !1;
this.enableAutoGrayEffect && (this.transition === s.SPRITE && this.disabledSprite || this.interactable || (t = !0));
this._switchGrayMaterial(t, this._sprite);
}
}
});
cc.Button = e.exports = a;
}), {
"../utils/gray-sprite-state": 198,
"./CCComponent": 55
} ],
54: [ (function(t, e, i) {
"use strict";
var n = t("../camera/CCCamera"), r = t("./CCComponent"), s = cc.Class({
name: "cc.Canvas",
extends: r,
editor: !1,
resetInEditor: !1,
statics: {
instance: null
},
properties: {
_designResolution: cc.size(960, 640),
designResolution: {
get: function() {
return cc.size(this._designResolution);
},
set: function(t) {
this._designResolution.width = t.width;
this._designResolution.height = t.height;
this.applySettings();
this.alignWithScreen();
},
tooltip: !1
},
_fitWidth: !1,
_fitHeight: !0,
fitHeight: {
get: function() {
return this._fitHeight;
},
set: function(t) {
if (this._fitHeight !== t) {
this._fitHeight = t;
this.applySettings();
this.alignWithScreen();
}
},
tooltip: !1
},
fitWidth: {
get: function() {
return this._fitWidth;
},
set: function(t) {
if (this._fitWidth !== t) {
this._fitWidth = t;
this.applySettings();
this.alignWithScreen();
}
},
tooltip: !1
}
},
ctor: function() {
this._thisOnResized = this.alignWithScreen.bind(this);
},
__preload: function() {
if (s.instance) return cc.errorID(6700, this.node.name, s.instance.node.name);
s.instance = this;
cc.sys.isMobile ? window.addEventListener("resize", this._thisOnResized) : cc.view.on("canvas-resize", this._thisOnResized);
this.applySettings();
this.alignWithScreen();
var t = cc.find("Main Camera", this.node);
if (!t) {
(t = new cc.Node("Main Camera")).parent = this.node;
t.setSiblingIndex(0);
}
var e = t.getComponent(n);
if (!e) {
e = t.addComponent(n);
var i = n.ClearFlags;
e.clearFlags = i.COLOR | i.DEPTH | i.STENCIL;
e.depth = -1;
}
n.main = e;
},
onDestroy: function() {
cc.sys.isMobile ? window.removeEventListener("resize", this._thisOnResized) : cc.view.off("canvas-resize", this._thisOnResized);
s.instance === this && (s.instance = null);
},
alignWithScreen: function() {
var t, e, i = e = cc.visibleRect;
t = cc.view.getDesignResolutionSize();
var n = 0, r = 0;
if (!this.fitHeight && !this.fitWidth) {
n = .5 * (t.width - i.width);
r = .5 * (t.height - i.height);
}
this.node.setPosition(.5 * i.width + n, .5 * i.height + r);
this.node.width = e.width;
this.node.height = e.height;
},
applySettings: function() {
var t, e = cc.ResolutionPolicy;
t = this.fitHeight && this.fitWidth ? e.SHOW_ALL : this.fitHeight || this.fitWidth ? this.fitWidth ? e.FIXED_WIDTH : e.FIXED_HEIGHT : e.NO_BORDER;
var i = this._designResolution;
cc.view.setDesignResolutionSize(i.width, i.height, t);
}
});
cc.Canvas = e.exports = s;
}), {
"../camera/CCCamera": 41,
"./CCComponent": 55
} ],
55: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject"), r = t("../platform/js"), s = new (t("../platform/id-generater"))("Comp"), o = (n.Flags.IsOnEnableCalled, 
n.Flags.IsOnLoadCalled), a = cc.Class({
name: "cc.Component",
extends: n,
ctor: function() {
this._id = s.getNewId();
this.__eventTargets = [];
},
properties: {
node: {
default: null,
visible: !1
},
name: {
get: function() {
if (this._name) return this._name;
var t = cc.js.getClassName(this), e = t.lastIndexOf(".");
e >= 0 && (t = t.slice(e + 1));
return this.node.name + "<" + t + ">";
},
set: function(t) {
this._name = t;
},
visible: !1
},
uuid: {
get: function() {
return this._id;
},
visible: !1
},
__scriptAsset: !1,
_enabled: !0,
enabled: {
get: function() {
return this._enabled;
},
set: function(t) {
if (this._enabled !== t) {
this._enabled = t;
if (this.node._activeInHierarchy) {
var e = cc.director._compScheduler;
t ? e.enableComp(this) : e.disableComp(this);
}
}
},
visible: !1,
animatable: !0
},
enabledInHierarchy: {
get: function() {
return this._enabled && this.node._activeInHierarchy;
},
visible: !1
},
_isOnLoadCalled: {
get: function() {
return this._objFlags & o;
}
}
},
update: null,
lateUpdate: null,
__preload: null,
onLoad: null,
start: null,
onEnable: null,
onDisable: null,
onDestroy: null,
onFocusInEditor: null,
onLostFocusInEditor: null,
resetInEditor: null,
addComponent: function(t) {
return this.node.addComponent(t);
},
getComponent: function(t) {
return this.node.getComponent(t);
},
getComponents: function(t) {
return this.node.getComponents(t);
},
getComponentInChildren: function(t) {
return this.node.getComponentInChildren(t);
},
getComponentsInChildren: function(t) {
return this.node.getComponentsInChildren(t);
},
_getLocalBounds: null,
onRestore: null,
destroy: function() {
this._super() && this._enabled && this.node._activeInHierarchy && cc.director._compScheduler.disableComp(this);
},
_onPreDestroy: function() {
this.unscheduleAllCallbacks();
for (var t = this.__eventTargets, e = 0, i = t.length; e < i; ++e) {
var n = t[e];
n && n.targetOff(this);
}
t.length = 0;
0;
cc.director._nodeActivator.destroyComp(this);
this.node._removeComponent(this);
},
_instantiate: function(t) {
t || (t = cc.instantiate._clone(this, this));
t.node = null;
return t;
},
schedule: function(t, e, i, n) {
cc.assertID(t, 1619);
cc.assertID(e >= 0, 1620);
e = e || 0;
i = isNaN(i) ? cc.macro.REPEAT_FOREVER : i;
n = n || 0;
var r = cc.director.getScheduler(), s = r.isTargetPaused(this);
r.schedule(t, this, e, i, n, s);
},
scheduleOnce: function(t, e) {
this.schedule(t, 0, 0, e);
},
unschedule: function(t) {
t && cc.director.getScheduler().unschedule(t, this);
},
unscheduleAllCallbacks: function() {
cc.director.getScheduler().unscheduleAllForTarget(this);
}
});
a._requireComponent = null;
a._executionOrder = 0;
0;
r.value(a, "_registerEditorProps", (function(t, e) {
var i = e.requireComponent;
i && (t._requireComponent = i);
var n = e.executionOrder;
n && "number" == typeof n && (t._executionOrder = n);
}));
a.prototype.__scriptUuid = "";
cc.Component = e.exports = a;
}), {
"../platform/CCObject": 132,
"../platform/id-generater": 142,
"../platform/js": 146
} ],
56: [ (function(t, e, i) {
"use strict";
cc.Component.EventHandler = cc.Class({
name: "cc.ClickEvent",
properties: {
target: {
default: null,
type: cc.Node
},
component: "",
_componentId: "",
_componentName: {
get: function() {
this._genCompIdIfNeeded();
return this._compId2Name(this._componentId);
},
set: function(t) {
this._componentId = this._compName2Id(t);
}
},
handler: {
default: ""
},
customEventData: {
default: ""
}
},
statics: {
emitEvents: function(t) {
var e = void 0;
if (arguments.length > 0) for (var i = 0, n = (e = new Array(arguments.length - 1)).length; i < n; i++) e[i] = arguments[i + 1];
for (var r = 0, s = t.length; r < s; r++) {
var o = t[r];
o instanceof cc.Component.EventHandler && o.emit(e);
}
}
},
emit: function(t) {
var e = this.target;
if (cc.isValid(e)) {
this._genCompIdIfNeeded();
var i = cc.js._getClassById(this._componentId), n = e.getComponent(i);
if (cc.isValid(n)) {
var r = n[this.handler];
if ("function" == typeof r) {
null != this.customEventData && "" !== this.customEventData && (t = t.slice()).push(this.customEventData);
r.apply(n, t);
}
}
}
},
_compName2Id: function(t) {
var e = cc.js.getClassByName(t);
return cc.js._getClassId(e);
},
_compId2Name: function(t) {
var e = cc.js._getClassById(t);
return cc.js.getClassName(e);
},
_genCompIdIfNeeded: function() {
if (!this._componentId) {
this._componentName = this.component;
this.component = "";
}
}
});
}), {} ],
57: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCMacro"), r = t("./CCRenderComponent"), s = t("../assets/material/CCMaterial"), o = t("../renderer/utils/label/label-frame"), a = n.TextAlignment, c = n.VerticalTextAlignment, l = cc.Enum({
NONE: 0,
CLAMP: 1,
SHRINK: 2,
RESIZE_HEIGHT: 3
}), u = cc.Enum({
NONE: 0,
BITMAP: 1,
CHAR: 2
}), h = cc.Class({
name: "cc.Label",
extends: r,
ctor: function() {
0;
this._actualFontSize = 0;
this._assemblerData = null;
this._frame = null;
this._ttfTexture = null;
this._letterTexture = null;
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS ? this._activateMaterial = this._activateMaterialCanvas : this._activateMaterial = this._activateMaterialWebgl;
},
editor: !1,
properties: {
_useOriginalSize: !0,
_string: {
default: "",
formerlySerializedAs: "_N$string"
},
string: {
get: function() {
return this._string;
},
set: function(t) {
var e = this._string;
this._string = "" + t;
this.string !== e && this._lazyUpdateRenderData();
this._checkStringEmpty();
},
multiline: !0,
tooltip: !1
},
horizontalAlign: {
default: a.LEFT,
type: a,
tooltip: !1,
notify: function(t) {
this.horizontalAlign !== t && this._lazyUpdateRenderData();
},
animatable: !1
},
verticalAlign: {
default: c.TOP,
type: c,
tooltip: !1,
notify: function(t) {
this.verticalAlign !== t && this._lazyUpdateRenderData();
},
animatable: !1
},
actualFontSize: {
displayName: "Actual Font Size",
animatable: !1,
readonly: !0,
get: function() {
return this._actualFontSize;
},
tooltip: !1
},
_fontSize: 40,
fontSize: {
get: function() {
return this._fontSize;
},
set: function(t) {
if (this._fontSize !== t) {
this._fontSize = t;
this._lazyUpdateRenderData();
}
},
range: [ 0, 512 ],
tooltip: !1
},
fontFamily: {
default: "Arial",
tooltip: !1,
notify: function(t) {
this.fontFamily !== t && this._lazyUpdateRenderData();
},
animatable: !1
},
_lineHeight: 40,
lineHeight: {
get: function() {
return this._lineHeight;
},
set: function(t) {
if (this._lineHeight !== t) {
this._lineHeight = t;
this._lazyUpdateRenderData();
}
},
tooltip: !1
},
overflow: {
default: l.NONE,
type: l,
tooltip: !1,
notify: function(t) {
this.overflow !== t && this._lazyUpdateRenderData();
},
animatable: !1
},
_enableWrapText: !0,
enableWrapText: {
get: function() {
return this._enableWrapText;
},
set: function(t) {
if (this._enableWrapText !== t) {
this._enableWrapText = t;
this._lazyUpdateRenderData();
}
},
animatable: !1,
tooltip: !1
},
_N$file: null,
font: {
get: function() {
return this._N$file;
},
set: function(t) {
if (this.font !== t) {
t || (this._isSystemFontUsed = !0);
0;
this._N$file = t;
t && this._isSystemFontUsed && (this._isSystemFontUsed = !1);
"string" == typeof t && cc.warnID(4e3);
this._resetAssembler();
this._applyFontTexture(!0);
this._lazyUpdateRenderData();
}
},
type: cc.Font,
tooltip: !1,
animatable: !1
},
_isSystemFontUsed: !0,
useSystemFont: {
get: function() {
return this._isSystemFontUsed;
},
set: function(t) {
if (this._isSystemFontUsed !== t) {
0;
this._isSystemFontUsed = !!t;
if (t) {
this.font = null;
this._resetAssembler();
this._applyFontTexture(!0);
this._lazyUpdateRenderData();
this._checkStringEmpty();
} else this._userDefinedFont || this.disableRender();
}
},
animatable: !1,
tooltip: !1
},
_bmFontOriginalSize: {
displayName: "BMFont Original Size",
get: function() {
return this._N$file instanceof cc.BitmapFont ? this._N$file.fontSize : -1;
},
visible: !0,
animatable: !1
},
_spacingX: 0,
spacingX: {
get: function() {
return this._spacingX;
},
set: function(t) {
this._spacingX = t;
this._lazyUpdateRenderData();
},
tooltip: !1
},
_batchAsBitmap: !1,
cacheMode: {
default: u.NONE,
type: u,
tooltip: !1,
notify: function(t) {
if (this.cacheMode !== t) {
t !== u.BITMAP || this.font instanceof cc.BitmapFont || this._frame._resetDynamicAtlasFrame();
t === u.CHAR && (this._ttfTexture = null);
this._resetAssembler();
this._applyFontTexture(!0);
this._lazyUpdateRenderData();
}
},
animatable: !1
},
_isBold: {
default: !1,
serializable: !1
},
_isItalic: {
default: !1,
serializable: !1
},
_isUnderline: {
default: !1,
serializable: !1
}
},
statics: {
HorizontalAlign: a,
VerticalAlign: c,
Overflow: l,
CacheMode: u,
_shareAtlas: null,
clearCharCache: function() {
h._shareAtlas && h._shareAtlas.clearAllCache();
}
},
onLoad: function() {
if (this._batchAsBitmap && this.cacheMode === u.NONE) {
this.cacheMode = u.BITMAP;
this._batchAsBitmap = !1;
}
},
onEnable: function() {
this._super();
this.font || this._isSystemFontUsed || (this.useSystemFont = !0);
this.useSystemFont && !this.fontFamily && (this.fontFamily = "Arial");
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._lazyUpdateRenderData, this);
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._lazyUpdateRenderData, this);
this._forceUpdateRenderData();
this._checkStringEmpty();
},
onDisable: function() {
this._super();
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._lazyUpdateRenderData, this);
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._lazyUpdateRenderData, this);
},
onDestroy: function() {
this._assembler && this._assembler._resetAssemblerData && this._assembler._resetAssemblerData(this._assemblerData);
this._assemblerData = null;
this._letterTexture = null;
if (this._ttfTexture) {
this._ttfTexture.destroy();
this._ttfTexture = null;
}
this._super();
},
_updateColor: function() {
this.font instanceof cc.BitmapFont || this._lazyUpdateRenderData();
r.prototype._updateColor.call(this);
},
_resetAssembler: function() {
this._frame = null;
r.prototype._resetAssembler.call(this);
},
_canRender: function() {
var t = this._super(), e = this.font;
if (e instanceof cc.BitmapFont) {
var i = e.spriteFrame;
i && i.textureLoaded() || (t = !1);
}
return t;
},
_checkStringEmpty: function() {
this.markForRender(!!this.string);
},
_on3DNodeChanged: function() {
this._resetAssembler();
this._applyFontTexture(!0);
},
_applyFontTexture: function(t) {
var e = this.font;
if (e instanceof cc.BitmapFont) {
var i = e.spriteFrame;
this._frame = i;
var n = this, r = function() {
n._frame._texture = i._texture;
n._activateMaterial(t);
t && n._assembler && n._assembler.updateRenderData(n);
};
if (i && i.textureLoaded()) r(); else {
this.disableRender();
if (i) {
i.once("load", r, this);
i.ensureLoadTexture();
}
}
} else {
this._frame || (this._frame = new o());
if (this.cacheMode === u.CHAR && cc.sys.browserType !== cc.sys.BROWSER_TYPE_WECHAT_GAME_SUB) {
this._letterTexture = this._assembler._getAssemblerData();
this._frame._refreshTexture(this._letterTexture);
} else if (!this._ttfTexture) {
this._ttfTexture = new cc.Texture2D();
this._assemblerData = this._assembler._getAssemblerData();
this._ttfTexture.initWithElement(this._assemblerData.canvas);
}
if (this.cacheMode !== u.CHAR) {
this._frame._resetDynamicAtlasFrame();
this._frame._refreshTexture(this._ttfTexture);
}
this._activateMaterial(t);
t && this._assembler && this._assembler.updateRenderData(this);
}
},
_activateMaterialCanvas: function(t) {
if (t) {
this._frame._texture.url = this.uuid + "_texture";
this.markForUpdateRenderData(!0);
this.markForRender(!0);
}
},
_activateMaterialWebgl: function(t) {
if (t) if (this._frame) {
var e = this.sharedMaterials[0];
(e = e ? s.getInstantiatedMaterial(e, this) : s.getInstantiatedBuiltinMaterial("2d-sprite", this)).setProperty("texture", this._frame._texture);
this.setMaterial(0, e);
this.markForUpdateRenderData(!0);
this.markForRender(!0);
} else this.disableRender();
},
_lazyUpdateRenderData: function() {
this.setVertsDirty();
this.markForUpdateRenderData(!0);
},
_forceUpdateRenderData: function() {
this.setVertsDirty();
this._resetAssembler();
this._applyFontTexture(!0);
this.markForUpdateRenderData(!0);
},
_enableBold: function(t) {
this._isBold = !!t;
},
_enableItalics: function(t) {
this._isItalic = !!t;
},
_enableUnderline: function(t) {
this._isUnderline = !!t;
}
});
cc.Label = e.exports = h;
}), {
"../assets/material/CCMaterial": 38,
"../platform/CCMacro": 131,
"../renderer/utils/label/label-frame": 173,
"./CCRenderComponent": 60
} ],
58: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelOutline",
extends: t("./CCComponent"),
editor: !1,
properties: {
_color: cc.Color.WHITE,
_width: 1,
color: {
tooltip: !1,
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
this._updateRenderData();
}
},
width: {
tooltip: !1,
get: function() {
return this._width;
},
set: function(t) {
this._width = t;
this._updateRenderData();
},
range: [ 0, 512 ]
}
},
onEnable: function() {
this._updateRenderData();
},
onDisable: function() {
this._updateRenderData();
},
_updateRenderData: function() {
var t = this.node.getComponent(cc.Label);
t && t._lazyUpdateRenderData();
}
});
cc.LabelOutline = e.exports = n;
}), {
"./CCComponent": 55
} ],
59: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelShadow",
extends: t("./CCComponent"),
editor: !1,
properties: {
_color: cc.Color.WHITE,
_offset: cc.v2(2, 2),
_blur: 2,
color: {
tooltip: !1,
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
this._updateRenderData();
}
},
offset: {
tooltip: !1,
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
this._updateRenderData();
}
},
blur: {
tooltip: !1,
get: function() {
return this._blur;
},
set: function(t) {
this._blur = t;
this._updateRenderData();
},
range: [ 0, 1024 ]
}
},
onEnable: function() {
this._updateRenderData();
},
onDisable: function() {
this._updateRenderData();
},
_updateRenderData: function() {
var t = this.node.getComponent(cc.Label);
t && t._lazyUpdateRenderData();
}
});
cc.LabelShadow = e.exports = n;
}), {
"./CCComponent": 55
} ],
60: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../renderer/assembler"));
var r = t("./CCComponent"), s = t("../renderer/render-flow"), o = t("../assets/material/CCMaterial"), a = cc.Class({
name: "RenderComponent",
extends: r,
editor: !1,
properties: {
_materials: {
default: [],
type: o
},
sharedMaterials: {
get: function() {
return this._materials;
},
set: function(t) {
this._materials = t;
this._activateMaterial(!0);
},
type: [ o ],
displayName: "Materials",
animatable: !1
}
},
ctor: function() {
this._vertsDirty = !0;
this._material = null;
this._assembler = null;
},
_resetAssembler: function() {
this.setVertsDirty(!0);
n.default.init(this);
this._updateColor();
},
__preload: function() {
this._resetAssembler();
},
onEnable: function() {
this.node._renderComponent && (this.node._renderComponent.enabled = !1);
this.node._renderComponent = this;
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onNodeSizeDirty, this);
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._onNodeSizeDirty, this);
this.node._renderFlag |= s.FLAG_RENDER | s.FLAG_UPDATE_RENDER_DATA | s.FLAG_OPACITY_COLOR;
},
onDisable: function() {
this.node._renderComponent = null;
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onNodeSizeDirty, this);
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._onNodeSizeDirty, this);
this.disableRender();
},
onDestroy: function() {
this._materials.length = 0;
this._assembler && this._assembler.destroy && this._assembler.destroy();
},
setVertsDirty: function() {
this._vertsDirty = !0;
this.markForUpdateRenderData(!0);
},
_onNodeSizeDirty: function() {
this.setVertsDirty();
},
_on3DNodeChanged: function() {
this.setVertsDirty();
},
_canRender: function() {
return this._enabled && this.node._activeInHierarchy;
},
markForUpdateRenderData: function(t) {
t && this._canRender() ? this.node._renderFlag |= s.FLAG_UPDATE_RENDER_DATA : t || (this.node._renderFlag &= ~s.FLAG_UPDATE_RENDER_DATA);
},
markForRender: function(t) {
t && this._canRender() ? this.node._renderFlag |= s.FLAG_RENDER : t || (this.node._renderFlag &= ~s.FLAG_RENDER);
},
disableRender: function() {
this.node._renderFlag &= ~(s.FLAG_RENDER | s.FLAG_UPDATE_RENDER_DATA);
},
getMaterial: function(t) {
if (t < 0 || t >= this._materials.length) return null;
var e = this._materials[t];
if (!e) return null;
var i = o.getInstantiatedMaterial(e, this);
i !== e && this.setMaterial(t, i);
return this._materials[t];
},
setMaterial: function(t, e) {
this._materials[t] = e;
e && this.markForUpdateRenderData(!0);
},
_activateMaterial: function(t) {},
_updateColor: function() {
this._assembler.updateColor && this._assembler.updateColor(this);
},
_checkBacth: function(t, e) {
var i = this.sharedMaterials[0];
if (i && i.getHash() !== t.material.getHash() || t.cullingMask !== e) {
t._flush();
t.node = i.getDefine("CC_USE_MODEL") ? this.node : t._dummyNode;
t.material = i;
t.cullingMask = e;
}
}
});
cc.RenderComponent = e.exports = a;
}), {
"../assets/material/CCMaterial": 38,
"../renderer/assembler": 153,
"../renderer/render-flow": 171,
"./CCComponent": 55
} ],
61: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = (t("../CCNode").EventType, t("./CCRenderComponent")), s = t("../utils/blend-func"), o = (t("../renderer/render-flow"), 
t("../assets/material/CCMaterial")), a = cc.Enum({
SIMPLE: 0,
SLICED: 1,
TILED: 2,
FILLED: 3,
MESH: 4
}), c = cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1,
RADIAL: 2
}), l = cc.Enum({
CUSTOM: 0,
TRIMMED: 1,
RAW: 2
}), u = cc.Enum({
NORMAL: 0,
GRAY: 1
}), h = cc.Class({
name: "cc.Sprite",
extends: r,
mixins: [ s ],
editor: !1,
ctor: function() {
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS ? this._activateMaterial = this._activateMaterialCanvas : this._activateMaterial = this._activateMaterialWebgl;
},
properties: {
_spriteFrame: {
default: null,
type: cc.SpriteFrame
},
_type: a.SIMPLE,
_sizeMode: l.TRIMMED,
_fillType: 0,
_fillCenter: cc.v2(0, 0),
_fillStart: 0,
_fillRange: 0,
_isTrimmedMode: !0,
_atlas: {
default: null,
type: cc.SpriteAtlas,
tooltip: !1,
editorOnly: !0,
visible: !0,
animatable: !1
},
spriteFrame: {
get: function() {
return this._spriteFrame;
},
set: function(t, e) {
var i = this._spriteFrame;
if (i !== t) {
this._spriteFrame = t;
this.markForUpdateRenderData(!1);
this._applySpriteFrame(i);
0;
}
},
type: cc.SpriteFrame
},
type: {
get: function() {
return this._type;
},
set: function(t) {
if (this._type !== t) {
this._type = t;
this._resetAssembler();
}
},
type: a,
animatable: !1,
tooltip: !1
},
fillType: {
get: function() {
return this._fillType;
},
set: function(t) {
if (t !== this._fillType) {
this._fillType = t;
this._resetAssembler();
}
},
type: c,
tooltip: !1
},
fillCenter: {
get: function() {
return this._fillCenter;
},
set: function(t) {
this._fillCenter.x = t.x;
this._fillCenter.y = t.y;
this._type === a.FILLED && this.setVertsDirty();
},
tooltip: !1
},
fillStart: {
get: function() {
return this._fillStart;
},
set: function(t) {
this._fillStart = n.clampf(t, -1, 1);
this._type === a.FILLED && this.setVertsDirty();
},
tooltip: !1
},
fillRange: {
get: function() {
return this._fillRange;
},
set: function(t) {
this._fillRange = n.clampf(t, -1, 1);
this._type === a.FILLED && this.setVertsDirty();
},
tooltip: !1
},
trim: {
get: function() {
return this._isTrimmedMode;
},
set: function(t) {
if (this._isTrimmedMode !== t) {
this._isTrimmedMode = t;
this._type !== a.SIMPLE && this._type !== a.MESH || this.setVertsDirty();
}
},
animatable: !1,
tooltip: !1
},
sizeMode: {
get: function() {
return this._sizeMode;
},
set: function(t) {
this._sizeMode = t;
t !== l.CUSTOM && this._applySpriteSize();
},
animatable: !1,
type: l,
tooltip: !1
}
},
statics: {
FillType: c,
Type: a,
SizeMode: l,
State: u
},
setVisible: function(t) {
this.enabled = t;
},
setState: function() {},
getState: function() {},
onEnable: function() {
this._super();
if (this._spriteFrame && this._spriteFrame.textureLoaded()) this._activateMaterial(); else {
this.disableRender();
if (this._spriteFrame) {
this._spriteFrame.once("load", this._onTextureLoaded, this);
this._spriteFrame.ensureLoadTexture();
}
}
},
_on3DNodeChanged: function() {
this._resetAssembler();
},
_activateMaterialCanvas: function() {
this.setVertsDirty();
this.markForUpdateRenderData(!0);
this.markForRender(!0);
},
_activateMaterialWebgl: function() {
var t = this._spriteFrame;
if (t && t.textureLoaded()) {
var e = this.sharedMaterials[0];
(e = e ? o.getInstantiatedMaterial(e, this) : o.getInstantiatedBuiltinMaterial("2d-sprite", this)).setProperty("texture", t.getTexture());
this.setVertsDirty();
this.setMaterial(0, e);
this.markForRender(!0);
} else this.disableRender();
},
_applyAtlas: !1,
_canRender: function() {
if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
if (!this._enabled) return !1;
} else if (!this._enabled || !this.sharedMaterials[0] || !this.node._activeInHierarchy) return !1;
var t = this._spriteFrame;
return !(!t || !t.textureLoaded());
},
_applySpriteSize: function() {
if (this._spriteFrame) {
if (l.RAW === this._sizeMode) {
var t = this._spriteFrame._originalSize;
this.node.setContentSize(t);
} else if (l.TRIMMED === this._sizeMode) {
var e = this._spriteFrame._rect;
this.node.setContentSize(e.width, e.height);
}
this.setVertsDirty();
this._activateMaterial();
}
},
_onTextureLoaded: function() {
this.isValid && this._applySpriteSize();
},
_applySpriteFrame: function(t) {
t && !t.textureLoaded() && t.off("load", this._onTextureLoaded, this);
var e = this._spriteFrame;
if (e) if (e.textureLoaded()) this._applySpriteSize(); else {
this.markForRender(!1);
e.once("load", this._onTextureLoaded, this);
e.ensureLoadTexture();
} else this.markForRender(!1);
0;
},
_resized: !1
});
0;
cc.Sprite = e.exports = h;
}), {
"../CCNode": 15,
"../assets/material/CCMaterial": 38,
"../renderer/render-flow": 171,
"../utils/blend-func": 195,
"../utils/misc": 200,
"./CCRenderComponent": 60
} ],
62: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
NONE: 0,
CHECKBOX: 1,
TEXT_ATLAS: 2,
SLIDER_BAR: 3,
LIST_VIEW: 4,
PAGE_VIEW: 5
}), r = cc.Enum({
VERTICAL: 0,
HORIZONTAL: 1
}), s = cc.Enum({
TOP: 0,
CENTER: 1,
BOTTOM: 2
}), o = cc.Enum({
LEFT: 0,
CENTER: 1,
RIGHT: 2
}), a = cc.Class({
name: "cc.StudioComponent",
extends: cc.Component,
editor: !1,
properties: !1,
statics: {
ComponentType: n,
ListDirection: r,
VerticalAlign: s,
HorizontalAlign: o
}
}), c = t("../utils/prefab-helper");
a.PlaceHolder = cc.Class({
name: "cc.StudioComponent.PlaceHolder",
extends: cc.Component,
properties: {
_baseUrl: "",
nestedPrefab: cc.Prefab
},
onLoad: function() {
this.nestedPrefab && this._replaceWithNestedPrefab();
},
_replaceWithNestedPrefab: function() {
var t = this.node, e = t._prefab;
e.root = t;
e.asset = this.nestedPrefab;
c.syncWithPrefab(t);
}
});
cc.StudioComponent = e.exports = a;
var l = cc.Class({
name: "cc.StudioWidget",
extends: cc.Widget,
editor: !1,
_validateTargetInDEV: function() {}
});
cc.StudioWidget = e.exports = l;
}), {
"../utils/prefab-helper": 202
} ],
63: [ (function(t, e, i) {
"use strict";
var n = t("../base-ui/CCWidgetManager"), r = n.AlignMode, s = n._AlignFlags, o = s.TOP, a = s.MID, c = s.BOT, l = s.LEFT, u = s.CENTER, h = s.RIGHT, _ = o | c, f = l | h, d = cc.Class({
name: "cc.Widget",
extends: t("./CCComponent"),
editor: !1,
properties: {
target: {
get: function() {
return this._target;
},
set: function(t) {
this._target = t;
0;
},
type: cc.Node,
tooltip: !1
},
isAlignTop: {
get: function() {
return (this._alignFlags & o) > 0;
},
set: function(t) {
this._setAlign(o, t);
},
animatable: !1,
tooltip: !1
},
isAlignVerticalCenter: {
get: function() {
return (this._alignFlags & a) > 0;
},
set: function(t) {
if (t) {
this.isAlignTop = !1;
this.isAlignBottom = !1;
this._alignFlags |= a;
} else this._alignFlags &= ~a;
},
animatable: !1,
tooltip: !1
},
isAlignBottom: {
get: function() {
return (this._alignFlags & c) > 0;
},
set: function(t) {
this._setAlign(c, t);
},
animatable: !1,
tooltip: !1
},
isAlignLeft: {
get: function() {
return (this._alignFlags & l) > 0;
},
set: function(t) {
this._setAlign(l, t);
},
animatable: !1,
tooltip: !1
},
isAlignHorizontalCenter: {
get: function() {
return (this._alignFlags & u) > 0;
},
set: function(t) {
if (t) {
this.isAlignLeft = !1;
this.isAlignRight = !1;
this._alignFlags |= u;
} else this._alignFlags &= ~u;
},
animatable: !1,
tooltip: !1
},
isAlignRight: {
get: function() {
return (this._alignFlags & h) > 0;
},
set: function(t) {
this._setAlign(h, t);
},
animatable: !1,
tooltip: !1
},
isStretchWidth: {
get: function() {
return (this._alignFlags & f) === f;
},
visible: !1
},
isStretchHeight: {
get: function() {
return (this._alignFlags & _) === _;
},
visible: !1
},
top: {
get: function() {
return this._top;
},
set: function(t) {
this._top = t;
},
tooltip: !1
},
bottom: {
get: function() {
return this._bottom;
},
set: function(t) {
this._bottom = t;
},
tooltip: !1
},
left: {
get: function() {
return this._left;
},
set: function(t) {
this._left = t;
},
tooltip: !1
},
right: {
get: function() {
return this._right;
},
set: function(t) {
this._right = t;
},
tooltip: !1
},
horizontalCenter: {
get: function() {
return this._horizontalCenter;
},
set: function(t) {
this._horizontalCenter = t;
},
tooltip: !1
},
verticalCenter: {
get: function() {
return this._verticalCenter;
},
set: function(t) {
this._verticalCenter = t;
},
tooltip: !1
},
isAbsoluteHorizontalCenter: {
get: function() {
return this._isAbsHorizontalCenter;
},
set: function(t) {
this._isAbsHorizontalCenter = t;
},
animatable: !1
},
isAbsoluteVerticalCenter: {
get: function() {
return this._isAbsVerticalCenter;
},
set: function(t) {
this._isAbsVerticalCenter = t;
},
animatable: !1
},
isAbsoluteTop: {
get: function() {
return this._isAbsTop;
},
set: function(t) {
this._isAbsTop = t;
},
animatable: !1
},
isAbsoluteBottom: {
get: function() {
return this._isAbsBottom;
},
set: function(t) {
this._isAbsBottom = t;
},
animatable: !1
},
isAbsoluteLeft: {
get: function() {
return this._isAbsLeft;
},
set: function(t) {
this._isAbsLeft = t;
},
animatable: !1
},
isAbsoluteRight: {
get: function() {
return this._isAbsRight;
},
set: function(t) {
this._isAbsRight = t;
},
animatable: !1
},
alignMode: {
default: r.ON_WINDOW_RESIZE,
type: r,
tooltip: !1
},
_wasAlignOnce: {
default: void 0,
formerlySerializedAs: "isAlignOnce"
},
_target: null,
_alignFlags: 0,
_left: 0,
_right: 0,
_top: 0,
_bottom: 0,
_verticalCenter: 0,
_horizontalCenter: 0,
_isAbsLeft: !0,
_isAbsRight: !0,
_isAbsTop: !0,
_isAbsBottom: !0,
_isAbsHorizontalCenter: !0,
_isAbsVerticalCenter: !0,
_originalWidth: 0,
_originalHeight: 0
},
statics: {
AlignMode: r
},
onLoad: function() {
if (void 0 !== this._wasAlignOnce) {
this.alignMode = this._wasAlignOnce ? r.ONCE : r.ALWAYS;
this._wasAlignOnce = void 0;
}
},
onEnable: function() {
n.add(this);
},
onDisable: function() {
n.remove(this);
},
_validateTargetInDEV: !1,
_setAlign: function(t, e) {
if (e !== (this._alignFlags & t) > 0) {
var i = (t & f) > 0;
if (e) {
this._alignFlags |= t;
if (i) {
this.isAlignHorizontalCenter = !1;
if (this.isStretchWidth) {
this._originalWidth = this.node.width;
0;
}
} else {
this.isAlignVerticalCenter = !1;
if (this.isStretchHeight) {
this._originalHeight = this.node.height;
0;
}
}
0;
} else {
i ? this.isStretchWidth && (this.node.width = this._originalWidth) : this.isStretchHeight && (this.node.height = this._originalHeight);
this._alignFlags &= ~t;
}
}
},
updateAlignment: function() {
n.updateAlignment(this.node);
}
});
Object.defineProperty(d.prototype, "isAlignOnce", {
get: function() {
0;
return this.alignMode === r.ONCE;
},
set: function(t) {
0;
this.alignMode = t ? r.ONCE : r.ALWAYS;
}
});
cc.Widget = e.exports = d;
}), {
"../base-ui/CCWidgetManager": 40,
"./CCComponent": 55
} ],
64: [ (function(t, e, i) {
"use strict";
t("./CCComponent");
t("./CCComponentEventHandler");
t("./missing-script");
var n = t("./WXSubContextView"), r = t("./SwanSubContextView");
n || (n = cc.Class({
name: "cc.WXSubContextView",
extends: cc.Component
}));
r || (r = cc.Class({
name: "cc.SwanSubContextView",
extends: cc.Component
}));
var s = [ t("./CCSprite"), t("./CCWidget"), t("./CCCanvas"), t("./CCAudioSource"), t("./CCAnimation"), t("./CCButton"), t("./CCLabel"), t("./CCProgressBar"), t("./CCMask"), t("./CCScrollBar"), t("./CCScrollView"), t("./CCPageViewIndicator"), t("./CCPageView"), t("./CCSlider"), t("./CCLayout"), t("./editbox/CCEditBox"), t("./CCLabelOutline"), t("./CCLabelShadow"), t("./CCRichText"), t("./CCToggleContainer"), t("./CCToggleGroup"), t("./CCToggle"), t("./CCBlockInputEvents"), t("./CCMotionStreak"), n, r ];
e.exports = s;
}), {
"./CCAnimation": void 0,
"./CCAudioSource": 51,
"./CCBlockInputEvents": 52,
"./CCButton": 53,
"./CCCanvas": 54,
"./CCComponent": 55,
"./CCComponentEventHandler": 56,
"./CCLabel": 57,
"./CCLabelOutline": 58,
"./CCLabelShadow": 59,
"./CCLayout": void 0,
"./CCMask": void 0,
"./CCMotionStreak": void 0,
"./CCPageView": void 0,
"./CCPageViewIndicator": void 0,
"./CCProgressBar": void 0,
"./CCRichText": void 0,
"./CCScrollBar": void 0,
"./CCScrollView": void 0,
"./CCSlider": void 0,
"./CCSprite": 61,
"./CCToggle": void 0,
"./CCToggleContainer": void 0,
"./CCToggleGroup": void 0,
"./CCWidget": 63,
"./SwanSubContextView": void 0,
"./WXSubContextView": void 0,
"./editbox/CCEditBox": void 0,
"./missing-script": 65
} ],
65: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("../utils/misc").BUILTIN_CLASSID_RE, s = cc.Class({
name: "cc.MissingClass",
properties: {
_$erialized: {
default: null,
visible: !1,
editorOnly: !0
}
}
}), o = cc.Class({
name: "cc.MissingScript",
extends: cc.Component,
editor: {
inspector: "packages://inspector/inspectors/comps/missing-script.js"
},
properties: {
compiled: {
default: !1,
serializable: !1
},
_$erialized: {
default: null,
visible: !1,
editorOnly: !0
}
},
ctor: !1,
statics: {
safeFindClass: function(t, e) {
var i = n._getClassById(t);
if (i) return i;
if (t) {
cc.deserialize.reportMissingClass(t);
return o.getMissingWrapper(t, e);
}
return null;
},
getMissingWrapper: function(t, e) {
return e.node && (/^[0-9a-zA-Z+/]{23}$/.test(t) || r.test(t)) ? o : s;
}
},
onLoad: function() {
cc.warnID(4600, this.node.name);
}
});
cc._MissingScript = e.exports = o;
}), {
"../utils/misc": 200
} ],
66: [ (function(t, e, i) {
"use strict";
var n = cc.js;
t("../event/event");
var r = function(t, e) {
cc.Event.call(this, cc.Event.MOUSE, e);
this._eventType = t;
this._button = 0;
this._x = 0;
this._y = 0;
this._prevX = 0;
this._prevY = 0;
this._scrollX = 0;
this._scrollY = 0;
};
n.extend(r, cc.Event);
var s = r.prototype;
s.setScrollData = function(t, e) {
this._scrollX = t;
this._scrollY = e;
};
s.getScrollX = function() {
return this._scrollX;
};
s.getScrollY = function() {
return this._scrollY;
};
s.setLocation = function(t, e) {
this._x = t;
this._y = e;
};
s.getLocation = function() {
return cc.v2(this._x, this._y);
};
s.getLocationInView = function() {
return cc.v2(this._x, cc.view._designResolutionSize.height - this._y);
};
s._setPrevCursor = function(t, e) {
this._prevX = t;
this._prevY = e;
};
s.getPreviousLocation = function() {
return cc.v2(this._prevX, this._prevY);
};
s.getDelta = function() {
return cc.v2(this._x - this._prevX, this._y - this._prevY);
};
s.getDeltaX = function() {
return this._x - this._prevX;
};
s.getDeltaY = function() {
return this._y - this._prevY;
};
s.setButton = function(t) {
this._button = t;
};
s.getButton = function() {
return this._button;
};
s.getLocationX = function() {
return this._x;
};
s.getLocationY = function() {
return this._y;
};
r.NONE = 0;
r.DOWN = 1;
r.UP = 2;
r.MOVE = 3;
r.SCROLL = 4;
r.BUTTON_LEFT = 0;
r.BUTTON_RIGHT = 2;
r.BUTTON_MIDDLE = 1;
r.BUTTON_4 = 3;
r.BUTTON_5 = 4;
r.BUTTON_6 = 5;
r.BUTTON_7 = 6;
r.BUTTON_8 = 7;
var o = function(t, e) {
cc.Event.call(this, cc.Event.TOUCH, e);
this._eventCode = 0;
this._touches = t || [];
this.touch = null;
this.currentTouch = null;
};
n.extend(o, cc.Event);
(s = o.prototype).getEventCode = function() {
return this._eventCode;
};
s.getTouches = function() {
return this._touches;
};
s._setEventCode = function(t) {
this._eventCode = t;
};
s._setTouches = function(t) {
this._touches = t;
};
s.setLocation = function(t, e) {
this.touch && this.touch.setTouchInfo(this.touch.getID(), t, e);
};
s.getLocation = function() {
return this.touch ? this.touch.getLocation() : cc.v2();
};
s.getLocationInView = function() {
return this.touch ? this.touch.getLocationInView() : cc.v2();
};
s.getPreviousLocation = function() {
return this.touch ? this.touch.getPreviousLocation() : cc.v2();
};
s.getStartLocation = function() {
return this.touch ? this.touch.getStartLocation() : cc.v2();
};
s.getID = function() {
return this.touch ? this.touch.getID() : null;
};
s.getDelta = function() {
return this.touch ? this.touch.getDelta() : cc.v2();
};
s.getDeltaX = function() {
return this.touch ? this.touch.getDelta().x : 0;
};
s.getDeltaY = function() {
return this.touch ? this.touch.getDelta().y : 0;
};
s.getLocationX = function() {
return this.touch ? this.touch.getLocationX() : 0;
};
s.getLocationY = function() {
return this.touch ? this.touch.getLocationY() : 0;
};
o.MAX_TOUCHES = 5;
o.BEGAN = 0;
o.MOVED = 1;
o.ENDED = 2;
o.CANCELED = 3;
var a = function(t, e) {
cc.Event.call(this, cc.Event.ACCELERATION, e);
this.acc = t;
};
n.extend(a, cc.Event);
var c = function(t, e, i) {
cc.Event.call(this, cc.Event.KEYBOARD, i);
this.keyCode = t;
this.isPressed = e;
};
n.extend(c, cc.Event);
cc.Event.EventMouse = r;
cc.Event.EventTouch = o;
cc.Event.EventAcceleration = a;
cc.Event.EventKeyboard = c;
e.exports = cc.Event;
}), {
"../event/event": 73
} ],
67: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.EventListener = function(t, e, i) {
this._onEvent = i;
this._type = t || 0;
this._listenerID = e || "";
this._registered = !1;
this._fixedPriority = 0;
this._node = null;
this._target = null;
this._paused = !0;
this._isEnabled = !0;
};
cc.EventListener.prototype = {
constructor: cc.EventListener,
_setPaused: function(t) {
this._paused = t;
},
_isPaused: function() {
return this._paused;
},
_setRegistered: function(t) {
this._registered = t;
},
_isRegistered: function() {
return this._registered;
},
_getType: function() {
return this._type;
},
_getListenerID: function() {
return this._listenerID;
},
_setFixedPriority: function(t) {
this._fixedPriority = t;
},
_getFixedPriority: function() {
return this._fixedPriority;
},
_setSceneGraphPriority: function(t) {
this._target = t;
this._node = t;
},
_getSceneGraphPriority: function() {
return this._node;
},
checkAvailable: function() {
return null !== this._onEvent;
},
clone: function() {
return null;
},
setEnabled: function(t) {
this._isEnabled = t;
},
isEnabled: function() {
return this._isEnabled;
},
retain: function() {},
release: function() {}
};
cc.EventListener.UNKNOWN = 0;
cc.EventListener.TOUCH_ONE_BY_ONE = 1;
cc.EventListener.TOUCH_ALL_AT_ONCE = 2;
cc.EventListener.KEYBOARD = 3;
cc.EventListener.MOUSE = 4;
cc.EventListener.ACCELERATION = 6;
cc.EventListener.CUSTOM = 8;
var r = cc.EventListener.ListenerID = {
MOUSE: "__cc_mouse",
TOUCH_ONE_BY_ONE: "__cc_touch_one_by_one",
TOUCH_ALL_AT_ONCE: "__cc_touch_all_at_once",
KEYBOARD: "__cc_keyboard",
ACCELERATION: "__cc_acceleration"
}, s = function(t, e) {
this._onCustomEvent = e;
cc.EventListener.call(this, cc.EventListener.CUSTOM, t, this._callback);
};
n.extend(s, cc.EventListener);
n.mixin(s.prototype, {
_onCustomEvent: null,
_callback: function(t) {
null !== this._onCustomEvent && this._onCustomEvent(t);
},
checkAvailable: function() {
return cc.EventListener.prototype.checkAvailable.call(this) && null !== this._onCustomEvent;
},
clone: function() {
return new s(this._listenerID, this._onCustomEvent);
}
});
var o = function() {
cc.EventListener.call(this, cc.EventListener.MOUSE, r.MOUSE, this._callback);
};
n.extend(o, cc.EventListener);
n.mixin(o.prototype, {
onMouseDown: null,
onMouseUp: null,
onMouseMove: null,
onMouseScroll: null,
_callback: function(t) {
var e = cc.Event.EventMouse;
switch (t._eventType) {
case e.DOWN:
this.onMouseDown && this.onMouseDown(t);
break;

case e.UP:
this.onMouseUp && this.onMouseUp(t);
break;

case e.MOVE:
this.onMouseMove && this.onMouseMove(t);
break;

case e.SCROLL:
this.onMouseScroll && this.onMouseScroll(t);
}
},
clone: function() {
var t = new o();
t.onMouseDown = this.onMouseDown;
t.onMouseUp = this.onMouseUp;
t.onMouseMove = this.onMouseMove;
t.onMouseScroll = this.onMouseScroll;
return t;
},
checkAvailable: function() {
return !0;
}
});
var a = function() {
cc.EventListener.call(this, cc.EventListener.TOUCH_ONE_BY_ONE, r.TOUCH_ONE_BY_ONE, null);
this._claimedTouches = [];
};
n.extend(a, cc.EventListener);
n.mixin(a.prototype, {
constructor: a,
_claimedTouches: null,
swallowTouches: !1,
onTouchBegan: null,
onTouchMoved: null,
onTouchEnded: null,
onTouchCancelled: null,
setSwallowTouches: function(t) {
this.swallowTouches = t;
},
isSwallowTouches: function() {
return this.swallowTouches;
},
clone: function() {
var t = new a();
t.onTouchBegan = this.onTouchBegan;
t.onTouchMoved = this.onTouchMoved;
t.onTouchEnded = this.onTouchEnded;
t.onTouchCancelled = this.onTouchCancelled;
t.swallowTouches = this.swallowTouches;
return t;
},
checkAvailable: function() {
if (!this.onTouchBegan) {
cc.logID(1801);
return !1;
}
return !0;
}
});
var c = function() {
cc.EventListener.call(this, cc.EventListener.TOUCH_ALL_AT_ONCE, r.TOUCH_ALL_AT_ONCE, null);
};
n.extend(c, cc.EventListener);
n.mixin(c.prototype, {
constructor: c,
onTouchesBegan: null,
onTouchesMoved: null,
onTouchesEnded: null,
onTouchesCancelled: null,
clone: function() {
var t = new c();
t.onTouchesBegan = this.onTouchesBegan;
t.onTouchesMoved = this.onTouchesMoved;
t.onTouchesEnded = this.onTouchesEnded;
t.onTouchesCancelled = this.onTouchesCancelled;
return t;
},
checkAvailable: function() {
if (null === this.onTouchesBegan && null === this.onTouchesMoved && null === this.onTouchesEnded && null === this.onTouchesCancelled) {
cc.logID(1802);
return !1;
}
return !0;
}
});
var l = function(t) {
this._onAccelerationEvent = t;
cc.EventListener.call(this, cc.EventListener.ACCELERATION, r.ACCELERATION, this._callback);
};
n.extend(l, cc.EventListener);
n.mixin(l.prototype, {
constructor: l,
_onAccelerationEvent: null,
_callback: function(t) {
this._onAccelerationEvent(t.acc, t);
},
checkAvailable: function() {
cc.assertID(this._onAccelerationEvent, 1803);
return !0;
},
clone: function() {
return new l(this._onAccelerationEvent);
}
});
var u = function() {
cc.EventListener.call(this, cc.EventListener.KEYBOARD, r.KEYBOARD, this._callback);
};
n.extend(u, cc.EventListener);
n.mixin(u.prototype, {
constructor: u,
onKeyPressed: null,
onKeyReleased: null,
_callback: function(t) {
t.isPressed ? this.onKeyPressed && this.onKeyPressed(t.keyCode, t) : this.onKeyReleased && this.onKeyReleased(t.keyCode, t);
},
clone: function() {
var t = new u();
t.onKeyPressed = this.onKeyPressed;
t.onKeyReleased = this.onKeyReleased;
return t;
},
checkAvailable: function() {
if (null === this.onKeyPressed && null === this.onKeyReleased) {
cc.logID(1800);
return !1;
}
return !0;
}
});
cc.EventListener.create = function(t) {
cc.assertID(t && t.event, 1900);
var e = t.event;
delete t.event;
var i = null;
if (e === cc.EventListener.TOUCH_ONE_BY_ONE) i = new a(); else if (e === cc.EventListener.TOUCH_ALL_AT_ONCE) i = new c(); else if (e === cc.EventListener.MOUSE) i = new o(); else if (e === cc.EventListener.CUSTOM) {
i = new s(t.eventName, t.callback);
delete t.eventName;
delete t.callback;
} else if (e === cc.EventListener.KEYBOARD) i = new u(); else if (e === cc.EventListener.ACCELERATION) {
i = new l(t.callback);
delete t.callback;
}
for (var n in t) i[n] = t[n];
return i;
};
e.exports = cc.EventListener;
}), {
"../platform/js": 146
} ],
68: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
t("./CCEventListener");
var r = cc.EventListener.ListenerID, s = function() {
this._fixedListeners = [];
this._sceneGraphListeners = [];
this.gt0Index = 0;
};
s.prototype = {
constructor: s,
size: function() {
return this._fixedListeners.length + this._sceneGraphListeners.length;
},
empty: function() {
return 0 === this._fixedListeners.length && 0 === this._sceneGraphListeners.length;
},
push: function(t) {
0 === t._getFixedPriority() ? this._sceneGraphListeners.push(t) : this._fixedListeners.push(t);
},
clearSceneGraphListeners: function() {
this._sceneGraphListeners.length = 0;
},
clearFixedListeners: function() {
this._fixedListeners.length = 0;
},
clear: function() {
this._sceneGraphListeners.length = 0;
this._fixedListeners.length = 0;
},
getFixedPriorityListeners: function() {
return this._fixedListeners;
},
getSceneGraphPriorityListeners: function() {
return this._sceneGraphListeners;
}
};
var o = function(t) {
var e = cc.Event, i = t.type;
if (i === e.ACCELERATION) return r.ACCELERATION;
if (i === e.KEYBOARD) return r.KEYBOARD;
if (i.startsWith(e.MOUSE)) return r.MOUSE;
i.startsWith(e.TOUCH) && cc.logID(2e3);
return "";
}, a = {
DIRTY_NONE: 0,
DIRTY_FIXED_PRIORITY: 1,
DIRTY_SCENE_GRAPH_PRIORITY: 2,
DIRTY_ALL: 3,
_listenersMap: {},
_priorityDirtyFlagMap: {},
_nodeListenersMap: {},
_toAddedListeners: [],
_toRemovedListeners: [],
_dirtyListeners: {},
_inDispatch: 0,
_isEnabled: !1,
_internalCustomListenerIDs: [],
_setDirtyForNode: function(t) {
var e = this._nodeListenersMap[t._id];
if (void 0 !== e) for (var i = 0, n = e.length; i < n; i++) {
var r = e[i]._getListenerID();
null == this._dirtyListeners[r] && (this._dirtyListeners[r] = !0);
}
if (t.getChildren) {
var s = t.getChildren(), o = 0;
for (n = s ? s.length : 0; o < n; o++) this._setDirtyForNode(s[o]);
}
},
pauseTarget: function(t, e) {
if (t instanceof cc._BaseNode) {
var i, n, r = this._nodeListenersMap[t._id];
if (r) for (i = 0, n = r.length; i < n; i++) r[i]._setPaused(!0);
if (!0 === e) {
var s = t.getChildren();
for (i = 0, n = s ? s.length : 0; i < n; i++) this.pauseTarget(s[i], !0);
}
} else cc.warnID(3506);
},
resumeTarget: function(t, e) {
if (t instanceof cc._BaseNode) {
var i, n, r = this._nodeListenersMap[t._id];
if (r) for (i = 0, n = r.length; i < n; i++) r[i]._setPaused(!1);
this._setDirtyForNode(t);
if (!0 === e && t.getChildren) {
var s = t.getChildren();
for (i = 0, n = s ? s.length : 0; i < n; i++) this.resumeTarget(s[i], !0);
}
} else cc.warnID(3506);
},
_addListener: function(t) {
0 === this._inDispatch ? this._forceAddEventListener(t) : this._toAddedListeners.push(t);
},
_forceAddEventListener: function(t) {
var e = t._getListenerID(), i = this._listenersMap[e];
if (!i) {
i = new s();
this._listenersMap[e] = i;
}
i.push(t);
if (0 === t._getFixedPriority()) {
this._setDirty(e, this.DIRTY_SCENE_GRAPH_PRIORITY);
var n = t._getSceneGraphPriority();
null === n && cc.logID(3507);
this._associateNodeAndEventListener(n, t);
n.activeInHierarchy && this.resumeTarget(n);
} else this._setDirty(e, this.DIRTY_FIXED_PRIORITY);
},
_getListeners: function(t) {
return this._listenersMap[t];
},
_updateDirtyFlagForSceneGraph: function() {
var t = this._dirtyListeners;
for (var e in t) this._setDirty(e, this.DIRTY_SCENE_GRAPH_PRIORITY);
this._dirtyListeners = {};
},
_removeAllListenersInVector: function(t) {
if (t) for (var e, i = t.length - 1; i >= 0; i--) {
(e = t[i])._setRegistered(!1);
if (null != e._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(e._getSceneGraphPriority(), e);
e._setSceneGraphPriority(null);
}
0 === this._inDispatch && cc.js.array.removeAt(t, i);
}
},
_removeListenersForListenerID: function(t) {
var e, i = this._listenersMap[t];
if (i) {
var n = i.getFixedPriorityListeners(), r = i.getSceneGraphPriorityListeners();
this._removeAllListenersInVector(r);
this._removeAllListenersInVector(n);
delete this._priorityDirtyFlagMap[t];
if (!this._inDispatch) {
i.clear();
delete this._listenersMap[t];
}
}
var s, o = this._toAddedListeners;
for (e = o.length - 1; e >= 0; e--) (s = o[e]) && s._getListenerID() === t && cc.js.array.removeAt(o, e);
},
_sortEventListeners: function(t) {
var e = this.DIRTY_NONE, i = this._priorityDirtyFlagMap;
i[t] && (e = i[t]);
if (e !== this.DIRTY_NONE) {
i[t] = this.DIRTY_NONE;
e & this.DIRTY_FIXED_PRIORITY && this._sortListenersOfFixedPriority(t);
if (e & this.DIRTY_SCENE_GRAPH_PRIORITY) {
cc.director.getScene() && this._sortListenersOfSceneGraphPriority(t);
}
}
},
_sortListenersOfSceneGraphPriority: function(t) {
var e = this._getListeners(t);
if (e) {
var i = e.getSceneGraphPriorityListeners();
i && 0 !== i.length && e.getSceneGraphPriorityListeners().sort(this._sortEventListenersOfSceneGraphPriorityDes);
}
},
_sortEventListenersOfSceneGraphPriorityDes: function(t, e) {
var i = t._getSceneGraphPriority(), n = e._getSceneGraphPriority();
if (!(e && n && n._activeInHierarchy && null !== n._parent)) return -1;
if (!t || !i || !i._activeInHierarchy || null === i._parent) return 1;
for (var r = i, s = n, o = !1; r._parent._id !== s._parent._id; ) {
r = null === r._parent._parent ? (o = !0) && n : r._parent;
s = null === s._parent._parent ? (o = !0) && i : s._parent;
}
if (r._id === s._id) {
if (r._id === n._id) return -1;
if (r._id === i._id) return 1;
}
return o ? r._localZOrder - s._localZOrder : s._localZOrder - r._localZOrder;
},
_sortListenersOfFixedPriority: function(t) {
var e = this._listenersMap[t];
if (e) {
var i = e.getFixedPriorityListeners();
if (i && 0 !== i.length) {
i.sort(this._sortListenersOfFixedPriorityAsc);
for (var n = 0, r = i.length; n < r && !(i[n]._getFixedPriority() >= 0); ) ++n;
e.gt0Index = n;
}
}
},
_sortListenersOfFixedPriorityAsc: function(t, e) {
return t._getFixedPriority() - e._getFixedPriority();
},
_onUpdateListeners: function(t) {
var e, i, n, r = t.getFixedPriorityListeners(), s = t.getSceneGraphPriorityListeners(), o = this._toRemovedListeners;
if (s) for (e = s.length - 1; e >= 0; e--) if (!(i = s[e])._isRegistered()) {
cc.js.array.removeAt(s, e);
-1 !== (n = o.indexOf(i)) && o.splice(n, 1);
}
if (r) for (e = r.length - 1; e >= 0; e--) if (!(i = r[e])._isRegistered()) {
cc.js.array.removeAt(r, e);
-1 !== (n = o.indexOf(i)) && o.splice(n, 1);
}
s && 0 === s.length && t.clearSceneGraphListeners();
r && 0 === r.length && t.clearFixedListeners();
},
frameUpdateListeners: function() {
var t = this._listenersMap, e = this._priorityDirtyFlagMap;
for (var i in t) if (t[i].empty()) {
delete e[i];
delete t[i];
}
var n = this._toAddedListeners;
if (0 !== n.length) {
for (var r = 0, s = n.length; r < s; r++) this._forceAddEventListener(n[r]);
n.length = 0;
}
0 !== this._toRemovedListeners.length && this._cleanToRemovedListeners();
},
_updateTouchListeners: function(t) {
var e = this._inDispatch;
cc.assertID(e > 0, 3508);
if (!(e > 1)) {
var i;
(i = this._listenersMap[r.TOUCH_ONE_BY_ONE]) && this._onUpdateListeners(i);
(i = this._listenersMap[r.TOUCH_ALL_AT_ONCE]) && this._onUpdateListeners(i);
cc.assertID(1 === e, 3509);
var n = this._toAddedListeners;
if (0 !== n.length) {
for (var s = 0, o = n.length; s < o; s++) this._forceAddEventListener(n[s]);
this._toAddedListeners.length = 0;
}
0 !== this._toRemovedListeners.length && this._cleanToRemovedListeners();
}
},
_cleanToRemovedListeners: function() {
for (var t = this._toRemovedListeners, e = 0; e < t.length; e++) {
var i = t[e], n = this._listenersMap[i._getListenerID()];
if (n) {
var r, s = n.getFixedPriorityListeners(), o = n.getSceneGraphPriorityListeners();
o && -1 !== (r = o.indexOf(i)) && o.splice(r, 1);
s && -1 !== (r = s.indexOf(i)) && s.splice(r, 1);
}
}
t.length = 0;
},
_onTouchEventCallback: function(t, e) {
if (!t._isRegistered()) return !1;
var i = e.event, n = i.currentTouch;
i.currentTarget = t._node;
var r, s = !1, o = i.getEventCode(), c = cc.Event.EventTouch;
if (o === c.BEGAN) t.onTouchBegan && (s = t.onTouchBegan(n, i)) && t._registered && t._claimedTouches.push(n); else if (t._claimedTouches.length > 0 && -1 !== (r = t._claimedTouches.indexOf(n))) {
s = !0;
if (o === c.MOVED && t.onTouchMoved) t.onTouchMoved(n, i); else if (o === c.ENDED) {
t.onTouchEnded && t.onTouchEnded(n, i);
t._registered && t._claimedTouches.splice(r, 1);
} else if (o === c.CANCELLED) {
t.onTouchCancelled && t.onTouchCancelled(n, i);
t._registered && t._claimedTouches.splice(r, 1);
}
}
if (i.isStopped()) {
a._updateTouchListeners(i);
return !0;
}
if (s && t.swallowTouches) {
e.needsMutableSet && e.touches.splice(n, 1);
return !0;
}
return !1;
},
_dispatchTouchEvent: function(t) {
this._sortEventListeners(r.TOUCH_ONE_BY_ONE);
this._sortEventListeners(r.TOUCH_ALL_AT_ONCE);
var e = this._getListeners(r.TOUCH_ONE_BY_ONE), i = this._getListeners(r.TOUCH_ALL_AT_ONCE);
if (null !== e || null !== i) {
var n = t.getTouches(), s = cc.js.array.copy(n), o = {
event: t,
needsMutableSet: e && i,
touches: s,
selTouch: null
};
if (e) for (var a = 0; a < n.length; a++) {
t.currentTouch = n[a];
t._propagationStopped = t._propagationImmediateStopped = !1;
this._dispatchEventToListeners(e, this._onTouchEventCallback, o);
}
if (i && s.length > 0) {
this._dispatchEventToListeners(i, this._onTouchesEventCallback, {
event: t,
touches: s
});
if (t.isStopped()) return;
}
this._updateTouchListeners(t);
}
},
_onTouchesEventCallback: function(t, e) {
if (!t._registered) return !1;
var i = cc.Event.EventTouch, n = e.event, r = e.touches, s = n.getEventCode();
n.currentTarget = t._node;
s === i.BEGAN && t.onTouchesBegan ? t.onTouchesBegan(r, n) : s === i.MOVED && t.onTouchesMoved ? t.onTouchesMoved(r, n) : s === i.ENDED && t.onTouchesEnded ? t.onTouchesEnded(r, n) : s === i.CANCELLED && t.onTouchesCancelled && t.onTouchesCancelled(r, n);
if (n.isStopped()) {
a._updateTouchListeners(n);
return !0;
}
return !1;
},
_associateNodeAndEventListener: function(t, e) {
var i = this._nodeListenersMap[t._id];
if (!i) {
i = [];
this._nodeListenersMap[t._id] = i;
}
i.push(e);
},
_dissociateNodeAndEventListener: function(t, e) {
var i = this._nodeListenersMap[t._id];
if (i) {
cc.js.array.remove(i, e);
0 === i.length && delete this._nodeListenersMap[t._id];
}
},
_dispatchEventToListeners: function(t, e, i) {
var n, r, s = !1, o = t.getFixedPriorityListeners(), a = t.getSceneGraphPriorityListeners(), c = 0;
if (o && 0 !== o.length) for (;c < t.gt0Index; ++c) if ((r = o[c]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
if (a && !s) for (n = 0; n < a.length; n++) if ((r = a[n]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
if (o && !s) for (;c < o.length; ++c) if ((r = o[c]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
},
_setDirty: function(t, e) {
var i = this._priorityDirtyFlagMap;
null == i[t] ? i[t] = e : i[t] = e | i[t];
},
_sortNumberAsc: function(t, e) {
return t - e;
},
hasEventListener: function(t) {
return !!this._getListeners(t);
},
addListener: function(t, e) {
cc.assertID(t && e, 3503);
if (cc.js.isNumber(e) || e instanceof cc._BaseNode) {
if (t instanceof cc.EventListener) {
if (t._isRegistered()) {
cc.logID(3505);
return;
}
} else {
cc.assertID(!cc.js.isNumber(e), 3504);
t = cc.EventListener.create(t);
}
if (t.checkAvailable()) {
if (cc.js.isNumber(e)) {
if (0 === e) {
cc.logID(3500);
return;
}
t._setSceneGraphPriority(null);
t._setFixedPriority(e);
t._setRegistered(!0);
t._setPaused(!1);
this._addListener(t);
} else {
t._setSceneGraphPriority(e);
t._setFixedPriority(0);
t._setRegistered(!0);
this._addListener(t);
}
return t;
}
} else cc.warnID(3506);
},
addCustomListener: function(t, e) {
var i = new cc.EventListener.create({
event: cc.EventListener.CUSTOM,
eventName: t,
callback: e
});
this.addListener(i, 1);
return i;
},
removeListener: function(t) {
if (null != t) {
var e, i = this._listenersMap;
for (var n in i) {
var r = i[n], s = r.getFixedPriorityListeners(), o = r.getSceneGraphPriorityListeners();
(e = this._removeListenerInVector(o, t)) ? this._setDirty(t._getListenerID(), this.DIRTY_SCENE_GRAPH_PRIORITY) : (e = this._removeListenerInVector(s, t)) && this._setDirty(t._getListenerID(), this.DIRTY_FIXED_PRIORITY);
if (r.empty()) {
delete this._priorityDirtyFlagMap[t._getListenerID()];
delete i[n];
}
if (e) break;
}
if (!e) for (var a = this._toAddedListeners, c = a.length - 1; c >= 0; c--) {
var l = a[c];
if (l === t) {
cc.js.array.removeAt(a, c);
l._setRegistered(!1);
break;
}
}
}
},
_removeListenerInCallback: function(t, e) {
if (null == t) return !1;
for (var i = t.length - 1; i >= 0; i--) {
var n = t[i];
if (n._onCustomEvent === e || n._onEvent === e) {
n._setRegistered(!1);
if (null != n._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(n._getSceneGraphPriority(), n);
n._setSceneGraphPriority(null);
}
0 === this._inDispatch ? cc.js.array.removeAt(t, i) : this._toRemovedListeners.push(n);
return !0;
}
}
return !1;
},
_removeListenerInVector: function(t, e) {
if (null == t) return !1;
for (var i = t.length - 1; i >= 0; i--) {
var n = t[i];
if (n === e) {
n._setRegistered(!1);
if (null != n._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(n._getSceneGraphPriority(), n);
n._setSceneGraphPriority(null);
}
0 === this._inDispatch ? cc.js.array.removeAt(t, i) : this._toRemovedListeners.push(n);
return !0;
}
}
return !1;
},
removeListeners: function(t, e) {
var i = this;
if (cc.js.isNumber(t) || t instanceof cc._BaseNode) if (void 0 !== t._id) {
var n, s = i._nodeListenersMap[t._id];
if (s) {
var o = cc.js.array.copy(s);
for (n = 0; n < o.length; n++) i.removeListener(o[n]);
delete i._nodeListenersMap[t._id];
}
var a = i._toAddedListeners;
for (n = 0; n < a.length; ) {
var c = a[n];
if (c._getSceneGraphPriority() === t) {
c._setSceneGraphPriority(null);
c._setRegistered(!1);
a.splice(n, 1);
} else ++n;
}
if (!0 === e) {
var l, u = t.getChildren();
for (n = 0, l = u.length; n < l; n++) i.removeListeners(u[n], !0);
}
} else t === cc.EventListener.TOUCH_ONE_BY_ONE ? i._removeListenersForListenerID(r.TOUCH_ONE_BY_ONE) : t === cc.EventListener.TOUCH_ALL_AT_ONCE ? i._removeListenersForListenerID(r.TOUCH_ALL_AT_ONCE) : t === cc.EventListener.MOUSE ? i._removeListenersForListenerID(r.MOUSE) : t === cc.EventListener.ACCELERATION ? i._removeListenersForListenerID(r.ACCELERATION) : t === cc.EventListener.KEYBOARD ? i._removeListenersForListenerID(r.KEYBOARD) : cc.logID(3501); else cc.warnID(3506);
},
removeCustomListeners: function(t) {
this._removeListenersForListenerID(t);
},
removeAllListeners: function() {
var t = this._listenersMap, e = this._internalCustomListenerIDs;
for (var i in t) -1 === e.indexOf(i) && this._removeListenersForListenerID(i);
},
setPriority: function(t, e) {
if (null != t) {
var i = this._listenersMap;
for (var n in i) {
var r = i[n].getFixedPriorityListeners();
if (r) {
if (-1 !== r.indexOf(t)) {
null != t._getSceneGraphPriority() && cc.logID(3502);
if (t._getFixedPriority() !== e) {
t._setFixedPriority(e);
this._setDirty(t._getListenerID(), this.DIRTY_FIXED_PRIORITY);
}
return;
}
}
}
}
},
setEnabled: function(t) {
this._isEnabled = t;
},
isEnabled: function() {
return this._isEnabled;
},
dispatchEvent: function(t) {
if (this._isEnabled) {
this._updateDirtyFlagForSceneGraph();
this._inDispatch++;
if (t && t.getType) if (t.getType().startsWith(cc.Event.TOUCH)) {
this._dispatchTouchEvent(t);
this._inDispatch--;
} else {
var e = o(t);
this._sortEventListeners(e);
var i = this._listenersMap[e];
if (null != i) {
this._dispatchEventToListeners(i, this._onListenerCallback, t);
this._onUpdateListeners(i);
}
this._inDispatch--;
} else cc.errorID(3511);
}
},
_onListenerCallback: function(t, e) {
e.currentTarget = t._target;
t._onEvent(e);
return e.isStopped();
},
dispatchCustomEvent: function(t, e) {
var i = new cc.Event.EventCustom(t);
i.setUserData(e);
this.dispatchEvent(i);
}
};
n.get(cc, "eventManager", (function() {
cc.warnID(1405, "cc.eventManager", "cc.EventTarget or cc.systemEvent");
return a;
}));
e.exports = a;
}), {
"../platform/js": 146,
"./CCEventListener": 67
} ],
69: [ (function(t, e, i) {
"use strict";
cc.Touch = function(t, e, i) {
this._lastModified = 0;
this.setTouchInfo(i, t, e);
};
cc.Touch.prototype = {
constructor: cc.Touch,
getLocation: function() {
return cc.v2(this._point.x, this._point.y);
},
getLocationX: function() {
return this._point.x;
},
getLocationY: function() {
return this._point.y;
},
getPreviousLocation: function() {
return cc.v2(this._prevPoint.x, this._prevPoint.y);
},
getStartLocation: function() {
return cc.v2(this._startPoint.x, this._startPoint.y);
},
getDelta: function() {
return this._point.sub(this._prevPoint);
},
getLocationInView: function() {
return cc.v2(this._point.x, cc.view._designResolutionSize.height - this._point.y);
},
getPreviousLocationInView: function() {
return cc.v2(this._prevPoint.x, cc.view._designResolutionSize.height - this._prevPoint.y);
},
getStartLocationInView: function() {
return cc.v2(this._startPoint.x, cc.view._designResolutionSize.height - this._startPoint.y);
},
getID: function() {
return this._id;
},
setTouchInfo: function(t, e, i) {
this._prevPoint = this._point;
this._point = cc.v2(e || 0, i || 0);
this._id = t;
if (!this._startPointCaptured) {
this._startPoint = cc.v2(this._point);
cc.view._convertPointWithScale(this._startPoint);
this._startPointCaptured = !0;
}
},
_setPoint: function(t, e) {
if (void 0 === e) {
this._point.x = t.x;
this._point.y = t.y;
} else {
this._point.x = t;
this._point.y = e;
}
},
_setPrevPoint: function(t, e) {
this._prevPoint = void 0 === e ? cc.v2(t.x, t.y) : cc.v2(t || 0, e || 0);
}
};
}), {} ],
70: [ (function(t, e, i) {
"use strict";
t("./CCEvent");
t("./CCTouch");
t("./CCEventListener");
var n = t("./CCEventManager");
e.exports = n;
0;
}), {
"./CCEvent": 66,
"./CCEventListener": 67,
"./CCEventManager": 68,
"./CCTouch": 69
} ],
71: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("../platform/callbacks-invoker");
function s() {
r.call(this);
}
n.extend(s, r);
s.prototype.emit = function(t, e) {
var i = t.type, n = this._callbackTable[i];
if (n) {
var r = !n.isInvoking;
n.isInvoking = !0;
for (var s = n.callbackInfos, o = 0, a = s.length; o < a; ++o) {
var c = s[o];
if (c && c.callback) {
c.callback.call(c.target, t, e);
if (t._propagationImmediateStopped) break;
}
}
if (r) {
n.isInvoking = !1;
n.containCanceled && n.purgeCanceled();
}
}
};
e.exports = s;
0;
}), {
"../platform/callbacks-invoker": 139
} ],
72: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../platform/callbacks-invoker"), s = n.array.fastRemove;
function o() {
r.call(this);
}
n.extend(o, r);
var a = o.prototype;
a.__on = a.on;
a.on = function(t, e, i, n) {
if (e) {
if (!this.hasEventListener(t, e, i)) {
this.__on(t, e, i, n);
i && i.__eventTargets && i.__eventTargets.push(this);
}
return e;
}
cc.errorID(6800);
};
a.__off = a.off;
a.off = function(t, e, i) {
if (e) {
this.__off(t, e, i);
i && i.__eventTargets && s(i.__eventTargets, this);
} else {
var n = this._callbackTable[t];
if (!n) return;
for (var r = n.callbackInfos, o = 0; o < r.length; ++o) {
var a = r[o].target;
a && a.__eventTargets && s(a.__eventTargets, this);
}
this.removeAll(t);
}
};
a.targetOff = function(t) {
this.removeAll(t);
t && t.__eventTargets && s(t.__eventTargets, this);
};
a.once = function(t, e, i) {
this.on(t, e, i, !0);
};
a.dispatchEvent = function(t) {
this.emit(t.type, t);
};
cc.EventTarget = e.exports = o;
}), {
"../platform/callbacks-invoker": 139,
"../platform/js": 146
} ],
73: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.Event = function(t, e) {
this.type = t;
this.bubbles = !!e;
this.target = null;
this.currentTarget = null;
this.eventPhase = 0;
this._propagationStopped = !1;
this._propagationImmediateStopped = !1;
};
cc.Event.prototype = {
constructor: cc.Event,
unuse: function() {
this.type = cc.Event.NO_TYPE;
this.target = null;
this.currentTarget = null;
this.eventPhase = cc.Event.NONE;
this._propagationStopped = !1;
this._propagationImmediateStopped = !1;
},
reuse: function(t, e) {
this.type = t;
this.bubbles = e || !1;
},
stopPropagation: function() {
this._propagationStopped = !0;
},
stopPropagationImmediate: function() {
this._propagationImmediateStopped = !0;
},
isStopped: function() {
return this._propagationStopped || this._propagationImmediateStopped;
},
getCurrentTarget: function() {
return this.currentTarget;
},
getType: function() {
return this.type;
}
};
cc.Event.NO_TYPE = "no_type";
cc.Event.TOUCH = "touch";
cc.Event.MOUSE = "mouse";
cc.Event.KEYBOARD = "keyboard";
cc.Event.ACCELERATION = "acceleration";
cc.Event.NONE = 0;
cc.Event.CAPTURING_PHASE = 1;
cc.Event.AT_TARGET = 2;
cc.Event.BUBBLING_PHASE = 3;
var r = function(t, e) {
cc.Event.call(this, t, e);
this.detail = null;
};
n.extend(r, cc.Event);
r.prototype.reset = r;
r.prototype.setUserData = function(t) {
this.detail = t;
};
r.prototype.getUserData = function() {
return this.detail;
};
r.prototype.getEventName = cc.Event.prototype.getType;
var s = new n.Pool(10);
r.put = function(t) {
s.put(t);
};
r.get = function(t, e) {
var i = s._get();
i ? i.reset(t, e) : i = new r(t, e);
return i;
};
cc.Event.EventCustom = r;
e.exports = cc.Event;
}), {
"../platform/js": 146
} ],
74: [ (function(t, e, i) {
"use strict";
t("./event");
t("./event-listeners");
t("./event-target");
t("./system-event");
}), {
"./event": 73,
"./event-listeners": 71,
"./event-target": 72,
"./system-event": 75
} ],
75: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../event-manager"), s = t("../platform/CCInputManager"), o = cc.Enum({
KEY_DOWN: "keydown",
KEY_UP: "keyup",
DEVICEMOTION: "devicemotion"
}), a = null, c = null, l = cc.Class({
name: "SystemEvent",
extends: n,
statics: {
EventType: o
},
setAccelerometerEnabled: function(t) {
0;
s.setAccelerometerEnabled(t);
},
setAccelerometerInterval: function(t) {
0;
s.setAccelerometerInterval(t);
},
on: function(t, e, i, n) {
0;
this._super(t, e, i, n);
if (t === o.KEY_DOWN || t === o.KEY_UP) {
a || (a = cc.EventListener.create({
event: cc.EventListener.KEYBOARD,
onKeyPressed: function(t, e) {
e.type = o.KEY_DOWN;
cc.systemEvent.dispatchEvent(e);
},
onKeyReleased: function(t, e) {
e.type = o.KEY_UP;
cc.systemEvent.dispatchEvent(e);
}
}));
r.hasEventListener(cc.EventListener.ListenerID.KEYBOARD) || r.addListener(a, 1);
}
if (t === o.DEVICEMOTION) {
c || (c = cc.EventListener.create({
event: cc.EventListener.ACCELERATION,
callback: function(t, e) {
e.type = o.DEVICEMOTION;
cc.systemEvent.dispatchEvent(e);
}
}));
r.hasEventListener(cc.EventListener.ListenerID.ACCELERATION) || r.addListener(c, 1);
}
},
off: function(t, e, i) {
0;
this._super(t, e, i);
if (a && (t === o.KEY_DOWN || t === o.KEY_UP)) {
var n = this.hasEventListener(o.KEY_DOWN), s = this.hasEventListener(o.KEY_UP);
n || s || r.removeListener(a);
}
c && t === o.DEVICEMOTION && r.removeListener(c);
}
});
cc.SystemEvent = e.exports = l;
cc.systemEvent = new cc.SystemEvent();
}), {
"../event-manager": 70,
"../event/event-target": 72,
"../platform/CCInputManager": 130
} ],
76: [ (function(t, e, i) {
"use strict";
t("./graphics");
}), {
"./graphics": void 0
} ],
77: [ (function(t, e, i) {
"use strict";
t("./platform");
t("./assets");
t("./CCNode");
t("./CCPrivateNode");
t("./CCScene");
t("./components");
t("./graphics");
t("./collider");
t("./collider/CCIntersection");
t("./physics");
t("./camera/CCCamera");
t("./geom-utils");
t("./mesh");
t("./3d");
t("./3d/polyfill-3d");
t("./base-ui/CCWidgetManager");
}), {
"./3d": void 0,
"./3d/polyfill-3d": 11,
"./CCNode": 15,
"./CCPrivateNode": 16,
"./CCScene": 17,
"./assets": 37,
"./base-ui/CCWidgetManager": 40,
"./camera/CCCamera": 41,
"./collider": 49,
"./collider/CCIntersection": 47,
"./components": 64,
"./geom-utils": void 0,
"./graphics": 76,
"./mesh": void 0,
"./physics": 110,
"./platform": 143
} ],
78: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("./pipeline"), s = t("./loading-items"), o = t("./asset-loader"), a = t("./downloader"), c = t("./loader"), l = t("./asset-table"), u = t("../platform/utils").callInNextTick, h = t("./auto-release-utils"), _ = Object.create(null);
_.assets = new l();
_.internal = new l();
var f = {
url: null,
raw: !1
};
function d(t) {
var e, i, n;
if ("object" == typeof t) {
i = t;
if (t.url) return i;
e = t.uuid;
} else {
i = {};
e = t;
}
n = i.type ? "uuid" === i.type : cc.AssetLibrary._uuidInSettings(e);
cc.AssetLibrary._getAssetInfoInRuntime(e, f);
i.url = n ? f.url : e;
if (f.url && "uuid" === i.type && f.raw) {
i.type = null;
i.isRawAsset = !0;
} else n || (i.isRawAsset = !0);
return i;
}
var p = [], m = [];
function y() {
var t = new o(), e = new a(), i = new c();
r.call(this, [ t, e, i ]);
this.assetLoader = t;
this.md5Pipe = null;
this.downloader = e;
this.loader = i;
this.onProgress = null;
this._autoReleaseSetting = n.createMap(!0);
0;
}
n.extend(y, r);
var v = y.prototype;
v.init = function(t) {};
v.getXMLHttpRequest = function() {
return window.XMLHttpRequest ? new window.XMLHttpRequest() : new ActiveXObject("MSXML2.XMLHTTP");
};
v.addDownloadHandlers = function(t) {
this.downloader.addHandlers(t);
};
v.addLoadHandlers = function(t) {
this.loader.addHandlers(t);
};
v.load = function(t, e, i) {
0;
if (void 0 === i) {
i = e;
e = this.onProgress || null;
}
var n, r = this, o = !1;
if (!(t instanceof Array)) if (t) {
o = !0;
t = [ t ];
} else t = [];
p.length = 0;
for (var a = 0; a < t.length; ++a) {
var c = t[a];
if (c && c.id) {
cc.warnID(4920, c.id);
c.uuid || c.url || (c.url = c.id);
}
if ((n = d(c)).url || n.uuid) {
var l = this._cache[n.url];
p.push(l || n);
}
}
var h = s.create(this, e, (function(t, e) {
u((function() {
if (i) {
if (o) {
var s = n.url;
i.call(r, t, e.getContent(s));
} else i.call(r, t, e);
i = null;
}
e.destroy();
}));
}));
s.initQueueDeps(h);
h.append(p);
p.length = 0;
};
v.flowInDeps = function(t, e, i) {
m.length = 0;
for (var n = 0; n < e.length; ++n) {
var r = d(e[n]);
if (r.url || r.uuid) {
var o = this._cache[r.url];
o ? m.push(o) : m.push(r);
}
}
var a = s.create(this, t ? function(t, e, i) {
this._ownerQueue && this._ownerQueue.onProgress && this._ownerQueue._childOnProgress(i);
} : null, (function(e, n) {
i(e, n);
t && t.deps && (t.deps.length = 0);
n.destroy();
}));
if (t) {
var c = s.getQueue(t);
a._ownerQueue = c._ownerQueue || c;
}
var l = a.append(m, t);
m.length = 0;
return l;
};
v._assetTables = _;
v._getResUuid = function(t, e, i, n) {
var r = _[i = i || "assets"];
if (!t || !r) return null;
var s = t.indexOf("?");
-1 !== s && (t = t.substr(0, s));
var o = r.getUuid(t, e);
if (!o) {
var a = cc.path.extname(t);
if (a) {
t = t.slice(0, -a.length);
(o = r.getUuid(t, e)) && !n && cc.warnID(4901, t, a);
}
}
return o;
};
v._getReferenceKey = function(t) {
var e;
"object" == typeof t ? e = t._uuid || null : "string" == typeof t && (e = this._getResUuid(t, null, null, !0) || t);
if (!e) {
cc.warnID(4800, t);
return e;
}
cc.AssetLibrary._getAssetInfoInRuntime(e, f);
return this._cache[f.url] ? f.url : e;
};
v._urlNotFound = function(t, e, i) {
u((function() {
t = cc.url.normalize(t);
var r = (e ? n.getClassName(e) : "Asset") + ' in "resources/' + t + '" does not exist.';
i && i(new Error(r), []);
}));
};
v._parseLoadResArgs = function(t, e, i) {
if (void 0 === i) {
var r = t instanceof Array || n.isChildClassOf(t, cc.RawAsset);
if (e) {
i = e;
r && (e = this.onProgress || null);
} else if (void 0 === e && !r) {
i = t;
e = this.onProgress || null;
t = null;
}
if (void 0 !== e && !r) {
e = t;
t = null;
}
}
return {
type: t,
onProgress: e,
onComplete: i
};
};
v.loadRes = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
var o = this, a = o._getResUuid(t, e, i);
a ? this.load({
type: "uuid",
uuid: a
}, n, (function(t, e) {
e && o.setAutoReleaseRecursively(a, !1);
r && r(t, e);
})) : o._urlNotFound(t, e, r);
};
v._loadResUuids = function(t, e, i, n) {
if (t.length > 0) {
var r = this, s = t.map((function(t) {
return {
type: "uuid",
uuid: t
};
}));
this.load(s, e, (function(t, e) {
if (i) {
for (var o = [], a = n && [], c = 0; c < s.length; ++c) {
var l = s[c].uuid, u = this._getReferenceKey(l), h = e.getContent(u);
if (h) {
r.setAutoReleaseRecursively(l, !1);
o.push(h);
a && a.push(n[c]);
}
}
n ? i(t, o, a) : i(t, o);
}
}));
} else i && u((function() {
n ? i(null, [], []) : i(null, []);
}));
};
v.loadResArray = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
for (var o = [], a = e instanceof Array, c = 0; c < t.length; c++) {
var l = t[c], u = a ? e[c] : e, h = this._getResUuid(l, u, i);
if (!h) {
this._urlNotFound(l, u, r);
return;
}
o.push(h);
}
this._loadResUuids(o, n, r);
};
v.loadResDir = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
if (_[i]) {
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
var o = [], a = _[i].getUuidArray(t, e, o);
this._loadResUuids(a, n, r, o);
}
};
v.getRes = function(t, e) {
var i = this._cache[t];
if (!i) {
var n = this._getResUuid(t, e, null, !0);
if (!n) return null;
var r = this._getReferenceKey(n);
i = this._cache[r];
}
i && i.alias && (i = i.alias);
return i && i.complete ? i.content : null;
};
v.getResCount = function() {
return Object.keys(this._cache).length;
};
v.getDependsRecursively = function(t) {
if (t) {
var e = this._getReferenceKey(t), i = h.getDependsRecursively(e);
i.push(e);
return i;
}
return [];
};
v.release = function(t) {
if (Array.isArray(t)) for (var e = 0; e < t.length; e++) {
var i = t[e];
this.release(i);
} else if (t) {
var n = this._getReferenceKey(t);
if (n && n in cc.AssetLibrary.getBuiltinDeps()) return;
var r = this.getItem(n);
if (r) {
this.removeItem(n);
t = r.content;
0;
}
if (t instanceof cc.Asset) {
var s = t.nativeUrl;
s && this.release(s);
t.destroy();
}
}
};
v.releaseAsset = function(t) {
var e = t._uuid;
e && this.release(e);
};
v.releaseRes = function(t, e, i) {
var n = this._getResUuid(t, e, i);
n ? this.release(n) : cc.errorID(4914, t);
};
v.releaseResDir = function(t, e, i) {
if (_[i = i || "assets"]) for (var n = _[i].getUuidArray(t, e), r = 0; r < n.length; r++) {
var s = n[r];
this.release(s);
}
};
v.releaseAll = function() {
for (var t in this._cache) this.release(t);
};
v.removeItem = function(t) {
var e = r.prototype.removeItem.call(this, t);
delete this._autoReleaseSetting[t];
return e;
};
v.setAutoRelease = function(t, e) {
var i = this._getReferenceKey(t);
i && (this._autoReleaseSetting[i] = !!e);
};
v.setAutoReleaseRecursively = function(t, e) {
e = !!e;
var i = this._getReferenceKey(t);
if (i) {
this._autoReleaseSetting[i] = e;
for (var n = h.getDependsRecursively(i), r = 0; r < n.length; r++) {
var s = n[r];
this._autoReleaseSetting[s] = e;
}
} else 0;
};
v.isAutoRelease = function(t) {
var e = this._getReferenceKey(t);
return !!e && !!this._autoReleaseSetting[e];
};
cc.loader = new y();
0;
e.exports = cc.loader;
}), {
"../platform/js": 146,
"../platform/utils": 150,
"./asset-loader": 79,
"./asset-table": 80,
"./auto-release-utils": 82,
"./downloader": 84,
"./loader": 87,
"./loading-items": 88,
"./pipeline": 91,
"./released-asset-checker": 92
} ],
79: [ (function(t, e, i) {
"use strict";
t("../utils/CCPath");
var n = t("../CCDebug"), r = t("./pipeline"), s = t("./loading-items"), o = "AssetLoader", a = function(t) {
this.id = o;
this.async = !0;
this.pipeline = null;
};
a.ID = o;
var c = [];
a.prototype.handle = function(t, e) {
var i = t.uuid;
if (!i) return t.content || null;
cc.AssetLibrary.queryAssetInfo(i, (function(r, o, a) {
if (r) e(r); else {
t.url = t.rawUrl = o;
t.isRawAsset = a;
if (a) {
var l = cc.path.extname(o).toLowerCase();
if (!l) {
e(new Error(n.getError(4931, i, o)));
return;
}
l = l.substr(1);
var u = s.getQueue(t);
c[0] = {
queueId: t.queueId,
id: o,
url: o,
type: l,
error: null,
alias: t,
complete: !0
};
0;
u.append(c);
t.type = l;
e(null, t.content);
} else {
t.type = "uuid";
e(null, t.content);
}
}
}));
};
r.AssetLoader = e.exports = a;
}), {
"../CCDebug": 12,
"../utils/CCPath": 192,
"./loading-items": 88,
"./pipeline": 91
} ],
80: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc").pushToMap, r = t("../platform/js");
function s(t, e) {
this.uuid = t;
this.type = e;
}
function o() {
this._pathToUuid = r.createMap(!0);
}
function a(t, e) {
if (t.length > e.length) {
var i = t.charCodeAt(e.length);
return 46 === i || 47 === i;
}
return !0;
}
var c = o.prototype;
c.getUuid = function(t, e) {
t = cc.url.normalize(t);
var i = this._pathToUuid[t];
if (i) if (Array.isArray(i)) {
if (!e) return i[0].uuid;
for (var n = 0; n < i.length; n++) {
var s = i[n];
if (r.isChildClassOf(s.type, e)) return s.uuid;
}
} else {
if (!e || r.isChildClassOf(i.type, e)) return i.uuid;
0;
}
return "";
};
c.getUuidArray = function(t, e, i) {
"/" === (t = cc.url.normalize(t))[t.length - 1] && (t = t.slice(0, -1));
var n = this._pathToUuid, s = [], o = r.isChildClassOf;
for (var c in n) if (c.startsWith(t) && a(c, t) || !t) {
var l = n[c];
if (Array.isArray(l)) for (var u = 0; u < l.length; u++) {
var h = l[u];
if (!e || o(h.type, e)) {
s.push(h.uuid);
i && i.push(c);
} else 0;
} else if (!e || o(l.type, e)) {
s.push(l.uuid);
i && i.push(c);
} else 0;
}
0;
return s;
};
c.add = function(t, e, i, r) {
t = t.substring(0, t.length - cc.path.extname(t).length);
var o = new s(e, i);
n(this._pathToUuid, t, o, r);
};
c._getInfo_DEBUG = !1;
c.reset = function() {
this._pathToUuid = r.createMap(!0);
};
e.exports = o;
}), {
"../platform/js": 146,
"../utils/misc": 200
} ],
81: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCSys"), r = t("../CCDebug"), s = n.__audioSupport, o = s.format, a = s.context;
function c(t, e) {
var i = document.createElement("audio");
i.src = t.url;
var n = function() {
clearTimeout(r);
i.removeEventListener("canplaythrough", o, !1);
i.removeEventListener("error", a, !1);
s.USE_LOADER_EVENT && i.removeEventListener(s.USE_LOADER_EVENT, o, !1);
}, r = setTimeout((function() {
0 === i.readyState ? a() : o();
}), 8e3), o = function() {
n();
e(null, i);
}, a = function() {
n();
var i = "load audio failure - " + t.url;
cc.log(i);
e(i);
};
i.addEventListener("canplaythrough", o, !1);
i.addEventListener("error", a, !1);
s.USE_LOADER_EVENT && i.addEventListener(s.USE_LOADER_EVENT, o, !1);
}
function l(t, e) {
a || e(new Error(r.getError(4926)));
var i = cc.loader.getXMLHttpRequest();
i.open("GET", t.url, !0);
i.responseType = "arraybuffer";
i.onload = function() {
a.decodeAudioData(i.response, (function(t) {
e(null, t);
}), (function() {
e("decode error - " + t.id, null);
}));
};
i.onerror = function() {
e("request error - " + t.id, null);
};
i.send();
}
e.exports = function(t, e) {
if (0 === o.length) return new Error(r.getError(4927));
var i;
i = s.WEB_AUDIO ? t._owner instanceof cc.AudioClip ? t._owner.loadMode === cc.AudioClip.LoadMode.WEB_AUDIO ? l : c : t.urlParam && t.urlParam.useDom ? c : l : c;
i(t, e);
};
}), {
"../CCDebug": 12,
"../platform/CCSys": 135
} ],
82: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
function r(t, e) {
var i = cc.loader.getItem(t);
if (i) {
var n = i.dependKeys;
if (n) for (var s = 0; s < n.length; s++) {
var o = n[s];
if (!e[o]) {
e[o] = !0;
r(o, e);
}
}
}
}
function s(t, e) {
if (t._uuid) {
var i = cc.loader._getReferenceKey(t);
if (!e[i]) {
e[i] = !0;
r(i, e);
}
}
}
function o(t, e) {
for (var i = Object.getOwnPropertyNames(t), n = 0; n < i.length; n++) {
var r = t[i[n]];
if ("object" == typeof r && r) if (Array.isArray(r)) for (var o = 0; o < r.length; o++) {
var a = r[o];
a instanceof cc.RawAsset && s(a, e);
} else if (r.constructor && r.constructor !== Object) r instanceof cc.RawAsset && s(r, e); else for (var c = Object.getOwnPropertyNames(r), l = 0; l < c.length; l++) {
var u = r[c[l]];
u instanceof cc.RawAsset && s(u, e);
}
}
}
function a(t, e) {
for (var i = 0; i < t._components.length; i++) o(t._components[i], e);
for (var n = 0; n < t._children.length; n++) a(t._children[n], e);
}
e.exports = {
autoRelease: function(t, e, i) {
var r = cc.loader._autoReleaseSetting, s = n.createMap();
if (e) for (var o = 0; o < e.length; o++) s[e[o]] = !0;
for (var c = 0; c < i.length; c++) a(i[c], s);
if (t) for (var l = 0; l < t.length; l++) {
var u = t[l];
!1 === r[u] || s[u] || cc.loader.release(u);
}
for (var h = Object.keys(r), _ = 0; _ < h.length; _++) {
var f = h[_];
!0 !== r[f] || s[f] || cc.loader.release(f);
}
},
getDependsRecursively: function(t) {
var e = {};
r(t, e);
return Object.keys(e);
}
};
}), {
"../platform/js": 146
} ],
83: [ (function(t, e, i) {
"use strict";
e.exports = function(t, e) {
var i = t.url, n = cc.loader.getXMLHttpRequest(), r = "Load binary data failed: " + i;
n.open("GET", i, !0);
n.responseType = "arraybuffer";
n.onload = function() {
var t = n.response;
if (t) {
var i = new Uint8Array(t);
e(null, i);
} else e({
status: n.status,
errorMessage: r + "(no response)"
});
};
n.onerror = function() {
e({
status: n.status,
errorMessage: r + "(error)"
});
};
n.ontimeout = function() {
e({
status: n.status,
errorMessage: r + "(time out)"
});
};
n.send(null);
};
}), {} ],
84: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../CCDebug");
t("../utils/CCPath");
var s, o = t("./pipeline"), a = t("./pack-downloader"), c = t("./binary-downloader"), l = t("./text-downloader"), u = t("./utils").urlAppendTimestamp;
function h() {
return null;
}
function _(t, e, i) {
var n = t.url, s = document, o = document.createElement("script");
"file:" !== window.location.protocol && (o.crossOrigin = "anonymous");
o.async = i;
o.src = u(n);
function a() {
o.parentNode.removeChild(o);
o.removeEventListener("load", a, !1);
o.removeEventListener("error", c, !1);
e(null, n);
}
function c() {
o.parentNode.removeChild(o);
o.removeEventListener("load", a, !1);
o.removeEventListener("error", c, !1);
e(new Error(r.getError(4928, n)));
}
o.addEventListener("load", a, !1);
o.addEventListener("error", c, !1);
s.body.appendChild(o);
}
function f(t, e, i, n) {
void 0 === i && (i = !0);
var s = u(t.url);
n = n || new Image();
i && "file:" !== window.location.protocol ? n.crossOrigin = "anonymous" : n.crossOrigin = null;
if (n.complete && n.naturalWidth > 0 && n.src === s) return n;
var o = function i() {
n.removeEventListener("load", i);
n.removeEventListener("error", a);
n.id = t.id;
e(null, n);
}, a = function i() {
n.removeEventListener("load", o);
n.removeEventListener("error", i);
"https:" !== window.location.protocol && n.crossOrigin && "anonymous" === n.crossOrigin.toLowerCase() ? f(t, e, !1, n) : e(new Error(r.getError(4930, s)));
};
n.addEventListener("load", o);
n.addEventListener("error", a);
n.src = s;
}
var d = {
js: _,
png: f,
jpg: f,
bmp: f,
jpeg: f,
gif: f,
ico: f,
tiff: f,
webp: f,
image: f,
pvr: c,
pkm: c,
mp3: s = t("./audio-downloader"),
ogg: s,
wav: s,
m4a: s,
txt: l,
xml: l,
vsh: l,
fsh: l,
atlas: l,
tmx: l,
tsx: l,
json: l,
ExportJson: l,
plist: l,
fnt: l,
font: h,
eot: h,
ttf: h,
woff: h,
svg: h,
ttc: h,
uuid: function(t, e) {
var i = a.load(t, e);
return void 0 === i ? this.extMap.json(t, e) : i || void 0;
},
binary: c,
bin: c,
dbbin: c,
default: l
}, p = "Downloader", m = function(t) {
this.id = p;
this.async = !0;
this.pipeline = null;
this._curConcurrent = 0;
this._loadQueue = [];
this._subpackages = {};
this.extMap = n.mixin(t, d);
};
m.ID = p;
m.PackDownloader = a;
m.prototype.addHandlers = function(t) {
n.mixin(this.extMap, t);
};
m.prototype._handleLoadQueue = function() {
for (;this._curConcurrent < cc.macro.DOWNLOAD_MAX_CONCURRENT; ) {
var t = this._loadQueue.shift();
if (!t) break;
var e = this.handle(t.item, t.callback);
void 0 !== e && (e instanceof Error ? t.callback(e) : t.callback(null, e));
}
};
m.prototype.handle = function(t, e) {
var i = this, n = this.extMap[t.type] || this.extMap.default, r = void 0;
if (this._curConcurrent < cc.macro.DOWNLOAD_MAX_CONCURRENT) {
this._curConcurrent++;
if (void 0 !== (r = n.call(this, t, (function(t, n) {
i._curConcurrent = Math.max(0, i._curConcurrent - 1);
i._handleLoadQueue();
e && e(t, n);
})))) {
this._curConcurrent = Math.max(0, this._curConcurrent - 1);
this._handleLoadQueue();
return r;
}
} else if (t.ignoreMaxConcurrency) {
if (void 0 !== (r = n.call(this, t, e))) return r;
} else this._loadQueue.push({
item: t,
callback: e
});
};
m.prototype.loadSubpackage = function(t, e) {
var i = this._subpackages[t];
i ? i.loaded ? e && e() : _({
url: i.path + "index.js"
}, (function(t) {
t || (i.loaded = !0);
e && e(t);
})) : e && e(new Error("Can't find subpackage " + t));
};
o.Downloader = e.exports = m;
}), {
"../CCDebug": 12,
"../platform/js": 146,
"../utils/CCPath": 192,
"./audio-downloader": 81,
"./binary-downloader": 83,
"./pack-downloader": 90,
"./pipeline": 91,
"./text-downloader": 94,
"./utils": 96
} ],
85: [ (function(t, e, i) {
"use strict";
var n = t("../utils/text-utils"), r = null, s = "BES bswy:->@123丁ぁᄁ", o = {}, a = -1, c = [], l = 3e3, u = (function() {
var t = void 0;
return function() {
if (void 0 === t) if (window.FontFace) {
var e = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent), i = /OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);
t = e ? parseInt(e[1], 10) > 42 : !i;
} else t = !1;
return t;
};
})();
function h() {
for (var t = !0, e = Date.now(), i = c.length - 1; i >= 0; i--) {
var o = c[i], u = o.fontFamilyName;
if (e - o.startTime > l) {
cc.warnID(4933, u);
o.callback(null, u);
c.splice(i, 1);
} else {
var h = o.refWidth;
r.font = "40px " + u;
if (h !== n.safeMeasureText(r, s)) {
c.splice(i, 1);
o.callback(null, u);
} else t = !1;
}
}
if (t) {
clearInterval(a);
a = -1;
}
}
function _(t, e, i) {
var n = new Promise(function(i, n) {
(function r() {
Date.now() - t >= l ? n() : document.fonts.load("40px " + e).then((function(t) {
t.length >= 1 ? i() : setTimeout(r, 100);
}), (function() {
n();
}));
})();
}), r = null, s = new Promise(function(t, e) {
r = setTimeout(e, l);
});
Promise.race([ s, n ]).then((function() {
if (r) {
clearTimeout(r);
r = null;
}
i(null, e);
}), (function() {
cc.warnID(4933, e);
i(null, e);
}));
}
var f = {
loadFont: function(t, e) {
var i = t.url, l = f._getFontFamily(i);
if (o[l]) return l;
if (!r) {
var d = document.createElement("canvas");
d.width = 100;
d.height = 100;
r = d.getContext("2d");
}
var p = "40px " + l;
r.font = p;
var m = n.safeMeasureText(r, s), y = document.createElement("style");
y.type = "text/css";
var v = "";
isNaN(l - 0) ? v += "@font-face { font-family:" + l + "; src:" : v += "@font-face { font-family:'" + l + "'; src:";
v += "url('" + i + "');";
y.textContent = v + "}";
document.body.appendChild(y);
var g = document.createElement("div"), C = g.style;
C.fontFamily = l;
g.innerHTML = ".";
C.position = "absolute";
C.left = "-100px";
C.top = "-100px";
document.body.appendChild(g);
if (u()) _(Date.now(), l, e); else {
var x = {
fontFamilyName: l,
refWidth: m,
callback: e,
startTime: Date.now()
};
c.push(x);
-1 === a && (a = setInterval(h, 100));
}
o[l] = y;
},
_getFontFamily: function(t) {
var e = t.lastIndexOf(".ttf");
if (-1 === e) return t;
var i, n = t.lastIndexOf("/");
-1 !== (i = -1 === n ? t.substring(0, e) + "_LABEL" : t.substring(n + 1, e) + "_LABEL").indexOf(" ") && (i = '"' + i + '"');
return i;
}
};
e.exports = f;
}), {
"../utils/text-utils": 206
} ],
86: [ (function(t, e, i) {
"use strict";
t("./downloader");
t("./loader");
t("./loading-items");
t("./pipeline");
t("./CCLoader");
}), {
"./CCLoader": 78,
"./downloader": 84,
"./loader": 87,
"./loading-items": 88,
"./pipeline": 91
} ],
87: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../platform/CCSAXParser").plistParser, s = t("./pipeline"), o = t("../assets/CCTexture2D"), a = t("./uuid-loader"), c = t("./font-loader");
function l(t) {
if ("string" != typeof t.content) return new Error("JSON Loader: Input item doesn't contain string content");
try {
return JSON.parse(t.content);
} catch (e) {
return new Error("JSON Loader: Parse json [" + t.id + "] failed : " + e);
}
}
function u(t) {
if (t._owner instanceof cc.Asset) return null;
var e = t.content;
if (cc.sys.platform !== cc.sys.FB_PLAYABLE_ADS && !(e instanceof Image)) return new Error("Image Loader: Input item doesn't contain Image content");
var i = t.texture || new o();
i._uuid = t.uuid;
i.url = t.url;
i._setRawAsset(t.rawUrl, !1);
i._nativeAsset = e;
return i;
}
function h(t, e) {
if (t._owner instanceof cc.Asset) return null;
var i = new cc.AudioClip();
i._setRawAsset(t.rawUrl, !1);
i._nativeAsset = t.content;
i.url = t.url;
return i;
}
function _(t) {
return t.load ? t.load(t.content) : null;
}
var f = 13, d = 55727696, p = 0, m = 6, y = 7, v = 12;
var g = 16, C = 6, x = 8, A = 10, b = 12, S = 14, w = 0, T = 1, B = 3;
function E(t, e) {
return t[e] << 8 | t[e + 1];
}
var M = {
png: u,
jpg: u,
bmp: u,
jpeg: u,
gif: u,
ico: u,
tiff: u,
webp: u,
image: u,
pvr: function(t) {
var e = t.content instanceof ArrayBuffer ? t.content : t.content.buffer, i = new Int32Array(e, 0, f);
if (i[p] != d) return new Error("Invalid magic number in PVR header");
var n = i[y], r = i[m], s = i[v] + 52;
return {
_data: new Uint8Array(e, s),
_compressed: !0,
width: n,
height: r
};
},
pkm: function(t) {
var e = t.content instanceof ArrayBuffer ? t.content : t.content.buffer, i = new Uint8Array(e), n = E(i, C);
if (n !== w && n !== T && n !== B) return new Error("Invalid magic number in ETC header");
var r = E(i, b), s = E(i, S);
E(i, x), E(i, A);
return {
_data: new Uint8Array(e, g),
_compressed: !0,
width: r,
height: s
};
},
mp3: h,
ogg: h,
wav: h,
m4a: h,
json: l,
ExportJson: l,
plist: function(t) {
if ("string" != typeof t.content) return new Error("Plist Loader: Input item doesn't contain string content");
var e = r.parse(t.content);
return e || new Error("Plist Loader: Parse [" + t.id + "] failed");
},
uuid: a,
prefab: a,
fire: a,
scene: a,
binary: _,
dbbin: _,
bin: _,
font: c.loadFont,
eot: c.loadFont,
ttf: c.loadFont,
woff: c.loadFont,
svg: c.loadFont,
ttc: c.loadFont,
default: function() {
return null;
}
}, I = function(t) {
this.id = "Loader";
this.async = !0;
this.pipeline = null;
this.extMap = n.mixin(t, M);
};
I.ID = "Loader";
I.prototype.addHandlers = function(t) {
this.extMap = n.mixin(this.extMap, t);
};
I.prototype.handle = function(t, e) {
return (this.extMap[t.type] || this.extMap.default).call(this, t, e);
};
s.Loader = e.exports = I;
}), {
"../assets/CCTexture2D": 36,
"../platform/CCSAXParser": 133,
"../platform/js": 146,
"./font-loader": 85,
"./pipeline": 91,
"./uuid-loader": 97
} ],
88: [ (function(t, e, i) {
"use strict";
var n = t("../platform/callbacks-invoker");
t("../utils/CCPath");
var r = t("../platform/js"), s = 0 | 998 * Math.random(), o = r.createMap(!0), a = [], c = {
WORKING: 1,
COMPLETE: 2,
ERROR: 3
}, l = r.createMap(!0);
function u(t) {
return "string" == typeof (t.url || t);
}
function h(t) {
if (t) {
var e = t.split("?");
if (e && e[0] && e[1]) {
var i = {};
e[1].split("&").forEach((function(t) {
var e = t.split("=");
i[e[0]] = e[1];
}));
return i;
}
}
}
function _(t, e) {
var i = "object" == typeof t ? t.url : t, n = {
queueId: e,
id: i,
url: i,
rawUrl: void 0,
urlParam: h(i),
type: "",
error: null,
content: null,
complete: !1,
states: {},
deps: null
};
if ("object" == typeof t) {
r.mixin(n, t);
if (t.skips) for (var s = 0; s < t.skips.length; s++) {
var o = t.skips[s];
n.states[o] = c.COMPLETE;
}
}
n.rawUrl = n.url;
i && !n.type && (n.type = cc.path.extname(i).toLowerCase().substr(1));
return n;
}
var f = [];
function d(t, e, i) {
if (!t || !e) return !1;
var n = !1;
f.push(e.id);
if (e.deps) {
var r, s, o = e.deps;
for (r = 0; r < o.length; r++) {
if ((s = o[r]).id === t.id) {
n = !0;
break;
}
if (!(f.indexOf(s.id) >= 0) && (s.deps && d(t, s, !0))) {
n = !0;
break;
}
}
}
i || (f.length = 0);
return n;
}
var p = function(t, e, i, a) {
n.call(this);
this._id = ++s;
o[this._id] = this;
this._pipeline = t;
this._errorUrls = r.createMap(!0);
this._appending = !1;
this._ownerQueue = null;
this.onProgress = i;
this.onComplete = a;
this.map = r.createMap(!0);
this.completed = {};
this.totalCount = 0;
this.completedCount = 0;
this._pipeline ? this.active = !0 : this.active = !1;
e && (e.length > 0 ? this.append(e) : this.allComplete());
};
p.ItemState = new cc.Enum(c);
p.create = function(t, e, i, n) {
if (void 0 === i) {
if ("function" == typeof e) {
n = e;
e = i = null;
}
} else if (void 0 === n) if ("function" == typeof e) {
n = i;
i = e;
e = null;
} else {
n = i;
i = null;
}
var r = a.pop();
if (r) {
r._pipeline = t;
r.onProgress = i;
r.onComplete = n;
o[r._id] = r;
r._pipeline && (r.active = !0);
e && r.append(e);
} else r = new p(t, e, i, n);
return r;
};
p.getQueue = function(t) {
return t.queueId ? o[t.queueId] : null;
};
p.itemComplete = function(t) {
var e = o[t.queueId];
e && e.itemComplete(t.id);
};
p.initQueueDeps = function(t) {
var e = l[t._id];
if (e) {
e.completed.length = 0;
e.deps.length = 0;
} else e = l[t._id] = {
completed: [],
deps: []
};
};
p.registerQueueDep = function(t, e) {
var i = t.queueId || t;
if (!i) return !1;
var n = l[i];
if (n) -1 === n.deps.indexOf(e) && n.deps.push(e); else if (t.id) for (var r in l) {
var s = l[r];
-1 !== s.deps.indexOf(t.id) && -1 === s.deps.indexOf(e) && s.deps.push(e);
}
};
p.finishDep = function(t) {
for (var e in l) {
var i = l[e];
-1 !== i.deps.indexOf(t) && -1 === i.completed.indexOf(t) && i.completed.push(t);
}
};
var m = p.prototype;
r.mixin(m, n.prototype);
m.append = function(t, e) {
if (!this.active) return [];
e && !e.deps && (e.deps = []);
this._appending = !0;
var i, n, r, s = [];
for (i = 0; i < t.length; ++i) if (!(n = t[i]).queueId || this.map[n.id]) {
if (u(n)) {
var a = (r = _(n, this._id)).id;
if (!this.map[a]) {
this.map[a] = r;
this.totalCount++;
e && e.deps.push(r);
p.registerQueueDep(e || this._id, a);
s.push(r);
}
}
} else {
this.map[n.id] = n;
e && e.deps.push(n);
if (n.complete || d(e, n)) {
this.totalCount++;
this.itemComplete(n.id);
continue;
}
var c = this, l = o[n.queueId];
if (l) {
this.totalCount++;
p.registerQueueDep(e || this._id, n.id);
l.addListener(n.id, (function(t) {
c.itemComplete(t.id);
}));
}
}
this._appending = !1;
this.completedCount === this.totalCount ? this.allComplete() : this._pipeline.flowIn(s);
return s;
};
m._childOnProgress = function(t) {
if (this.onProgress) {
var e = l[this._id];
this.onProgress(e ? e.completed.length : this.completedCount, e ? e.deps.length : this.totalCount, t);
}
};
m.allComplete = function() {
var t = r.isEmptyObject(this._errorUrls) ? null : this._errorUrls;
this.onComplete && this.onComplete(t, this);
};
m.isCompleted = function() {
return this.completedCount >= this.totalCount;
};
m.isItemCompleted = function(t) {
return !!this.completed[t];
};
m.exists = function(t) {
return !!this.map[t];
};
m.getContent = function(t) {
var e = this.map[t], i = null;
e && (e.content ? i = e.content : e.alias && (i = e.alias.content));
return i;
};
m.getError = function(t) {
var e = this.map[t], i = null;
e && (e.error ? i = e.error : e.alias && (i = e.alias.error));
return i;
};
m.addListener = n.prototype.on;
m.hasListener = n.prototype.hasEventListener;
m.removeListener = n.prototype.off;
m.removeAllListeners = n.prototype.removeAll;
m.removeItem = function(t) {
var e = this.map[t];
if (e && this.completed[e.alias || t]) {
delete this.completed[t];
delete this.map[t];
if (e.alias) {
delete this.completed[e.alias.id];
delete this.map[e.alias.id];
}
this.completedCount--;
this.totalCount--;
}
};
m.itemComplete = function(t) {
var e = this.map[t];
if (e) {
var i = t in this._errorUrls;
e.error instanceof Error || r.isString(e.error) ? this._errorUrls[t] = e.error : e.error ? r.mixin(this._errorUrls, e.error) : !e.error && i && delete this._errorUrls[t];
this.completed[t] = e;
this.completedCount++;
p.finishDep(e.id);
if (this.onProgress) {
var n = l[this._id];
this.onProgress(n ? n.completed.length : this.completedCount, n ? n.deps.length : this.totalCount, e);
}
this.emit(t, e);
this.removeAll(t);
!this._appending && this.completedCount >= this.totalCount && this.allComplete();
}
};
m.destroy = function() {
this.active = !1;
this._appending = !1;
this._pipeline = null;
this._ownerQueue = null;
r.clear(this._errorUrls);
this.onProgress = null;
this.onComplete = null;
this.map = r.createMap(!0);
this.completed = {};
this.totalCount = 0;
this.completedCount = 0;
n.call(this);
if (l[this._id]) {
l[this._id].completed.length = 0;
l[this._id].deps.length = 0;
}
delete o[this._id];
delete l[this._id];
-1 === a.indexOf(this) && a.length < 10 && a.push(this);
};
cc.LoadingItems = e.exports = p;
}), {
"../platform/callbacks-invoker": 139,
"../platform/js": 146,
"../utils/CCPath": 192
} ],
89: [ (function(t, e, i) {
"use strict";
var n = t("./pipeline"), r = "MD5Pipe", s = /.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-]{8,})/, o = function(t, e, i) {
this.id = r;
this.async = !1;
this.pipeline = null;
this.md5AssetsMap = t;
this.md5NativeAssetsMap = e;
this.libraryBase = i;
};
o.ID = r;
o.prototype.handle = function(t) {
t.url = this.transformURL(t.url);
return null;
};
o.prototype.transformURL = function(t) {
var e = !t.startsWith(this.libraryBase) ? this.md5NativeAssetsMap : this.md5AssetsMap;
return t = t.replace(s, (function(t, i) {
var n = e[i];
return n ? t + "." + n : t;
}));
};
n.MD5Pipe = e.exports = o;
}), {
"./pipeline": 91
} ],
90: [ (function(t, e, i) {
"use strict";
var n = t("./unpackers"), r = t("../utils/misc").pushToMap, s = {
Invalid: 0,
Removed: 1,
Downloading: 2,
Loaded: 3
};
function o() {
this.unpacker = null;
this.state = s.Invalid;
}
var a = {}, c = {}, l = {};
function u(t, e) {
return new Error("Can not retrieve " + t + " from packer " + e);
}
e.exports = {
initPacks: function(t) {
c = t;
a = {};
for (var e in t) for (var i = t[e], n = 0; n < i.length; n++) {
var s = i[n], o = 1 === i.length;
r(a, s, e, o);
}
},
_loadNewPack: function(t, e, i) {
var n = this, r = cc.AssetLibrary.getLibUrlNoExt(e) + ".json";
cc.loader.load({
url: r,
ignoreMaxConcurrency: !0
}, (function(r, s) {
if (r) {
cc.errorID(4916, t);
return i(r);
}
var o = n._doLoadNewPack(t, e, s);
o ? i(null, o) : i(u(t, e));
}));
},
_doPreload: function(t, e) {
var i = l[t];
i || ((i = l[t] = new o()).state = s.Downloading);
if (i.state !== s.Loaded) {
i.unpacker = new n.JsonUnpacker();
i.unpacker.load(c[t], e);
i.state = s.Loaded;
}
},
_doLoadNewPack: function(t, e, i) {
var r = l[e];
if (r.state !== s.Loaded) {
"string" == typeof i && (i = JSON.parse(i));
Array.isArray(i) ? r.unpacker = new n.JsonUnpacker() : i.type === n.TextureUnpacker.ID && (r.unpacker = new n.TextureUnpacker());
r.unpacker.load(c[e], i);
r.state = s.Loaded;
}
return r.unpacker.retrieve(t);
},
_selectLoadedPack: function(t) {
for (var e = s.Invalid, i = "", n = 0; n < t.length; n++) {
var r = t[n], o = l[r];
if (o) {
var a = o.state;
if (a === s.Loaded) return r;
if (a > e) {
e = a;
i = r;
}
}
}
return e !== s.Invalid ? i : t[0];
},
load: function(t, e) {
var i = t.uuid, n = a[i];
if (n) {
Array.isArray(n) && (n = this._selectLoadedPack(n));
var r = l[n];
if (r && r.state === s.Loaded) {
var c = r.unpacker.retrieve(i);
return c || u(i, n);
}
if (!r) {
console.log("Create unpacker %s for %s", n, i);
(r = l[n] = new o()).state = s.Downloading;
}
this._loadNewPack(i, n, e);
return null;
}
}
};
0;
}), {
"../utils/misc": 200,
"./unpackers": 95
} ],
91: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("./loading-items"), s = r.ItemState;
function o(t, e) {
var i = t.id, n = e.states[i], r = t.next, a = t.pipeline;
if (!e.error && n !== s.WORKING && n !== s.ERROR) if (n === s.COMPLETE) r ? o(r, e) : a.flowOut(e); else {
e.states[i] = s.WORKING;
var c = t.handle(e, (function(t, n) {
if (t) {
e.error = t;
e.states[i] = s.ERROR;
a.flowOut(e);
} else {
n && (e.content = n);
e.states[i] = s.COMPLETE;
r ? o(r, e) : a.flowOut(e);
}
}));
if (c instanceof Error) {
e.error = c;
e.states[i] = s.ERROR;
a.flowOut(e);
} else if (void 0 !== c) {
null !== c && (e.content = c);
e.states[i] = s.COMPLETE;
r ? o(r, e) : a.flowOut(e);
}
}
}
var a = function(t) {
this._pipes = t;
this._cache = n.createMap(!0);
for (var e = 0; e < t.length; ++e) {
var i = t[e];
if (i.handle && i.id) {
i.pipeline = this;
i.next = e < t.length - 1 ? t[e + 1] : null;
}
}
};
a.ItemState = s;
var c = a.prototype;
c.insertPipe = function(t, e) {
if (!t.handle || !t.id || e > this._pipes.length) cc.warnID(4921); else if (this._pipes.indexOf(t) > 0) cc.warnID(4922); else {
t.pipeline = this;
var i = null;
e < this._pipes.length && (i = this._pipes[e]);
var n = null;
e > 0 && (n = this._pipes[e - 1]);
n && (n.next = t);
t.next = i;
this._pipes.splice(e, 0, t);
}
};
c.insertPipeAfter = function(t, e) {
var i = this._pipes.indexOf(t);
i < 0 || this.insertPipe(e, i + 1);
};
c.appendPipe = function(t) {
if (t.handle && t.id) {
t.pipeline = this;
t.next = null;
this._pipes.length > 0 && (this._pipes[this._pipes.length - 1].next = t);
this._pipes.push(t);
}
};
c.flowIn = function(t) {
var e, i, n = this._pipes[0];
if (n) {
for (e = 0; e < t.length; e++) {
i = t[e];
this._cache[i.id] = i;
}
for (e = 0; e < t.length; e++) o(n, i = t[e]);
} else for (e = 0; e < t.length; e++) this.flowOut(t[e]);
};
c.flowInDeps = function(t, e, i) {
return r.create(this, (function(t, e) {
i(t, e);
e.destroy();
})).append(e, t);
};
c.flowOut = function(t) {
t.error ? delete this._cache[t.id] : this._cache[t.id] || (this._cache[t.id] = t);
t.complete = !0;
r.itemComplete(t);
};
c.copyItemStates = function(t, e) {
if (e instanceof Array) for (var i = 0; i < e.length; ++i) e[i].states = t.states; else e.states = t.states;
};
c.getItem = function(t) {
var e = this._cache[t];
if (!e) return e;
e.alias && (e = e.alias);
return e;
};
c.removeItem = function(t) {
var e = this._cache[t];
e && e.complete && delete this._cache[t];
return e;
};
c.clear = function() {
for (var t in this._cache) {
var e = this._cache[t];
delete this._cache[t];
if (!e.complete) {
e.error = new Error("Canceled manually");
this.flowOut(e);
}
}
};
cc.Pipeline = e.exports = a;
}), {
"../platform/js": 146,
"./loading-items": 88
} ],
92: [ (function(t, e, i) {
"use strict";
}), {
"../platform/js": 146
} ],
93: [ (function(t, e, i) {
"use strict";
var n = t("./pipeline"), r = "SubPackPipe", s = /.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-]{8,})/;
function o(t) {
var e = t.match(s);
return e ? e[1] : "";
}
var a = Object.create(null), c = function(t) {
this.id = r;
this.async = !1;
this.pipeline = null;
for (var e in t) {
var i = t[e];
i.uuids && i.uuids.forEach((function(t) {
a[t] = i.path;
}));
}
};
c.ID = r;
c.prototype.handle = function(t) {
t.url = this.transformURL(t.url);
return null;
};
c.prototype.transformURL = function(t) {
var e = o(t);
if (e) {
var i = a[e];
if (i) return t.replace("res/raw-assets/", i + "raw-assets/");
}
return t;
};
n.SubPackPipe = e.exports = c;
}), {
"./pipeline": 91
} ],
94: [ (function(t, e, i) {
"use strict";
var n = t("./utils").urlAppendTimestamp;
e.exports = function(t, e) {
var i = t.url;
i = n(i);
var r = cc.loader.getXMLHttpRequest(), s = "Load text file failed: " + i;
r.open("GET", i, !0);
r.overrideMimeType && r.overrideMimeType("text/plain; charset=utf-8");
r.onload = function() {
4 === r.readyState ? 200 === r.status || 0 === r.status ? e(null, r.responseText) : e({
status: r.status,
errorMessage: s + "(wrong status)"
}) : e({
status: r.status,
errorMessage: s + "(wrong readyState)"
});
};
r.onerror = function() {
e({
status: r.status,
errorMessage: s + "(error)"
});
};
r.ontimeout = function() {
e({
status: r.status,
errorMessage: s + "(time out)"
});
};
r.send(null);
};
}), {
"./utils": 96
} ],
95: [ (function(t, e, i) {
"use strict";
var n = t("../assets/CCTexture2D"), r = t("../platform/js");
function s() {
this.jsons = {};
}
s.prototype.load = function(t, e) {
e.length !== t.length && cc.errorID(4915);
for (var i = 0; i < t.length; i++) {
var n = t[i], r = e[i];
this.jsons[n] = r;
}
};
s.prototype.retrieve = function(t) {
return this.jsons[t] || null;
};
function o() {
this.contents = {};
}
o.ID = r._getClassId(n);
o.prototype.load = function(t, e) {
var i = e.data.split("|");
i.length !== t.length && cc.errorID(4915);
for (var n = 0; n < t.length; n++) this.contents[t[n]] = i[n];
};
o.prototype.retrieve = function(t) {
var e = this.contents[t];
return e ? {
__type__: o.ID,
content: e
} : null;
};
0;
e.exports = {
JsonUnpacker: s,
TextureUnpacker: o
};
}), {
"../assets/CCTexture2D": 36,
"../platform/js": 146
} ],
96: [ (function(t, e, i) {
"use strict";
var n = /\?/;
e.exports = {
urlAppendTimestamp: function(t) {
cc.game.config.noCache && "string" == typeof t && (n.test(t) ? t += "&_t=" + (new Date() - 0) : t += "?_t=" + (new Date() - 0));
return t;
}
};
}), {} ],
97: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../CCDebug");
t("../platform/deserialize");
var s = t("./loading-items");
function o(t) {
return t && (t[0] && "cc.Scene" === t[0].__type__ || t[1] && "cc.Scene" === t[1].__type__ || t[0] && "cc.Prefab" === t[0].__type__);
}
function a(t, e, i, n) {
var r, s, o, a = i.uuidList, c = i.uuidObjList, l = i.uuidPropList, u = i._stillUseUrl, h = t.dependKeys = [];
if (n) {
r = [];
for (s = 0; s < a.length; s++) {
o = a[s];
var _ = c[s], f = l[s], d = cc.AssetLibrary._getAssetInfoInRuntime(o);
if (d.raw) {
var p = d.url;
_[f] = p;
h.push(p);
} else r.push({
type: "uuid",
uuid: o,
deferredLoadRaw: !0,
_owner: _,
_ownerProp: f,
_stillUseUrl: u[s]
});
}
} else {
r = new Array(a.length);
for (s = 0; s < a.length; s++) {
o = a[s];
r[s] = {
type: "uuid",
uuid: o,
_owner: c[s],
_ownerProp: l[s],
_stillUseUrl: u[s]
};
}
e._native && !e.constructor.preventPreloadNativeObject && r.push({
url: e.nativeUrl,
_owner: e,
_ownerProp: "_nativeAsset"
});
}
return r;
}
function c(t, e, i, n, r) {
e.content = i;
var o = e.dependKeys;
t.flowInDeps(e, n, (function(t, e) {
var a, c = e.map;
for (var l in c) (a = c[l]).uuid && a.content && (a.content._uuid = a.uuid);
for (var u = 0; u < n.length; u++) {
var h = function(t) {
var e = t.content;
this._stillUseUrl && (e = e && cc.RawAsset.wasRawAssetType(e.constructor) ? e.nativeUrl : t.rawUrl);
"_nativeAsset" === this._ownerProp && (this._owner.url = t.url);
this._owner[this._ownerProp] = e;
t.uuid !== i._uuid && o.indexOf(t.id) < 0 && o.push(t.id);
}, _ = n[u], f = _.uuid, d = _.url;
_._owner, _._ownerProp;
if (a = c[d]) {
var p = _;
if (a.complete || a.content) if (a.error) {
cc._throw(a.error.message || a.error.errorMessage || a.error);
} else h.call(p, a); else {
var m = s.getQueue(a), y = m._callbackTable[f];
y ? y.unshift(h, p) : m.addListener(f, h, p);
}
}
}
if (!t && i.onLoad) try {
i.onLoad();
} catch (t) {
cc._throw(t);
}
r(t, i);
}));
}
function l(t, e, i) {
0;
var n = e.deferredLoadRaw;
n ? t instanceof cc.Asset && t.constructor.preventDeferredLoadDependents && (n = !1) : i && (t instanceof cc.SceneAsset || t instanceof cc.Prefab) && (n = t.asyncLoadAssets);
return n;
}
function u(t, e) {
0;
var i, s;
if ("string" == typeof t.content) try {
i = JSON.parse(t.content);
} catch (e) {
return new Error(r.getError(4923, t.id, e.stack));
} else {
if ("object" != typeof t.content) return new Error(r.getError(4924));
i = t.content;
}
var u = o(i);
s = u ? cc._MissingScript.safeFindClass : function(t) {
var e = n._getClassById(t);
if (e) return e;
cc.warnID(4903, t);
return Object;
};
var h, _ = cc.deserialize.Details.pool.get();
try {
h = cc.deserialize(i, _, {
classFinder: s,
target: t.existingAsset,
customEnv: t
});
} catch (e) {
cc.deserialize.Details.pool.put(_);
var f = e + "\n" + e.stack;
return new Error(r.getError(4925, t.id, f));
}
h._uuid = t.uuid;
h.url = h.nativeUrl;
0;
var d = a(t, h, _, l(h, t, u));
cc.deserialize.Details.pool.put(_);
if (0 === d.length) {
h.onLoad && h.onLoad();
return e(null, h);
}
c(this.pipeline, t, h, d, e);
}
e.exports = u;
u.isSceneObj = o;
}), {
"../CCDebug": 12,
"../platform/deserialize": 141,
"../platform/js": 146,
"./loading-items": 88
} ],
98: [ (function(t, e, i) {
"use strict";
var n = t("./component-scheduler"), r = t("./platform/CCObject").Flags, s = t("./platform/js"), o = r.IsPreloadStarted, a = r.IsOnLoadStarted, c = r.IsOnLoadCalled, l = r.Deactivating, u = cc.Class({
extends: n.LifeCycleInvoker,
add: function(t) {
this._zero.array.push(t);
},
remove: function(t) {
this._zero.fastRemove(t);
},
cancelInactive: function(t) {
n.LifeCycleInvoker.stableRemoveInactive(this._zero, t);
},
invoke: function() {
this._invoke(this._zero);
this._zero.array.length = 0;
}
}), h = n.createInvokeImpl("c.__preload();"), _ = n.createInvokeImpl("c.onLoad();c._objFlags|=" + c, !1, c), f = new s.Pool(4);
f.get = function() {
var t = this._get() || {
preload: new u(h),
onLoad: new n.OneOffInvoker(_),
onEnable: new n.OneOffInvoker(n.invokeOnEnable)
};
t.preload._zero.i = -1;
var e = t.onLoad;
e._zero.i = -1;
e._neg.i = -1;
e._pos.i = -1;
(e = t.onEnable)._zero.i = -1;
e._neg.i = -1;
e._pos.i = -1;
return t;
};
function d(t, e, i) {
0;
e ? t._removeComponent(e) : s.array.removeAt(t._components, i);
}
function p() {
this._activatingStack = [];
}
var m = cc.Class({
ctor: p,
reset: p,
_activateNodeRecursively: function(t, e, i, n) {
if (t._objFlags & l) cc.errorID(3816, t.name); else {
t._activeInHierarchy = !0;
for (var r = t._components.length, s = 0; s < r; ++s) {
var o = t._components[s];
if (o instanceof cc.Component) this.activateComp(o, e, i, n); else {
d(t, o, s);
--s;
--r;
}
}
t._childArrivalOrder = t._children.length;
for (var a = 0, c = t._children.length; a < c; ++a) {
var u = t._children[a];
u._localZOrder = 4294901760 & u._localZOrder | a + 1;
u._active && this._activateNodeRecursively(u, e, i, n);
}
t._onPostActivated(!0);
}
},
_deactivateNodeRecursively: function(t) {
0;
t._objFlags |= l;
t._activeInHierarchy = !1;
for (var e = t._components.length, i = 0; i < e; ++i) {
var n = t._components[i];
if (n._enabled) {
cc.director._compScheduler.disableComp(n);
if (t._activeInHierarchy) {
t._objFlags &= ~l;
return;
}
}
}
for (var r = 0, s = t._children.length; r < s; ++r) {
var o = t._children[r];
if (o._activeInHierarchy) {
this._deactivateNodeRecursively(o);
if (t._activeInHierarchy) {
t._objFlags &= ~l;
return;
}
}
}
t._onPostActivated(!1);
t._objFlags &= ~l;
},
activateNode: function(t, e) {
if (e) {
var i = f.get();
this._activatingStack.push(i);
this._activateNodeRecursively(t, i.preload, i.onLoad, i.onEnable);
i.preload.invoke();
i.onLoad.invoke();
i.onEnable.invoke();
this._activatingStack.pop();
f.put(i);
} else {
this._deactivateNodeRecursively(t);
for (var n = this._activatingStack, r = 0; r < n.length; r++) {
var s = n[r];
s.preload.cancelInactive(o);
s.onLoad.cancelInactive(a);
s.onEnable.cancelInactive();
}
}
t.emit("active-in-hierarchy-changed", t);
},
activateComp: function(t, e, i, n) {
if (cc.isValid(t, !0)) {
if (!(t._objFlags & o)) {
t._objFlags |= o;
t.__preload && (e ? e.add(t) : t.__preload());
}
if (!(t._objFlags & a)) {
t._objFlags |= a;
if (t.onLoad) if (i) i.add(t); else {
t.onLoad();
t._objFlags |= c;
} else t._objFlags |= c;
}
if (t._enabled) {
if (!t.node._activeInHierarchy) return;
cc.director._compScheduler.enableComp(t, n);
}
}
},
destroyComp: function(t) {
cc.director._compScheduler.disableComp(t);
t.onDestroy && t._objFlags & c && t.onDestroy();
},
resetComp: !1
});
e.exports = m;
}), {
"./component-scheduler": 50,
"./platform/CCObject": 132,
"./platform/js": 146,
"./utils/misc": 200
} ],
99: [ (function(t, e, i) {
"use strict";
var n = t("./CCPhysicsTypes").PTM_RATIO, r = t("./CCPhysicsTypes").ContactType, s = [], o = [ cc.v2(), cc.v2() ], a = new b2.WorldManifold(), c = {
points: [],
separations: [],
normal: cc.v2()
};
function l() {
this.localPoint = cc.v2();
this.normalImpulse = 0;
this.tangentImpulse = 0;
}
var u = [ new l(), new l() ], h = (new b2.Manifold(), {
type: 0,
localPoint: cc.v2(),
localNormal: cc.v2(),
points: []
}), _ = {
normalImpulses: [],
tangentImpulses: []
};
function f() {}
f.prototype.init = function(t) {
this.colliderA = t.GetFixtureA().collider;
this.colliderB = t.GetFixtureB().collider;
this.disabled = !1;
this.disabledOnce = !1;
this._impulse = null;
this._inverted = !1;
this._b2contact = t;
t._contact = this;
};
f.prototype.reset = function() {
this.setTangentSpeed(0);
this.resetFriction();
this.resetRestitution();
this.colliderA = null;
this.colliderB = null;
this.disabled = !1;
this._impulse = null;
this._b2contact._contact = null;
this._b2contact = null;
};
f.prototype.getWorldManifold = function() {
var t = c.points, e = c.separations, i = c.normal;
this._b2contact.GetWorldManifold(a);
var r = a.points, s = a.separations, l = this._b2contact.GetManifold().pointCount;
t.length = e.length = l;
for (var u = 0; u < l; u++) {
var h = o[u];
h.x = r[u].x * n;
h.y = r[u].y * n;
t[u] = h;
e[u] = s[u] * n;
}
i.x = a.normal.x;
i.y = a.normal.y;
if (this._inverted) {
i.x *= -1;
i.y *= -1;
}
return c;
};
f.prototype.getManifold = function() {
for (var t = h.points, e = h.localNormal, i = h.localPoint, r = this._b2contact.GetManifold(), s = r.points, o = t.length = r.pointCount, a = 0; a < o; a++) {
var c = u[a], l = s[a];
c.localPoint.x = l.localPoint.x * n;
c.localPoint.Y = l.localPoint.Y * n;
c.normalImpulse = l.normalImpulse * n;
c.tangentImpulse = l.tangentImpulse;
t[a] = c;
}
i.x = r.localPoint.x * n;
i.y = r.localPoint.y * n;
e.x = r.localNormal.x;
e.y = r.localNormal.y;
h.type = r.type;
if (this._inverted) {
e.x *= -1;
e.y *= -1;
}
return h;
};
f.prototype.getImpulse = function() {
var t = this._impulse;
if (!t) return null;
for (var e = _.normalImpulses, i = _.tangentImpulses, r = t.count, s = 0; s < r; s++) {
e[s] = t.normalImpulses[s] * n;
i[s] = t.tangentImpulses[s];
}
i.length = e.length = r;
return _;
};
f.prototype.emit = function(t) {
var e;
switch (t) {
case r.BEGIN_CONTACT:
e = "onBeginContact";
break;

case r.END_CONTACT:
e = "onEndContact";
break;

case r.PRE_SOLVE:
e = "onPreSolve";
break;

case r.POST_SOLVE:
e = "onPostSolve";
}
var i, n, s, o, a = this.colliderA, c = this.colliderB, l = a.body, u = c.body;
if (l.enabledContactListener) {
i = l.node._components;
this._inverted = !1;
for (n = 0, s = i.length; n < s; n++) (o = i[n])[e] && o[e](this, a, c);
}
if (u.enabledContactListener) {
i = u.node._components;
this._inverted = !0;
for (n = 0, s = i.length; n < s; n++) (o = i[n])[e] && o[e](this, c, a);
}
if (this.disabled || this.disabledOnce) {
this.setEnabled(!1);
this.disabledOnce = !1;
}
};
f.get = function(t) {
var e;
(e = 0 === s.length ? new cc.PhysicsContact() : s.pop()).init(t);
return e;
};
f.put = function(t) {
var e = t._contact;
if (e) {
s.push(e);
e.reset();
}
};
var d = f.prototype;
d.setEnabled = function(t) {
this._b2contact.SetEnabled(t);
};
d.isTouching = function() {
return this._b2contact.IsTouching();
};
d.setTangentSpeed = function(t) {
this._b2contact.SetTangentSpeed(t / n);
};
d.getTangentSpeed = function() {
return this._b2contact.GetTangentSpeed() * n;
};
d.setFriction = function(t) {
this._b2contact.SetFriction(t);
};
d.getFriction = function() {
return this._b2contact.GetFriction();
};
d.resetFriction = function() {
return this._b2contact.ResetFriction();
};
d.setRestitution = function(t) {
this._b2contact.SetRestitution(t);
};
d.getRestitution = function() {
return this._b2contact.GetRestitution();
};
d.resetRestitution = function() {
return this._b2contact.ResetRestitution();
};
f.ContactType = r;
cc.PhysicsContact = e.exports = f;
}), {
"./CCPhysicsTypes": 101
} ],
100: [ (function(t, e, i) {
"use strict";
var n = t("./CCPhysicsTypes"), r = n.ContactType, s = n.BodyType, o = n.RayCastType, a = n.DrawBits, c = n.PTM_RATIO, l = (n.ANGLE_TO_PHYSICS_ANGLE, 
n.PHYSICS_ANGLE_TO_ANGLE), u = t("./utils").convertToNodeRotation, h = t("./platform/CCPhysicsDebugDraw"), _ = new b2.AABB(), f = new b2.Vec2(), d = new b2.Vec2(), p = cc.v2(), m = cc.Class({
mixins: [ cc.EventTarget ],
statics: {
DrawBits: a,
PTM_RATIO: c,
VELOCITY_ITERATIONS: 10,
POSITION_ITERATIONS: 10,
FIXED_TIME_STEP: 1 / 60,
MAX_ACCUMULATOR: .2
},
ctor: function() {
this._debugDrawFlags = 0;
this._debugDrawer = null;
this._world = null;
this._bodies = [];
this._joints = [];
this._contactMap = {};
this._contactID = 0;
this._delayEvents = [];
this._accumulator = 0;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
this.enabledAccumulator = !1;
},
pushDelayEvent: function(t, e, i) {
this._steping ? this._delayEvents.push({
target: t,
func: e,
args: i
}) : t[e].apply(t, i);
},
update: function(t) {
var e = this._world;
if (e && this.enabled) {
this.emit("before-step");
this._steping = !0;
var i = m.VELOCITY_ITERATIONS, n = m.POSITION_ITERATIONS;
if (this.enabledAccumulator) {
this._accumulator += t;
var r = m.FIXED_TIME_STEP, s = m.MAX_ACCUMULATOR;
this._accumulator > s && (this._accumulator = s);
for (;this._accumulator > r; ) {
e.Step(r, i, n);
this._accumulator -= r;
}
} else {
var o = 1 / cc.game.config.frameRate;
e.Step(o, i, n);
}
if (this.debugDrawFlags) {
this._checkDebugDrawValid();
this._debugDrawer.clear();
e.DrawDebugData();
}
this._steping = !1;
for (var a = this._delayEvents, c = 0, l = a.length; c < l; c++) {
var u = a[c];
u.target[u.func].apply(u.target, u.args);
}
a.length = 0;
this._syncNode();
}
},
testPoint: function(t) {
var e = f.x = t.x / c, i = f.y = t.y / c, n = .2 / c;
_.lowerBound.x = e - n;
_.lowerBound.y = i - n;
_.upperBound.x = e + n;
_.upperBound.y = i + n;
var r = this._aabbQueryCallback;
r.init(f);
this._world.QueryAABB(r, _);
var s = r.getFixture();
return s ? s.collider : null;
},
testAABB: function(t) {
_.lowerBound.x = t.xMin / c;
_.lowerBound.y = t.yMin / c;
_.upperBound.x = t.xMax / c;
_.upperBound.y = t.yMax / c;
var e = this._aabbQueryCallback;
e.init();
this._world.QueryAABB(e, _);
return e.getFixtures().map((function(t) {
return t.collider;
}));
},
rayCast: function(t, e, i) {
if (t.equals(e)) return [];
i = i || o.Closest;
f.x = t.x / c;
f.y = t.y / c;
d.x = e.x / c;
d.y = e.y / c;
var n = this._raycastQueryCallback;
n.init(i);
this._world.RayCast(n, f, d);
var r = n.getFixtures();
if (r.length > 0) {
for (var s = n.getPoints(), a = n.getNormals(), l = n.getFractions(), u = [], h = 0, _ = r.length; h < _; h++) {
var p = r[h], m = p.collider;
if (i === o.AllClosest) {
var y = u.find((function(t) {
return t.collider === m;
}));
if (y) {
if (l[h] < y.fraction) {
y.fixtureIndex = m._getFixtureIndex(p);
y.point.x = s[h].x * c;
y.point.y = s[h].y * c;
y.normal.x = a[h].x;
y.normal.y = a[h].y;
y.fraction = l[h];
}
continue;
}
}
u.push({
collider: m,
fixtureIndex: m._getFixtureIndex(p),
point: cc.v2(s[h].x * c, s[h].y * c),
normal: cc.v2(a[h]),
fraction: l[h]
});
}
return u;
}
return [];
},
syncPosition: function() {
for (var t = this._bodies, e = 0; e < t.length; e++) t[e].syncPosition();
},
syncRotation: function() {
for (var t = this._bodies, e = 0; e < t.length; e++) t[e].syncRotation();
},
_registerContactFixture: function(t) {
this._contactListener.registerContactFixture(t);
},
_unregisterContactFixture: function(t) {
this._contactListener.unregisterContactFixture(t);
},
_addBody: function(t, e) {
var i = this._world, n = t.node;
if (i && n) {
t._b2Body = i.CreateBody(e);
t._b2Body.body = t;
this._bodies.push(t);
}
},
_removeBody: function(t) {
var e = this._world;
if (e) {
t._b2Body.body = null;
e.DestroyBody(t._b2Body);
t._b2Body = null;
cc.js.array.remove(this._bodies, t);
}
},
_addJoint: function(t, e) {
var i = this._world.CreateJoint(e);
if (i) {
i._joint = t;
t._joint = i;
this._joints.push(t);
}
},
_removeJoint: function(t) {
t._isValid() && this._world.DestroyJoint(t._joint);
t._joint && (t._joint._joint = null);
cc.js.array.remove(this._joints, t);
},
_initCallback: function() {
if (this._world) {
if (!this._contactListener) {
var t = new cc.PhysicsContactListener();
t.setBeginContact(this._onBeginContact);
t.setEndContact(this._onEndContact);
t.setPreSolve(this._onPreSolve);
t.setPostSolve(this._onPostSolve);
this._world.SetContactListener(t);
this._contactListener = t;
this._aabbQueryCallback = new cc.PhysicsAABBQueryCallback();
this._raycastQueryCallback = new cc.PhysicsRayCastCallback();
}
} else cc.warn("Please init PhysicsManager first");
},
_init: function() {
this.enabled = !0;
this.debugDrawFlags = a.e_shapeBit;
},
_getWorld: function() {
return this._world;
},
_syncNode: function() {
for (var t = this._bodies, e = 0, i = t.length; e < i; e++) {
var n = t[e], r = n.node, o = n._b2Body, a = o.GetPosition();
p.x = a.x * c;
p.y = a.y * c;
var h = o.GetAngle() * l;
if (null !== r.parent.parent) {
p = r.parent.convertToNodeSpaceAR(p);
h = u(r.parent, h);
}
var _ = r._eventMask;
r._eventMask = 0;
r.position = p;
r.angle = -h;
r._eventMask = _;
n.type === s.Animated && n.resetVelocity();
}
},
_onBeginContact: function(t) {
cc.PhysicsContact.get(t).emit(r.BEGIN_CONTACT);
},
_onEndContact: function(t) {
var e = t._contact;
if (e) {
e.emit(r.END_CONTACT);
cc.PhysicsContact.put(t);
}
},
_onPreSolve: function(t) {
var e = t._contact;
e && e.emit(r.PRE_SOLVE);
},
_onPostSolve: function(t, e) {
var i = t._contact;
if (i) {
i._impulse = e;
i.emit(r.POST_SOLVE);
i._impulse = null;
}
},
_checkDebugDrawValid: function() {
if (!this._debugDrawer || !this._debugDrawer.isValid) {
var t = new cc.Node("PHYSICS_MANAGER_DEBUG_DRAW");
t.zIndex = cc.macro.MAX_ZINDEX;
cc.game.addPersistRootNode(t);
this._debugDrawer = t.addComponent(cc.Graphics);
var e = new h(this._debugDrawer);
e.SetFlags(this.debugDrawFlags);
this._world.SetDebugDraw(e);
}
}
});
cc.js.getset(m.prototype, "enabled", (function() {
return this._enabled;
}), (function(t) {
0;
if (t && !this._world) {
var e = new b2.World(new b2.Vec2(0, -10));
e.SetAllowSleeping(!0);
this._world = e;
this._initCallback();
}
this._enabled = t;
}));
cc.js.getset(m.prototype, "debugDrawFlags", (function() {
return this._debugDrawFlags;
}), (function(t) {
0;
t && !this._debugDrawFlags ? this._debugDrawer && this._debugDrawer.node && (this._debugDrawer.node.active = !0) : !t && this._debugDrawFlags && this._debugDrawer && this._debugDrawer.node && (this._debugDrawer.node.active = !1);
if (t) {
this._checkDebugDrawValid();
this._world.m_debugDraw.SetFlags(t);
}
this._debugDrawFlags = t;
if (t) {
this._checkDebugDrawValid();
this._world.m_debugDraw.SetFlags(t);
}
}));
cc.js.getset(m.prototype, "gravity", (function() {
if (this._world) {
var t = this._world.GetGravity();
return cc.v2(t.x * c, t.y * c);
}
return cc.v2();
}), (function(t) {
this._world && this._world.SetGravity(new b2.Vec2(t.x / c, t.y / c));
}));
cc.PhysicsManager = e.exports = m;
}), {
"./CCPhysicsTypes": 101,
"./platform/CCPhysicsDebugDraw": 122,
"./utils": 124
} ],
101: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
Static: 0,
Kinematic: 1,
Dynamic: 2,
Animated: 3
});
cc.RigidBodyType = n;
var r = cc.Enum({
Closest: 0,
Any: 1,
AllClosest: 2,
All: 3
});
cc.RayCastType = r;
e.exports = {
BodyType: n,
ContactType: {
BEGIN_CONTACT: "begin-contact",
END_CONTACT: "end-contact",
PRE_SOLVE: "pre-solve",
POST_SOLVE: "post-solve"
},
RayCastType: r,
DrawBits: b2.DrawFlags,
PTM_RATIO: 32,
ANGLE_TO_PHYSICS_ANGLE: -Math.PI / 180,
PHYSICS_ANGLE_TO_ANGLE: -180 / Math.PI
};
}), {} ],
102: [ (function(t, e, i) {
"use strict";
function n(t, e) {
var i = e.length;
return e[t < 0 ? i - -t % i : t % i];
}
function r(t, e, i) {
for (var r = []; e < t; ) e += i.length;
for (;t <= e; ++t) r.push(n(t, i));
return r;
}
function s(t, e, i) {
if (o(t, i)) {
if (l(n(t, i), n(t - 1, i), n(e, i)) && u(n(t, i), n(t + 1, i), n(e, i))) return !1;
} else if (u(n(t, i), n(t + 1, i), n(e, i)) || l(n(t, i), n(t - 1, i), n(e, i))) return !1;
if (o(e, i)) {
if (l(n(e, i), n(e - 1, i), n(t, i)) && u(n(e, i), n(e + 1, i), n(t, i))) return !1;
} else if (u(n(e, i), n(e + 1, i), n(t, i)) || l(n(e, i), n(e - 1, i), n(t, i))) return !1;
for (var r = 0; r < i.length; ++r) if ((r + 1) % i.length != t && r != t && (r + 1) % i.length != e && r != e) {
var s = cc.v2();
if (m(n(t, i), n(e, i), n(r, i), n(r + 1, i), s)) return !1;
}
return !0;
}
function o(t, e) {
return a(t, e);
}
function a(t, e, i) {
if ("undefined" == typeof i) {
var r = t, s = e;
t = n(r - 1, s);
e = n(r, s);
i = n(r + 1, s);
}
return v(t, e, i) < 0;
}
function c(t, e, i) {
return v(t, e, i) > 0;
}
function l(t, e, i) {
return v(t, e, i) >= 0;
}
function u(t, e, i) {
return v(t, e, i) <= 0;
}
function h(t, e) {
var i = e.x - t.x, n = e.y - t.y;
return i * i + n * n;
}
function _(t) {
f(t) || t.reverse();
}
function f(t) {
return t.length < 3 || d(t) > 0;
}
function d(t) {
var e, i = 0;
for (e = 0; e < t.length; e++) {
var n = (e + 1) % t.length;
i += t[e].x * t[n].y;
i -= t[e].y * t[n].x;
}
return i /= 2;
}
function p(t, e, i, n) {
var r = cc.v2(), s = e.y - t.y, o = t.x - e.x, a = s * t.x + o * t.y, c = n.y - i.y, l = i.x - n.x, u = c * i.x + l * i.y, h = s * l - c * o;
if (!y(h, 0)) {
r.x = (l * a - o * u) / h;
r.y = (s * u - c * a) / h;
}
return r;
}
function m(t, e, i, n, r) {
if (t == i || t == n || e == i || e == n) return !1;
var s = t.x, o = t.y, a = e.x, c = e.y, l = i.x, u = i.y, h = n.x, _ = n.y;
if (Math.max(s, a) < Math.min(l, h) || Math.max(l, h) < Math.min(s, a)) return !1;
if (Math.max(o, c) < Math.min(u, _) || Math.max(u, _) < Math.min(o, c)) return !1;
var f = (h - l) * (o - u) - (_ - u) * (s - l), d = (a - s) * (o - u) - (c - o) * (s - l), p = (_ - u) * (a - s) - (h - l) * (c - o);
if (Math.abs(p) < 1e-6) return !1;
d /= p;
if (0 < (f /= p) && f < 1 && 0 < d && d < 1) {
r.x = s + f * (a - s);
r.y = o + f * (c - o);
return !0;
}
return !1;
}
function y(t, e) {
return Math.abs(t - e) <= 1e-6;
}
function v(t, e, i) {
return t.x * (e.y - i.y) + e.x * (i.y - t.y) + i.x * (t.y - e.y);
}
e.exports = {
ConvexPartition: function t(e) {
_(e);
for (var i, f, d, m, y, v, g = [], C = cc.v2(), x = cc.v2(), A = 0, b = 0, S = 0; S < e.length; ++S) if (o(S, e)) {
f = d = 1e8;
for (var w = 0; w < e.length; ++w) {
if (c(n(S - 1, e), n(S, e), n(w, e)) && u(n(S - 1, e), n(S, e), n(w - 1, e))) {
m = p(n(S - 1, e), n(S, e), n(w, e), n(w - 1, e));
if (a(n(S + 1, e), n(S, e), m) && (i = h(n(S, e), m)) < f) {
f = i;
C = m;
A = w;
}
}
if (c(n(S + 1, e), n(S, e), n(w + 1, e)) && u(n(S + 1, e), n(S, e), n(w, e))) {
m = p(n(S + 1, e), n(S, e), n(w, e), n(w + 1, e));
if (c(n(S - 1, e), n(S, e), m) && (i = h(n(S, e), m)) < d) {
d = i;
b = w;
x = m;
}
}
}
if (A == (b + 1) % e.length) {
var T = C.add(x).div(2);
(y = r(S, b, e)).push(T);
(v = r(A, S, e)).push(T);
} else {
for (var B = 0, E = A; b < A; ) b += e.length;
for (w = A; w <= b; ++w) if (s(S, w, e)) {
var M = 1 / (h(n(S, e), n(w, e)) + 1);
o(w, e) ? u(n(w - 1, e), n(w, e), n(S, e)) && l(n(w + 1, e), n(w, e), n(S, e)) ? M += 3 : M += 2 : M += 1;
if (M > B) {
E = w;
B = M;
}
}
y = r(S, E, e);
v = r(E, S, e);
}
return g = (g = g.concat(t(y))).concat(t(v));
}
g.push(e);
for (S = g.length - 1; S >= 0; S--) 0 == g[S].length && g.splice(S, 0);
return g;
},
ForceCounterClockWise: _,
IsCounterClockWise: f
};
}), {} ],
103: [ (function(t, e, i) {
"use strict";
var n = t("../CCNode").EventType, r = t("./CCPhysicsTypes").PTM_RATIO, s = t("./CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, o = t("./CCPhysicsTypes").PHYSICS_ANGLE_TO_ANGLE, a = t("./utils").getWorldRotation, c = t("./CCPhysicsTypes").BodyType, l = new b2.Vec2(), u = new b2.Vec2(), h = cc.Vec2.ZERO, _ = cc.Class({
name: "cc.RigidBody",
extends: cc.Component,
editor: !1,
properties: {
_type: c.Dynamic,
_allowSleep: !0,
_gravityScale: 1,
_linearDamping: 0,
_angularDamping: 0,
_linearVelocity: cc.v2(0, 0),
_angularVelocity: 0,
_fixedRotation: !1,
enabled: {
get: function() {
return this._enabled;
},
set: function() {
cc.warnID(8200);
},
visible: !1,
override: !0
},
enabledContactListener: {
default: !1,
tooltip: !1
},
bullet: {
default: !1,
tooltip: !1
},
type: {
type: c,
tooltip: !1,
get: function() {
return this._type;
},
set: function(t) {
this._type = t;
this._b2Body && (t === c.Animated ? this._b2Body.SetType(c.Kinematic) : this._b2Body.SetType(t));
}
},
allowSleep: {
tooltip: !1,
get: function() {
return this._b2Body ? this._b2Body.IsSleepingAllowed() : this._allowSleep;
},
set: function(t) {
this._allowSleep = t;
this._b2Body && this._b2Body.SetSleepingAllowed(t);
}
},
gravityScale: {
tooltip: !1,
get: function() {
return this._gravityScale;
},
set: function(t) {
this._gravityScale = t;
this._b2Body && this._b2Body.SetGravityScale(t);
}
},
linearDamping: {
tooltip: !1,
get: function() {
return this._linearDamping;
},
set: function(t) {
this._linearDamping = t;
this._b2Body && this._b2Body.SetLinearDamping(this._linearDamping);
}
},
angularDamping: {
tooltip: !1,
get: function() {
return this._angularDamping;
},
set: function(t) {
this._angularDamping = t;
this._b2Body && this._b2Body.SetAngularDamping(t);
}
},
linearVelocity: {
tooltip: !1,
type: cc.Vec2,
get: function() {
var t = this._linearVelocity;
if (this._b2Body) {
var e = this._b2Body.GetLinearVelocity();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
set: function(t) {
this._linearVelocity = t;
var e = this._b2Body;
if (e) {
var i = e.m_linearVelocity;
i.Set(t.x / r, t.y / r);
e.SetLinearVelocity(i);
}
}
},
angularVelocity: {
tooltip: !1,
get: function() {
return this._b2Body ? this._b2Body.GetAngularVelocity() * o : this._angularVelocity;
},
set: function(t) {
this._angularVelocity = t;
this._b2Body && this._b2Body.SetAngularVelocity(t * s);
}
},
fixedRotation: {
tooltip: !1,
get: function() {
return this._fixedRotation;
},
set: function(t) {
this._fixedRotation = t;
this._b2Body && this._b2Body.SetFixedRotation(t);
}
},
awake: {
visible: !1,
tooltip: !1,
get: function() {
return !!this._b2Body && this._b2Body.IsAwake();
},
set: function(t) {
this._b2Body && this._b2Body.SetAwake(t);
}
},
awakeOnLoad: {
default: !0,
tooltip: !1,
animatable: !1
},
active: {
visible: !1,
get: function() {
return !!this._b2Body && this._b2Body.IsActive();
},
set: function(t) {
this._b2Body && this._b2Body.SetActive(t);
}
}
},
getLocalPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLocalPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetWorldPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldVector: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetWorldVector(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getLocalVector: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLocalVector(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldPosition: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetPosition();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getWorldRotation: function() {
return this._b2Body ? this._b2Body.GetAngle() * o : 0;
},
getLocalCenter: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetLocalCenter();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getWorldCenter: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetWorldCenter();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getLinearVelocityFromWorldPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLinearVelocityFromWorldPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getMass: function() {
return this._b2Body ? this._b2Body.GetMass() : 0;
},
getInertia: function() {
return this._b2Body ? this._b2Body.GetInertia() * r * r : 0;
},
getJointList: function() {
if (!this._b2Body) return [];
var t = [], e = this._b2Body.GetJointList();
if (!e) return [];
t.push(e.joint._joint);
for (var i = e.prev; i; ) {
t.push(i.joint._joint);
i = i.prev;
}
for (var n = e.next; n; ) {
t.push(n.joint._joint);
n = n.next;
}
return t;
},
applyForce: function(t, e, i) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
u.Set(e.x / r, e.y / r);
this._b2Body.ApplyForce(l, u, i);
}
},
applyForceToCenter: function(t, e) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
this._b2Body.ApplyForceToCenter(l, e);
}
},
applyTorque: function(t, e) {
this._b2Body && this._b2Body.ApplyTorque(t / r, e);
},
applyLinearImpulse: function(t, e, i) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
u.Set(e.x / r, e.y / r);
this._b2Body.ApplyLinearImpulse(l, u, i);
}
},
applyAngularImpulse: function(t, e) {
this._b2Body && this._b2Body.ApplyAngularImpulse(t / r / r, e);
},
syncPosition: function(t) {
var e = this._b2Body;
if (e) {
var i, n = this.node.convertToWorldSpaceAR(h);
(i = this.type === c.Animated ? e.GetLinearVelocity() : e.GetPosition()).x = n.x / r;
i.y = n.y / r;
if (this.type === c.Animated && t) {
var s = e.GetPosition(), o = cc.game.config.frameRate;
i.x = (i.x - s.x) * o;
i.y = (i.y - s.y) * o;
e.SetAwake(!0);
e.SetLinearVelocity(i);
} else e.SetTransformVec(i, e.GetAngle());
}
},
syncRotation: function(t) {
var e = this._b2Body;
if (e) {
var i = s * a(this.node);
if (this.type === c.Animated && t) {
var n = e.GetAngle(), r = cc.game.config.frameRate;
e.SetAwake(!0);
e.SetAngularVelocity((i - n) * r);
} else e.SetTransformVec(e.GetPosition(), i);
}
},
resetVelocity: function() {
var t = this._b2Body;
if (t) {
var e = t.m_linearVelocity;
e.Set(0, 0);
t.SetLinearVelocity(e);
t.SetAngularVelocity(0);
}
},
onEnable: function() {
this._init();
},
onDisable: function() {
this._destroy();
},
_registerNodeEvents: function() {
var t = this.node;
t.on(n.POSITION_CHANGED, this._onNodePositionChanged, this);
t.on(n.ROTATION_CHANGED, this._onNodeRotationChanged, this);
t.on(n.SCALE_CHANGED, this._onNodeScaleChanged, this);
},
_unregisterNodeEvents: function() {
var t = this.node;
t.off(n.POSITION_CHANGED, this._onNodePositionChanged, this);
t.off(n.ROTATION_CHANGED, this._onNodeRotationChanged, this);
t.off(n.SCALE_CHANGED, this._onNodeScaleChanged, this);
},
_onNodePositionChanged: function() {
this.syncPosition(!0);
},
_onNodeRotationChanged: function(t) {
this.syncRotation(!0);
},
_onNodeScaleChanged: function(t) {
if (this._b2Body) for (var e = this.getComponents(cc.PhysicsCollider), i = 0; i < e.length; i++) e[i].apply();
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
this._registerNodeEvents();
var t = new b2.BodyDef();
this.type === c.Animated ? t.type = c.Kinematic : t.type = this.type;
t.allowSleep = this.allowSleep;
t.gravityScale = this.gravityScale;
t.linearDamping = this.linearDamping;
t.angularDamping = this.angularDamping;
var e = this.linearVelocity;
t.linearVelocity = new b2.Vec2(e.x / r, e.y / r);
t.angularVelocity = this.angularVelocity * s;
t.fixedRotation = this.fixedRotation;
t.bullet = this.bullet;
var i = this.node, n = i.convertToWorldSpaceAR(h);
t.position = new b2.Vec2(n.x / r, n.y / r);
t.angle = -Math.PI / 180 * a(i);
t.awake = this.awakeOnLoad;
cc.director.getPhysicsManager()._addBody(this, t);
this._inited = !0;
}
},
__destroy: function() {
if (this._inited) {
cc.director.getPhysicsManager()._removeBody(this);
this._unregisterNodeEvents();
this._inited = !1;
}
},
_getBody: function() {
return this._b2Body;
}
});
cc.RigidBody = e.exports = _;
}), {
"../CCNode": 15,
"./CCPhysicsTypes": 101,
"./utils": 124
} ],
104: [ (function(t, e, i) {
"use strict";
var n = t("../../../external/box2d/box2d");
window.b2 = {};
for (var r in n) if (-1 === r.indexOf("b2_")) {
var s = r.replace("b2", "");
b2[s] = n[r];
}
b2.maxPolygonVertices = 8;
}), {
"../../../external/box2d/box2d": 254
} ],
105: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsBoxCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Box ],
editor: {
menu: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = Math.abs(t.x), i = Math.abs(t.y), r = this.size.width / 2 / n * e, s = this.size.height / 2 / n * i, o = this.offset.x / n * e, a = this.offset.y / n * i, c = new b2.PolygonShape();
c.SetAsBox(r, s, new b2.Vec2(o, a), 0);
return c;
}
});
cc.PhysicsBoxCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
106: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsChainCollider",
extends: cc.PhysicsCollider,
editor: {
menu: !1,
inspector: !1,
requireComponent: cc.RigidBody
},
properties: {
loop: !1,
points: {
default: function() {
return [ cc.v2(-50, 0), cc.v2(50, 0) ];
},
type: [ cc.Vec2 ]
},
threshold: {
default: 1,
serializable: !1,
visible: !1
}
},
_createShape: function(t) {
for (var e = new b2.ChainShape(), i = this.points, r = [], s = 0; s < i.length; s++) {
var o = i[s];
r.push(new b2.Vec2(o.x / n * t.x, o.y / n * t.y));
}
this.loop ? e.CreateLoop(r, r.length) : e.CreateChain(r, r.length);
return e;
},
resetInEditor: !1,
resetPointsByContour: !1
});
cc.PhysicsChainCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
107: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsCircleCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Circle ],
editor: {
menu: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = Math.abs(t.x), i = Math.abs(t.y), r = this.offset.x / n * e, s = this.offset.y / n * i, o = new b2.CircleShape();
o.m_radius = this.radius / n * e;
o.m_p = new b2.Vec2(r, s);
return o;
}
});
cc.PhysicsCircleCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
108: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../utils").getWorldScale, s = cc.Class({
name: "cc.PhysicsCollider",
extends: cc.Collider,
ctor: function() {
this._fixtures = [];
this._shapes = [];
this._inited = !1;
this._rect = cc.rect();
},
properties: {
_density: 1,
_sensor: !1,
_friction: .2,
_restitution: 0,
density: {
tooltip: !1,
get: function() {
return this._density;
},
set: function(t) {
this._density = t;
}
},
sensor: {
tooltip: !1,
get: function() {
return this._sensor;
},
set: function(t) {
this._sensor = t;
}
},
friction: {
tooltip: !1,
get: function() {
return this._friction;
},
set: function(t) {
this._friction = t;
}
},
restitution: {
tooltip: !1,
get: function() {
return this._restitution;
},
set: function(t) {
this._restitution = t;
}
},
body: {
default: null,
type: cc.RigidBody,
visible: !1
}
},
onDisable: function() {
this._destroy();
},
onEnable: function() {
this._init();
},
start: function() {
this._init();
},
_getFixtureIndex: function(t) {
return this._fixtures.indexOf(t);
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
var t = this.body || this.getComponent(cc.RigidBody);
if (t) {
var e = t._getBody();
if (e) {
var i = t.node, n = r(i);
this._scale = n;
var s = 0 === n.x && 0 === n.y ? [] : this._createShape(n);
s instanceof Array || (s = [ s ]);
for (var o = 1 << i.groupIndex, a = 0, c = cc.game.collisionMatrix[i.groupIndex], l = 0; l < c.length; l++) c[l] && (a |= 1 << l);
for (var u = {
categoryBits: o,
maskBits: a,
groupIndex: 0
}, h = cc.director.getPhysicsManager(), _ = 0; _ < s.length; _++) {
var f = s[_], d = new b2.FixtureDef();
d.density = this.density;
d.isSensor = this.sensor;
d.friction = this.friction;
d.restitution = this.restitution;
d.shape = f;
d.filter = u;
var p = e.CreateFixture(d);
p.collider = this;
t.enabledContactListener && h._registerContactFixture(p);
this._shapes.push(f);
this._fixtures.push(p);
}
this.body = t;
this._inited = !0;
}
}
}
},
__destroy: function() {
if (this._inited) {
for (var t = this._fixtures, e = this.body._getBody(), i = cc.director.getPhysicsManager(), n = t.length - 1; n >= 0; n--) {
var r = t[n];
r.collider = null;
i._unregisterContactFixture(r);
e && e.DestroyFixture(r);
}
this.body = null;
this._fixtures.length = 0;
this._shapes.length = 0;
this._inited = !1;
}
},
_createShape: function() {},
apply: function() {
this._destroy();
this._init();
},
getAABB: function() {
for (var t = 1e7, e = 1e7, i = -1e7, r = -1e7, s = this._fixtures, o = 0; o < s.length; o++) for (var a = s[o], c = a.GetShape().GetChildCount(), l = 0; l < c; l++) {
var u = a.GetAABB(l);
u.lowerBound.x < t && (t = u.lowerBound.x);
u.lowerBound.y < e && (e = u.lowerBound.y);
u.upperBound.x > i && (i = u.upperBound.x);
u.upperBound.y > r && (r = u.upperBound.y);
}
t *= n;
e *= n;
i *= n;
r *= n;
var h = this._rect;
h.x = t;
h.y = e;
h.width = i - t;
h.height = r - e;
return h;
}
});
cc.PhysicsCollider = e.exports = s;
}), {
"../CCPhysicsTypes": 101,
"../utils": 124
} ],
109: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPolygonSeparator"), s = cc.Class({
name: "cc.PhysicsPolygonCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Polygon ],
editor: {
menu: !1,
inspector: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = [], i = this.points;
i.length > 0 && i[0].equals(i[i.length - 1]) && (i.length -= 1);
for (var s = r.ConvexPartition(i), o = this.offset, a = 0; a < s.length; a++) {
for (var c = s[a], l = null, u = [], h = null, _ = 0, f = c.length; _ < f; _++) {
l || (l = new b2.PolygonShape());
var d = c[_], p = (d.x + o.x) / n * t.x, m = (d.y + o.y) / n * t.y, y = new b2.Vec2(p, m);
u.push(y);
h || (h = y);
if (u.length === b2.maxPolygonVertices) {
l.Set(u, u.length);
e.push(l);
l = null;
_ < f - 1 && (u = [ h, u[u.length - 1] ]);
}
}
if (l) {
l.Set(u, u.length);
e.push(l);
}
}
return e;
}
});
cc.PhysicsPolygonCollider = e.exports = s;
}), {
"../CCPhysicsTypes": 101,
"../CCPolygonSeparator": 102
} ],
110: [ (function(t, e, i) {
"use strict";
t("./box2d-adapter");
t("./CCPhysicsManager");
t("./CCRigidBody");
t("./CCPhysicsContact");
t("./collider/CCPhysicsCollider");
t("./collider/CCPhysicsChainCollider");
t("./collider/CCPhysicsCircleCollider");
t("./collider/CCPhysicsBoxCollider");
t("./collider/CCPhysicsPolygonCollider");
t("./joint/CCJoint");
t("./joint/CCDistanceJoint");
t("./joint/CCRevoluteJoint");
t("./joint/CCMouseJoint");
t("./joint/CCMotorJoint");
t("./joint/CCPrismaticJoint");
t("./joint/CCWeldJoint");
t("./joint/CCWheelJoint");
t("./joint/CCRopeJoint");
t("./platform/CCPhysicsContactListner");
t("./platform/CCPhysicsAABBQueryCallback");
t("./platform/CCPhysicsRayCastCallback");
}), {
"./CCPhysicsContact": 99,
"./CCPhysicsManager": 100,
"./CCRigidBody": 103,
"./box2d-adapter": 104,
"./collider/CCPhysicsBoxCollider": 105,
"./collider/CCPhysicsChainCollider": 106,
"./collider/CCPhysicsCircleCollider": 107,
"./collider/CCPhysicsCollider": 108,
"./collider/CCPhysicsPolygonCollider": 109,
"./joint/CCDistanceJoint": 111,
"./joint/CCJoint": 112,
"./joint/CCMotorJoint": 113,
"./joint/CCMouseJoint": 114,
"./joint/CCPrismaticJoint": 115,
"./joint/CCRevoluteJoint": 116,
"./joint/CCRopeJoint": 117,
"./joint/CCWeldJoint": 118,
"./joint/CCWheelJoint": 119,
"./platform/CCPhysicsAABBQueryCallback": 120,
"./platform/CCPhysicsContactListner": 121,
"./platform/CCPhysicsRayCastCallback": 123
} ],
111: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.DistanceJoint",
extends: cc.Joint,
editor: !1,
properties: {
_distance: 1,
_frequency: 0,
_dampingRatio: 0,
distance: {
tooltip: !1,
get: function() {
return this._distance;
},
set: function(t) {
this._distance = t;
this._joint && this._joint.SetLength(t);
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.DistanceJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.length = this.distance / n;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
}
});
cc.DistanceJoint = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
112: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.Joint",
extends: cc.Component,
editor: {
requireComponent: cc.RigidBody
},
properties: {
anchor: {
default: cc.v2(0, 0),
tooltip: !1
},
connectedAnchor: {
default: cc.v2(0, 0),
tooltip: !1
},
connectedBody: {
default: null,
type: cc.RigidBody,
tooltip: !1
},
collideConnected: {
default: !1,
tooltip: !1
}
},
onDisable: function() {
this._destroy();
},
onEnable: function() {
this._init();
},
start: function() {
this._init();
},
apply: function() {
this._destroy();
this._init();
},
getWorldAnchor: function() {
if (this._joint) {
var t = this._joint.GetAnchorA();
return cc.v2(t.x * n, t.y * n);
}
return cc.Vec2.ZERO;
},
getWorldConnectedAnchor: function() {
if (this._joint) {
var t = this._joint.GetAnchorB();
return cc.v2(t.x * n, t.y * n);
}
return cc.Vec2.ZERO;
},
getReactionForce: function(t) {
var e = cc.v2();
return this._joint ? this._joint.GetReactionForce(t, e) : e;
},
getReactionTorque: function(t) {
return this._joint ? this._joint.GetReactionTorque(t) : 0;
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
this.body = this.getComponent(cc.RigidBody);
if (this._isValid()) {
var t = this._createJointDef();
if (!t) return;
t.bodyA = this.body._getBody();
t.bodyB = this.connectedBody._getBody();
t.collideConnected = this.collideConnected;
cc.director.getPhysicsManager()._addJoint(this, t);
this._inited = !0;
}
}
},
__destroy: function() {
if (this._inited) {
cc.director.getPhysicsManager()._removeJoint(this);
this._joint = null;
this._inited = !1;
}
},
_createJointDef: function() {
return null;
},
_isValid: function() {
return this.body && this.body._getBody() && this.connectedBody && this.connectedBody._getBody();
}
});
cc.Joint = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
113: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.MotorJoint",
extends: cc.Joint,
editor: !1,
properties: {
_linearOffset: cc.v2(0, 0),
_angularOffset: 0,
_maxForce: 1,
_maxTorque: 1,
_correctionFactor: .3,
anchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
connectedAnchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
linearOffset: {
tooltip: !1,
get: function() {
return this._linearOffset;
},
set: function(t) {
this._linearOffset = t;
this._joint && this._joint.SetLinearOffset(new b2.Vec2(t.x / n, t.y / n));
}
},
angularOffset: {
tooltip: !1,
get: function() {
return this._angularOffset;
},
set: function(t) {
this._angularOffset = t;
this._joint && this._joint.SetAngularOffset(t);
}
},
maxForce: {
tooltip: !1,
get: function() {
return this._maxForce;
},
set: function(t) {
this._maxForce = t;
this._joint && this._joint.SetMaxForce(t);
}
},
maxTorque: {
tooltip: !1,
get: function() {
return this._maxTorque;
},
set: function(t) {
this._maxTorque = t;
this._joint && this._joint.SetMaxTorque(t);
}
},
correctionFactor: {
tooltip: !1,
get: function() {
return this._correctionFactor;
},
set: function(t) {
this._correctionFactor = t;
this._joint && this._joint.SetCorrectionFactor(t);
}
}
},
_createJointDef: function() {
var t = new b2.MotorJointDef();
t.linearOffset = new b2.Vec2(this.linearOffset.x / n, this.linearOffset.y / n);
t.angularOffset = this.angularOffset * r;
t.maxForce = this.maxForce;
t.maxTorque = this.maxTorque;
t.correctionFactor = this.correctionFactor;
return t;
}
});
cc.MotorJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 101
} ],
114: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = new b2.Vec2(), s = cc.Class({
name: "cc.MouseJoint",
extends: cc.Joint,
editor: !1,
properties: {
_target: 1,
_frequency: 5,
_dampingRatio: .7,
_maxForce: 0,
connectedBody: {
default: null,
type: cc.RigidBody,
visible: !1,
override: !0
},
collideConnected: {
default: !0,
visible: !1,
override: !0
},
anchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
connectedAnchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
mouseRegion: {
tooltip: !1,
default: null,
type: cc.Node
},
target: {
tooltip: !1,
visible: !1,
get: function() {
return this._target;
},
set: function(t) {
this._target = t;
if (this._joint) {
r.x = t.x / n;
r.y = t.y / n;
this._joint.SetTarget(r);
}
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
},
maxForce: {
tooltip: !1,
visible: !1,
get: function() {
return this._maxForce;
},
set: function(t) {
this._maxForce = t;
this._joint && this._joint.SetMaxForce(t);
}
}
},
onLoad: function() {
var t = this.mouseRegion || this.node;
t.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);
t.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
t.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
t.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
},
onEnable: function() {},
start: function() {},
onTouchBegan: function(t) {
var e = cc.director.getPhysicsManager(), i = this._pressPoint = t.touch.getLocation();
cc.Camera && cc.Camera.main && (i = cc.Camera.main.getScreenToWorldPoint(i));
var n = e.testPoint(i);
if (n) {
(this.connectedBody = n.body).awake = !0;
this.maxForce = 1e3 * this.connectedBody.getMass();
this.target = i;
this._init();
}
},
onTouchMove: function(t) {
this._pressPoint = t.touch.getLocation();
},
onTouchEnd: function(t) {
this._destroy();
this._pressPoint = null;
},
_createJointDef: function() {
var t = new b2.MouseJointDef();
r.x = this.target.x / n;
r.y = this.target.y / n;
t.target = r;
t.maxForce = this.maxForce;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
},
update: function() {
if (this._pressPoint && this._isValid()) {
var t = cc.Camera.findCamera(this.node);
this.target = t ? t.getScreenToWorldPoint(this._pressPoint) : this._pressPoint;
}
}
});
cc.MouseJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 101
} ],
115: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.PrismaticJoint",
extends: cc.Joint,
editor: !1,
properties: {
localAxisA: {
default: cc.v2(1, 0),
tooltip: !1
},
referenceAngle: {
default: 0,
tooltip: !1
},
enableLimit: {
default: !1,
tooltip: !1
},
enableMotor: {
default: !1,
tooltip: !1
},
lowerLimit: {
default: 0,
tooltip: !1
},
upperLimit: {
default: 0,
tooltip: !1
},
_maxMotorForce: 0,
_motorSpeed: 0,
maxMotorForce: {
tooltip: !1,
get: function() {
return this._maxMotorForce;
},
set: function(t) {
this._maxMotorForce = t;
this._joint && this._joint.SetMaxMotorForce(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t);
}
}
},
_createJointDef: function() {
var t = new b2.PrismaticJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.localAxisA = new b2.Vec2(this.localAxisA.x, this.localAxisA.y);
t.referenceAngle = this.referenceAngle * r;
t.enableLimit = this.enableLimit;
t.lowerTranslation = this.lowerLimit / n;
t.upperTranslation = this.upperLimit / n;
t.enableMotor = this.enableMotor;
t.maxMotorForce = this.maxMotorForce;
t.motorSpeed = this.motorSpeed;
return t;
}
});
cc.PrismaticJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 101
} ],
116: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = t("../CCPhysicsTypes").PHYSICS_ANGLE_TO_ANGLE, o = cc.Class({
name: "cc.RevoluteJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxMotorTorque: 0,
_motorSpeed: 0,
_enableLimit: !1,
_enableMotor: !1,
referenceAngle: {
default: 0,
tooltip: !1
},
lowerAngle: {
default: 0,
tooltip: !1
},
upperAngle: {
default: 0,
tooltip: !1
},
maxMotorTorque: {
tooltip: !1,
get: function() {
return this._maxMotorTorque;
},
set: function(t) {
this._maxMotorTorque = t;
this._joint && this._joint.SetMaxMotorTorque(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t * r);
}
},
enableLimit: {
tooltip: !1,
get: function() {
return this._enableLimit;
},
set: function(t) {
this._enableLimit = t;
this._joint && this._joint.EnableLimit(t);
}
},
enableMotor: {
tooltip: !1,
get: function() {
return this._enableMotor;
},
set: function(t) {
this._enableMotor = t;
this._joint && this._joint.EnableMotor(t);
}
}
},
getJointAngle: function() {
return this._joint ? this._joint.GetJointAngle() * s : 0;
},
setLimits: function(t, e) {
if (this._joint) return this._joint.SetLimits(t * r, e * r);
},
_createJointDef: function() {
var t = new b2.RevoluteJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.lowerAngle = this.upperAngle * r;
t.upperAngle = this.lowerAngle * r;
t.maxMotorTorque = this.maxMotorTorque;
t.motorSpeed = this.motorSpeed * r;
t.enableLimit = this.enableLimit;
t.enableMotor = this.enableMotor;
t.referenceAngle = this.referenceAngle * r;
return t;
}
});
cc.RevoluteJoint = e.exports = o;
}), {
"../CCPhysicsTypes": 101
} ],
117: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.RopeJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxLength: 1,
maxLength: {
tooltip: !1,
get: function() {
return this._maxLength;
},
set: function(t) {
this._maxLength = t;
this._joint && this._joint.SetMaxLength(t);
}
}
},
_createJointDef: function() {
var t = new b2.RopeJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.maxLength = this.maxLength / n;
return t;
}
});
cc.RopeJoint = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
118: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.WeldJoint",
extends: cc.Joint,
editor: !1,
properties: {
referenceAngle: {
default: 0,
tooltip: !1
},
_frequency: 0,
_dampingRatio: 0,
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.WeldJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.referenceAngle = this.referenceAngle * r;
t.frequencyHz = this.frequency;
t.dampingRatio = this.dampingRatio;
return t;
}
});
cc.WeldJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 101
} ],
119: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.WheelJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxMotorTorque: 0,
_motorSpeed: 0,
_enableMotor: !1,
_frequency: 2,
_dampingRatio: .7,
localAxisA: {
default: cc.v2(1, 0),
tooltip: !1
},
maxMotorTorque: {
tooltip: !1,
get: function() {
return this._maxMotorTorque;
},
set: function(t) {
this._maxMotorTorque = t;
this._joint && this._joint.SetMaxMotorTorque(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t * r);
}
},
enableMotor: {
tooltip: !1,
get: function() {
return this._enableMotor;
},
set: function(t) {
this._enableMotor = t;
this._joint && this._joint.EnableMotor(t);
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.WheelJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.localAxisA = new b2.Vec2(this.localAxisA.x, this.localAxisA.y);
t.maxMotorTorque = this.maxMotorTorque;
t.motorSpeed = this.motorSpeed * r;
t.enableMotor = this.enableMotor;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
}
});
cc.WheelJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 101
} ],
120: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").BodyType;
function r() {
this._point = new b2.Vec2();
this._isPoint = !1;
this._fixtures = [];
}
r.prototype.init = function(t) {
if (t) {
this._isPoint = !0;
this._point.x = t.x;
this._point.y = t.y;
} else this._isPoint = !1;
this._fixtures.length = 0;
};
r.prototype.ReportFixture = function(t) {
if (t.GetBody().GetType() === n.Dynamic) if (this._isPoint) {
if (t.TestPoint(this._point)) {
this._fixtures.push(t);
return !1;
}
} else this._fixtures.push(t);
return !0;
};
r.prototype.getFixture = function() {
return this._fixtures[0];
};
r.prototype.getFixtures = function() {
return this._fixtures;
};
cc.PhysicsAABBQueryCallback = e.exports = r;
}), {
"../CCPhysicsTypes": 101
} ],
121: [ (function(t, e, i) {
"use strict";
function n() {
this._contactFixtures = [];
}
n.prototype.setBeginContact = function(t) {
this._BeginContact = t;
};
n.prototype.setEndContact = function(t) {
this._EndContact = t;
};
n.prototype.setPreSolve = function(t) {
this._PreSolve = t;
};
n.prototype.setPostSolve = function(t) {
this._PostSolve = t;
};
n.prototype.BeginContact = function(t) {
if (this._BeginContact) {
var e = t.GetFixtureA(), i = t.GetFixtureB(), n = this._contactFixtures;
t._shouldReport = !1;
if (-1 !== n.indexOf(e) || -1 !== n.indexOf(i)) {
t._shouldReport = !0;
this._BeginContact(t);
}
}
};
n.prototype.EndContact = function(t) {
if (this._EndContact && t._shouldReport) {
t._shouldReport = !1;
this._EndContact(t);
}
};
n.prototype.PreSolve = function(t, e) {
this._PreSolve && t._shouldReport && this._PreSolve(t, e);
};
n.prototype.PostSolve = function(t, e) {
this._PostSolve && t._shouldReport && this._PostSolve(t, e);
};
n.prototype.registerContactFixture = function(t) {
this._contactFixtures.push(t);
};
n.prototype.unregisterContactFixture = function(t) {
cc.js.array.remove(this._contactFixtures, t);
};
cc.PhysicsContactListener = e.exports = n;
}), {} ],
122: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.v2(), s = cc.Color.GREEN, o = cc.Color.RED;
function a(t) {
b2.Draw.call(this);
this._drawer = t;
this._xf = this._dxf = new b2.Transform();
}
cc.js.extend(a, b2.Draw);
cc.js.mixin(a.prototype, {
_DrawPolygon: function(t, e) {
for (var i = this._drawer, s = 0; s < e; s++) {
b2.Transform.MulXV(this._xf, t[s], r);
var o = r.x * n, a = r.y * n;
0 === s ? i.moveTo(o, a) : i.lineTo(o, a);
}
i.close();
},
DrawPolygon: function(t, e, i) {
this._applyStrokeColor(i);
this._DrawPolygon(t, e);
this._drawer.stroke();
},
DrawSolidPolygon: function(t, e, i) {
this._applyFillColor(i);
this._DrawPolygon(t, e);
this._drawer.fill();
this._drawer.stroke();
},
_DrawCircle: function(t, e) {
var i = this._xf.p;
this._drawer.circle((t.x + i.x) * n, (t.y + i.y) * n, e * n);
},
DrawCircle: function(t, e, i) {
this._applyStrokeColor(i);
this._DrawCircle(t, e);
this._drawer.stroke();
},
DrawSolidCircle: function(t, e, i, n) {
this._applyFillColor(n);
this._DrawCircle(t, e);
this._drawer.fill();
},
DrawSegment: function(t, e, i) {
var s = this._drawer;
if (t.x !== e.x || t.y !== e.y) {
this._applyStrokeColor(i);
b2.Transform.MulXV(this._xf, t, r);
s.moveTo(r.x * n, r.y * n);
b2.Transform.MulXV(this._xf, e, r);
s.lineTo(r.x * n, r.y * n);
s.stroke();
} else {
this._applyFillColor(i);
this._DrawCircle(t, 2 / n);
s.fill();
}
},
DrawTransform: function(t) {
var e = this._drawer;
e.strokeColor = o;
r.x = r.y = 0;
b2.Transform.MulXV(t, r, r);
e.moveTo(r.x * n, r.y * n);
r.x = 1;
r.y = 0;
b2.Transform.MulXV(t, r, r);
e.lineTo(r.x * n, r.y * n);
e.stroke();
e.strokeColor = s;
r.x = r.y = 0;
b2.Transform.MulXV(t, r, r);
e.moveTo(r.x * n, r.y * n);
r.x = 0;
r.y = 1;
b2.Transform.MulXV(t, r, r);
e.lineTo(r.x * n, r.y * n);
e.stroke();
},
DrawPoint: function(t, e, i) {},
_applyStrokeColor: function(t) {
var e = this._drawer.strokeColor;
e.r = 255 * t.r;
e.g = 255 * t.g;
e.b = 255 * t.b;
e.a = 150;
this._drawer.strokeColor = e;
},
_applyFillColor: function(t) {
var e = this._drawer.fillColor;
e.r = 255 * t.r;
e.g = 255 * t.g;
e.b = 255 * t.b;
e.a = 150;
this._drawer.fillColor = e;
},
PushTransform: function(t) {
this._xf = t;
},
PopTransform: function() {
this._xf = this._dxf;
}
});
e.exports = a;
}), {
"../CCPhysicsTypes": 101
} ],
123: [ (function(t, e, i) {
"use strict";
function n() {
this._type = 0;
this._fixtures = [];
this._points = [];
this._normals = [];
this._fractions = [];
}
n.prototype.init = function(t) {
this._type = t;
this._fixtures.length = 0;
this._points.length = 0;
this._normals.length = 0;
this._fractions.length = 0;
};
n.prototype.ReportFixture = function(t, e, i, n) {
if (0 === this._type) {
this._fixtures[0] = t;
this._points[0] = e;
this._normals[0] = i;
this._fractions[0] = n;
return n;
}
this._fixtures.push(t);
this._points.push(cc.v2(e));
this._normals.push(cc.v2(i));
this._fractions.push(n);
return 1 === this._type ? 0 : this._type >= 2 ? 1 : n;
};
n.prototype.getFixtures = function() {
return this._fixtures;
};
n.prototype.getPoints = function() {
return this._points;
};
n.prototype.getNormals = function() {
return this._normals;
};
n.prototype.getFractions = function() {
return this._fractions;
};
cc.PhysicsRayCastCallback = e.exports = n;
}), {} ],
124: [ (function(t, e, i) {
"use strict";
e.exports = {
getWorldRotation: function(t) {
for (var e = t.angle, i = t.parent; i.parent; ) {
e += i.angle;
i = i.parent;
}
return -e;
},
getWorldScale: function(t) {
for (var e = t.scaleX, i = t.scaleY, n = t.parent; n.parent; ) {
e *= n.scaleX;
i *= n.scaleY;
n = n.parent;
}
return cc.v2(e, i);
},
convertToNodeRotation: function(t, e) {
e -= -t.angle;
for (var i = t.parent; i.parent; ) {
e -= -i.angle;
i = i.parent;
}
return e;
}
};
}), {} ],
125: [ (function(t, e, i) {
"use strict";
t("../assets/CCAsset");
var n = t("./utils").callInNextTick, r = t("../load-pipeline/CCLoader"), s = t("../load-pipeline/asset-table"), o = t("../load-pipeline/pack-downloader"), a = t("../load-pipeline/auto-release-utils"), c = t("../utils/decode-uuid"), l = t("../load-pipeline/md5-pipe"), u = t("../load-pipeline/subpackage-pipe"), h = t("./js"), _ = "", f = "", d = h.createMap(!0);
function p(t) {
return t && (t.constructor === cc.SceneAsset || t instanceof cc.Scene);
}
function m(t, e) {
this.url = t;
this.type = e;
}
var y = {
loadAsset: function(t, e, i) {
if ("string" != typeof t) return n(e, new Error("[AssetLibrary] uuid must be string"), null);
var s = {
uuid: t,
type: "uuid"
};
i && i.existingAsset && (s.existingAsset = i.existingAsset);
r.load(s, (function(i, n) {
if (i || !n) {
var s = "string" == typeof i ? i : i ? i.message || i.errorMessage || JSON.stringify(i) : "Unknown error";
i = new Error("[AssetLibrary] loading JSON or dependencies failed:" + s);
} else {
if (n.constructor === cc.SceneAsset) {
var o = cc.loader._getReferenceKey(t);
n.scene.dependAssets = a.getDependsRecursively(o);
}
if (p(n)) {
var c = cc.loader._getReferenceKey(t);
r.removeItem(c);
}
}
e && e(i, n);
}));
},
getLibUrlNoExt: function(t, e) {
t = c(t);
return (e ? f + "assets/" : _) + t.slice(0, 2) + "/" + t;
},
_queryAssetInfoInEditor: function(t, e) {
0;
},
_getAssetInfoInRuntime: function(t, e) {
e = e || {
url: null,
raw: !1
};
var i = d[t];
if (i && !h.isChildClassOf(i.type, cc.Asset)) {
e.url = f + i.url;
e.raw = !0;
} else {
e.url = this.getLibUrlNoExt(t) + ".json";
e.raw = !1;
}
return e;
},
_uuidInSettings: function(t) {
return t in d;
},
queryAssetInfo: function(t, e) {
var i = this._getAssetInfoInRuntime(t);
e(null, i.url, i.raw);
},
parseUuidInEditor: function(t) {},
loadJson: function(t, e) {
var i = "" + (new Date().getTime() + Math.random()), n = {
uuid: i,
type: "uuid",
content: t,
skips: [ r.assetLoader.id, r.downloader.id ]
};
r.load(n, (function(t, n) {
if (t) t = new Error("[AssetLibrary] loading JSON or dependencies failed: " + t.message); else {
if (n.constructor === cc.SceneAsset) {
var s = cc.loader._getReferenceKey(i);
n.scene.dependAssets = a.getDependsRecursively(s);
}
if (p(n)) {
var o = cc.loader._getReferenceKey(i);
r.removeItem(o);
}
}
n._uuid = "";
e && e(t, n);
}));
},
getAssetByUuid: function(t) {
return y._uuidToAsset[t] || null;
},
init: function(t) {
0;
var e = t.libraryPath;
e = e.replace(/\\/g, "/");
_ = cc.path.stripSep(e) + "/";
f = t.rawAssetsBase;
if (t.subpackages) {
var i = new u(t.subpackages);
cc.loader.insertPipeAfter(cc.loader.assetLoader, i);
cc.loader.subPackPipe = i;
}
var n = t.md5AssetsMap;
if (n && n.import) {
var a = 0, p = 0, y = h.createMap(!0), v = n.import;
for (a = 0; a < v.length; a += 2) y[p = c(v[a])] = v[a + 1];
var g = h.createMap(!0);
v = n["raw-assets"];
for (a = 0; a < v.length; a += 2) g[p = c(v[a])] = v[a + 1];
var C = new l(y, g, _);
cc.loader.insertPipeAfter(cc.loader.assetLoader, C);
cc.loader.md5Pipe = C;
}
var x = r._assetTables;
for (var A in x) x[A].reset();
var b = t.rawAssets;
if (b) for (var S in b) {
var w = b[S];
for (var p in w) {
var T = w[p], B = T[0], E = T[1], M = cc.js._getClassById(E);
if (M) {
d[p] = new m(S + "/" + B, M);
var I = cc.path.extname(B);
I && (B = B.slice(0, -I.length));
var R = 1 === T[2];
x[S] || (x[S] = new s());
x[S].add(B, p, M, !R);
} else cc.error("Cannot get", E);
}
}
t.packedAssets && o.initPacks(t.packedAssets);
cc.url._init(t.mountPaths && t.mountPaths.assets || f + "assets");
},
_uuidToAsset: {}
}, v = {
effect: {},
material: {}
}, g = {};
function C(t, e, i) {
var n = t + "s", r = v[t] = {}, s = "internal";
0;
cc.loader.loadResDir(n, e, s, (function() {}), (function(t, e) {
if (t) cc.error(t); else for (var n = 0; n < e.length; n++) {
var s = e[n];
cc.loader.getDependsRecursively(s).forEach((function(t) {
return g[t] = !0;
}));
r["" + s.name] = s;
}
i();
}));
}
y._loadBuiltins = function(t) {
if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) return t && t();
C("effect", cc.EffectAsset, (function() {
C("material", cc.Material, t);
}));
};
y.getBuiltin = function(t, e) {
return v[t][e];
};
y.getBuiltins = function(t) {
return t ? v[t] : v;
};
y.resetBuiltins = function() {
v = {
effect: {},
material: {}
};
g = {};
};
y.getBuiltinDeps = function() {
return g;
};
e.exports = cc.AssetLibrary = y;
}), {
"../assets/CCAsset": 19,
"../load-pipeline/CCLoader": 78,
"../load-pipeline/asset-table": 80,
"../load-pipeline/auto-release-utils": 82,
"../load-pipeline/md5-pipe": 89,
"../load-pipeline/pack-downloader": 90,
"../load-pipeline/subpackage-pipe": 93,
"../utils/decode-uuid": 196,
"./js": 146,
"./utils": 150
} ],
126: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./CCEnum"), s = t("./utils"), o = (s.isPlainEmptyObj_DEV, 
s.cloneable_DEV, t("./attribute")), a = o.DELIMETER, c = t("./preprocess-class");
t("./requiring-frame");
var l = [ "name", "extends", "mixins", "ctor", "__ctor__", "properties", "statics", "editor", "__ES6__" ];
function u(t, e) {
t.indexOf(e) < 0 && t.push(e);
}
var h = {
datas: null,
push: function(t) {
if (this.datas) this.datas.push(t); else {
this.datas = [ t ];
var e = this;
setTimeout((function() {
e.init();
}), 0);
}
},
init: function() {
var t = this.datas;
if (t) {
for (var e = 0; e < t.length; ++e) {
var i = t[e], r = i.cls, s = i.props;
"function" == typeof s && (s = s());
var o = n.getClassName(r);
s ? E(r, o, s, r.$super, i.mixins) : cc.errorID(3633, o);
}
this.datas = null;
}
}
};
function _(t, e) {
0;
u(t.__props__, e);
}
function f(t, e, i, n, r) {
var s = n.default;
0;
o.setClassAttr(t, i, "default", s);
_(t, i);
R(t, n, e, i, !1);
}
function d(t, e, i, r, s) {
var a = r.get, c = r.set, l = t.prototype, u = Object.getOwnPropertyDescriptor(l, i), h = !u;
if (a) {
0;
R(t, r, e, i, !0);
0;
o.setClassAttr(t, i, "serializable", !1);
0;
s || n.get(l, i, a, h, h);
0;
}
if (c) {
if (!s) {
0;
n.set(l, i, c, h, h);
}
0;
}
}
function p(t) {
return "function" == typeof t ? t() : t;
}
function m(t, e, i) {
for (var r in e) t.hasOwnProperty(r) || i && !i(r) || Object.defineProperty(t, r, n.getPropertyDescriptor(e, r));
}
function y(t, e, i, r) {
var s, a, c = r.__ctor__, l = r.ctor, u = r.__ES6__;
if (u) {
s = [ l ];
a = l;
} else {
s = c ? [ c ] : w(e, i, r);
a = S(s, e, t, r);
n.value(a, "extend", (function(t) {
t.extends = this;
return M(t);
}), !0);
}
n.value(a, "__ctors__", s.length > 0 ? s : null, !0);
var h = a.prototype;
if (e) {
if (!u) {
n.extend(a, e);
h = a.prototype;
}
a.$super = e;
0;
}
if (i) {
for (var _ = i.length - 1; _ >= 0; _--) {
var f = i[_];
m(h, f.prototype);
m(a, f, (function(t) {
return f.hasOwnProperty(t) && !0;
}));
M._isCCClass(f) && m(o.getClassAttrs(a), o.getClassAttrs(f));
}
h.constructor = a;
}
u || (h.__initProps__ = b);
n.setClassName(t, a);
return a;
}
function v(t, e, i, r) {
var s = cc.Component, o = cc._RF.peek();
if (o && n.isChildClassOf(e, s)) {
if (n.isChildClassOf(o.cls, s)) {
cc.errorID(3615);
return null;
}
0;
t = t || o.script;
}
var a = y(t, e, i, r);
if (o) if (n.isChildClassOf(e, s)) {
var c = o.uuid;
if (c) {
n._setClassId(c, a);
0;
}
o.cls = a;
} else n.isChildClassOf(o.cls, s) || (o.cls = a);
return a;
}
function g(t) {
for (var e = n.getClassName(t), i = t.constructor, r = "new " + e + "(", s = 0; s < i.__props__.length; s++) {
var o = t[i.__props__[s]];
0;
r += o;
s < i.__props__.length - 1 && (r += ",");
}
return r + ")";
}
function C(t) {
return JSON.stringify(t).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029");
}
function x(t, e) {
for (var i = [], n = "", r = 0; r < e.length; r++) {
var s = e[r], o = s + a + "default";
if (o in t) {
var c, l;
c = A.test(s) ? "this." + s + "=" : "this[" + C(s) + "]=";
var u = t[o];
if ("object" == typeof u && u) l = u instanceof cc.ValueType ? g(u) : Array.isArray(u) ? "[]" : "{}"; else if ("function" == typeof u) {
var h = i.length;
i.push(u);
l = "F[" + h + "]()";
0;
} else l = "string" == typeof u ? C(u) : u;
n += c = c + l + ";\n";
}
}
return 0 === i.length ? Function(n) : Function("F", "return (function(){\n" + n + "})")(i);
}
var A = /^[A-Za-z_$][0-9A-Za-z_$]*$/;
function b(t) {
var e = o.getClassAttrs(t), i = t.__props__;
if (null === i) {
h.init();
i = t.__props__;
}
var n = x(e, i);
t.prototype.__initProps__ = n;
n.call(this);
}
var S = function(t, e, i, n) {
var r = "return function CCClass(){\n";
e && B(e, n, i) && (r += "this._super=null;\n");
r += "this.__initProps__(CCClass);\n";
var s = t.length;
if (s > 0) {
0;
var o = "].apply(this,arguments);\n";
if (1 === s) r += "CCClass.__ctors__[0" + o; else {
r += "var cs=CCClass.__ctors__;\n";
for (var a = 0; a < s; a++) r += "cs[" + a + o;
}
0;
}
r += "}";
return Function(r)();
};
function w(t, e, i) {
function n(t) {
return M._isCCClass(t) ? t.__ctors__ || [] : [ t ];
}
for (var r = [], s = [ t ].concat(e), o = 0; o < s.length; o++) {
var a = s[o];
if (a) for (var c = n(a), l = 0; l < c.length; l++) u(r, c[l]);
}
var h = i.ctor;
h && r.push(h);
return r;
}
var T = /xyz/.test((function() {
xyz;
})) ? /\b\._super\b/ : /.*/;
/xyz/.test((function() {
xyz;
}));
function B(t, e, i) {
var r = !1;
for (var s in e) if (!(l.indexOf(s) >= 0)) {
var o = e[s];
if ("function" == typeof o) {
var a = n.getPropertyDescriptor(t.prototype, s);
if (a) {
var c = a.value;
if ("function" == typeof c) {
if (T.test(o)) {
r = !0;
e[s] = (function(t, e) {
return function() {
var i = this._super;
this._super = t;
var n = e.apply(this, arguments);
this._super = i;
return n;
};
})(c, o);
}
continue;
}
}
0;
}
}
return r;
}
function E(t, e, i, n, r, s) {
t.__props__ = [];
n && n.__props__ && (t.__props__ = n.__props__.slice());
if (r) for (var l = 0; l < r.length; ++l) {
var u = r[l];
u.__props__ && (t.__props__ = t.__props__.concat(u.__props__.filter((function(e) {
return t.__props__.indexOf(e) < 0;
}))));
}
if (i) {
c.preprocessAttrs(i, e, t, s);
for (var h in i) {
var _ = i[h];
"default" in _ ? f(t, e, h, _) : d(t, e, h, _, s);
}
}
var p = o.getClassAttrs(t);
t.__values__ = t.__props__.filter((function(t) {
return !1 !== p[t + a + "serializable"];
}));
}
function M(t) {
var e = (t = t || {}).name, i = t.extends, r = t.mixins, s = v(e, i, r, t);
e || (e = cc.js.getClassName(s));
s._sealed = !0;
i && (i._sealed = !1);
var o = t.properties;
if ("function" == typeof o || i && null === i.__props__ || r && r.some((function(t) {
return null === t.__props__;
}))) {
h.push({
cls: s,
props: o,
mixins: r
});
s.__props__ = s.__values__ = null;
} else E(s, e, o, i, t.mixins, t.__ES6__);
var a = t.statics;
if (a) {
var u;
0;
for (u in a) s[u] = a[u];
}
for (var _ in t) if (!(l.indexOf(_) >= 0)) {
var f = t[_];
c.validateMethodWithProps(f, _, e, s, i) && n.value(s.prototype, _, f, !0, !0);
}
var d = t.editor;
d && n.isChildClassOf(i, cc.Component) && cc.Component._registerEditorProps(s, d);
return s;
}
M._isCCClass = function(t) {
return t && t.hasOwnProperty("__ctors__");
};
M._fastDefine = function(t, e, i) {
n.setClassName(t, e);
for (var r = e.__props__ = e.__values__ = Object.keys(i), s = o.getClassAttrs(e), c = 0; c < r.length; c++) {
var l = r[c];
s[l + a + "visible"] = !1;
s[l + a + "default"] = i[l];
}
};
M.Attr = o;
M.attr = o.attr;
M.getInheritanceChain = function(t) {
for (var e = []; t = n.getSuper(t); ) t !== Object && e.push(t);
return e;
};
var I = {
Integer: "Number",
Float: "Number",
Boolean: "Boolean",
String: "String"
};
function R(t, e, i, n, s) {
var c = null, l = "";
function u() {
l = n + a;
return c = o.getClassAttrs(t);
}
0;
var h = e.type;
if (h) {
var _ = I[h];
if (_) {
(c || u())[l + "type"] = h;
0;
} else if ("Object" === h) 0; else if (h === o.ScriptUuid) {
(c || u())[l + "type"] = "Script";
c[l + "ctor"] = cc.ScriptAsset;
} else if ("object" == typeof h) if (r.isEnum(h)) {
(c || u())[l + "type"] = "Enum";
c[l + "enumList"] = r.getList(h);
} else 0; else if ("function" == typeof h) {
(c || u())[l + "type"] = "Object";
c[l + "ctor"] = h;
0;
} else 0;
}
function f(t, i) {
if (t in e) {
var n = e[t];
typeof n === i && ((c || u())[l + t] = n);
}
}
e.editorOnly && ((c || u())[l + "editorOnly"] = !0);
0;
e.url && ((c || u())[l + "saveUrlAsAsset"] = !0);
!1 === e.serializable && ((c || u())[l + "serializable"] = !1);
f("formerlySerializedAs", "string");
0;
var d = e.range;
if (d) if (Array.isArray(d)) if (d.length >= 2) {
(c || u())[l + "min"] = d[0];
c[l + "max"] = d[1];
d.length > 2 && (c[l + "step"] = d[2]);
} else 0; else 0;
f("min", "number");
f("max", "number");
f("step", "number");
}
cc.Class = M;
e.exports = {
isArray: function(t) {
t = p(t);
return Array.isArray(t);
},
fastDefine: M._fastDefine,
getNewValueTypeCode: g,
IDENTIFIER_RE: A,
escapeForJS: C,
getDefault: p
};
0;
}), {
"./CCEnum": 128,
"./attribute": 138,
"./js": 146,
"./preprocess-class": 147,
"./requiring-frame": 148,
"./utils": 150
} ],
127: [ (function(t, e, i) {
"use strict";
t("./CCClass");
var n = t("./preprocess-class"), r = t("./js"), s = "__ccclassCache__";
function o(t) {
return t;
}
function a(t, e) {
return t[e] || (t[e] = {});
}
function c(t) {
return function(e) {
return "function" == typeof e ? t(e) : function(i) {
return t(i, e);
};
};
}
function l(t, e, i) {
return function(t) {
0;
return function(i) {
return e(i, t);
};
};
}
var u = l.bind(null, !1);
function h(t) {
return l.bind(null, !1);
}
var _ = h(), f = h();
function d(t, e) {
0;
return a(t, s);
}
function p(t) {
var e;
try {
e = t();
} catch (e) {
return t;
}
return "object" != typeof e || null === e ? e : t;
}
function m(t) {
var e;
try {
e = new t();
} catch (t) {
0;
return {};
}
return e;
}
function y(t, e, i, s, o, a) {
var c;
s && (c = n.getFullFormOfProperty(s));
var l = e[i], u = r.mixin(l || {}, c || s || {});
if (o && (o.get || o.set)) {
o.get && (u.get = o.get);
o.set && (u.set = o.set);
} else {
0;
var h = void 0;
if (o) {
if (o.initializer) {
h = p(o.initializer);
!0;
}
} else {
var _ = a.default || (a.default = m(t));
if (_.hasOwnProperty(i)) {
h = _[i];
!0;
}
}
0;
u.default = h;
}
e[i] = u;
}
var v = c((function(t, e) {
var i = r.getSuper(t);
i === Object && (i = null);
var n = {
name: e,
extends: i,
ctor: t,
__ES6__: !0
}, o = t[s];
if (o) {
var a = o.proto;
a && r.mixin(n, a);
t[s] = void 0;
}
return cc.Class(n);
}));
function g(t, e, i) {
return t((function(t, n) {
var r = d(t);
if (r) {
var s = void 0 !== i ? i : n;
a(a(r, "proto"), "editor")[e] = s;
}
}), e);
}
function C(t) {
return t(o);
}
var x = C(c), A = g(u, "requireComponent"), b = C(_), S = g(f, "executionOrder"), w = C(c), T = C(c), B = C(_), E = C(_), M = C(_);
cc._decorator = e.exports = {
ccclass: v,
property: function(t, e, i) {
var n = null;
function r(t, e, i) {
var r = d(t.constructor);
if (r) {
var s = a(a(r, "proto"), "properties");
y(t.constructor, s, e, n, i, r);
}
}
if ("undefined" == typeof e) {
n = t;
return r;
}
r(t, e, i);
},
executeInEditMode: x,
requireComponent: A,
menu: b,
executionOrder: S,
disallowMultiple: w,
playOnFocus: T,
inspector: B,
icon: E,
help: M,
mixins: function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
return function(e) {
var i = d(e);
i && (a(i, "proto").mixins = t);
};
}
};
}), {
"./CCClass": 126,
"./js": 146,
"./preprocess-class": 147,
"./utils": 150
} ],
128: [ (function(t, e, i) {
"use strict";
var n = t("./js");
function r(t) {
if ("__enums__" in t) return t;
n.value(t, "__enums__", null, !0);
for (var e = -1, i = Object.keys(t), r = 0; r < i.length; r++) {
var s = i[r], o = t[s];
if (-1 === o) {
o = ++e;
t[s] = o;
} else if ("number" == typeof o) e = o; else if ("string" == typeof o && Number.isInteger(parseFloat(s))) continue;
var a = "" + o;
if (s !== a) {
0;
n.value(t, a, s);
}
}
return t;
}
r.isEnum = function(t) {
return t && t.hasOwnProperty("__enums__");
};
r.getList = function(t) {
if (t.__enums__) return t.__enums__;
var e = t.__enums__ = [];
for (var i in t) {
var n = t[i];
Number.isInteger(n) && e.push({
name: i,
value: n
});
}
e.sort((function(t, e) {
return t.value - e.value;
}));
return e;
};
e.exports = cc.Enum = r;
}), {
"./js": 146
} ],
129: [ (function(t, e, i) {
"use strict";
var n = t("../event-manager"), r = t("./CCInputManager"), s = void 0;
cc.Acceleration = function(t, e, i, n) {
this.x = t || 0;
this.y = e || 0;
this.z = i || 0;
this.timestamp = n || 0;
};
r.setAccelerometerEnabled = function(t) {
var e = this;
if (e._accelEnabled !== t) {
e._accelEnabled = t;
var i = cc.director.getScheduler();
i.enableForTarget(e);
if (e._accelEnabled) {
e._registerAccelerometerEvent();
e._accelCurTime = 0;
i.scheduleUpdate(e);
} else {
e._unregisterAccelerometerEvent();
e._accelCurTime = 0;
i.unscheduleUpdate(e);
}
jsb.device.setMotionEnabled(t);
}
};
r.setAccelerometerInterval = function(t) {
if (this._accelInterval !== t) {
this._accelInterval = t;
jsb.device.setMotionInterval(t);
}
};
r._registerKeyboardEvent = function() {
cc.game.canvas.addEventListener("keydown", (function(t) {
n.dispatchEvent(new cc.Event.EventKeyboard(t.keyCode, !0));
t.stopPropagation();
t.preventDefault();
}), !1);
cc.game.canvas.addEventListener("keyup", (function(t) {
n.dispatchEvent(new cc.Event.EventKeyboard(t.keyCode, !1));
t.stopPropagation();
t.preventDefault();
}), !1);
};
r._registerAccelerometerEvent = function() {
var t = window, e = this;
e._acceleration = new cc.Acceleration();
e._accelDeviceEvent = t.DeviceMotionEvent || t.DeviceOrientationEvent;
cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ && (e._accelDeviceEvent = window.DeviceOrientationEvent);
var i = e._accelDeviceEvent === t.DeviceMotionEvent ? "devicemotion" : "deviceorientation", n = navigator.userAgent;
(/Android/.test(n) || /Adr/.test(n) && cc.sys.browserType === cc.BROWSER_TYPE_UC) && (e._minus = -1);
s = e.didAccelerate.bind(e);
t.addEventListener(i, s, !1);
};
r._unregisterAccelerometerEvent = function() {
var t = window, e = this._accelDeviceEvent === t.DeviceMotionEvent ? "devicemotion" : "deviceorientation";
s && t.removeEventListener(e, s, !1);
};
r.didAccelerate = function(t) {
var e = this, i = window;
if (e._accelEnabled) {
var n = e._acceleration, r = void 0, s = void 0, o = void 0;
if (e._accelDeviceEvent === window.DeviceMotionEvent) {
var a = t.accelerationIncludingGravity;
r = e._accelMinus * a.x * .1;
s = e._accelMinus * a.y * .1;
o = .1 * a.z;
} else {
r = t.gamma / 90 * .981;
s = -t.beta / 90 * .981;
o = t.alpha / 90 * .981;
}
if (cc.view._isRotated) {
var c = r;
r = -s;
s = c;
}
n.x = r;
n.y = s;
n.z = o;
n.timestamp = t.timeStamp || Date.now();
var l = n.x;
if (90 === i.orientation) {
n.x = -n.y;
n.y = l;
} else if (-90 === i.orientation) {
n.x = n.y;
n.y = -l;
} else if (180 === i.orientation) {
n.x = -n.x;
n.y = -n.y;
}
if (cc.sys.os === cc.sys.OS_ANDROID && cc.sys.browserType !== cc.sys.BROWSER_TYPE_MOBILE_QQ) {
n.x = -n.x;
n.y = -n.y;
}
}
};
}), {
"../event-manager": 70,
"./CCInputManager": 130
} ],
130: [ (function(t, e, i) {
"use strict";
var n = t("./CCMacro"), r = t("./CCSys"), s = t("../event-manager"), o = n.TOUCH_TIMEOUT, a = cc.v2(), c = {
_mousePressed: !1,
_isRegisterEvent: !1,
_preTouchPoint: cc.v2(0, 0),
_prevMousePoint: cc.v2(0, 0),
_preTouchPool: [],
_preTouchPoolPointer: 0,
_touches: [],
_touchesIntegerDict: {},
_indexBitsUsed: 0,
_maxTouches: 8,
_accelEnabled: !1,
_accelInterval: .2,
_accelMinus: 1,
_accelCurTime: 0,
_acceleration: null,
_accelDeviceEvent: null,
_canvasBoundingRect: {
left: 0,
top: 0,
adjustedLeft: 0,
adjustedTop: 0,
width: 0,
height: 0
},
_getUnUsedIndex: function() {
for (var t = this._indexBitsUsed, e = cc.sys.now(), i = 0; i < this._maxTouches; i++) {
if (!(1 & t)) {
this._indexBitsUsed |= 1 << i;
return i;
}
var n = this._touches[i];
if (e - n._lastModified > o) {
this._removeUsedIndexBit(i);
delete this._touchesIntegerDict[n.getID()];
return i;
}
t >>= 1;
}
return -1;
},
_removeUsedIndexBit: function(t) {
if (!(t < 0 || t >= this._maxTouches)) {
var e = 1 << t;
e = ~e;
this._indexBitsUsed &= e;
}
},
_glView: null,
_updateCanvasBoundingRect: function() {
var t = cc.game.canvas, e = this._canvasBoundingRect, i = document.documentElement, n = window.pageXOffset - i.clientLeft, r = window.pageYOffset - i.clientTop;
if (t.getBoundingClientRect) {
var s = t.getBoundingClientRect();
e.left = s.left + n;
e.top = s.top + r;
e.width = s.width;
e.height = s.height;
} else if (t instanceof HTMLCanvasElement) {
e.left = n;
e.top = r;
e.width = t.width;
e.height = t.height;
} else {
e.left = n;
e.top = r;
e.width = parseInt(t.style.width);
e.height = parseInt(t.style.height);
}
},
handleTouchesBegin: function(t) {
for (var e = void 0, i = void 0, n = void 0, o = [], a = this._touchesIntegerDict, c = r.now(), l = 0, u = t.length; l < u; l++) if (null == a[n = (e = t[l]).getID()]) {
var h = this._getUnUsedIndex();
if (-1 === h) {
cc.logID(2300, h);
continue;
}
(i = this._touches[h] = new cc.Touch(e._point.x, e._point.y, e.getID()))._lastModified = c;
i._setPrevPoint(e._prevPoint);
a[n] = h;
o.push(i);
}
if (o.length > 0) {
this._glView._convertTouchesWithScale(o);
var _ = new cc.Event.EventTouch(o);
_._eventCode = cc.Event.EventTouch.BEGAN;
s.dispatchEvent(_);
}
},
handleTouchesMove: function(t) {
for (var e = void 0, i = void 0, n = void 0, o = [], a = this._touches, c = r.now(), l = 0, u = t.length; l < u; l++) {
n = (e = t[l]).getID();
if (null != (i = this._touchesIntegerDict[n]) && a[i]) {
a[i]._setPoint(e._point);
a[i]._setPrevPoint(e._prevPoint);
a[i]._lastModified = c;
o.push(a[i]);
}
}
if (o.length > 0) {
this._glView._convertTouchesWithScale(o);
var h = new cc.Event.EventTouch(o);
h._eventCode = cc.Event.EventTouch.MOVED;
s.dispatchEvent(h);
}
},
handleTouchesEnd: function(t) {
var e = this.getSetOfTouchesEndOrCancel(t);
if (e.length > 0) {
this._glView._convertTouchesWithScale(e);
var i = new cc.Event.EventTouch(e);
i._eventCode = cc.Event.EventTouch.ENDED;
s.dispatchEvent(i);
}
this._preTouchPool.length = 0;
},
handleTouchesCancel: function(t) {
var e = this.getSetOfTouchesEndOrCancel(t);
if (e.length > 0) {
this._glView._convertTouchesWithScale(e);
var i = new cc.Event.EventTouch(e);
i._eventCode = cc.Event.EventTouch.CANCELLED;
s.dispatchEvent(i);
}
this._preTouchPool.length = 0;
},
getSetOfTouchesEndOrCancel: function(t) {
for (var e = void 0, i = void 0, n = void 0, r = [], s = this._touches, o = this._touchesIntegerDict, a = 0, c = t.length; a < c; a++) if (null != (i = o[n = (e = t[a]).getID()]) && s[i]) {
s[i]._setPoint(e._point);
s[i]._setPrevPoint(e._prevPoint);
r.push(s[i]);
this._removeUsedIndexBit(i);
delete o[n];
}
return r;
},
getPreTouch: function(t) {
for (var e = null, i = this._preTouchPool, n = t.getID(), r = i.length - 1; r >= 0; r--) if (i[r].getID() === n) {
e = i[r];
break;
}
e || (e = t);
return e;
},
setPreTouch: function(t) {
for (var e = !1, i = this._preTouchPool, n = t.getID(), r = i.length - 1; r >= 0; r--) if (i[r].getID() === n) {
i[r] = t;
e = !0;
break;
}
if (!e) if (i.length <= 50) i.push(t); else {
i[this._preTouchPoolPointer] = t;
this._preTouchPoolPointer = (this._preTouchPoolPointer + 1) % 50;
}
},
getTouchByXY: function(t, e, i) {
var n = this._preTouchPoint, r = this._glView.convertToLocationInView(t, e, i), s = new cc.Touch(r.x, r.y, 0);
s._setPrevPoint(n.x, n.y);
n.x = r.x;
n.y = r.y;
return s;
},
getMouseEvent: function(t, e, i) {
var n = this._prevMousePoint, r = new cc.Event.EventMouse(i);
r._setPrevCursor(n.x, n.y);
n.x = t.x;
n.y = t.y;
this._glView._convertMouseToLocationInView(n, e);
r.setLocation(n.x, n.y);
return r;
},
getPointByEvent: function(t, e) {
if (null != t.pageX) return {
x: t.pageX,
y: t.pageY
};
e.left -= document.body.scrollLeft;
e.top -= document.body.scrollTop;
return {
x: t.clientX,
y: t.clientY
};
},
getTouchesByEvent: function(t, e) {
for (var i = [], n = this._glView, s = void 0, o = void 0, c = void 0, l = this._preTouchPoint, u = t.changedTouches.length, h = 0; h < u; h++) if (s = t.changedTouches[h]) {
var _ = void 0;
_ = r.BROWSER_TYPE_FIREFOX === r.browserType ? n.convertToLocationInView(s.pageX, s.pageY, e, a) : n.convertToLocationInView(s.clientX, s.clientY, e, a);
if (null != s.identifier) {
o = new cc.Touch(_.x, _.y, s.identifier);
c = this.getPreTouch(o).getLocation();
o._setPrevPoint(c.x, c.y);
this.setPreTouch(o);
} else (o = new cc.Touch(_.x, _.y))._setPrevPoint(l.x, l.y);
l.x = _.x;
l.y = _.y;
i.push(o);
}
return i;
},
registerSystemEvent: function(t) {
if (!this._isRegisterEvent) {
this._glView = cc.view;
var e = this, i = this._canvasBoundingRect;
window.addEventListener("resize", this._updateCanvasBoundingRect.bind(this));
var n = r.isMobile, o = "mouse" in r.capabilities, a = "touches" in r.capabilities;
if (o) {
if (!n) {
window.addEventListener("mousedown", (function() {
e._mousePressed = !0;
}), !1);
window.addEventListener("mouseup", (function(t) {
if (e._mousePressed) {
e._mousePressed = !1;
var n = e.getPointByEvent(t, i);
if (!cc.rect(i.left, i.top, i.width, i.height).contains(n)) {
e.handleTouchesEnd([ e.getTouchByXY(n.x, n.y, i) ]);
var r = e.getMouseEvent(n, i, cc.Event.EventMouse.UP);
r.setButton(t.button);
s.dispatchEvent(r);
}
}
}), !1);
}
for (var c = cc.Event.EventMouse, l = [ !n && [ "mousedown", c.DOWN, function(i, n, r, s) {
e._mousePressed = !0;
e.handleTouchesBegin([ e.getTouchByXY(r.x, r.y, s) ]);
t.focus();
} ], !n && [ "mouseup", c.UP, function(t, i, n, r) {
e._mousePressed = !1;
e.handleTouchesEnd([ e.getTouchByXY(n.x, n.y, r) ]);
} ], !n && [ "mousemove", c.MOVE, function(t, i, n, r) {
e.handleTouchesMove([ e.getTouchByXY(n.x, n.y, r) ]);
e._mousePressed || i.setButton(null);
} ], [ "mousewheel", c.SCROLL, function(t, e) {
e.setScrollData(0, t.wheelDelta);
} ], [ "DOMMouseScroll", c.SCROLL, function(t, e) {
e.setScrollData(0, -120 * t.detail);
} ] ], u = 0; u < l.length; ++u) {
var h = l[u];
h && (function() {
var n = h[0], r = h[1], o = h[2];
t.addEventListener(n, (function(t) {
var n = e.getPointByEvent(t, i), a = e.getMouseEvent(n, i, r);
a.setButton(t.button);
o(t, a, n, i);
s.dispatchEvent(a);
t.stopPropagation();
t.preventDefault();
}), !1);
})();
}
}
if (window.navigator.msPointerEnabled) {
var _ = {
MSPointerDown: e.handleTouchesBegin,
MSPointerMove: e.handleTouchesMove,
MSPointerUp: e.handleTouchesEnd,
MSPointerCancel: e.handleTouchesCancel
}, f = function(n) {
var r = _[n];
t.addEventListener(n, (function(t) {
var n = document.documentElement;
i.adjustedLeft = i.left - n.scrollLeft;
i.adjustedTop = i.top - n.scrollTop;
r.call(e, [ e.getTouchByXY(t.clientX, t.clientY, i) ]);
t.stopPropagation();
}), !1);
};
for (var d in _) f(d);
}
if (a) {
var p = {
touchstart: function(i) {
e.handleTouchesBegin(i);
t.focus();
},
touchmove: function(t) {
e.handleTouchesMove(t);
},
touchend: function(t) {
e.handleTouchesEnd(t);
},
touchcancel: function(t) {
e.handleTouchesCancel(t);
}
}, m = function(n) {
var r = p[n];
t.addEventListener(n, (function(t) {
if (t.changedTouches) {
var n = document.body;
i.adjustedLeft = i.left - (n.scrollLeft || 0);
i.adjustedTop = i.top - (n.scrollTop || 0);
r(e.getTouchesByEvent(t, i));
t.stopPropagation();
t.preventDefault();
}
}), !1);
};
for (var d in p) m(d);
}
this._registerKeyboardEvent();
this._isRegisterEvent = !0;
}
},
_registerKeyboardEvent: function() {},
_registerAccelerometerEvent: function() {},
update: function(t) {
if (this._accelCurTime > this._accelInterval) {
this._accelCurTime -= this._accelInterval;
s.dispatchEvent(new cc.Event.EventAcceleration(this._acceleration));
}
this._accelCurTime += t;
}
};
e.exports = _cc.inputManager = c;
}), {
"../event-manager": 70,
"./CCMacro": 131,
"./CCSys": 135
} ],
131: [ (function(t, e, i) {
"use strict";
cc.macro = {
RAD: Math.PI / 180,
DEG: 180 / Math.PI,
REPEAT_FOREVER: Number.MAX_VALUE - 1,
FLT_EPSILON: 1.192092896e-7,
MIN_ZINDEX: -Math.pow(2, 15),
MAX_ZINDEX: Math.pow(2, 15) - 1,
ONE: 1,
ZERO: 0,
SRC_ALPHA: 770,
SRC_ALPHA_SATURATE: 776,
SRC_COLOR: 768,
DST_ALPHA: 772,
DST_COLOR: 774,
ONE_MINUS_SRC_ALPHA: 771,
ONE_MINUS_SRC_COLOR: 769,
ONE_MINUS_DST_ALPHA: 773,
ONE_MINUS_DST_COLOR: 775,
ONE_MINUS_CONSTANT_ALPHA: 32772,
ONE_MINUS_CONSTANT_COLOR: 32770,
ORIENTATION_PORTRAIT: 1,
ORIENTATION_LANDSCAPE: 2,
ORIENTATION_AUTO: 3,
DENSITYDPI_DEVICE: "device-dpi",
DENSITYDPI_HIGH: "high-dpi",
DENSITYDPI_MEDIUM: "medium-dpi",
DENSITYDPI_LOW: "low-dpi",
FIX_ARTIFACTS_BY_STRECHING_TEXEL_TMX: !0,
DIRECTOR_STATS_POSITION: cc.v2(0, 0),
ENABLE_STACKABLE_ACTIONS: !0,
TOUCH_TIMEOUT: 5e3,
BATCH_VERTEX_COUNT: 2e4,
ENABLE_TILEDMAP_CULLING: !0,
DOWNLOAD_MAX_CONCURRENT: 64,
ENABLE_TRANSPARENT_CANVAS: !1,
ENABLE_WEBGL_ANTIALIAS: !1,
ENABLE_CULLING: !1,
CLEANUP_IMAGE_CACHE: !1,
SHOW_MESH_WIREFRAME: !1,
ROTATE_ACTION_CCW: !1
};
cc.macro.SUPPORT_TEXTURE_FORMATS = [ ".pkm", ".pvr", ".webp", ".jpg", ".jpeg", ".bmp", ".png" ];
cc.macro.KEY = {
none: 0,
back: 6,
menu: 18,
backspace: 8,
tab: 9,
enter: 13,
shift: 16,
ctrl: 17,
alt: 18,
pause: 19,
capslock: 20,
escape: 27,
space: 32,
pageup: 33,
pagedown: 34,
end: 35,
home: 36,
left: 37,
up: 38,
right: 39,
down: 40,
select: 41,
insert: 45,
Delete: 46,
0: 48,
1: 49,
2: 50,
3: 51,
4: 52,
5: 53,
6: 54,
7: 55,
8: 56,
9: 57,
a: 65,
b: 66,
c: 67,
d: 68,
e: 69,
f: 70,
g: 71,
h: 72,
i: 73,
j: 74,
k: 75,
l: 76,
m: 77,
n: 78,
o: 79,
p: 80,
q: 81,
r: 82,
s: 83,
t: 84,
u: 85,
v: 86,
w: 87,
x: 88,
y: 89,
z: 90,
num0: 96,
num1: 97,
num2: 98,
num3: 99,
num4: 100,
num5: 101,
num6: 102,
num7: 103,
num8: 104,
num9: 105,
"*": 106,
"+": 107,
"-": 109,
numdel: 110,
"/": 111,
f1: 112,
f2: 113,
f3: 114,
f4: 115,
f5: 116,
f6: 117,
f7: 118,
f8: 119,
f9: 120,
f10: 121,
f11: 122,
f12: 123,
numlock: 144,
scrolllock: 145,
";": 186,
semicolon: 186,
equal: 187,
"=": 187,
",": 188,
comma: 188,
dash: 189,
".": 190,
period: 190,
forwardslash: 191,
grave: 192,
"[": 219,
openbracket: 219,
backslash: 220,
"]": 221,
closebracket: 221,
quote: 222,
dpadLeft: 1e3,
dpadRight: 1001,
dpadUp: 1003,
dpadDown: 1004,
dpadCenter: 1005
};
cc.macro.ImageFormat = cc.Enum({
JPG: 0,
PNG: 1,
TIFF: 2,
WEBP: 3,
PVR: 4,
ETC: 5,
S3TC: 6,
ATITC: 7,
TGA: 8,
RAWDATA: 9,
UNKNOWN: 10
});
cc.macro.BlendFactor = cc.Enum({
ONE: 1,
ZERO: 0,
SRC_ALPHA: 770,
SRC_COLOR: 768,
DST_ALPHA: 772,
DST_COLOR: 774,
ONE_MINUS_SRC_ALPHA: 771,
ONE_MINUS_SRC_COLOR: 769,
ONE_MINUS_DST_ALPHA: 773,
ONE_MINUS_DST_COLOR: 775
});
cc.macro.TextAlignment = cc.Enum({
LEFT: 0,
CENTER: 1,
RIGHT: 2
});
cc.macro.VerticalTextAlignment = cc.Enum({
TOP: 0,
CENTER: 1,
BOTTOM: 2
});
e.exports = cc.macro;
}), {} ],
132: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./CCClass"), s = 1;
function o() {
this._name = "";
this._objFlags = 0;
}
r.fastDefine("cc.Object", o, {
_name: "",
_objFlags: 0
});
n.value(o, "Flags", {
Destroyed: s,
DontSave: 8,
EditorOnly: 16,
Dirty: 32,
DontDestroy: 64,
PersistentMask: -4192741,
Destroying: 128,
Deactivating: 256,
LockedInEditor: 512,
HideInHierarchy: 1024,
IsPreloadStarted: 8192,
IsOnLoadStarted: 32768,
IsOnLoadCalled: 16384,
IsOnEnableCalled: 2048,
IsStartCalled: 65536,
IsEditorOnEnableCalled: 4096,
IsPositionLocked: 1 << 21,
IsRotationLocked: 1 << 17,
IsScaleLocked: 1 << 18,
IsAnchorLocked: 1 << 19,
IsSizeLocked: 1 << 20
});
var a = [];
function c() {
for (var t = a.length, e = 0; e < t; ++e) {
var i = a[e];
i._objFlags & s || i._destroyImmediate();
}
t === a.length ? a.length = 0 : a.splice(0, t);
0;
}
n.value(o, "_deferredDestroy", c);
0;
var l = o.prototype;
n.getset(l, "name", (function() {
return this._name;
}), (function(t) {
this._name = t;
}), !0);
n.get(l, "isValid", (function() {
return !(this._objFlags & s);
}), !0);
0;
l.destroy = function() {
if (this._objFlags & s) {
cc.warnID(5e3);
return !1;
}
if (4 & this._objFlags) return !1;
this._objFlags |= 4;
a.push(this);
0;
return !0;
};
0;
function u(t, e) {
var i, n = t instanceof cc._BaseNode || t instanceof cc.Component, s = n ? "_id" : null, o = {};
for (i in t) if (t.hasOwnProperty(i)) {
if (i === s) continue;
switch (typeof t[i]) {
case "string":
o[i] = "";
break;

case "object":
case "function":
o[i] = null;
}
}
if (cc.Class._isCCClass(e)) for (var a = cc.Class.Attr.getClassAttrs(e), c = e.__props__, l = 0; l < c.length; l++) {
var u = (i = c[l]) + cc.Class.Attr.DELIMETER + "default";
if (u in a) {
if (n && "_id" === i) continue;
switch (typeof a[u]) {
case "string":
o[i] = "";
break;

case "object":
case "function":
o[i] = null;
break;

case "undefined":
o[i] = void 0;
}
}
}
var h = "";
for (i in o) {
var _;
_ = r.IDENTIFIER_RE.test(i) ? "o." + i + "=" : "o[" + r.escapeForJS(i) + "]=";
var f = o[i];
"" === f && (f = '""');
h += _ + f + ";\n";
}
return Function("o", h);
}
l._destruct = function() {
var t = this.constructor, e = t.__destruct__;
if (!e) {
e = u(this, t);
n.value(t, "__destruct__", e, !0);
}
e(this);
};
l._onPreDestroy = null;
l._destroyImmediate = function() {
if (this._objFlags & s) cc.errorID(5e3); else {
this._onPreDestroy && this._onPreDestroy();
this._destruct();
this._objFlags |= s;
}
};
0;
l._deserialize = null;
cc.isValid = function(t, e) {
return "object" == typeof t ? !(!t || t._objFlags & (e ? 4 | s : s)) : "undefined" != typeof t;
};
0;
cc.Object = e.exports = o;
}), {
"./CCClass": 126,
"./js": 146
} ],
133: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.SAXParser = function() {
if (window.DOMParser) {
this._isSupportDOMParser = !0;
this._parser = new DOMParser();
} else {
this._isSupportDOMParser = !1;
this._parser = null;
}
};
cc.SAXParser.prototype = {
constructor: cc.SAXParser,
parse: function(t) {
return this._parseXML(t);
},
_parseXML: function(t) {
var e;
if (this._isSupportDOMParser) e = this._parser.parseFromString(t, "text/xml"); else {
(e = new ActiveXObject("Microsoft.XMLDOM")).async = "false";
e.loadXML(t);
}
return e;
}
};
cc.PlistParser = function() {
cc.SAXParser.call(this);
};
n.extend(cc.PlistParser, cc.SAXParser);
n.mixin(cc.PlistParser.prototype, {
parse: function(t) {
var e = this._parseXML(t), i = e.documentElement;
if ("plist" !== i.tagName) {
cc.warnID(5100);
return {};
}
for (var n = null, r = 0, s = i.childNodes.length; r < s && 1 !== (n = i.childNodes[r]).nodeType; r++) ;
e = null;
return this._parseNode(n);
},
_parseNode: function(t) {
var e = null, i = t.tagName;
if ("dict" === i) e = this._parseDict(t); else if ("array" === i) e = this._parseArray(t); else if ("string" === i) if (1 === t.childNodes.length) e = t.firstChild.nodeValue; else {
e = "";
for (var n = 0; n < t.childNodes.length; n++) e += t.childNodes[n].nodeValue;
} else "false" === i ? e = !1 : "true" === i ? e = !0 : "real" === i ? e = parseFloat(t.firstChild.nodeValue) : "integer" === i && (e = parseInt(t.firstChild.nodeValue, 10));
return e;
},
_parseArray: function(t) {
for (var e = [], i = 0, n = t.childNodes.length; i < n; i++) {
var r = t.childNodes[i];
1 === r.nodeType && e.push(this._parseNode(r));
}
return e;
},
_parseDict: function(t) {
for (var e = {}, i = null, n = 0, r = t.childNodes.length; n < r; n++) {
var s = t.childNodes[n];
1 === s.nodeType && ("key" === s.tagName ? i = s.firstChild.nodeValue : e[i] = this._parseNode(s));
}
return e;
}
});
cc.saxParser = new cc.SAXParser();
cc.plistParser = new cc.PlistParser();
e.exports = {
saxParser: cc.saxParser,
plistParser: cc.plistParser
};
}), {
"../platform/js": 146
} ],
134: [ (function(t, e, i) {
"use strict";
cc.screen = {
_supportsFullScreen: !1,
_onfullscreenchange: null,
_onfullscreenerror: null,
_preOnFullScreenChange: null,
_preOnFullScreenError: null,
_preOnTouch: null,
_touchEvent: "",
_fn: null,
_fnMap: [ [ "requestFullscreen", "exitFullscreen", "fullscreenchange", "fullscreenEnabled", "fullscreenElement", "fullscreenerror" ], [ "requestFullScreen", "exitFullScreen", "fullScreenchange", "fullScreenEnabled", "fullScreenElement", "fullscreenerror" ], [ "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitIsFullScreen", "webkitCurrentFullScreenElement", "webkitfullscreenerror" ], [ "mozRequestFullScreen", "mozCancelFullScreen", "mozfullscreenchange", "mozFullScreen", "mozFullScreenElement", "mozfullscreenerror" ], [ "msRequestFullscreen", "msExitFullscreen", "MSFullscreenChange", "msFullscreenEnabled", "msFullscreenElement", "msfullscreenerror" ] ],
init: function() {
this._fn = {};
var t, e, i, n, r = this._fnMap;
for (t = 0, e = r.length; t < e; t++) if ((i = r[t]) && "undefined" != typeof document[i[1]]) {
for (t = 0, n = i.length; t < n; t++) this._fn[r[0][t]] = i[t];
break;
}
this._supportsFullScreen = void 0 !== this._fn.requestFullscreen;
this._touchEvent = "ontouchend" in window ? "touchend" : "mousedown";
},
fullScreen: function() {
return !!this._supportsFullScreen && !!(document[this._fn.fullscreenElement] || document[this._fn.webkitFullscreenElement] || document[this._fn.mozFullScreenElement]);
},
requestFullScreen: function(t, e, i) {
if (t && "video" === t.tagName.toLowerCase()) {
if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isBrowser && t.readyState > 0) {
t.webkitEnterFullscreen && t.webkitEnterFullscreen();
return;
}
t.setAttribute("x5-video-player-fullscreen", "true");
}
if (this._supportsFullScreen) {
t = t || document.documentElement;
if (e) {
var n = this._fn.fullscreenchange;
this._onfullscreenchange && document.removeEventListener(n, this._onfullscreenchange);
this._onfullscreenchange = e;
document.addEventListener(n, e, !1);
}
if (i) {
var r = this._fn.fullscreenerror;
this._onfullscreenerror && document.removeEventListener(r, this._onfullscreenerror);
this._onfullscreenerror = i;
document.addEventListener(r, i, {
once: !0
});
}
t[this._fn.requestFullscreen]();
}
},
exitFullScreen: function(t) {
if (t && "video" === t.tagName.toLowerCase()) {
if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isBrowser) {
t.webkitExitFullscreen && t.webkitExitFullscreen();
return;
}
t.setAttribute("x5-video-player-fullscreen", "false");
}
return !this._supportsFullScreen || document[this._fn.exitFullscreen]();
},
autoFullScreen: function(t, e) {
t = t || document.body;
this._ensureFullScreen(t, e);
this.requestFullScreen(t, e);
},
disableAutoFullScreen: function(t) {
var e = cc.game.canvas || t, i = this._touchEvent;
if (this._preOnTouch) {
e.removeEventListener(i, this._preOnTouch);
this._preOnTouch = null;
}
},
_ensureFullScreen: function(t, e) {
var i = this, n = cc.game.canvas || t, r = this._fn.fullscreenerror, s = this._touchEvent;
function o() {
i._preOnFullScreenError = null;
i._preOnTouch && n.removeEventListener(s, i._preOnTouch);
i._preOnTouch = function() {
i._preOnTouch = null;
i.requestFullScreen(t, e);
};
n.addEventListener(s, i._preOnTouch, {
once: !0
});
}
this._preOnFullScreenError && t.removeEventListener(r, this._preOnFullScreenError);
this._preOnFullScreenError = o;
t.addEventListener(r, o, {
once: !0
});
}
};
cc.screen.init();
}), {} ],
135: [ (function(t, e, i) {
"use strict";
var n = void 0, r = "qgame" === (n = window._CCSettings ? _CCSettings.platform : void 0), s = "quickgame" === n, o = "huawei" === n, a = "jkw-game" === n, c = "undefined" == typeof window ? global : window;
var l = cc && cc.sys ? cc.sys : (function() {
cc.sys = {};
var t = cc.sys;
t.LANGUAGE_ENGLISH = "en";
t.LANGUAGE_CHINESE = "zh";
t.LANGUAGE_FRENCH = "fr";
t.LANGUAGE_ITALIAN = "it";
t.LANGUAGE_GERMAN = "de";
t.LANGUAGE_SPANISH = "es";
t.LANGUAGE_DUTCH = "du";
t.LANGUAGE_RUSSIAN = "ru";
t.LANGUAGE_KOREAN = "ko";
t.LANGUAGE_JAPANESE = "ja";
t.LANGUAGE_HUNGARIAN = "hu";
t.LANGUAGE_PORTUGUESE = "pt";
t.LANGUAGE_ARABIC = "ar";
t.LANGUAGE_NORWEGIAN = "no";
t.LANGUAGE_POLISH = "pl";
t.LANGUAGE_TURKISH = "tr";
t.LANGUAGE_UKRAINIAN = "uk";
t.LANGUAGE_ROMANIAN = "ro";
t.LANGUAGE_BULGARIAN = "bg";
t.LANGUAGE_UNKNOWN = "unknown";
t.OS_IOS = "iOS";
t.OS_ANDROID = "Android";
t.OS_WINDOWS = "Windows";
t.OS_MARMALADE = "Marmalade";
t.OS_LINUX = "Linux";
t.OS_BADA = "Bada";
t.OS_BLACKBERRY = "Blackberry";
t.OS_OSX = "OS X";
t.OS_WP8 = "WP8";
t.OS_WINRT = "WINRT";
t.OS_UNKNOWN = "Unknown";
t.UNKNOWN = -1;
t.WIN32 = 0;
t.LINUX = 1;
t.MACOS = 2;
t.ANDROID = 3;
t.IPHONE = 4;
t.IPAD = 5;
t.BLACKBERRY = 6;
t.NACL = 7;
t.EMSCRIPTEN = 8;
t.TIZEN = 9;
t.WINRT = 10;
t.WP8 = 11;
t.MOBILE_BROWSER = 100;
t.DESKTOP_BROWSER = 101;
t.EDITOR_PAGE = 102;
t.EDITOR_CORE = 103;
t.WECHAT_GAME = 104;
t.QQ_PLAY = 105;
t.FB_PLAYABLE_ADS = 106;
t.BAIDU_GAME = 107;
t.VIVO_GAME = 108;
t.OPPO_GAME = 109;
t.HUAWEI_GAME = 110;
t.XIAOMI_GAME = 111;
t.JKW_GAME = 112;
t.ALIPAY_GAME = 113;
t.WECHAT_GAME_SUB = 114;
t.BAIDU_GAME_SUB = 115;
t.BROWSER_TYPE_WECHAT = "wechat";
t.BROWSER_TYPE_WECHAT_GAME = "wechatgame";
t.BROWSER_TYPE_WECHAT_GAME_SUB = "wechatgamesub";
t.BROWSER_TYPE_BAIDU_GAME = "baidugame";
t.BROWSER_TYPE_BAIDU_GAME_SUB = "baidugamesub";
t.BROWSER_TYPE_XIAOMI_GAME = "xiaomigame";
t.BROWSER_TYPE_ALIPAY_GAME = "alipaygame";
t.BROWSER_TYPE_QQ_PLAY = "qqplay";
t.BROWSER_TYPE_ANDROID = "androidbrowser";
t.BROWSER_TYPE_IE = "ie";
t.BROWSER_TYPE_EDGE = "edge";
t.BROWSER_TYPE_QQ = "qqbrowser";
t.BROWSER_TYPE_MOBILE_QQ = "mqqbrowser";
t.BROWSER_TYPE_UC = "ucbrowser";
t.BROWSER_TYPE_UCBS = "ucbs";
t.BROWSER_TYPE_360 = "360browser";
t.BROWSER_TYPE_BAIDU_APP = "baiduboxapp";
t.BROWSER_TYPE_BAIDU = "baidubrowser";
t.BROWSER_TYPE_MAXTHON = "maxthon";
t.BROWSER_TYPE_OPERA = "opera";
t.BROWSER_TYPE_OUPENG = "oupeng";
t.BROWSER_TYPE_MIUI = "miuibrowser";
t.BROWSER_TYPE_FIREFOX = "firefox";
t.BROWSER_TYPE_SAFARI = "safari";
t.BROWSER_TYPE_CHROME = "chrome";
t.BROWSER_TYPE_LIEBAO = "liebao";
t.BROWSER_TYPE_QZONE = "qzone";
t.BROWSER_TYPE_SOUGOU = "sogou";
t.BROWSER_TYPE_UNKNOWN = "unknown";
t.isNative = !0;
t.isBrowser = "object" == typeof window && "object" == typeof document && !1;
t.glExtension = function(t) {
return !!cc.renderer.device.ext(t);
};
t.getMaxJointMatrixSize = function() {
if (!t._maxJointMatrixSize) {
var e = cc.game._renderContext, i = Math.floor(e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS) / 4) - 10;
t._maxJointMatrixSize = i < 50 ? 0 : 50;
}
return t._maxJointMatrixSize;
};
if (c.__globalAdapter && c.__globalAdapter.adaptSys) c.__globalAdapter.adaptSys(t); else {
var e, i = void 0;
i = r ? t.VIVO_GAME : s ? t.OPPO_GAME : o ? t.HUAWEI_GAME : a ? t.JKW_GAME : __getPlatform();
t.platform = i;
t.isMobile = i === t.ANDROID || i === t.IPAD || i === t.IPHONE || i === t.WP8 || i === t.TIZEN || i === t.BLACKBERRY || i === t.XIAOMI_GAME || r || s || o || a;
t.os = __getOS();
t.language = __getCurrentLanguage();
e = __getCurrentLanguageCode();
t.languageCode = e ? e.toLowerCase() : void 0;
t.osVersion = __getOSVersion();
t.osMainVersion = parseInt(t.osVersion);
t.browserType = null;
t.browserVersion = null;
var n, l = window.innerWidth, u = window.innerHeight, h = window.devicePixelRatio || 1;
t.windowPixelResolution = {
width: h * l,
height: h * u
};
t.localStorage = window.localStorage;
n = t.capabilities = {
canvas: !1,
opengl: !0,
webp: !0
};
if (t.isMobile) {
n.accelerometer = !0;
n.touches = !0;
} else {
n.keyboard = !0;
n.mouse = !0;
n.touches = !1;
}
t.__audioSupport = {
ONLY_ONE: !1,
WEB_AUDIO: !1,
DELAY_CREATE_CTX: !1,
format: [ ".mp3" ]
};
}
t.NetworkType = {
NONE: 0,
LAN: 1,
WWAN: 2
};
t.getNetworkType = function() {
return t.NetworkType.LAN;
};
t.getBatteryLevel = function() {
return 1;
};
t.garbageCollect = function() {};
t.restartVM = function() {};
t.getSafeAreaRect = function() {
var t = cc.view.getVisibleSize();
return cc.rect(0, 0, t.width, t.height);
};
t.isObjectValid = function(t) {
return !!t;
};
t.dump = function() {
var t = "";
t += "isMobile : " + this.isMobile + "\r\n";
t += "language : " + this.language + "\r\n";
t += "browserType : " + this.browserType + "\r\n";
t += "browserVersion : " + this.browserVersion + "\r\n";
t += "capabilities : " + JSON.stringify(this.capabilities) + "\r\n";
t += "os : " + this.os + "\r\n";
t += "osVersion : " + this.osVersion + "\r\n";
t += "platform : " + this.platform + "\r\n";
t += "Using " + (cc.game.renderType === cc.game.RENDER_TYPE_WEBGL ? "WEBGL" : "CANVAS") + " renderer.\r\n";
cc.log(t);
};
t.openURL = function(t) {
jsb.openURL(t);
};
t.now = function() {
return Date.now ? Date.now() : +new Date();
};
return t;
})();
e.exports = l;
}), {} ],
136: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../platform/js"), s = t("../renderer");
t("../platform/CCClass");
var o = {
init: function() {
this.html = document.getElementsByTagName("html")[0];
},
availWidth: function(t) {
return t && t !== this.html ? t.clientWidth : window.innerWidth;
},
availHeight: function(t) {
return t && t !== this.html ? t.clientHeight : window.innerHeight;
},
meta: {
width: "device-width"
},
adaptationType: cc.sys.browserType
};
cc.sys.os === cc.sys.OS_IOS && (o.adaptationType = cc.sys.BROWSER_TYPE_SAFARI);
switch (o.adaptationType) {
case cc.sys.BROWSER_TYPE_SAFARI:
o.meta["minimal-ui"] = "true";

case cc.sys.BROWSER_TYPE_SOUGOU:
case cc.sys.BROWSER_TYPE_UC:
o.availWidth = function(t) {
return t.clientWidth;
};
o.availHeight = function(t) {
return t.clientHeight;
};
}
var a = null, c = function() {
n.call(this);
var t = this, e = cc.ContainerStrategy, i = cc.ContentStrategy;
o.init(this);
t._frameSize = cc.size(0, 0);
t._designResolutionSize = cc.size(0, 0);
t._originalDesignResolutionSize = cc.size(0, 0);
t._scaleX = 1;
t._scaleY = 1;
t._viewportRect = cc.rect(0, 0, 0, 0);
t._visibleRect = cc.rect(0, 0, 0, 0);
t._autoFullScreen = !1;
t._devicePixelRatio = 1;
t._maxPixelRatio = 2;
t._retinaEnabled = !1;
t._resizeCallback = null;
t._resizing = !1;
t._resizeWithBrowserSize = !1;
t._orientationChanging = !0;
t._isRotated = !1;
t._orientation = cc.macro.ORIENTATION_AUTO;
t._isAdjustViewport = !0;
t._antiAliasEnabled = !1;
t._resolutionPolicy = null;
t._rpExactFit = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.EXACT_FIT);
t._rpShowAll = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.SHOW_ALL);
t._rpNoBorder = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.NO_BORDER);
t._rpFixedHeight = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.FIXED_HEIGHT);
t._rpFixedWidth = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.FIXED_WIDTH);
cc.game.once(cc.game.EVENT_ENGINE_INITED, this.init, this);
};
cc.js.extend(c, n);
cc.js.mixin(c.prototype, {
init: function() {
this._initFrameSize();
this.enableAntiAlias(!0);
var t = cc.game.canvas.width, e = cc.game.canvas.height;
this._designResolutionSize.width = t;
this._designResolutionSize.height = e;
this._originalDesignResolutionSize.width = t;
this._originalDesignResolutionSize.height = e;
this._viewportRect.width = t;
this._viewportRect.height = e;
this._visibleRect.width = t;
this._visibleRect.height = e;
cc.winSize.width = this._visibleRect.width;
cc.winSize.height = this._visibleRect.height;
cc.visibleRect && cc.visibleRect.init(this._visibleRect);
},
_resizeEvent: function(t) {
var e, i = (e = this.setDesignResolutionSize ? this : cc.view)._frameSize.width, n = e._frameSize.height, r = e._isRotated;
if (cc.sys.isMobile) {
var s = cc.game.container.style, o = s.margin;
s.margin = "0";
s.display = "none";
e._initFrameSize();
s.margin = o;
s.display = "block";
} else e._initFrameSize();
if (!0 === t || e._isRotated !== r || e._frameSize.width !== i || e._frameSize.height !== n) {
var a = e._originalDesignResolutionSize.width, c = e._originalDesignResolutionSize.height;
e._resizing = !0;
a > 0 && e.setDesignResolutionSize(a, c, e._resolutionPolicy);
e._resizing = !1;
e.emit("canvas-resize");
e._resizeCallback && e._resizeCallback.call();
}
},
_orientationChange: function() {
cc.view._orientationChanging = !0;
cc.view._resizeEvent();
},
resizeWithBrowserSize: function(t) {
if (t) {
if (!this._resizeWithBrowserSize) {
this._resizeWithBrowserSize = !0;
window.addEventListener("resize", this._resizeEvent);
window.addEventListener("orientationchange", this._orientationChange);
}
} else if (this._resizeWithBrowserSize) {
this._resizeWithBrowserSize = !1;
window.removeEventListener("resize", this._resizeEvent);
window.removeEventListener("orientationchange", this._orientationChange);
}
},
setResizeCallback: function(t) {
0;
"function" != typeof t && null != t || (this._resizeCallback = t);
},
setOrientation: function(t) {
if ((t &= cc.macro.ORIENTATION_AUTO) && this._orientation !== t) {
this._orientation = t;
var e = this._originalDesignResolutionSize.width, i = this._originalDesignResolutionSize.height;
this.setDesignResolutionSize(e, i, this._resolutionPolicy);
}
},
_initFrameSize: function() {
var t = this._frameSize, e = o.availWidth(cc.game.frame), i = o.availHeight(cc.game.frame), n = e >= i;
if (!cc.sys.isMobile || n && this._orientation & cc.macro.ORIENTATION_LANDSCAPE || !n && this._orientation & cc.macro.ORIENTATION_PORTRAIT) {
t.width = e;
t.height = i;
cc.game.container.style["-webkit-transform"] = "rotate(0deg)";
cc.game.container.style.transform = "rotate(0deg)";
this._isRotated = !1;
} else {
t.width = i;
t.height = e;
cc.game.container.style["-webkit-transform"] = "rotate(90deg)";
cc.game.container.style.transform = "rotate(90deg)";
cc.game.container.style["-webkit-transform-origin"] = "0px 0px 0px";
cc.game.container.style.transformOrigin = "0px 0px 0px";
this._isRotated = !0;
}
this._orientationChanging && setTimeout((function() {
cc.view._orientationChanging = !1;
}), 1e3);
},
_setViewportMeta: function(t, e) {
var i = document.getElementById("cocosMetaElement");
i && e && document.head.removeChild(i);
var n, r, s, o = document.getElementsByName("viewport"), a = o ? o[0] : null;
n = a ? a.content : "";
(i = i || document.createElement("meta")).id = "cocosMetaElement";
i.name = "viewport";
i.content = "";
for (r in t) if (-1 == n.indexOf(r)) n += "," + r + "=" + t[r]; else if (e) {
s = new RegExp(r + "s*=s*[^,]+");
n.replace(s, r + "=" + t[r]);
}
/^,/.test(n) && (n = n.substr(1));
i.content = n;
a && (a.content = n);
document.head.appendChild(i);
},
_adjustViewportMeta: function() {
this._isAdjustViewport, 0;
},
adjustViewportMeta: function(t) {
this._isAdjustViewport = t;
},
enableRetina: function(t) {
this._retinaEnabled = !!t;
},
isRetinaEnabled: function() {
return this._retinaEnabled;
},
enableAntiAlias: function(t) {
if (this._antiAliasEnabled !== t) {
this._antiAliasEnabled = t;
if (cc.game.renderType === cc.game.RENDER_TYPE_WEBGL) {
var e = cc.loader._cache;
for (var i in e) {
var n = e[i], r = n && n.content instanceof cc.Texture2D ? n.content : null;
if (r) {
var s = cc.Texture2D.Filter;
t ? r.setFilters(s.LINEAR, s.LINEAR) : r.setFilters(s.NEAREST, s.NEAREST);
}
}
} else if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
var o = cc.game.canvas.getContext("2d");
o.imageSmoothingEnabled = t;
o.mozImageSmoothingEnabled = t;
}
}
},
isAntiAliasEnabled: function() {
return this._antiAliasEnabled;
},
enableAutoFullScreen: function(t) {
if (t && t !== this._autoFullScreen && cc.sys.isMobile) {
this._autoFullScreen = !0;
cc.screen.autoFullScreen(cc.game.frame);
} else {
this._autoFullScreen = !1;
cc.screen.disableAutoFullScreen(cc.game.frame);
}
},
isAutoFullScreenEnabled: function() {
return this._autoFullScreen;
},
setCanvasSize: function(t, e) {
var i = cc.game.canvas, n = cc.game.container;
i.width = t * this._devicePixelRatio;
i.height = e * this._devicePixelRatio;
i.style.width = t + "px";
i.style.height = e + "px";
n.style.width = t + "px";
n.style.height = e + "px";
this._resizeEvent();
},
getCanvasSize: function() {
return cc.size(cc.game.canvas.width, cc.game.canvas.height);
},
getFrameSize: function() {
return cc.size(this._frameSize.width, this._frameSize.height);
},
setFrameSize: function(t, e) {
this._frameSize.width = t;
this._frameSize.height = e;
cc.game.frame.style.width = t + "px";
cc.game.frame.style.height = e + "px";
this._resizeEvent(!0);
},
getVisibleSize: function() {
return cc.size(this._visibleRect.width, this._visibleRect.height);
},
getVisibleSizeInPixel: function() {
return cc.size(this._visibleRect.width * this._scaleX, this._visibleRect.height * this._scaleY);
},
getVisibleOrigin: function() {
return cc.v2(this._visibleRect.x, this._visibleRect.y);
},
getVisibleOriginInPixel: function() {
return cc.v2(this._visibleRect.x * this._scaleX, this._visibleRect.y * this._scaleY);
},
getResolutionPolicy: function() {
return this._resolutionPolicy;
},
setResolutionPolicy: function(t) {
var e = this;
if (t instanceof cc.ResolutionPolicy) e._resolutionPolicy = t; else {
var i = cc.ResolutionPolicy;
t === i.EXACT_FIT && (e._resolutionPolicy = e._rpExactFit);
t === i.SHOW_ALL && (e._resolutionPolicy = e._rpShowAll);
t === i.NO_BORDER && (e._resolutionPolicy = e._rpNoBorder);
t === i.FIXED_HEIGHT && (e._resolutionPolicy = e._rpFixedHeight);
t === i.FIXED_WIDTH && (e._resolutionPolicy = e._rpFixedWidth);
}
},
setDesignResolutionSize: function(t, e, i) {
if (t > 0 || e > 0) {
this.setResolutionPolicy(i);
var n = this._resolutionPolicy;
n && n.preApply(this);
cc.sys.isMobile && this._adjustViewportMeta();
this._orientationChanging = !0;
this._resizing || this._initFrameSize();
if (n) {
this._originalDesignResolutionSize.width = this._designResolutionSize.width = t;
this._originalDesignResolutionSize.height = this._designResolutionSize.height = e;
var r = n.apply(this, this._designResolutionSize);
if (r.scale && 2 === r.scale.length) {
this._scaleX = r.scale[0];
this._scaleY = r.scale[1];
}
if (r.viewport) {
var o = this._viewportRect, a = this._visibleRect, c = r.viewport;
o.x = c.x;
o.y = c.y;
o.width = c.width;
o.height = c.height;
a.x = 0;
a.y = 0;
a.width = c.width / this._scaleX;
a.height = c.height / this._scaleY;
}
n.postApply(this);
cc.winSize.width = this._visibleRect.width;
cc.winSize.height = this._visibleRect.height;
cc.visibleRect && cc.visibleRect.init(this._visibleRect);
s.updateCameraViewport();
_cc.inputManager._updateCanvasBoundingRect();
this.emit("design-resolution-changed");
} else cc.logID(2201);
} else cc.logID(2200);
},
getDesignResolutionSize: function() {
return cc.size(this._designResolutionSize.width, this._designResolutionSize.height);
},
setRealPixelResolution: function(t, e, i) {
0;
this.setDesignResolutionSize(t, e, i);
},
setViewportInPoints: function(t, e, i, n) {
var r = this._scaleX, s = this._scaleY;
cc.game._renderContext.viewport(t * r + this._viewportRect.x, e * s + this._viewportRect.y, i * r, n * s);
},
setScissorInPoints: function(t, e, i, n) {
var r = this._scaleX, s = this._scaleY, o = Math.ceil(t * r + this._viewportRect.x), c = Math.ceil(e * s + this._viewportRect.y), l = Math.ceil(i * r), u = Math.ceil(n * s), h = cc.game._renderContext;
if (!a) {
var _ = h.getParameter(h.SCISSOR_BOX);
a = cc.rect(_[0], _[1], _[2], _[3]);
}
if (a.x !== o || a.y !== c || a.width !== l || a.height !== u) {
a.x = o;
a.y = c;
a.width = l;
a.height = u;
h.scissor(o, c, l, u);
}
},
isScissorEnabled: function() {
return cc.game._renderContext.isEnabled(gl.SCISSOR_TEST);
},
getScissorRect: function() {
if (!a) {
var t = gl.getParameter(gl.SCISSOR_BOX);
a = cc.rect(t[0], t[1], t[2], t[3]);
}
var e = 1 / this._scaleX, i = 1 / this._scaleY;
return cc.rect((a.x - this._viewportRect.x) * e, (a.y - this._viewportRect.y) * i, a.width * e, a.height * i);
},
getViewportRect: function() {
return this._viewportRect;
},
getScaleX: function() {
return this._scaleX;
},
getScaleY: function() {
return this._scaleY;
},
getDevicePixelRatio: function() {
return this._devicePixelRatio;
},
convertToLocationInView: function(t, e, i, n) {
var r = n || cc.v2(), s = i.adjustedLeft ? i.adjustedLeft : i.left, o = i.adjustedTop ? i.adjustedTop : i.top, a = this._devicePixelRatio * (t - s), c = this._devicePixelRatio * (o + i.height - e);
if (this._isRotated) {
r.x = cc.game.canvas.width - c;
r.y = a;
} else {
r.x = a;
r.y = c;
}
return r;
},
_convertMouseToLocationInView: function(t, e) {
var i = this._viewportRect;
t.x = (this._devicePixelRatio * (t.x - e.left) - i.x) / this._scaleX;
t.y = (this._devicePixelRatio * (e.top + e.height - t.y) - i.y) / this._scaleY;
},
_convertPointWithScale: function(t) {
var e = this._viewportRect;
t.x = (t.x - e.x) / this._scaleX;
t.y = (t.y - e.y) / this._scaleY;
},
_convertTouchesWithScale: function(t) {
for (var e, i, n, r = this._viewportRect, s = this._scaleX, o = this._scaleY, a = 0; a < t.length; a++) {
i = (e = t[a])._point;
n = e._prevPoint;
i.x = (i.x - r.x) / s;
i.y = (i.y - r.y) / o;
n.x = (n.x - r.x) / s;
n.y = (n.y - r.y) / o;
}
}
});
cc.ContainerStrategy = cc.Class({
name: "ContainerStrategy",
preApply: function(t) {},
apply: function(t, e) {},
postApply: function(t) {},
_setupContainer: function(t, e, i) {
var n = cc.game.canvas;
this._setupStyle(t, e, i);
var r = t._devicePixelRatio = 1;
t.isRetinaEnabled() && (r = t._devicePixelRatio = Math.min(t._maxPixelRatio, window.devicePixelRatio || 1));
n.width = e * r;
n.height = i * r;
},
_setupStyle: function(t, e, i) {
var n = cc.game.canvas, r = cc.game.container;
if (cc.sys.os === cc.sys.OS_ANDROID) {
document.body.style.width = (t._isRotated ? i : e) + "px";
document.body.style.height = (t._isRotated ? e : i) + "px";
}
r.style.width = n.style.width = e + "px";
r.style.height = n.style.height = i + "px";
},
_fixContainer: function() {
document.body.insertBefore(cc.game.container, document.body.firstChild);
var t = document.body.style;
t.width = window.innerWidth + "px";
t.height = window.innerHeight + "px";
t.overflow = "hidden";
var e = cc.game.container.style;
e.position = "fixed";
e.left = e.top = "0px";
document.body.scrollTop = 0;
}
});
cc.ContentStrategy = cc.Class({
name: "ContentStrategy",
ctor: function() {
this._result = {
scale: [ 1, 1 ],
viewport: null
};
},
_buildResult: function(t, e, i, n, r, s) {
Math.abs(t - i) < 2 && (i = t);
Math.abs(e - n) < 2 && (n = e);
var o = cc.rect((t - i) / 2, (e - n) / 2, i, n);
cc.game.renderType, cc.game.RENDER_TYPE_CANVAS;
this._result.scale = [ r, s ];
this._result.viewport = o;
return this._result;
},
preApply: function(t) {},
apply: function(t, e) {
return {
scale: [ 1, 1 ]
};
},
postApply: function(t) {}
});
(function() {
var t = cc.Class({
name: "EqualToFrame",
extends: cc.ContainerStrategy,
apply: function(t) {
var e = t._frameSize.height, i = cc.game.container.style;
this._setupContainer(t, t._frameSize.width, t._frameSize.height);
t._isRotated ? i.margin = "0 0 0 " + e + "px" : i.margin = "0px";
i.padding = "0px";
}
}), e = cc.Class({
name: "ProportionalToFrame",
extends: cc.ContainerStrategy,
apply: function(t, e) {
var i, n, r = t._frameSize.width, s = t._frameSize.height, o = cc.game.container.style, a = e.width, c = e.height, l = r / a, u = s / c;
l < u ? (i = r, n = c * l) : (i = a * u, n = s);
var h = Math.round((r - i) / 2), _ = Math.round((s - n) / 2);
i = r - 2 * h;
n = s - 2 * _;
this._setupContainer(t, i, n);
t._isRotated ? o.margin = "0 0 0 " + s + "px" : o.margin = "0px";
o.paddingLeft = h + "px";
o.paddingRight = h + "px";
o.paddingTop = _ + "px";
o.paddingBottom = _ + "px";
}
}), i = (cc.Class({
name: "EqualToWindow",
extends: t,
preApply: function(t) {
this._super(t);
cc.game.frame = document.documentElement;
},
apply: function(t) {
this._super(t);
this._fixContainer();
}
}), cc.Class({
name: "ProportionalToWindow",
extends: e,
preApply: function(t) {
this._super(t);
cc.game.frame = document.documentElement;
},
apply: function(t, e) {
this._super(t, e);
this._fixContainer();
}
}), cc.Class({
name: "OriginalContainer",
extends: cc.ContainerStrategy,
apply: function(t) {
this._setupContainer(t, cc.game.canvas.width, cc.game.canvas.height);
}
})), n = ("undefined" == typeof window ? global : window).__globalAdapter;
if (n) {
n.adaptContainerStrategy && n.adaptContainerStrategy(cc.ContainerStrategy.prototype);
n.adaptView && n.adaptView(c.prototype);
}
cc.ContainerStrategy.EQUAL_TO_FRAME = new t();
cc.ContainerStrategy.PROPORTION_TO_FRAME = new e();
cc.ContainerStrategy.ORIGINAL_CONTAINER = new i();
var r = cc.Class({
name: "ExactFit",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = i / e.width, s = n / e.height;
return this._buildResult(i, n, i, n, r, s);
}
}), s = cc.Class({
name: "ShowAll",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i, n, r = cc.game.canvas.width, s = cc.game.canvas.height, o = e.width, a = e.height, c = r / o, l = s / a, u = 0;
c < l ? (i = r, n = a * (u = c)) : (i = o * (u = l), n = s);
return this._buildResult(r, s, i, n, u, u);
}
}), o = cc.Class({
name: "NoBorder",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i, n, r, s = cc.game.canvas.width, o = cc.game.canvas.height, a = e.width, c = e.height, l = s / a, u = o / c;
l < u ? (n = a * (i = u), r = o) : (n = s, r = c * (i = l));
return this._buildResult(s, o, n, r, i, i);
}
}), a = cc.Class({
name: "FixedHeight",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = n / e.height, s = i, o = n;
return this._buildResult(i, n, s, o, r, r);
}
}), l = cc.Class({
name: "FixedWidth",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = i / e.width, s = i, o = n;
return this._buildResult(i, n, s, o, r, r);
}
});
cc.ContentStrategy.EXACT_FIT = new r();
cc.ContentStrategy.SHOW_ALL = new s();
cc.ContentStrategy.NO_BORDER = new o();
cc.ContentStrategy.FIXED_HEIGHT = new a();
cc.ContentStrategy.FIXED_WIDTH = new l();
})();
cc.ResolutionPolicy = cc.Class({
name: "cc.ResolutionPolicy",
ctor: function(t, e) {
this._containerStrategy = null;
this._contentStrategy = null;
this.setContainerStrategy(t);
this.setContentStrategy(e);
},
preApply: function(t) {
this._containerStrategy.preApply(t);
this._contentStrategy.preApply(t);
},
apply: function(t, e) {
this._containerStrategy.apply(t, e);
return this._contentStrategy.apply(t, e);
},
postApply: function(t) {
this._containerStrategy.postApply(t);
this._contentStrategy.postApply(t);
},
setContainerStrategy: function(t) {
t instanceof cc.ContainerStrategy && (this._containerStrategy = t);
},
setContentStrategy: function(t) {
t instanceof cc.ContentStrategy && (this._contentStrategy = t);
}
});
r.get(cc.ResolutionPolicy.prototype, "canvasSize", (function() {
return cc.v2(cc.game.canvas.width, cc.game.canvas.height);
}));
cc.ResolutionPolicy.EXACT_FIT = 0;
cc.ResolutionPolicy.NO_BORDER = 1;
cc.ResolutionPolicy.SHOW_ALL = 2;
cc.ResolutionPolicy.FIXED_HEIGHT = 3;
cc.ResolutionPolicy.FIXED_WIDTH = 4;
cc.ResolutionPolicy.UNKNOWN = 5;
cc.view = new c();
cc.winSize = cc.size();
e.exports = cc.view;
}), {
"../event/event-target": 72,
"../platform/CCClass": 126,
"../platform/js": 146,
"../renderer": 170
} ],
137: [ (function(t, e, i) {
"use strict";
cc.visibleRect = {
topLeft: cc.v2(0, 0),
topRight: cc.v2(0, 0),
top: cc.v2(0, 0),
bottomLeft: cc.v2(0, 0),
bottomRight: cc.v2(0, 0),
bottom: cc.v2(0, 0),
center: cc.v2(0, 0),
left: cc.v2(0, 0),
right: cc.v2(0, 0),
width: 0,
height: 0,
init: function(t) {
var e = this.width = t.width, i = this.height = t.height, n = t.x, r = t.y, s = r + i, o = n + e;
this.topLeft.x = n;
this.topLeft.y = s;
this.topRight.x = o;
this.topRight.y = s;
this.top.x = n + e / 2;
this.top.y = s;
this.bottomLeft.x = n;
this.bottomLeft.y = r;
this.bottomRight.x = o;
this.bottomRight.y = r;
this.bottom.x = n + e / 2;
this.bottom.y = r;
this.center.x = n + e / 2;
this.center.y = r + i / 2;
this.left.x = n;
this.left.y = r + i / 2;
this.right.x = o;
this.right.y = r + i / 2;
}
};
}), {} ],
138: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = (t("./utils").isPlainEmptyObj_DEV, "$_$");
function s(t, e) {
var i = e ? Object.create(e) : {};
n.value(t, "__attrs__", i);
return i;
}
function o(t) {
if ("function" != typeof t) {
return s(t, c(t.constructor));
}
for (var e, i = cc.Class.getInheritanceChain(t), n = i.length - 1; n >= 0; n--) {
var r = i[n];
r.hasOwnProperty("__attrs__") && r.__attrs__ || s(r, (e = i[n + 1]) && e.__attrs__);
}
s(t, (e = i[0]) && e.__attrs__);
return t.__attrs__;
}
function a(t, e, i) {
var n = c(t), s = e + r, o = {};
for (var a in n) a.startsWith(s) && (o[a.slice(s.length)] = n[a]);
return o;
}
function c(t) {
return t.hasOwnProperty("__attrs__") && t.__attrs__ || o(t);
}
function l(t, e) {
this.name = t;
this.default = e;
}
l.prototype.toString = function() {
return this.name;
};
cc.Integer = new l("Integer", 0);
cc.Float = new l("Float", 0);
0;
cc.Boolean = new l("Boolean", !1);
cc.String = new l("String", "");
e.exports = {
PrimitiveType: l,
attr: a,
getClassAttrs: c,
setClassAttr: function(t, e, i, n) {
c(t)[e + r + i] = n;
},
DELIMETER: r,
getTypeChecker_ET: !1,
getObjTypeChecker_ET: !1,
ScriptUuid: {}
};
}), {
"./CCClass": 126,
"./js": 146,
"./utils": 150
} ],
139: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = n.array.fastRemoveAt;
function s() {}
function o() {
this.callback = s;
this.target = void 0;
this.once = !1;
}
o.prototype.set = function(t, e, i) {
this.callback = t;
this.target = e;
this.once = !!i;
};
var a = new n.Pool(function(t) {
t.callback = s;
t.target = void 0;
t.once = !1;
return !0;
}, 32);
a.get = function() {
return this._get() || new o();
};
function c() {
this.callbackInfos = [];
this.isInvoking = !1;
this.containCanceled = !1;
}
var l = c.prototype;
l.removeByCallback = function(t) {
for (var e = 0; e < this.callbackInfos.length; ++e) {
var i = this.callbackInfos[e];
if (i && i.callback === t) {
a.put(i);
r(this.callbackInfos, e);
--e;
}
}
};
l.removeByTarget = function(t) {
for (var e = 0; e < this.callbackInfos.length; ++e) {
var i = this.callbackInfos[e];
if (i && i.target === t) {
a.put(i);
r(this.callbackInfos, e);
--e;
}
}
};
l.cancel = function(t) {
var e = this.callbackInfos[t];
if (e) {
a.put(e);
this.callbackInfos[t] = null;
}
this.containCanceled = !0;
};
l.cancelAll = function() {
for (var t = 0; t < this.callbackInfos.length; t++) {
var e = this.callbackInfos[t];
if (e) {
a.put(e);
this.callbackInfos[t] = null;
}
}
this.containCanceled = !0;
};
l.purgeCanceled = function() {
for (var t = this.callbackInfos.length - 1; t >= 0; --t) {
this.callbackInfos[t] || r(this.callbackInfos, t);
}
this.containCanceled = !1;
};
l.clear = function() {
this.cancelAll();
this.callbackInfos.length = 0;
this.isInvoking = !1;
this.containCanceled = !1;
};
var u = new n.Pool(function(t) {
t.callback = s;
t.target = void 0;
t.once = !1;
return !0;
}, 16);
u.get = function() {
return this._get() || new c();
};
function h() {
this._callbackTable = n.createMap(!0);
}
(l = h.prototype).on = function(t, e, i, n) {
var r = this._callbackTable[t];
r || (r = this._callbackTable[t] = u.get());
var s = a.get();
s.set(e, i, n);
r.callbackInfos.push(s);
};
l.hasEventListener = function(t, e, i) {
var n = this._callbackTable[t];
if (!n) return !1;
var r = n.callbackInfos;
if (!e) {
if (n.isInvoking) {
for (var s = 0; s < r.length; ++s) if (r[s]) return !0;
return !1;
}
return r.length > 0;
}
for (var o = 0; o < r.length; ++o) {
var a = r[o];
if (a && a.callback === e && a.target === i) return !0;
}
return !1;
};
l.removeAll = function(t) {
if ("string" == typeof t) {
var e = this._callbackTable[t];
if (e) if (e.isInvoking) e.cancelAll(); else {
e.clear();
u.put(e);
delete this._callbackTable[t];
}
} else if (t) for (var i in this._callbackTable) {
var n = this._callbackTable[i];
if (n.isInvoking) for (var r = n.callbackInfos, s = 0; s < r.length; ++s) {
var o = r[s];
o && o.target === t && n.cancel(s);
} else n.removeByTarget(t);
}
};
l.off = function(t, e, i) {
var n = this._callbackTable[t];
if (n) for (var s = n.callbackInfos, o = 0; o < s.length; ++o) {
var c = s[o];
if (c && c.callback === e && c.target === i) {
if (n.isInvoking) n.cancel(o); else {
r(s, o);
a.put(c);
}
break;
}
}
};
l.emit = function(t, e, i, n, r, s) {
var o = this._callbackTable[t];
if (o) {
var a = !o.isInvoking;
o.isInvoking = !0;
for (var c = o.callbackInfos, l = 0, u = c.length; l < u; ++l) {
var h = c[l];
if (h) {
var _ = h.target, f = h.callback;
h.once && this.off(t, f, _);
_ ? f.call(_, e, i, n, r, s) : f(e, i, n, r, s);
}
}
if (a) {
o.isInvoking = !1;
o.containCanceled && o.purgeCanceled();
}
}
};
0;
e.exports = h;
}), {
"./js": 146
} ],
140: [ (function(t, e, i) {
"use strict";
function n(t, e) {
for (var i = 0; i < e.length; i++) {
var r = e[i];
Array.isArray(r) ? n(t, r) : t.push(r);
}
}
e.exports = {
flattenCodeArray: function(t) {
var e = [];
n(e, t);
return e.join("");
}
};
}), {} ],
141: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./attribute"), s = t("./CCClass"), o = t("../utils/misc"), a = function() {
this.uuidList = [];
this.uuidObjList = [];
this.uuidPropList = [];
this._stillUseUrl = n.createMap(!0);
};
a.prototype.reset = function() {
this.uuidList.length = 0;
this.uuidObjList.length = 0;
this.uuidPropList.length = 0;
n.clear(this._stillUseUrl);
};
0;
a.prototype.push = function(t, e, i, n) {
n && (this._stillUseUrl[this.uuidList.length] = !0);
this.uuidList.push(i);
this.uuidObjList.push(t);
this.uuidPropList.push(e);
};
(a.pool = new n.Pool(function(t) {
t.reset();
}, 10)).get = function() {
return this._get() || new a();
};
var c = (function() {
function t(t, e, i, n, r) {
this.result = t;
this.customEnv = n;
this.deserializedList = [];
this.deserializedData = null;
this._classFinder = i;
0;
this._idList = [];
this._idObjList = [];
this._idPropList = [];
}
function e(t) {
var e, i, n, r = t.deserializedList, s = t._idPropList, o = t._idList, a = t._idObjList;
t._classFinder && t._classFinder.onDereferenced;
for (e = 0; e < o.length; e++) {
i = s[e];
n = o[e];
a[e][i] = r[n];
}
}
var i = t.prototype;
i.deserialize = function(t) {
if (Array.isArray(t)) {
var i = t, n = i.length;
this.deserializedList.length = n;
for (var r = 0; r < n; r++) if (i[r]) {
this.deserializedList[r] = this._deserializeObject(i[r], !1);
}
this.deserializedData = n > 0 ? this.deserializedList[0] : [];
} else {
this.deserializedList.length = 1;
this.deserializedData = t ? this._deserializeObject(t, !1) : null;
this.deserializedList[0] = this.deserializedData;
}
e(this);
return this.deserializedData;
};
i._deserializeObject = function(t, e, i, r, s) {
var o, a = null, c = null, u = t.__type__;
if ("TypedArray" === u) {
var h = t.array;
a = new window[t.ctor](h.length);
for (var _ = 0; _ < h.length; ++_) a[_] = h[_];
return a;
}
if (u) {
if (!(c = this._classFinder(u, t, r, s))) {
this._classFinder === n._getClassById && cc.deserialize.reportMissingClass(u);
return null;
}
if ((a = new c())._deserialize) {
a._deserialize(t.content, this);
return a;
}
cc.Class._isCCClass(c) ? l(this, a, t, c, i) : this._deserializeTypedObject(a, t, c);
} else if (Array.isArray(t)) {
a = new Array(t.length);
for (var f = 0; f < t.length; f++) "object" == typeof (o = t[f]) && o ? this._deserializeObjField(a, o, "" + f, null, e) : a[f] = o;
} else {
a = {};
this._deserializePrimitiveObject(a, t);
}
return a;
};
i._deserializeObjField = function(t, e, i, n, r) {
var s = e.__id__;
if (void 0 === s) {
var o = e.__uuid__;
o ? this.result.push(t, i, o, r) : t[i] = this._deserializeObject(e, r);
} else {
var a = this.deserializedList[s];
if (a) t[i] = a; else {
this._idList.push(s);
this._idObjList.push(t);
this._idPropList.push(i);
}
}
};
i._deserializePrimitiveObject = function(t, e) {
for (var i in e) if (e.hasOwnProperty(i)) {
var n = e[i];
"object" != typeof n ? "__type__" !== i && (t[i] = n) : n ? this._deserializeObjField(t, n, i) : t[i] = null;
}
};
i._deserializeTypedObject = function(t, e, i) {
if (i !== cc.Vec2) if (i !== cc.Vec3) if (i !== cc.Color) if (i !== cc.Size) for (var n = r.DELIMETER + "default", o = r.getClassAttrs(i), a = i.__props__ || Object.keys(t), c = 0; c < a.length; c++) {
var l = a[c], u = e[l];
void 0 !== u && e.hasOwnProperty(l) || (u = s.getDefault(o[l + n]));
"object" != typeof u ? t[l] = u : u ? this._deserializeObjField(t, u, l) : t[l] = null;
} else {
t.width = e.width || 0;
t.height = e.height || 0;
} else {
t.r = e.r || 0;
t.g = e.g || 0;
t.b = e.b || 0;
var h = e.a;
t.a = void 0 === h ? 255 : h;
} else {
t.x = e.x || 0;
t.y = e.y || 0;
t.z = e.z || 0;
} else {
t.x = e.x || 0;
t.y = e.y || 0;
}
};
function a(t, e, i, r, s, o) {
if (e instanceof cc.ValueType) {
s || t.push("if(prop){");
var a = n.getClassName(e);
t.push("s._deserializeTypedObject(o" + i + ",prop," + a + ");");
s || t.push("}else o" + i + "=null;");
} else {
t.push("if(prop){");
t.push("s._deserializeObjField(o,prop," + r + ",null," + !!o + ");");
t.push("}else o" + i + "=null;");
}
}
var c = function(t, e) {
for (var i = r.DELIMETER + "type", c = (r.DELIMETER, r.DELIMETER + "default"), l = r.DELIMETER + "saveUrlAsAsset", u = r.DELIMETER + "formerlySerializedAs", h = r.getClassAttrs(e), _ = e.__values__, f = [ "var prop;" ], d = o.BUILTIN_CLASSID_RE.test(n._getClassId(e)), p = 0; p < _.length; p++) {
var m, y, v = _[p];
0;
if (s.IDENTIFIER_RE.test(v)) {
y = '"' + v + '"';
m = "." + v;
} else m = "[" + (y = s.escapeForJS(v)) + "]";
var g = m;
if (h[v + u]) {
var C = h[v + u];
g = s.IDENTIFIER_RE.test(C) ? "." + C : "[" + s.escapeForJS(C) + "]";
}
f.push("prop=d" + g + ";");
f.push('if(typeof (prop)!=="undefined"){');
var x = h[v + l], A = s.getDefault(h[v + c]);
if (d) {
var b, S = h[v + i];
if (void 0 === A && S) b = S instanceof r.PrimitiveType; else {
var w = typeof A;
b = "string" === w && !x || "number" === w || "boolean" === w;
}
b ? f.push("o" + m + "=prop;") : a(f, A, m, y, !0, x);
} else {
f.push('if(typeof (prop)!=="object"){o' + m + "=prop;}else{");
a(f, A, m, y, !1, x);
f.push("}");
}
f.push("}");
}
if (cc.js.isChildClassOf(e, cc._BaseNode) || cc.js.isChildClassOf(e, cc.Component)) {
f.push("d._id&&(o._id=d._id);");
}
if ("_$erialized" === _[_.length - 1]) {
f.push("o._$erialized=JSON.parse(JSON.stringify(d));");
f.push("s._deserializePrimitiveObject(o._$erialized,d);");
}
return Function("s", "o", "d", "k", "t", f.join(""));
};
function l(t, e, i, r, s) {
var o;
if (r.hasOwnProperty("__deserialize__")) o = r.__deserialize__; else {
o = c(t, r);
n.value(r, "__deserialize__", o, !0);
}
o(t, e, i, r, s);
0;
}
t.pool = new n.Pool(function(t) {
t.result = null;
t.customEnv = null;
t.deserializedList.length = 0;
t.deserializedData = null;
t._classFinder = null;
0;
t._idList.length = 0;
t._idObjList.length = 0;
t._idPropList.length = 0;
}, 1);
t.pool.get = function(e, i, n, r, s) {
var o = this._get();
if (o) {
o.result = e;
o.customEnv = r;
o._classFinder = n;
0;
return o;
}
return new t(e, i, n, r, s);
};
return t;
})();
cc.deserialize = function(t, e, i) {
var r = (i = i || {}).classFinder || n._getClassById, s = i.createAssetRefs || cc.sys.platform === cc.sys.EDITOR_CORE, o = i.customEnv, l = i.ignoreEditorOnly;
0;
"string" == typeof t && (t = JSON.parse(t));
var u = !e;
e = e || a.pool.get();
var h = c.pool.get(e, !1, r, o, l);
cc.game._isCloning = !0;
var _ = h.deserialize(t);
cc.game._isCloning = !1;
c.pool.put(h);
s && e.assignAssetsBy(Editor.serialize.asAsset);
u && a.pool.put(e);
return _;
};
cc.deserialize.Details = a;
cc.deserialize.reportMissingClass = function(t) {
cc.warnID(5302, t);
};
}), {
"../utils/misc": 200,
"./CCClass": 126,
"./attribute": 138,
"./js": 146
} ],
142: [ (function(t, e, i) {
"use strict";
var n = ".";
function r(t) {
this.id = 0 | 998 * Math.random();
this.prefix = t ? t + n : "";
}
r.prototype.getNewId = function() {
return this.prefix + ++this.id;
};
r.global = new r("global");
e.exports = r;
}), {} ],
143: [ (function(t, e, i) {
"use strict";
t("./js");
t("./CCClass");
t("./CCClassDecorator");
t("./CCEnum");
t("./CCObject");
t("./callbacks-invoker");
t("./url");
t("./deserialize");
t("./instantiate");
t("./instantiate-jit");
t("./requiring-frame");
t("./CCSys");
t("./CCMacro");
t("./CCAssetLibrary");
t("./CCVisibleRect");
}), {
"./CCAssetLibrary": 125,
"./CCClass": 126,
"./CCClassDecorator": 127,
"./CCEnum": 128,
"./CCMacro": 131,
"./CCObject": 132,
"./CCSys": 135,
"./CCVisibleRect": 137,
"./callbacks-invoker": 139,
"./deserialize": 141,
"./instantiate": 145,
"./instantiate-jit": 144,
"./js": 146,
"./requiring-frame": 148,
"./url": 149
} ],
144: [ (function(t, e, i) {
"use strict";
var n = t("./CCObject"), r = n.Flags.Destroyed, s = n.Flags.PersistentMask, o = t("./attribute"), a = t("./js"), c = t("./CCClass"), l = t("./compiler"), u = o.DELIMETER + "default", h = c.IDENTIFIER_RE, _ = c.escapeForJS, f = "var ", d = "o", p = "t", m = {
"cc.Node": "cc.Node",
"cc.Sprite": "cc.Sprite",
"cc.Label": "cc.Label",
"cc.Button": "cc.Button",
"cc.Widget": "cc.Widget",
"cc.Animation": "cc.Animation",
"cc.ClickEvent": !1,
"cc.PrefabInfo": !1
};
!Float32Array.name && (Float32Array.name = "Float32Array");
!Uint32Array.name && (Uint32Array.name = "Uint32Array");
!Int32Array.name && (Int32Array.name = "Int32Array");
!Uint8Array.name && (Uint8Array.name = "Uint8Array");
function y(t, e) {
this.varName = t;
this.expression = e;
}
y.prototype.toString = function() {
return f + this.varName + "=" + this.expression + ";";
};
function v(t, e) {
return e instanceof y ? new y(e.varName, t + e.expression) : t + e;
}
function g(t, e, i) {
if (Array.isArray(i)) {
i[0] = v(e, i[0]);
t.push(i);
} else t.push(v(e, i) + ";");
}
function C(t) {
this._exps = [];
this._targetExp = t;
}
C.prototype.append = function(t, e) {
this._exps.push([ t, e ]);
};
C.prototype.writeCode = function(t) {
var e;
if (this._exps.length > 1) {
t.push(p + "=" + this._targetExp + ";");
e = p;
} else {
if (1 !== this._exps.length) return;
e = this._targetExp;
}
for (var i = 0; i < this._exps.length; i++) {
var n = this._exps[i];
g(t, e + A(n[0]) + "=", n[1]);
}
};
C.pool = new a.Pool(function(t) {
t._exps.length = 0;
t._targetExp = null;
}, 1);
C.pool.get = function(t) {
var e = this._get() || new C();
e._targetExp = t;
return e;
};
function x(t, e) {
if ("function" == typeof t) try {
t = t();
} catch (t) {
return !1;
}
if (t === e) return !0;
if (t && e) {
if (t instanceof cc.ValueType && t.equals(e)) return !0;
if (Array.isArray(t) && Array.isArray(e) || t.constructor === Object && e.constructor === Object) try {
return Array.isArray(t) && Array.isArray(e) && 0 === t.length && 0 === e.length;
} catch (t) {}
}
return !1;
}
function A(t) {
return h.test(t) ? "." + t : "[" + _(t) + "]";
}
function b(t, e) {
this.parent = e;
this.objsToClear_iN$t = [];
this.codeArray = [];
this.objs = [];
this.funcs = [];
this.funcModuleCache = a.createMap();
a.mixin(this.funcModuleCache, m);
this.globalVariables = [];
this.globalVariableId = 0;
this.localVariableId = 0;
this.codeArray.push(f + d + "," + p + ";", "if(R){", d + "=R;", "}else{", d + "=R=new " + this.getFuncModule(t.constructor, !0) + "();", "}");
a.value(t, "_iN$t", {
globalVar: "R"
}, !0);
this.objsToClear_iN$t.push(t);
this.enumerateObject(this.codeArray, t);
var i;
this.globalVariables.length > 0 && (i = f + this.globalVariables.join(",") + ";");
var n = l.flattenCodeArray([ "return (function(R){", i || [], this.codeArray, "return o;", "})" ]);
this.result = Function("O", "F", n)(this.objs, this.funcs);
for (var r = 0, s = this.objsToClear_iN$t.length; r < s; ++r) this.objsToClear_iN$t[r]._iN$t = null;
this.objsToClear_iN$t.length = 0;
}
var S = b.prototype;
S.getFuncModule = function(t, e) {
var i = a.getClassName(t);
if (i) {
var n = this.funcModuleCache[i];
if (n) return n;
if (void 0 === n) {
var r = -1 !== i.indexOf(".");
if (r) try {
if (r = t === Function("return " + i)()) {
this.funcModuleCache[i] = i;
return i;
}
} catch (t) {}
}
}
var s = this.funcs.indexOf(t);
if (s < 0) {
s = this.funcs.length;
this.funcs.push(t);
}
var o = "F[" + s + "]";
e && (o = "(" + o + ")");
this.funcModuleCache[i] = o;
return o;
};
S.getObjRef = function(t) {
var e = this.objs.indexOf(t);
if (e < 0) {
e = this.objs.length;
this.objs.push(t);
}
return "O[" + e + "]";
};
S.setValueType = function(t, e, i, n) {
var r = C.pool.get(n), s = e.constructor.__props__;
s || (s = Object.keys(e));
for (var o = 0; o < s.length; o++) {
var a = s[o], c = i[a];
if (e[a] !== c) {
var l = this.enumerateField(i, a, c);
r.append(a, l);
}
}
r.writeCode(t);
C.pool.put(r);
};
S.enumerateCCClass = function(t, e, i) {
for (var n = i.__values__, r = o.getClassAttrs(i), s = 0; s < n.length; s++) {
var a = n[s], l = e[a], h = r[a + u];
if (!x(h, l)) if ("object" == typeof l && l instanceof cc.ValueType && (h = c.getDefault(h)) && h.constructor === l.constructor) {
var _ = d + A(a);
this.setValueType(t, h, l, _);
} else this.setObjProp(t, e, a, l);
}
};
S.instantiateArray = function(t) {
if (0 === t.length) return "[]";
var e = "a" + ++this.localVariableId, i = [ new y(e, "new Array(" + t.length + ")") ];
a.value(t, "_iN$t", {
globalVar: "",
source: i
}, !0);
this.objsToClear_iN$t.push(t);
for (var n = 0; n < t.length; ++n) {
g(i, e + "[" + n + "]=", this.enumerateField(t, n, t[n]));
}
return i;
};
S.instantiateTypedArray = function(t) {
var e = t.constructor.name;
if (0 === t.length) return "new " + e;
var i = "a" + ++this.localVariableId, n = [ new y(i, "new " + e + "(" + t.length + ")") ];
t._iN$t = {
globalVar: "",
source: n
};
this.objsToClear_iN$t.push(t);
for (var r = 0; r < t.length; ++r) if (0 !== t[r]) {
g(n, i + "[" + r + "]=", t[r]);
}
return n;
};
S.enumerateField = function(t, e, i) {
if ("object" == typeof i && i) {
var r = i._iN$t;
if (r) {
var o = r.globalVar;
if (!o) {
o = r.globalVar = "v" + ++this.globalVariableId;
this.globalVariables.push(o);
var a = r.source[0];
r.source[0] = v(o + "=", a);
}
return o;
}
return ArrayBuffer.isView(i) ? this.instantiateTypedArray(i) : Array.isArray(i) ? this.instantiateArray(i) : this.instantiateObj(i);
}
if ("function" == typeof i) return this.getFuncModule(i);
if ("string" == typeof i) return _(i);
"_objFlags" === e && t instanceof n && (i &= s);
return i;
};
S.setObjProp = function(t, e, i, n) {
g(t, d + A(i) + "=", this.enumerateField(e, i, n));
};
S.enumerateObject = function(t, e) {
var i = e.constructor;
if (cc.Class._isCCClass(i)) this.enumerateCCClass(t, e, i); else for (var n in e) if (e.hasOwnProperty(n) && (95 !== n.charCodeAt(0) || 95 !== n.charCodeAt(1) || "__type__" === n)) {
var r = e[n];
"object" == typeof r && r && r === e._iN$t || this.setObjProp(t, e, n, r);
}
};
S.instantiateObj = function(t) {
if (t instanceof cc.ValueType) return c.getNewValueTypeCode(t);
if (t instanceof cc.Asset) return this.getObjRef(t);
if (t._objFlags & r) return null;
var e, i = t.constructor;
if (cc.Class._isCCClass(i)) {
if (this.parent) if (this.parent instanceof cc.Component) {
if (t instanceof cc._BaseNode || t instanceof cc.Component) return this.getObjRef(t);
} else if (this.parent instanceof cc._BaseNode) if (t instanceof cc._BaseNode) {
if (!t.isChildOf(this.parent)) return this.getObjRef(t);
} else if (t instanceof cc.Component && !t.node.isChildOf(this.parent)) return this.getObjRef(t);
e = new y(d, "new " + this.getFuncModule(i, !0) + "()");
} else if (i === Object) e = new y(d, "{}"); else {
if (i) return this.getObjRef(t);
e = new y(d, "Object.create(null)");
}
var n = [ e ];
a.value(t, "_iN$t", {
globalVar: "",
source: n
}, !0);
this.objsToClear_iN$t.push(t);
this.enumerateObject(n, t);
return [ "(function(){", n, "return o;})();" ];
};
e.exports = {
compile: function(t) {
return new b(t, t instanceof cc._BaseNode && t).result;
},
equalsToDefault: x
};
0;
}), {
"./CCClass": 126,
"./CCObject": 132,
"./attribute": 138,
"./compiler": 140,
"./js": 146
} ],
145: [ (function(t, e, i) {
"use strict";
var n = t("./CCObject"), r = t("../value-types/value-type"), s = n.Flags.Destroyed, o = n.Flags.PersistentMask, a = t("./utils").isDomNode, c = t("./js");
function l(t, e) {
if (!e) {
if ("object" != typeof t || Array.isArray(t)) {
0;
return null;
}
if (!t) {
0;
return null;
}
if (!cc.isValid(t)) {
0;
return null;
}
0;
}
var i;
if (t instanceof n) {
if (t._instantiate) {
cc.game._isCloning = !0;
i = t._instantiate();
cc.game._isCloning = !1;
return i;
}
if (t instanceof cc.Asset) {
0;
return null;
}
}
cc.game._isCloning = !0;
i = h(t);
cc.game._isCloning = !1;
return i;
}
var u = [];
function h(t, e) {
if (Array.isArray(t)) {
0;
return null;
}
if (a && a(t)) {
0;
return null;
}
var i;
if (t._iN$t) i = t._iN$t; else if (t.constructor) {
i = new (0, t.constructor)();
} else i = Object.create(null);
f(t, i, e);
for (var n = 0, r = u.length; n < r; ++n) u[n]._iN$t = null;
u.length = 0;
return i;
}
function _(t, e, i, n) {
for (var s = t.__values__, o = 0; o < s.length; o++) {
var a = s[o], c = e[a];
if ("object" == typeof c && c) {
var l = i[a];
l instanceof r && l.constructor === c.constructor ? l.set(c) : i[a] = c._iN$t || d(c, n);
} else i[a] = c;
}
}
function f(t, e, i) {
c.value(t, "_iN$t", e, !0);
u.push(t);
var r = t.constructor;
if (cc.Class._isCCClass(r)) _(r, t, e, i); else for (var s in t) if (t.hasOwnProperty(s) && (95 !== s.charCodeAt(0) || 95 !== s.charCodeAt(1) || "__type__" === s)) {
var a = t[s];
if ("object" == typeof a && a) {
if (a === e) continue;
e[s] = a._iN$t || d(a, i);
} else e[s] = a;
}
t instanceof n && (e._objFlags &= o);
}
function d(t, e) {
if (t instanceof r) return t.clone();
if (t instanceof cc.Asset) return t;
var i;
if (ArrayBuffer.isView(t)) {
var n = t.length;
i = new t.constructor(n);
t._iN$t = i;
u.push(t);
for (var o = 0; o < n; ++o) i[o] = t[o];
return i;
}
if (Array.isArray(t)) {
var a = t.length;
i = new Array(a);
c.value(t, "_iN$t", i, !0);
u.push(t);
for (var l = 0; l < a; ++l) {
var h = t[l];
i[l] = "object" == typeof h && h ? h._iN$t || d(h, e) : h;
}
return i;
}
if (t._objFlags & s) return null;
var _ = t.constructor;
if (cc.Class._isCCClass(_)) {
if (e) if (e instanceof cc.Component) {
if (t instanceof cc._BaseNode || t instanceof cc.Component) return t;
} else if (e instanceof cc._BaseNode) if (t instanceof cc._BaseNode) {
if (!t.isChildOf(e)) return t;
} else if (t instanceof cc.Component && !t.node.isChildOf(e)) return t;
i = new _();
} else if (_ === Object) i = {}; else {
if (_) return t;
i = Object.create(null);
}
f(t, i, e);
return i;
}
l._clone = h;
cc.instantiate = l;
e.exports = l;
}), {
"../value-types/value-type": 219,
"./CCObject": 132,
"./js": 146,
"./utils": 150
} ],
146: [ (function(t, e, i) {
"use strict";
var n = new (t("./id-generater"))("TmpCId.");
function r(t, e) {
for (;t; ) {
var i = Object.getOwnPropertyDescriptor(t, e);
if (i) return i;
t = Object.getPrototypeOf(t);
}
return null;
}
function s(t, e, i) {
var n = r(e, t);
Object.defineProperty(i, t, n);
}
var o = {
isNumber: function(t) {
return "number" == typeof t || t instanceof Number;
},
isString: function(t) {
return "string" == typeof t || t instanceof String;
},
addon: function(t) {
t = t || {};
for (var e = 1, i = arguments.length; e < i; e++) {
var n = arguments[e];
if (n) {
if ("object" != typeof n) {
cc.errorID(5402, n);
continue;
}
for (var r in n) r in t || s(r, n, t);
}
}
return t;
},
mixin: function(t) {
t = t || {};
for (var e = 1, i = arguments.length; e < i; e++) {
var n = arguments[e];
if (n) {
if ("object" != typeof n) {
cc.errorID(5403, n);
continue;
}
for (var r in n) s(r, n, t);
}
}
return t;
},
extend: function(t, e) {
0;
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
t.prototype = Object.create(e.prototype, {
constructor: {
value: t,
writable: !0,
configurable: !0
}
});
return t;
},
getSuper: function(t) {
var e = t.prototype, i = e && Object.getPrototypeOf(e);
return i && i.constructor;
},
isChildClassOf: function(t, e) {
if (t && e) {
if ("function" != typeof t) return !1;
if ("function" != typeof e) {
0;
return !1;
}
if (t === e) return !0;
for (;;) {
if (!(t = o.getSuper(t))) return !1;
if (t === e) return !0;
}
}
return !1;
},
clear: function(t) {
for (var e = Object.keys(t), i = 0; i < e.length; i++) delete t[e[i]];
},
isEmptyObject: function(t) {
for (var e in t) return !1;
return !0;
},
getPropertyDescriptor: r
}, a = {
value: void 0,
enumerable: !1,
writable: !1,
configurable: !0
};
o.value = function(t, e, i, n, r) {
a.value = i;
a.writable = n;
a.enumerable = r;
Object.defineProperty(t, e, a);
a.value = void 0;
};
var c = {
get: null,
set: null,
enumerable: !1
};
o.getset = function(t, e, i, n, r, s) {
if ("function" != typeof n) {
r = n;
n = void 0;
}
c.get = i;
c.set = n;
c.enumerable = r;
c.configurable = s;
Object.defineProperty(t, e, c);
c.get = null;
c.set = null;
};
var l = {
get: null,
enumerable: !1,
configurable: !1
};
o.get = function(t, e, i, n, r) {
l.get = i;
l.enumerable = n;
l.configurable = r;
Object.defineProperty(t, e, l);
l.get = null;
};
var u = {
set: null,
enumerable: !1,
configurable: !1
};
o.set = function(t, e, i, n, r) {
u.set = i;
u.enumerable = n;
u.configurable = r;
Object.defineProperty(t, e, u);
u.set = null;
};
o.getClassName = function(t) {
if ("function" == typeof t) {
var e = t.prototype;
if (e && e.hasOwnProperty("__classname__") && e.__classname__) return e.__classname__;
var i = "";
t.name && (i = t.name);
if (t.toString) {
var n, r = t.toString();
(n = "[" === r.charAt(0) ? r.match(/\[\w+\s*(\w+)\]/) : r.match(/function\s*(\w+)/)) && 2 === n.length && (i = n[1]);
}
return "Object" !== i ? i : "";
}
return t && t.constructor ? o.getClassName(t.constructor) : "";
};
(function() {
var t = {}, e = {};
function i(t, e, i) {
o.getset(o, e, (function() {
return Object.assign({}, i);
}), (function(t) {
o.clear(i);
Object.assign(i, t);
}));
return function(e, n) {
n.prototype.hasOwnProperty(t) && delete i[n.prototype[t]];
o.value(n.prototype, t, e);
if (e) {
var r = i[e];
if (r && r !== n) {
var s = "A Class already exists with the same " + t + ' : "' + e + '".';
0;
cc.error(s);
} else i[e] = n;
}
};
}
o._setClassId = i("__cid__", "_registeredClassIds", t);
var r = i("__classname__", "_registeredClassNames", e);
o.setClassName = function(t, e) {
r(t, e);
if (!e.prototype.hasOwnProperty("__cid__")) {
var i = t || n.getNewId();
i && o._setClassId(i, e);
}
};
o.unregisterClass = function() {
for (var i = 0; i < arguments.length; i++) {
var n = arguments[i].prototype, r = n.__cid__;
r && delete t[r];
var s = n.__classname__;
s && delete e[s];
}
};
o._getClassById = function(e) {
return t[e];
};
o.getClassByName = function(t) {
return e[t];
};
o._getClassId = function(t, e) {
e = "undefined" == typeof e || e;
if ("function" == typeof t && t.prototype.hasOwnProperty("__cid__")) {
0;
return t.prototype.__cid__;
}
if (t && t.constructor) {
var i = t.constructor.prototype;
if (i && i.hasOwnProperty("__cid__")) {
0;
return t.__cid__;
}
}
return "";
};
})();
o.obsolete = function(t, e, i, n) {
var r = /([^.]+)$/, s = r.exec(e)[0], a = r.exec(i)[0];
function c() {
0;
return this[a];
}
n ? o.getset(t, s, c, (function(t) {
0;
this[a] = t;
})) : o.get(t, s, c);
};
o.obsoletes = function(t, e, i, n) {
for (var r in i) {
var s = i[r];
o.obsolete(t, e + "." + r, s, n);
}
};
var h = /(%d)|(%s)/, _ = /%s/;
o.formatStr = function() {
var t = arguments.length;
if (0 === t) return "";
var e = arguments[0];
if (1 === t) return "" + e;
if ("string" == typeof e && h.test(e)) for (var i = 1; i < t; ++i) {
var n = arguments[i], r = "number" == typeof n ? h : _;
r.test(e) ? e = e.replace(r, n) : e += " " + n;
} else for (var s = 1; s < t; ++s) e += " " + arguments[s];
return e;
};
o.shiftArguments = function() {
for (var t = arguments.length - 1, e = new Array(t), i = 0; i < t; ++i) e[i] = arguments[i + 1];
return e;
};
o.createMap = function(t) {
var e = Object.create(null);
if (t) {
e["."] = !0;
e["/"] = !0;
delete e["."];
delete e["/"];
}
return e;
};
function f(t, e) {
t.splice(e, 1);
}
function d(t, e) {
var i = t.indexOf(e);
if (i >= 0) {
f(t, i);
return !0;
}
return !1;
}
var p = Array.prototype.indexOf;
o.array = {
remove: d,
fastRemove: function(t, e) {
var i = t.indexOf(e);
if (i >= 0) {
t[i] = t[t.length - 1];
--t.length;
}
},
removeAt: f,
fastRemoveAt: function(t, e) {
var i = t.length;
if (!(e < 0 || e >= i)) {
t[e] = t[i - 1];
t.length = i - 1;
}
},
contains: function(t, e) {
return t.indexOf(e) >= 0;
},
verifyType: function(t, e) {
if (t && t.length > 0) for (var i = 0; i < t.length; i++) if (!(t[i] instanceof e)) {
cc.logID(1300);
return !1;
}
return !0;
},
removeArray: function(t, e) {
for (var i = 0, n = e.length; i < n; i++) d(t, e[i]);
},
appendObjectsAt: function(t, e, i) {
t.splice.apply(t, [ i, 0 ].concat(e));
return t;
},
copy: function(t) {
var e, i = t.length, n = new Array(i);
for (e = 0; e < i; e += 1) n[e] = t[e];
return n;
},
indexOf: p,
MutableForwardIterator: t("../utils/mutable-forward-iterator")
};
function m(t, e) {
if (void 0 === e) {
e = t;
t = null;
}
this.get = null;
this.count = 0;
this._pool = new Array(e);
this._cleanup = t;
}
m.prototype._get = function() {
if (this.count > 0) {
--this.count;
var t = this._pool[this.count];
this._pool[this.count] = null;
return t;
}
return null;
};
m.prototype.put = function(t) {
var e = this._pool;
if (this.count < e.length) {
if (this._cleanup && !1 === this._cleanup(t)) return;
e[this.count] = t;
++this.count;
}
};
m.prototype.resize = function(t) {
if (t >= 0) {
this._pool.length = t;
this.count > t && (this.count = t);
}
};
o.Pool = m;
cc.js = o;
e.exports = o;
}), {
"../utils/mutable-forward-iterator": 201,
"./id-generater": 142
} ],
147: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./attribute"), s = {
url: {
canUsedInGet: !0
},
default: {},
serializable: {},
editorOnly: {},
formerlySerializedAs: {}
};
function o(t, e, i, n) {
if (t.get || t.set) 0; else if (t.hasOwnProperty("default")) {
var r = "_N$" + e;
t.get = function() {
return this[r];
};
t.set = function(t) {
var e = this[r];
this[r] = t;
i.call(this, e);
};
0;
var o = {};
n[r] = o;
for (var a in s) {
var c = s[a];
if (t.hasOwnProperty(a)) {
o[a] = t[a];
c.canUsedInGet || delete t[a];
}
}
} else 0;
}
function a(t, e, i, n) {
Array.isArray(n) && n.length > 0 && (n = n[0]);
0;
t.type = n;
}
function c(t, e, i, n) {
if (Array.isArray(e)) {
if (!(e.length > 0)) return cc.errorID(5508, i, n);
if (cc.RawAsset.isRawAssetType(e[0])) {
t.url = e[0];
delete t.type;
return;
}
t.type = e = e[0];
}
if ("function" == typeof e) if (e === String) {
t.type = cc.String;
0;
} else if (e === Boolean) {
t.type = cc.Boolean;
0;
} else if (e === Number) {
t.type = cc.Float;
0;
} else 0; else 0;
}
i.getFullFormOfProperty = function(t, e, i) {
if (t && t.constructor === Object) return null;
if (Array.isArray(t) && t.length > 0) {
t[0];
0;
return {
default: [],
type: t,
_short: !0
};
}
if ("function" == typeof t) {
var s = t;
if (!cc.RawAsset.isRawAssetType(s)) {
if (!cc.RawAsset.wasRawAssetType(s)) return {
default: n.isChildClassOf(s, cc.ValueType) ? new s() : null,
type: s,
_short: !0
};
0;
}
return {
default: "",
url: s,
_short: !0
};
}
return t instanceof r.PrimitiveType ? {
default: t.default,
_short: !0
} : {
default: t,
_short: !0
};
};
i.preprocessAttrs = function(t, e, n, r) {
for (var s in t) {
var l = t[s], u = i.getFullFormOfProperty(l, s, e);
u && (l = t[s] = u);
if (l) {
var h = l.notify;
h && o(l, s, h, t);
"type" in l && c(l, l.type, e, s);
"url" in l && a(l, 0, 0, l.url);
"type" in l && l.type;
}
}
};
i.validateMethodWithProps = function(t, e, i, n, r) {
0;
if ("function" != typeof t && null !== t) {
return !1;
}
0;
return !0;
};
}), {
"./CCClass": 126,
"./attribute": 138,
"./js": 146
} ],
148: [ (function(t, e, i) {
"use strict";
var n = [];
cc._RF = {
push: function(t, e, i) {
if (void 0 === i) {
i = e;
e = "";
}
n.push({
uuid: e,
script: i,
module: t,
exports: t.exports,
beh: null
});
},
pop: function() {
var t = n.pop(), e = t.module, i = e.exports;
if (i === t.exports) {
for (var r in i) return;
e.exports = i = t.cls;
}
},
peek: function() {
return n[n.length - 1];
}
};
0;
}), {} ],
149: [ (function(t, e, i) {
"use strict";
cc.url = {
_rawAssets: "",
normalize: function(t) {
t && (46 === t.charCodeAt(0) && 47 === t.charCodeAt(1) ? t = t.slice(2) : 47 === t.charCodeAt(0) && (t = t.slice(1)));
return t;
},
raw: function(t) {
0;
if ((t = this.normalize(t)).startsWith("resources/")) {
var e = cc.loader._getResUuid(t.slice(10), cc.Asset, null, !0);
if (e) return cc.AssetLibrary.getLibUrlNoExt(e, !0) + cc.path.extname(t);
} else cc.errorID(7002, t);
return this._rawAssets + t;
},
_init: function(t) {
this._rawAssets = cc.path.stripSep(t) + "/";
}
};
e.exports = cc.url;
}), {} ],
150: [ (function(t, e, i) {
"use strict";
t("./js");
e.exports = {
contains: function(t, e) {
if ("function" == typeof t.contains) return t.contains(e);
if ("function" == typeof t.compareDocumentPosition) return !!(16 & t.compareDocumentPosition(e));
var i = e.parentNode;
if (i) do {
if (i === t) return !0;
i = i.parentNode;
} while (null !== i);
return !1;
},
isDomNode: "object" == typeof window && ("function" == typeof Node ? function(t) {
return t instanceof Node;
} : function(t) {
return t && "object" == typeof t && "number" == typeof t.nodeType && "string" == typeof t.nodeName;
}),
callInNextTick: function(t, e, i) {
t && setTimeout((function() {
t(e, i);
}), 0);
}
};
0;
0;
}), {
"./js": 146
} ],
151: [ (function(t, e, i) {
"use strict";
t("./platform/js");
t("./value-types");
t("./utils");
t("./platform/CCInputManager");
t("./platform/CCInputExtension");
t("./event");
t("./platform/CCSys");
t("./platform/CCMacro");
t("./load-pipeline");
t("./CCDirector");
t("./renderer");
t("./platform/CCView");
t("./platform/CCScreen");
t("./CCScheduler");
t("./event-manager");
}), {
"./CCDirector": 13,
"./CCScheduler": 18,
"./event": 74,
"./event-manager": 70,
"./load-pipeline": 86,
"./platform/CCInputExtension": 129,
"./platform/CCInputManager": 130,
"./platform/CCMacro": 131,
"./platform/CCScreen": 134,
"./platform/CCSys": 135,
"./platform/CCView": 136,
"./platform/js": 146,
"./renderer": 170,
"./utils": 199,
"./value-types": 214
} ],
152: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
return function(e, i, n) {
i && t(e.prototype, i);
n && t(e, n);
return e;
};
})(), r = a(t("./assembler")), s = a(t("./utils/dynamic-atlas/manager")), o = a(t("./webgl/render-data"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function l(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function u(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var h = (function(t) {
u(e, t);
function e() {
c(this, e);
return l(this, t.apply(this, arguments));
}
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this._renderData = new o.default();
this._renderData.init(this);
this.initLocal();
this.initData();
};
e.prototype.initData = function() {
this._renderData.createQuadData(0, this.verticesFloats, this.indicesCount);
};
e.prototype.initLocal = function() {
this._local = [];
this._local.length = 4;
};
e.prototype.updateColor = function(t, e) {
var i = this._renderData.uintVDatas[0];
if (i) {
e = e || t.node.color._val;
for (var n = this.floatsPerVert, r = this.colorOffset, s = i.length; r < s; r += n) i[r] = e;
}
};
e.prototype.getBuffer = function() {
return cc.renderer._handle._meshBuffer;
};
e.prototype.updateWorldVerts = function(t) {
var e = this._local, i = this._renderData.vDatas[0], n = t.node._worldMatrix.m, r = n[0], s = n[1], o = n[4], a = n[5], c = n[12], l = n[13], u = e[0], h = e[2], _ = e[1], f = e[3];
if (1 === r && 0 === s && 0 === o && 1 === a) {
i[0] = u + c;
i[1] = _ + l;
i[5] = h + c;
i[6] = _ + l;
i[10] = u + c;
i[11] = f + l;
i[15] = h + c;
i[16] = f + l;
} else {
var d = r * u, p = r * h, m = s * u, y = s * h, v = o * _, g = o * f, C = a * _, x = a * f;
i[0] = d + v + c;
i[1] = m + C + l;
i[5] = p + v + c;
i[6] = y + C + l;
i[10] = d + g + c;
i[11] = m + x + l;
i[15] = p + g + c;
i[16] = y + x + l;
}
};
e.prototype.fillBuffers = function(t, e) {
e.worldMatDirty && this.updateWorldVerts(t);
var i = this._renderData, n = i.vDatas[0], r = i.iDatas[0], s = this.getBuffer(e), o = s.request(this.verticesCount, this.indicesCount), a = o.byteOffset >> 2, c = s._vData;
n.length + a > c.length ? c.set(n.subarray(0, c.length - a), a) : c.set(n, a);
for (var l = s._iData, u = o.indiceOffset, h = o.vertexOffset, _ = 0, f = r.length; _ < f; _++) l[u++] = h + r[_];
};
e.prototype.packToDynamicAtlas = function(t, e) {
if (e) {
if (!e._original && s.default && e._texture.packable) {
var i = s.default.insertSpriteFrame(e);
i && e._setDynamicAtlasFrame(i);
}
var n = t.sharedMaterials[0];
if (!n) return;
if (n.getProperty("texture") !== e._texture) {
t._vertsDirty = !0;
t._activateMaterial(!0);
}
}
};
n(e, [ {
key: "verticesFloats",
get: function() {
return this.verticesCount * this.floatsPerVert;
}
} ]);
return e;
})(r.default);
i.default = h;
cc.js.addon(h.prototype, {
floatsPerVert: 5,
verticesCount: 4,
indicesCount: 6,
uvOffset: 2,
colorOffset: 4
});
cc.Assembler2D = h;
e.exports = i.default;
}), {
"./assembler": 153,
"./utils/dynamic-atlas/manager": void 0,
"./webgl/render-data": 190
} ],
153: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("./webgl/vertex-format");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
r(this, t);
}
t.prototype.init = function(t) {
this._renderComp = t;
};
t.prototype.updateRenderData = function(t) {};
t.prototype.fillBuffers = function(t, e) {};
t.prototype.getVfmt = function() {
return n.vfmtPosUvColor;
};
return t;
})();
i.default = s;
s.register = function(t, e) {
t.__assembler__ = e;
};
s.init = function(t) {
for (var e = t.constructor, i = e.__assembler__; !i; ) {
if (!(e = e.$super)) {
cc.warn("Can not find assembler for render component : [" + cc.js.getClassName(t) + "]");
return;
}
i = e.__assembler__;
}
i.getConstructor && (i = i.getConstructor(t));
if (!t._assembler || t._assembler.constructor !== i) {
t._assembler = new i();
t._assembler.init(t);
}
};
cc.Assembler = s;
e.exports = i.default;
}), {
"./webgl/vertex-format": 191
} ],
154: [ (function(t, e, i) {
"use strict";
var n = function(t) {
var e;
try {
e = t.getContext("2d");
} catch (t) {
console.error(t);
return;
}
this._canvas = t;
this._ctx = e;
this._caps = {};
this._stats = {
drawcalls: 0
};
this._vx = this._vy = this._vw = this._vh = 0;
this._sx = this._sy = this._sw = this._sh = 0;
};
n.prototype._restoreTexture = function(t) {};
n.prototype.setViewport = function(t, e, i, n) {
if (this._vx !== t || this._vy !== e || this._vw !== i || this._vh !== n) {
this._vx = t;
this._vy = e;
this._vw = i;
this._vh = n;
}
};
n.prototype.setScissor = function(t, e, i, n) {
if (this._sx !== t || this._sy !== e || this._sw !== i || this._sh !== n) {
this._sx = t;
this._sy = e;
this._sw = i;
this._sh = n;
}
};
n.prototype.clear = function(t) {
var e = this._ctx;
e.clearRect(this._vx, this._vy, this._vw, this._vh);
if (t && (0 !== t[0] || 0 !== t[1] || 0 !== t[2])) {
e.fillStyle = "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")";
e.globalAlpha = t[3];
e.fillRect(this._vx, this._vy, this._vw, this._vh);
}
};
n.prototype.resetDrawCalls = function() {
this._stats.drawcalls = 0;
};
n.prototype.getDrawCalls = function() {
return this._stats.drawcalls;
};
e.exports = n;
}), {} ],
155: [ (function(t, e, i) {
"use strict";
var n = function(t, e) {
this._device = t;
this._width = 4;
this._height = 4;
this._image = null;
if (e) {
void 0 !== e.width && (this._width = e.width);
void 0 !== e.height && (this._height = e.height);
this.updateImage(e);
}
};
n.prototype.update = function(t) {
this.updateImage(t);
};
n.prototype.updateImage = function(t) {
if (t.images && t.images[0]) {
var e = t.images[0];
e && e !== this._image && (this._image = e);
}
};
n.prototype.destroy = function() {
this._image = null;
};
e.exports = n;
}), {} ],
156: [ (function(t, e, i) {
"use strict";
var n = function() {};
n.prototype = {
constructor: n,
clear: function() {},
render: function() {}
};
e.exports = n;
}), {} ],
157: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
t("./render-flow");
t("./renderers");
var n = s(t("./forward-renderer")), r = s(t("./render-component-handle"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
i.default = {
ForwardRenderer: n.default,
RenderComponentHandle: r.default
};
e.exports = i.default;
}), {
"./forward-renderer": 156,
"./render-component-handle": 158,
"./render-flow": 159,
"./renderers": 160
} ],
158: [ (function(t, e, i) {
"use strict";
var n = t("./renderers/utils"), r = function(t, e) {
this._device = t;
this._camera = e;
this.parentOpacity = 1;
this.parentOpacityDirty = 0;
this.worldMatDirty = 0;
this.walking = !1;
};
r.prototype = {
constructor: r,
reset: function() {
var t = this._device._ctx, e = this._device._canvas, i = cc.Camera.main ? cc.Camera.main.backgroundColor : cc.color(), r = "rgba(" + i.r + ", " + i.g + ", " + i.b + ", " + i.a / 255 + ")";
t.fillStyle = r;
t.setTransform(1, 0, 0, 1, 0, 0);
t.clearRect(0, 0, e.width, e.height);
t.fillRect(0, 0, e.width, e.height);
this._device._stats.drawcalls = 0;
n.context.reset();
},
terminate: function() {}
};
e.exports = r;
}), {
"./renderers/utils": 169
} ],
159: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../render-flow"));
n.default.prototype._draw = function(t, e) {
var i = n.default.getBachther(), r = i._device._ctx, s = i._camera;
r.setTransform(s.a, s.b, s.c, s.d, s.tx, s.ty);
r.scale(1, -1);
var o = t._renderComponent;
o._assembler[e](r, o);
this._next._func(t);
};
n.default.prototype._render = function(t) {
this._draw(t, "draw");
};
n.default.prototype._postRender = function(t) {
this._draw(t, "postDraw");
};
}), {
"../render-flow": 171
} ],
160: [ (function(t, e, i) {
"use strict";
t("../../../components/CCSprite");
t("../../../components/CCLabel");
t("../../../components/CCMask");
t("../../../graphics/graphics");
t("./sprite");
t("./label");
t("./graphics");
t("./mask");
}), {
"../../../components/CCLabel": 57,
"../../../components/CCMask": void 0,
"../../../components/CCSprite": 61,
"../../../graphics/graphics": void 0,
"./graphics": void 0,
"./label": 162,
"./mask": void 0,
"./sprite": 165
} ],
161: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../../../utils/label/bmfont")), r = o(t("../render-data")), s = o(t("../utils"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function c(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function l(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var u = (function(t) {
l(e, t);
function e() {
a(this, e);
return c(this, t.apply(this, arguments));
}
e.prototype.init = function() {
this._renderData = new r.default();
};
e.prototype.updateColor = function() {};
e.prototype.appendQuad = function(t, e, i, n, r, s, o) {
var a = this._renderData, c = a.dataLength;
a.dataLength += 2;
var l = a.vertices, u = i.width, h = i.height, _ = void 0, f = void 0, d = void 0, p = void 0;
if (n) {
_ = i.x;
d = i.x + h;
f = i.y;
p = i.y + u;
l[c].u = _;
l[c].v = p;
l[c + 1].u = _;
l[c + 1].v = f;
} else {
_ = i.x;
d = i.x + u;
f = i.y;
p = i.y + h;
l[c].u = _;
l[c].v = f;
l[c + 1].u = d;
l[c + 1].v = p;
}
l[c].x = r;
l[c].y = s - h * o;
l[c + 1].x = r + u * o;
l[c + 1].y = s;
};
e.prototype.draw = function(t, e) {
var i = e.node, n = i._worldMatrix.m, r = n[0], o = n[1], a = n[4], c = n[5], l = n[12], u = n[13];
t.transform(r, o, a, c, l, u);
t.scale(1, -1);
s.default.context.setGlobalAlpha(t, i.opacity / 255);
for (var h = e._frame._texture, _ = this._renderData.vertices, f = s.default.getColorizedImage(h, i._color), d = 0, p = _.length; d < p; d += 2) {
var m = _[d].x, y = _[d].y, v = _[d + 1].x - m, g = _[d + 1].y - y;
y = -y - g;
var C = _[d].u, x = _[d].v, A = _[d + 1].u - C, b = _[d + 1].v - x;
t.drawImage(f, C, x, A, b, m, y, v, g);
}
return 1;
};
return e;
})(n.default);
i.default = u;
e.exports = i.default;
}), {
"../../../utils/label/bmfont": 172,
"../render-data": 164,
"../utils": 169
} ],
162: [ (function(t, e, i) {
"use strict";
var n = a(t("../../../assembler")), r = a(t("../../../../components/CCLabel")), s = a(t("./ttf")), o = a(t("./bmfont"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
var c = {
pool: [],
get: function() {
var t = this.pool.pop();
if (!t) {
var e = document.createElement("canvas");
t = {
canvas: e,
context: e.getContext("2d")
};
}
return t;
},
put: function(t) {
this.pool.length >= 32 || this.pool.push(t);
}
};
r.default._canvasPool = c;
n.default.register(r.default, {
getConstructor: function(t) {
var e = s.default;
t.font instanceof cc.BitmapFont ? e = o.default : t.cacheMode === r.default.CacheMode.CHAR && cc.warn("sorry, canvas mode does not support CHAR mode currently!");
return e;
},
TTF: s.default,
Bmfont: o.default
});
}), {
"../../../../components/CCLabel": 57,
"../../../assembler": 153,
"./bmfont": 161,
"./ttf": 163
} ],
163: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../../../utils/label/ttf")), r = o(t("../render-data")), s = o(t("../utils"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function c(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function l(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var u = (function(t) {
l(e, t);
function e() {
a(this, e);
return c(this, t.apply(this, arguments));
}
e.prototype.init = function() {
this._renderData = new r.default();
this._renderData.dataLength = 2;
};
e.prototype.updateColor = function() {};
e.prototype.updateVerts = function(t) {
var e = this._renderData, i = t.node, n = i.width, r = i.height, s = i.anchorX * n, o = i.anchorY * r, a = e.vertices;
a[0].x = -s;
a[0].y = -o;
a[1].x = n - s;
a[1].y = r - o;
};
e.prototype._updateTexture = function(t) {
n.default.prototype._updateTexture.call(this, t);
var e = t._frame._texture;
s.default.dropColorizedImage(e, t.node.color);
};
e.prototype.draw = function(t, e) {
var i = e.node, n = i._worldMatrix.m, r = n[0], o = n[1], a = n[4], c = n[5], l = n[12], u = n[13];
t.transform(r, o, a, c, l, u);
t.scale(1, -1);
s.default.context.setGlobalAlpha(t, i.opacity / 255);
var h = e._frame._texture, _ = this._renderData.vertices, f = h.getHtmlElementObj(), d = _[0].x, p = _[0].y, m = _[1].x - d, y = _[1].y - p;
p = -p - y;
t.drawImage(f, d, p, m, y);
return 1;
};
return e;
})(n.default);
i.default = u;
e.exports = i.default;
}), {
"../../../utils/label/ttf": 175,
"../render-data": 164,
"../utils": 169
} ],
164: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = (function() {
function t(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
return function(e, i, n) {
i && t(e.prototype, i);
n && t(e, n);
return e;
};
})();
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
r(this, t);
this.vertices = [];
}
n(t, [ {
key: "dataLength",
get: function() {
return this.vertices.length;
},
set: function(t) {
for (var e = this.vertices.length; e < t; e++) this.vertices[e] = {
x: 0,
y: 0,
u: 0,
v: 0
};
}
} ]);
return t;
})();
i.default = s;
e.exports = i.default;
}), {} ],
165: [ (function(t, e, i) {
"use strict";
var n = c(t("../../../assembler")), r = t("../../../../components/CCSprite"), s = c(t("./simple")), o = c(t("./sliced")), a = c(t("./tiled"));
function c(t) {
return t && t.__esModule ? t : {
default: t
};
}
var l = {
getConstructor: function(t) {
var e = s.default;
switch (t.type) {
case r.Type.SLICED:
e = o.default;
break;

case r.Type.TILED:
e = a.default;
}
return e;
},
Simple: s.default,
Sliced: o.default,
Tiled: a.default
};
n.default.register(cc.Sprite, l);
}), {
"../../../../components/CCSprite": 61,
"../../../assembler": 153,
"./simple": 166,
"./sliced": 167,
"./tiled": 168
} ],
166: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("../../../assembler")), r = s(t("../render-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function a(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function c(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var l = t("../utils"), u = (function(t) {
c(e, t);
function e() {
o(this, e);
return a(this, t.apply(this, arguments));
}
e.prototype.init = function() {
this._renderData = new r.default();
this._renderData.dataLength = 2;
};
e.prototype.updateRenderData = function(t) {
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
};
e.prototype.updateUVs = function(t) {
var e = t.spriteFrame, i = this._renderData.vertices, n = e._rect;
if (e._rotated) {
var r = n.x, s = n.width, o = n.y, a = n.height;
i[0].u = r;
i[0].v = o;
i[1].u = a;
i[1].v = s;
} else {
var c = n.x, l = n.width, u = n.y, h = n.height;
i[0].u = c;
i[0].v = u;
i[1].u = l;
i[1].v = h;
}
};
e.prototype.updateVerts = function(t) {
var e = this._renderData, i = t.node, n = e.vertices, r = t.spriteFrame, s = i.width, o = i.height, a = i.anchorX * s, c = i.anchorY * o, l = void 0, u = void 0, h = void 0, _ = void 0;
if (t.trim) {
l = -a;
u = -c;
h = s;
_ = o;
} else {
var f = r._originalSize.width, d = r._originalSize.height, p = r._rect.width, m = r._rect.height, y = r._offset, v = s / f, g = o / d, C = y.x + (f - p) / 2, x = y.y + (d - m) / 2;
l = C * v - a;
u = x * g - c;
h = s;
_ = o;
}
if (r._rotated) {
n[0].y = l;
n[0].x = u;
n[1].y = h;
n[1].x = _;
} else {
n[0].x = l;
n[0].y = u;
n[1].x = h;
n[1].y = _;
}
e.vertDirty = !1;
};
e.prototype.draw = function(t, e) {
var i = e.node, n = e._spriteFrame, r = i._worldMatrix.m, s = r[0], o = r[1], a = r[4], c = r[5], u = r[12], h = r[13];
t.transform(s, o, a, c, u, h);
t.scale(1, -1);
n._rotated && t.rotate(-Math.PI / 2);
l.context.setGlobalAlpha(t, i.opacity / 255);
var _ = n._texture, f = this._renderData.vertices, d = l.getColorizedImage(_, i._color), p = f[0].x, m = f[0].y, y = f[1].x, v = f[1].y;
m = -m - v;
var g = f[0].u, C = f[0].v, x = f[1].u, A = f[1].v;
t.drawImage(d, g, C, x, A, p, m, y, v);
return 1;
};
return e;
})(n.default);
i.default = u;
e.exports = i.default;
}), {
"../../../assembler": 153,
"../render-data": 164,
"../utils": 169
} ],
167: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
s(t("../../../assembler"));
var n = s(t("../render-data")), r = s(t("./simple"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function a(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function c(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var l = t("../utils"), u = (function(t) {
c(e, t);
function e() {
o(this, e);
return a(this, t.apply(this, arguments));
}
e.prototype.init = function() {
this._renderData = new n.default();
this._renderData.dataLength = 4;
};
e.prototype.updateUVs = function(t) {
var e = t.spriteFrame, i = this._renderData, n = e._rect, r = e.insetLeft, s = e.insetRight, o = n.width - r - s, a = e.insetTop, c = e.insetBottom, l = n.height - a - c, u = i.vertices;
if (e._rotated) {
u[0].u = n.x;
u[1].u = c + n.x;
u[2].u = c + l + n.x;
u[3].u = n.x + n.height;
u[3].v = n.y;
u[2].v = r + n.y;
u[1].v = r + o + n.y;
u[0].v = n.y + n.width;
} else {
u[0].u = n.x;
u[1].u = r + n.x;
u[2].u = r + o + n.x;
u[3].u = n.x + n.width;
u[3].v = n.y;
u[2].v = a + n.y;
u[1].v = a + l + n.y;
u[0].v = n.y + n.height;
}
};
e.prototype.updateVerts = function(t) {
var e = this._renderData.vertices, i = t.node, n = i.width, r = i.height, s = i.anchorX * n, o = i.anchorY * r, a = t.spriteFrame, c = a.insetLeft, l = a.insetRight, u = a.insetTop, h = a.insetBottom, _ = n - c - l, f = r - u - h, d = n / (c + l), p = r / (u + h);
d = isNaN(d) || d > 1 ? 1 : d;
p = isNaN(p) || p > 1 ? 1 : p;
_ = _ < 0 ? 0 : _;
f = f < 0 ? 0 : f;
if (a._rotated) {
e[0].y = -s;
e[0].x = -o;
e[1].y = l * d - s;
e[1].x = h * p - o;
e[2].y = e[1].y + _;
e[2].x = e[1].x + f;
e[3].y = n - s;
e[3].x = r - o;
} else {
e[0].x = -s;
e[0].y = -o;
e[1].x = c * d - s;
e[1].y = h * p - o;
e[2].x = e[1].x + _;
e[2].y = e[1].y + f;
e[3].x = n - s;
e[3].y = r - o;
}
t._vertsDirty = !1;
};
e.prototype.draw = function(t, e) {
var i = e.node, n = e._spriteFrame, r = i._worldMatrix.m, s = r[0], o = r[1], a = r[4], c = r[5], u = r[12], h = r[13];
t.transform(s, o, a, c, u, h);
t.scale(1, -1);
n._rotated && t.rotate(-Math.PI / 2);
l.context.setGlobalAlpha(t, i.opacity / 255);
for (var _ = n._texture, f = this._renderData.vertices, d = l.getColorizedImage(_, i._color), p = 0, m = void 0, y = void 0, v = void 0, g = void 0, C = void 0, x = void 0, A = void 0, b = void 0, S = void 0, w = void 0, T = void 0, B = void 0, E = 0; E < 3; ++E) {
g = f[E];
v = f[E + 1];
for (var M = 0; M < 3; ++M) {
m = f[M];
y = f[M + 1];
C = m.x;
x = g.y;
A = y.x - C;
x = -x - (b = v.y - x);
S = m.u;
w = v.v;
T = y.u - S;
B = g.v - w;
if (T > 0 && B > 0 && A > 0 && b > 0) {
t.drawImage(d, S, w, T, B, C, x, A, b);
p++;
}
}
}
return p;
};
return e;
})(r.default);
i.default = u;
e.exports = i.default;
}), {
"../../../assembler": 153,
"../render-data": 164,
"../utils": 169,
"./simple": 166
} ],
168: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../assembler"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../utils"), c = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype.draw = function(t, e) {
var i = e.node, n = i._worldMatrix.m, r = n[0], s = n[1], o = n[4], c = n[5], l = n[12], u = n[13];
t.transform(r, s, o, c, l, u);
t.scale(1, -1);
a.context.setGlobalAlpha(t, i.opacity / 255);
var h = e.spriteFrame, _ = h._rect, f = h._texture, d = _.x, p = _.y, m = h._rotated ? _.height : _.width, y = h._rotated ? _.width : _.height, v = a.getFrameCache(f, i._color, d, p, m, y), g = i.width, C = i.height, x = -i.anchorX * g, A = -i.anchorY * C;
A = -A - C;
t.translate(x, A);
t.fillStyle = t.createPattern(v, "repeat");
t.fillRect(0, 0, g, C);
return 1;
};
return e;
})(n.default);
i.default = c;
e.exports = i.default;
}), {
"../../../assembler": 153,
"../utils": 169
} ],
169: [ (function(t, e, i) {
"use strict";
function n(t, e, i, n, r, s, o) {
var a = e._image, c = t.getContext("2d");
t.width = s;
t.height = o;
c.globalCompositeOperation = "source-over";
c.fillStyle = "rgb(" + i.r + "," + i.g + "," + i.b + ")";
c.fillRect(0, 0, s, o);
c.globalCompositeOperation = "multiply";
c.drawImage(a, n, r, s, o, 0, 0, s, o);
c.globalCompositeOperation = "destination-atop";
c.drawImage(a, n, r, s, o, 0, 0, s, o);
return t;
}
var r = {
canvasMap: {},
canvasUsed: {},
canvasPool: [],
checking: !1,
check: function() {
var t = !1;
for (var e in this.canvasUsed) {
t = !0;
if (this.canvasUsed[e]) this.canvasUsed[e] = !1; else {
var i = this.canvasMap[e];
i.width = 0;
i.height = 0;
this.canvasPool.length < 32 && this.canvasPool.push(i);
delete this.canvasMap[e];
delete this.canvasUsed[e];
}
}
if (!t) {
cc.director.off(cc.Director.EVENT_AFTER_DRAW, this.check, this);
this.checking = !1;
}
},
startCheck: function() {
cc.director.on(cc.Director.EVENT_AFTER_DRAW, this.check, this);
this.checking = !0;
},
getCanvas: function(t) {
this.canvasUsed[t] = !0;
return this.canvasMap[t];
},
cacheCanvas: function(t, e) {
this.canvasMap[e] = t;
this.canvasUsed[e] = !0;
this.checking || this.startCheck();
},
dropImage: function(t) {
this.canvasMap[t] && delete this.canvasMap[t];
}
};
e.exports = {
getColorizedImage: function(t, e) {
if (!t) return null;
if (0 === t.width || 0 === t.height) return t._image;
var i = 16777215 & e._val;
if (16777215 === i) return t._image;
var s = t.url + i, o = r.getCanvas(s);
if (!o) {
n(o = r.canvasPool.pop() || document.createElement("canvas"), t, e, 0, 0, t.width, t.height);
r.cacheCanvas(o, s);
}
return o;
},
getFrameCache: function(t, e, i, s, o, a) {
if (!t || !t.url || i < 0 || s < 0 || o <= 0 || a <= 0) return null;
var c = t.url, l = !1, u = 16777215 & e._val;
if (16777215 !== u) {
c += u;
l = !0;
}
if (0 !== i || 0 !== s && o !== t.width && a !== t.height) {
c += "_" + i + "_" + s + "_" + o + "_" + a;
l = !0;
}
if (!l) return t._image;
var h = r.getCanvas(c);
if (!h) {
n(h = r.canvasPool.pop() || document.createElement("canvas"), t, e, i, s, o, a);
r.cacheCanvas(h, c);
}
return h;
},
dropColorizedImage: function(t, e) {
var i = t.url + (16777215 & e._val);
r.dropImage(i);
}
};
var s = -1, o = {
setGlobalAlpha: function(t, e) {
if (s !== e) {
s = e;
t.globalAlpha = s;
}
},
reset: function() {
s = -1;
}
};
e.exports.context = o;
}), {} ],
170: [ (function(t, e, i) {
"use strict";
var n = a(t("../../renderer/config")), r = a(t("../../renderer/gfx")), s = a(t("../../renderer/core/input-assembler")), o = a(t("../../renderer/core/pass"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t) {
return {
defaultTexture: new r.default.Texture2D(t, {
images: [],
width: 128,
height: 128,
wrapS: r.default.WRAP_REPEAT,
wrapT: r.default.WRAP_REPEAT,
format: r.default.TEXTURE_FMT_RGB8,
mipmap: !1
}),
programTemplates: [],
programChunks: {}
};
}
cc.renderer = e.exports = {
Texture2D: null,
InputAssembler: s.default,
Pass: o.default,
renderEngine: null,
canvas: null,
device: null,
scene: null,
drawCalls: 0,
_handle: null,
_cameraNode: null,
_camera: null,
_forward: null,
_flow: null,
initWebGL: function(e, i) {
t("./webgl/assemblers");
t("./webgl/model-batcher");
this.Texture2D = r.default.Texture2D;
this.canvas = e;
this._flow = cc.RenderFlow;
this.device = r.default.Device.getInstance();
this.scene = new renderer.Scene();
var s = c(this.device);
this._forward = new renderer.ForwardRenderer(this.device, s);
var o = new renderer.RenderFlow(this.device, this.scene, this._forward);
this._flow.init(o);
n.default.addStage("shadowcast");
n.default.addStage("opaque");
n.default.addStage("transparent");
},
initCanvas: function(e) {
var i = t("./canvas"), n = t("./canvas/Texture2D"), r = t("./canvas/Device");
this.Device = r;
this.Texture2D = n;
this.canvas = e;
this.device = new r(e);
this._camera = {
a: 1,
b: 0,
c: 0,
d: 1,
tx: 0,
ty: 0
};
this._handle = new i.RenderComponentHandle(this.device, this._camera);
this._forward = new i.ForwardRenderer();
this._flow = cc.RenderFlow;
this._flow.init(this._handle, this._forward);
},
updateCameraViewport: function() {
if (cc.director) {
var t = cc.director.getScene();
t && t.setScale(1, 1, 1);
}
if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
var e = cc.view.getViewportRect();
this.device.setViewport(e.x, e.y, e.width, e.height);
this._camera.a = cc.view.getScaleX();
this._camera.d = cc.view.getScaleY();
this._camera.tx = e.x;
this._camera.ty = e.y + e.height;
}
},
render: function(t, e) {
this.device.resetDrawCalls();
if (t) {
this._flow.render(t, e);
this.drawCalls = this.device.getDrawCalls();
}
},
clear: function() {
this._handle.reset();
this._forward.clear();
}
};
}), {
"../../renderer/config": 240,
"../../renderer/core/input-assembler": 242,
"../../renderer/core/pass": 243,
"../../renderer/gfx": 246,
"../../renderer/renderers/forward-renderer": void 0,
"../../renderer/scene/scene": void 0,
"./canvas": 157,
"./canvas/Device": 154,
"./canvas/Texture2D": 155,
"./webgl/assemblers": 177,
"./webgl/model-batcher": void 0
} ],
171: [ (function(t, e, i) {
"use strict";
var n = 0, r = 1 << n++, s = 1 << n++, o = 1 << n++, a = 1 << n++, c = o | a, l = 1 << n++, u = 1 << n++, h = 1 << n++, _ = u | h, f = 1 << n++, d = 1 << n++, p = 1 << n++, m = 1 << n++, y = void 0, v = void 0, g = 0;
function C() {
this._func = T;
this._next = null;
}
var x = C.prototype;
x._doNothing = function() {};
x._localTransform = function(t) {
t._updateLocalMatrix();
t._renderFlag &= ~o;
this._next._func(t);
};
x._worldTransform = function(t) {
y.worldMatDirty++;
var e = t._matrix, i = t._trs, n = e.m;
n[12] = i[0];
n[13] = i[1];
n[14] = i[2];
t._mulMat(t._worldMatrix, t._parent._worldMatrix, e);
t._renderFlag &= ~a;
this._next._func(t);
y.worldMatDirty--;
};
x._opacity = function(t) {
y.parentOpacityDirty++;
t._renderFlag &= ~u;
this._next._func(t);
y.parentOpacityDirty--;
};
x._color = function(t) {
var e = t._renderComponent;
e && e._updateColor();
t._renderFlag &= ~h;
this._next._func(t);
};
x._updateRenderData = function(t) {
var e = t._renderComponent;
e._assembler.updateRenderData(e);
t._renderFlag &= ~l;
this._next._func(t);
};
x._render = function(t) {
var e = t._renderComponent;
e._checkBacth(y, t._cullingMask);
e._assembler.fillBuffers(e, y);
this._next._func(t);
};
x._children = function(t) {
for (var e = g, i = y, n = i.parentOpacity, r = i.parentOpacity *= t._opacity / 255, s = (i.worldMatDirty ? a : 0) | (i.parentOpacityDirty ? _ : 0), o = t._children, c = 0, l = o.length; c < l; c++) {
var u = o[c];
u._renderFlag |= s;
if (u._activeInHierarchy && 0 !== u._opacity) {
g = u._cullingMask = 0 === u.groupIndex ? e : 1 << u.groupIndex;
var h = u._color._val;
u._color._fastSetA(u._opacity * r);
b[u._renderFlag]._func(u);
u._color._val = h;
}
}
i.parentOpacity = n;
this._next._func(t);
};
x._postRender = function(t) {
var e = t._renderComponent;
e._checkBacth(y, t._cullingMask);
e._assembler.postFillBuffers(e, y);
this._next._func(t);
};
var A = new C();
A._func = A._doNothing;
A._next = A;
var b = {};
function S(t, e) {
var i = new C();
i._next = e || A;
switch (t) {
case r:
case s:
i._func = i._doNothing;
break;

case o:
i._func = i._localTransform;
break;

case a:
i._func = i._worldTransform;
break;

case u:
i._func = i._opacity;
break;

case h:
i._func = i._color;
break;

case l:
i._func = i._updateRenderData;
break;

case f:
i._func = i._render;
break;

case d:
i._func = i._children;
break;

case p:
i._func = i._postRender;
}
return i;
}
function w(t) {
for (var e = null, i = m; i > 0; ) {
i & t && (e = S(i, e));
i >>= 1;
}
return e;
}
function T(t) {
var e = t._renderFlag;
(b[e] = w(e))._func(t);
}
C.flows = b;
C.createFlow = S;
C.visitRootNode = function(t) {
g = 1 << t.groupIndex;
if (t._renderFlag & a) {
y.worldMatDirty++;
t._calculWorldMatrix();
t._renderFlag &= ~a;
b[t._renderFlag]._func(t);
y.worldMatDirty--;
} else b[t._renderFlag]._func(t);
};
C.render = function(t, e) {
y.reset();
y.walking = !0;
C.visitRootNode(t);
y.terminate();
y.walking = !1;
v.render(y._renderScene, e);
};
C.init = function(t, e) {
y = t;
v = e;
b[0] = A;
for (var i = 1; i < m; i++) b[i] = new C();
};
C.getBachther = function() {
return y;
};
C.FLAG_DONOTHING = r;
C.FLAG_BREAK_FLOW = s;
C.FLAG_LOCAL_TRANSFORM = o;
C.FLAG_WORLD_TRANSFORM = a;
C.FLAG_TRANSFORM = c;
C.FLAG_OPACITY = u;
C.FLAG_COLOR = h;
C.FLAG_OPACITY_COLOR = _;
C.FLAG_UPDATE_RENDER_DATA = l;
C.FLAG_RENDER = f;
C.FLAG_CHILDREN = d;
C.FLAG_POST_RENDER = p;
C.FLAG_FINAL = m;
e.exports = cc.RenderFlow = C;
}), {} ],
172: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler-2d"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../../../utils/text-utils"), c = t("../../../platform/CCMacro"), l = t("../../../components/CCLabel").Overflow, u = t("../utils").shareLabelInfo, h = function() {
this.char = "";
this.valid = !0;
this.x = 0;
this.y = 0;
this.line = 0;
this.hash = "";
}, _ = cc.rect(), f = null, d = [], p = [], m = [], y = [], v = null, g = 0, C = 0, x = 0, A = 0, b = 0, S = 1, w = null, T = cc.size(), B = "", E = 0, M = 0, I = 0, R = 0, D = 0, P = 0, V = 0, L = !1, O = 0, F = 0, N = 0, G = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype.updateRenderData = function(t) {
if (t._vertsDirty && f !== t) {
f = t;
this._reserveQuads(t, t.string.toString().length);
this._updateFontFamily(t);
this._updateProperties(t);
this._updateLabelInfo(t);
this._updateContent();
this.updateWorldVerts(t);
f._actualFontSize = E;
f.node.setContentSize(T);
f._vertsDirty = !1;
f = null;
this._resetProperties();
}
};
e.prototype._updateFontScale = function() {
S = E / M;
};
e.prototype._updateFontFamily = function(t) {
var e = t.font;
w = e.spriteFrame;
v = e._fntConfig;
u.fontAtlas = e._fontDefDictionary;
};
e.prototype._updateLabelInfo = function() {
u.hash = "";
u.margin = 0;
};
e.prototype._updateProperties = function(t) {
B = t.string.toString();
E = t.fontSize;
M = v ? v.fontSize : t.fontSize;
I = t.horizontalAlign;
R = t.verticalAlign;
D = t.spacingX;
V = t.overflow;
P = t._lineHeight;
T.width = t.node.width;
T.height = t.node.height;
if (V === l.NONE) {
L = !1;
T.width += 2 * u.margin;
T.height += 2 * u.margin;
} else if (V === l.RESIZE_HEIGHT) {
L = !0;
T.height += 2 * u.margin;
} else L = t.enableWrapText;
u.lineHeight = P;
u.fontSize = E;
this._setupBMFontOverflowMetrics();
};
e.prototype._resetProperties = function() {
v = null;
w = null;
u.hash = "";
u.margin = 0;
};
e.prototype._updateContent = function() {
this._updateFontScale();
this._computeHorizontalKerningForText();
this._alignText();
};
e.prototype._computeHorizontalKerningForText = function() {
for (var t = B, e = t.length, i = v.kerningDict, n = d, r = -1, s = 0; s < e; ++s) {
var o = t.charCodeAt(s), a = i[r << 16 | 65535 & o] || 0;
n[s] = s < e - 1 ? a : 0;
r = o;
}
};
e.prototype._multilineTextWrap = function(t) {
for (var e = B.length, i = 0, n = 0, r = 0, s = 0, o = 0, c = 0, l = 0, h = null, _ = cc.v2(0, 0), f = 0; f < e; ) {
var p = B.charAt(f);
if ("\n" !== p) {
for (var y = t(B, f, e), x = c, w = l, E = o, M = n, I = !1, R = 0; R < y; ++R) {
var V = f + R;
if ("\r" !== (p = B.charAt(V))) if (h = u.fontAtlas.getLetterDefinitionForChar(p, u)) {
var G = M + h.offsetX * S - u.margin;
if (L && N > 0 && n > 0 && G + h.w * S > N && !a.isUnicodeSpace(p)) {
m.push(o);
o = 0;
i++;
n = 0;
r -= P * S + 0;
I = !0;
break;
}
_.x = G;
_.y = r - h.offsetY * S + u.margin;
this._recordLetterInfo(_, p, V, i);
V + 1 < d.length && V < e - 1 && (M += d[V + 1]);
M += h.xAdvance * S + D - 2 * u.margin;
E = _.x + h.w * S - u.margin;
x < _.y && (x = _.y);
w > _.y - h.h * S && (w = _.y - h.h * S);
} else {
this._recordPlaceholderInfo(V, p);
console.log("Can't find letter definition in texture atlas " + v.atlasName + " for letter:" + p);
} else this._recordPlaceholderInfo(V, p);
}
if (!I) {
n = M;
o = E;
c < x && (c = x);
l > w && (l = w);
s < o && (s = o);
f += y;
}
} else {
m.push(o);
o = 0;
i++;
n = 0;
r -= P * S + 0;
this._recordPlaceholderInfo(f, p);
f++;
}
}
m.push(o);
C = (g = i + 1) * P * S;
g > 1 && (C += 0 * (g - 1));
T.width = O;
T.height = F;
O <= 0 && (T.width = parseFloat(s.toFixed(2)) + 2 * u.margin);
F <= 0 && (T.height = parseFloat(C.toFixed(2)) + 2 * u.margin);
A = T.height;
b = 0;
c > 0 && (A = T.height + c);
l < -C && (b = C + l);
return !0;
};
e.prototype._getFirstCharLen = function() {
return 1;
};
e.prototype._getFirstWordLen = function(t, e, i) {
var n = t.charAt(e);
if (a.isUnicodeCJK(n) || "\n" === n || a.isUnicodeSpace(n)) return 1;
var r = 1, s = u.fontAtlas.getLetterDefinitionForChar(n, u);
if (!s) return r;
for (var o = s.xAdvance * S + D, c = e + 1; c < i; ++c) {
n = t.charAt(c);
if (!(s = u.fontAtlas.getLetterDefinitionForChar(n, u))) break;
if (o + s.offsetX * S + s.w * S > N && !a.isUnicodeSpace(n) && N > 0) return r;
o += s.xAdvance * S + D;
if ("\n" === n || a.isUnicodeSpace(n) || a.isUnicodeCJK(n)) break;
r++;
}
return r;
};
e.prototype._multilineTextWrapByWord = function() {
return this._multilineTextWrap(this._getFirstWordLen);
};
e.prototype._multilineTextWrapByChar = function() {
return this._multilineTextWrap(this._getFirstCharLen);
};
e.prototype._recordPlaceholderInfo = function(t, e) {
if (t >= p.length) {
var i = new h();
p.push(i);
}
p[t].char = e;
p[t].hash = e.charCodeAt(0) + u.hash;
p[t].valid = !1;
};
e.prototype._recordLetterInfo = function(t, e, i, n) {
if (i >= p.length) {
var r = new h();
p.push(r);
}
var s = e.charCodeAt(0) + u.hash;
p[i].line = n;
p[i].char = e;
p[i].hash = s;
p[i].valid = u.fontAtlas.getLetter(s).valid;
p[i].x = t.x;
p[i].y = t.y;
};
e.prototype._alignText = function() {
C = 0;
m.length = 0;
this._multilineTextWrapByWord();
this._computeAlignmentOffset();
V === l.SHRINK && E > 0 && this._isVerticalClamp() && this._shrinkLabelToContentSize(this._isVerticalClamp);
this._updateQuads() || V === l.SHRINK && this._shrinkLabelToContentSize(this._isHorizontalClamp);
};
e.prototype._scaleFontSizeDown = function(t) {
var e = !0;
if (!t) {
t = .1;
e = !1;
}
E = t;
e && this._updateContent();
};
e.prototype._shrinkLabelToContentSize = function(t) {
for (var e = E, i = 0, n = !0; t(); ) {
var r = e - ++i;
n = !1;
if (r <= 0) break;
S = r / M;
this._multilineTextWrapByWord();
this._computeAlignmentOffset();
}
n || e - i >= 0 && this._scaleFontSizeDown(e - i);
};
e.prototype._isVerticalClamp = function() {
return C > T.height;
};
e.prototype._isHorizontalClamp = function() {
for (var t = !1, e = 0, i = B.length; e < i; ++e) {
var n = p[e];
if (n.valid) {
var r = u.fontAtlas.getLetter(n.hash), s = n.x + r.w * S, o = n.line;
if (O > 0) if (L) {
if (m[o] > T.width && (s > T.width || s < 0)) {
t = !0;
break;
}
} else if (s > T.width) {
t = !0;
break;
}
}
}
return t;
};
e.prototype._isHorizontalClamped = function(t, e) {
var i = m[e], n = t > T.width || t < 0;
return L ? i > T.width && n : n;
};
e.prototype._updateQuads = function() {
var t = u.fontAtlas.getTexture(), e = f.node;
this.verticesCount = this.indicesCount = 0;
for (var i = T, n = e._anchorPoint.x * i.width, r = e._anchorPoint.y * i.height, s = !0, o = 0, a = B.length; o < a; ++o) {
var c = p[o];
if (c.valid) {
var h = u.fontAtlas.getLetter(c.hash);
_.height = h.h;
_.width = h.w;
_.x = h.u;
_.y = h.v;
var d = c.y + x;
if (F > 0) {
if (d > A) {
var m = d - A;
_.y += m;
_.height -= m;
d -= m;
}
d - h.h * S < b && V === l.CLAMP && (_.height = d < b ? 0 : d - b);
}
var v = c.line, g = c.x + h.w / 2 * S + y[v];
if (O > 0 && this._isHorizontalClamped(g, v)) if (V === l.CLAMP) _.width = 0; else if (V === l.SHRINK) {
if (T.width > h.w) {
s = !1;
break;
}
_.width = 0;
}
if (_.height > 0 && _.width > 0) {
var C = this._determineRect(_), w = c.x + y[c.line];
this.appendQuad(f, t, _, C, w - n, d - r, S);
}
}
}
this._quadsUpdated(f);
return s;
};
e.prototype._determineRect = function(t) {
var e = w.isRotated(), i = w._originalSize, n = w._rect, r = w._offset, s = r.x + (i.width - n.width) / 2, o = r.y - (i.height - n.height) / 2;
if (e) {
var a = t.x;
t.x = n.x + n.height - t.y - t.height - o;
t.y = a + n.y - s;
t.y < 0 && (t.height = t.height + o);
} else {
t.x += n.x - s;
t.y += n.y + o;
}
return e;
};
e.prototype._computeAlignmentOffset = function() {
y.length = 0;
switch (I) {
case c.TextAlignment.LEFT:
for (var t = 0; t < g; ++t) y.push(0);
break;

case c.TextAlignment.CENTER:
for (var e = 0, i = m.length; e < i; e++) y.push((T.width - m[e]) / 2);
break;

case c.TextAlignment.RIGHT:
for (var n = 0, r = m.length; n < r; n++) y.push(T.width - m[n]);
}
x = (T.height + C) / 2;
if (R !== c.VerticalTextAlignment.TOP) {
var s = Math.max(P - M, 0) * S;
R === c.VerticalTextAlignment.BOTTOM ? x -= s : x -= s / 2;
}
};
e.prototype._setupBMFontOverflowMetrics = function() {
var t = T.width, e = T.height;
V === l.RESIZE_HEIGHT && (e = 0);
if (V === l.NONE) {
t = 0;
e = 0;
}
O = t;
F = e;
N = t;
};
e.prototype.updateWorldVerts = function() {};
e.prototype.appendQuad = function(t, e, i, n, r, s, o) {};
e.prototype._quadsUpdated = function(t) {};
e.prototype._reserveQuads = function() {};
return e;
})(n.default);
i.default = G;
e.exports = i.default;
}), {
"../../../components/CCLabel": 57,
"../../../platform/CCMacro": 131,
"../../../utils/text-utils": 206,
"../../assembler-2d": 152,
"../utils": 176
} ],
173: [ (function(t, e, i) {
"use strict";
function n() {
this._rect = null;
this.uv = [];
this._texture = null;
this._original = null;
}
n.prototype = {
constructor: n,
getRect: function() {
return cc.rect(this._rect);
},
setRect: function(t) {
this._rect = t;
this._texture && this._calculateUV();
},
_setDynamicAtlasFrame: function(t) {
if (t) {
this._original = {
_texture: this._texture,
_x: this._rect.x,
_y: this._rect.y
};
this._texture = t.texture;
this._rect.x = t.x;
this._rect.y = t.y;
this._calculateUV();
}
},
_resetDynamicAtlasFrame: function() {
if (this._original) {
this._rect.x = this._original._x;
this._rect.y = this._original._y;
this._texture = this._original._texture;
this._original = null;
this._calculateUV();
}
},
_refreshTexture: function(t) {
this._texture = t;
this._rect = cc.rect(0, 0, t.width, t.height);
this._calculateUV();
},
_calculateUV: function() {
var t = this._rect, e = this._texture, i = this.uv, n = e.width, r = e.height, s = 0 === n ? 0 : t.x / n, o = 0 === n ? 0 : (t.x + t.width) / n, a = 0 === r ? 0 : (t.y + t.height) / r, c = 0 === r ? 0 : t.y / r;
i[0] = s;
i[1] = a;
i[2] = o;
i[3] = a;
i[4] = s;
i[5] = c;
i[6] = o;
i[7] = c;
}
};
e.exports = n;
}), {} ],
174: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../webgl/assemblers/label/2d/bmfont"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../../../components/CCLabel"), c = t("../../../components/CCLabelOutline"), l = t("../../../utils/text-utils"), u = t("../../../components/CCComponent"), h = t("../../../assets/CCRenderTexture"), _ = cc.js.isChildClassOf(c, u), f = t("../utils").getFontFamily, d = t("../utils").shareLabelInfo, p = cc.BitmapFont.FontLetterDefinition, m = cc.BitmapFont.FontAtlas, y = cc.Color.WHITE, v = 2, g = (1 / 255).toFixed(3);
function C(t, e) {
this._texture = null;
this._labelInfo = e;
this._char = t;
this._hash = null;
this._data = null;
this._canvas = null;
this._context = null;
this._width = 0;
this._height = 0;
this._offsetY = 0;
this._hash = t.charCodeAt(0) + e.hash;
}
C.prototype = {
constructor: C,
updateRenderData: function() {
this._updateProperties();
this._updateTexture();
},
_updateProperties: function() {
this._texture = new cc.Texture2D();
this._data = a._canvasPool.get();
this._canvas = this._data.canvas;
this._context = this._data.context;
this._context.font = this._labelInfo.fontDesc;
var t = l.safeMeasureText(this._context, this._char);
this._width = parseFloat(t.toFixed(2)) + 2 * this._labelInfo.margin;
this._height = (1 + l.BASELINE_RATIO) * this._labelInfo.fontSize + 2 * this._labelInfo.margin;
this._offsetY = -this._labelInfo.fontSize * l.BASELINE_RATIO / 2;
this._canvas.width !== this._width && (this._canvas.width = this._width);
this._canvas.height !== this._height && (this._canvas.height = this._height);
this._texture.initWithElement(this._canvas);
},
_updateTexture: function() {
var t = this._context, e = this._labelInfo, i = this._canvas.width, n = this._canvas.height, r = i / 2, s = n / 2 + this._labelInfo.fontSize * l.MIDDLE_RATIO, o = e.color;
t.textAlign = "center";
t.textBaseline = "alphabetic";
t.clearRect(0, 0, i, n);
t.fillStyle = "rgba(" + o.r + ", " + o.g + ", " + o.b + ", " + g + ")";
t.fillRect(0, 0, i, n);
t.font = e.fontDesc;
t.lineJoin = "round";
t.fillStyle = "rgba(" + o.r + ", " + o.g + ", " + o.b + ", 1)";
if (e.isOutlined) {
var a = e.out || y;
t.strokeStyle = "rgba(" + a.r + ", " + a.g + ", " + a.b + ", " + a.a / 255 + ")";
t.lineWidth = 2 * e.margin;
t.strokeText(this._char, r, s);
}
t.fillText(this._char, r, s);
this._texture.handleLoadedTexture();
},
destroy: function() {
this._texture.destroy();
this._texture = null;
a._canvasPool.put(this._data);
}
};
function x(t, e) {
var i = new h();
i.initWithSize(t, e);
i.update();
this._fontDefDictionary = new m(i);
this._x = v;
this._y = v;
this._nexty = v;
this._width = t;
this._height = e;
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this);
}
cc.js.mixin(x.prototype, {
insertLetterTexture: function(t) {
var e = t._texture, i = e.width, n = e.height;
if (this._x + i + v > this._width) {
this._x = v;
this._y = this._nexty;
}
this._y + n > this._nexty && (this._nexty = this._y + n + v);
if (this._nexty > this._height) return null;
this._fontDefDictionary._texture.drawTextureAt(e, this._x, this._y);
this._dirty = !0;
var r = new p();
r.u = this._x;
r.v = this._y;
r.texture = this._fontDefDictionary._texture;
r.valid = !0;
r.w = t._width;
r.h = t._height;
r.xAdvance = t._width;
r.offsetY = t._offsetY;
this._x += i + v;
this._fontDefDictionary.addLetterDefinitions(t._hash, r);
return r;
},
update: function() {
if (this._dirty) {
this._fontDefDictionary._texture.update();
this._dirty = !1;
}
},
reset: function() {
this._x = v;
this._y = v;
this._nexty = v;
for (var t = this._fontDefDictionary._letterDefinitions, e = 0, i = t.length; e < i; e++) {
var n = t[e];
n.isValid && n.destroy();
}
this._fontDefDictionary.clear();
},
destroy: function() {
this.reset();
this._fontDefDictionary._texture.destroy();
this._fontDefDictionary._texture = null;
},
beforeSceneLoad: function() {
this.clearAllCache();
},
clearAllCache: function() {
this.destroy();
var t = new h();
t.initWithSize(this._width, this._height);
t.update();
this._fontDefDictionary._texture = t;
},
getLetter: function(t) {
return this._fontDefDictionary._letterDefinitions[t];
},
getTexture: function() {
return this._fontDefDictionary.getTexture();
},
getLetterDefinitionForChar: function(t, e) {
var i = t.charCodeAt(0) + e.hash, n = this._fontDefDictionary._letterDefinitions[i];
if (!n) {
var r = new C(t, e);
r.updateRenderData();
n = this.insertLetterTexture(r);
r.destroy();
}
return n;
}
});
function A(t) {
var e = t.color.toHEX("#rrggbb"), i = "";
t.isOutlined && (i = i + t.margin + t.out.toHEX("#rrggbb"));
return "" + t.fontSize + t.fontFamily + e + i;
}
var b = null, S = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype._getAssemblerData = function() {
if (!b) {
b = new x(2048, 2048);
cc.Label._shareAtlas = b;
}
return b.getTexture();
};
e.prototype._updateFontFamily = function(t) {
d.fontAtlas = b;
d.fontFamily = f(t);
var e = _ && t.getComponent(c);
if (e && e.enabled) {
d.isOutlined = !0;
d.margin = e.width;
d.out = e.color.clone();
d.out.a = e.color.a * t.node.color.a / 255;
} else {
d.isOutlined = !1;
d.margin = 0;
}
};
e.prototype._updateLabelInfo = function(t) {
d.fontDesc = this._getFontDesc();
d.color = t.node.color;
d.hash = A(d);
};
e.prototype._getFontDesc = function() {
var t = d.fontSize.toString() + "px ";
0;
return t += d.fontFamily;
};
e.prototype._computeHorizontalKerningForText = function() {};
e.prototype._determineRect = function(t) {
return !1;
};
return e;
})(n.default);
i.default = S;
e.exports = i.default;
}), {
"../../../assets/CCRenderTexture": 29,
"../../../components/CCComponent": 55,
"../../../components/CCLabel": 57,
"../../../components/CCLabelOutline": 58,
"../../../utils/text-utils": 206,
"../../webgl/assemblers/label/2d/bmfont": 178,
"../utils": 176
} ],
175: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler-2d"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../../../utils/text-utils"), c = t("../../../platform/CCMacro"), l = t("../../../components/CCLabel"), u = t("../../../components/CCLabelOutline"), h = t("../../../components/CCLabelShadow"), _ = l.Overflow, f = t("../utils").deleteFromDynamicAtlas, d = t("../utils").getFontFamily, p = (1 / 255).toFixed(3), m = null, y = null, v = null, g = "", C = "", x = 0, A = 0, b = [], S = cc.Size.ZERO, w = 0, T = 0, B = 0, E = null, M = "", I = _.NONE, R = !1, D = null, P = cc.Color.WHITE, V = null, L = cc.Color.BLACK, O = cc.rect(), F = cc.Size.ZERO, N = cc.Size.ZERO, G = !1, z = !1, k = !1, U = 0, j = cc.Vec2.ZERO, W = 0, H = void 0, q = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype._getAssemblerData = function() {
(H = l._canvasPool.get()).canvas.width = H.canvas.height = 1;
return H;
};
e.prototype._resetAssemblerData = function(t) {
t && l._canvasPool.put(t);
};
e.prototype.updateRenderData = function(e) {
t.prototype.updateRenderData.call(this, e);
if (e._vertsDirty) {
this._updateFontFamily(e);
this._updateProperties(e);
this._calculateLabelFont();
this._calculateSplitedStrings();
this._updateLabelDimensions();
this._calculateTextBaseline();
this._updateTexture(e);
this._calDynamicAtlas(e);
e._actualFontSize = x;
e.node.setContentSize(N);
this.updateVerts(e);
e._vertsDirty = !1;
m = null;
y = null;
v = null;
}
};
e.prototype.updateVerts = function() {};
e.prototype._updatePaddingRect = function() {
var t = 0, e = 0, i = 0, n = 0, r = 0;
F.width = F.height = 0;
if (D) {
t = e = i = n = r = D.width;
F.width = F.height = 2 * r;
}
if (V) {
var s = V.blur + r;
i = Math.max(i, -V._offset.x + s);
n = Math.max(n, V._offset.x + s);
t = Math.max(t, V._offset.y + s);
e = Math.max(e, -V._offset.y + s);
}
if (z) {
var o = A * Math.tan(.20943951);
n += o;
F.width += o;
}
O.x = i;
O.y = t;
O.width = i + n;
O.height = t + e;
};
e.prototype._updateFontFamily = function(t) {
M = d(t);
};
e.prototype._updateProperties = function(t) {
var e = t._assemblerData;
m = e.context;
y = e.canvas;
v = t._frame._original ? t._frame._original._texture : t._frame._texture;
C = t.string.toString();
x = t._fontSize;
U = (A = x) / 8;
I = t.overflow;
S.width = t.node.width;
S.height = t.node.height;
N = t.node.getContentSize();
w = t._lineHeight;
T = t.horizontalAlign;
B = t.verticalAlign;
E = t.node.color;
G = t._isBold;
z = t._isItalic;
k = t._isUnderline;
R = I !== _.NONE && (I === _.RESIZE_HEIGHT || t.enableWrapText);
(D = (D = u && t.getComponent(u)) && D.enabled && D.width > 0 ? D : null) && P.set(D.color);
if (V = (V = h && t.getComponent(h)) && V.enabled ? V : null) {
L.set(V.color);
L.a = L.a * t.node.color.a / 255;
}
this._updatePaddingRect();
};
e.prototype._calculateFillTextStartPosition = function() {
var t = 0;
T === c.TextAlignment.RIGHT ? t = S.width - O.width : T === c.TextAlignment.CENTER && (t = (S.width - O.width) / 2);
var e = 0, i = this._getLineHeight() * (b.length - 1);
e = B === c.VerticalTextAlignment.TOP ? x : B === c.VerticalTextAlignment.CENTER ? .5 * (S.height - i) + x * a.MIDDLE_RATIO - O.height / 2 : S.height - i - x * a.BASELINE_RATIO - O.height;
return cc.v2(t + O.x, e + O.y);
};
e.prototype._setupOutline = function() {
m.strokeStyle = "rgba(" + P.r + ", " + P.g + ", " + P.b + ", " + P.a / 255 + ")";
m.lineWidth = 2 * D.width;
};
e.prototype._setupShadow = function() {
m.shadowColor = "rgba(" + L.r + ", " + L.g + ", " + L.b + ", " + L.a / 255 + ")";
m.shadowBlur = V.blur;
m.shadowOffsetX = V.offset.x;
m.shadowOffsetY = -V.offset.y;
};
e.prototype._drawUnderline = function(t) {
if (D) {
this._setupOutline();
m.strokeRect(j.x, j.y, t, U);
}
m.lineWidth = U;
m.fillStyle = "rgba(" + E.r + ", " + E.g + ", " + E.b + ", " + E.a / 255 + ")";
m.fillRect(j.x, j.y, t, U);
};
e.prototype._updateTexture = function() {
m.clearRect(0, 0, y.width, y.height);
var t = D ? P : E;
m.fillStyle = "rgba(" + t.r + ", " + t.g + ", " + t.b + ", " + p + ")";
m.fillRect(0, 0, y.width, y.height);
m.font = g;
var e = this._calculateFillTextStartPosition(), i = this._getLineHeight();
m.lineJoin = "round";
m.fillStyle = "rgba(" + E.r + ", " + E.g + ", " + E.b + ", 1)";
var n = b.length > 1, r = this._measureText(m), s = 0, o = 0;
V && this._setupShadow();
D && this._setupOutline();
for (var a = 0; a < b.length; ++a) {
s = e.x;
o = e.y + a * i;
if (V && n) {
D && m.strokeText(b[a], s, o);
m.fillText(b[a], s, o);
}
if (k) {
W = r(b[a]);
T === c.TextAlignment.RIGHT ? j.x = e.x - W : T === c.TextAlignment.CENTER ? j.x = e.x - W / 2 : j.x = e.x;
j.y = o;
this._drawUnderline(W);
}
}
V && n && (m.shadowColor = "transparent");
for (var l = 0; l < b.length; ++l) {
s = e.x;
o = e.y + l * i;
D && m.strokeText(b[l], s, o);
m.fillText(b[l], s, o);
}
V && (m.shadowColor = "transparent");
v.handleLoadedTexture();
};
e.prototype._calDynamicAtlas = function(t) {
if (t.cacheMode === l.CacheMode.BITMAP) {
var e = t._frame;
f(t, e);
e._original || e.setRect(cc.rect(0, 0, y.width, y.height));
this.packToDynamicAtlas(t, e);
}
};
e.prototype._updateLabelDimensions = function() {
var t = C.split("\n");
if (I === _.RESIZE_HEIGHT) {
var e = (b.length + a.BASELINE_RATIO) * this._getLineHeight();
S.height = e + O.height;
N.height = e + F.height;
} else if (I === _.NONE) {
b = t;
for (var i = 0, n = 0, r = 0; r < t.length; ++r) {
var s = a.safeMeasureText(m, t[r]);
i = i > s ? i : s;
}
n = (b.length + a.BASELINE_RATIO) * this._getLineHeight();
var o = parseFloat(i.toFixed(2)), c = parseFloat(n.toFixed(2));
S.width = o + O.width;
S.height = c + O.height;
N.width = o + F.width;
N.height = c + F.height;
}
S.width = Math.min(S.width, 2048);
S.height = Math.min(S.height, 2048);
y.width !== S.width && (y.width = S.width);
y.height !== S.height && (y.height = S.height);
};
e.prototype._calculateTextBaseline = function() {
var t = void 0;
t = T === c.TextAlignment.RIGHT ? "right" : T === c.TextAlignment.CENTER ? "center" : "left";
m.textAlign = t;
m.textBaseline = "alphabetic";
};
e.prototype._calculateSplitedStrings = function() {
var t = C.split("\n");
if (R) {
b = [];
for (var e = N.width, i = 0; i < t.length; ++i) {
var n = a.safeMeasureText(m, t[i]), r = a.fragmentText(t[i], n, e, this._measureText(m));
b = b.concat(r);
}
} else b = t;
};
e.prototype._getFontDesc = function() {
var t = x.toString() + "px ";
t += M;
G && (t = "bold " + t);
z && (t = "italic " + t);
return t;
};
e.prototype._getLineHeight = function() {
var t = w;
return 0 | (t = 0 === t ? x : t * x / A);
};
e.prototype._calculateParagraphLength = function(t, e) {
for (var i = [], n = 0; n < t.length; ++n) {
var r = a.safeMeasureText(e, t[n]);
i.push(r);
}
return i;
};
e.prototype._measureText = function(t) {
return function(e) {
return a.safeMeasureText(t, e);
};
};
e.prototype._calculateLabelFont = function() {
g = this._getFontDesc();
m.font = g;
if (I === _.SHRINK) {
var t = C.split("\n"), e = this._calculateParagraphLength(t, m), i = 0, n = 0, r = 0;
if (R) {
var s = N.width, o = N.height;
if (s < 0 || o < 0) {
g = this._getFontDesc();
m.font = g;
return;
}
n = o + 1;
r = s + 1;
for (var c = x + 1, l = "", u = !0, h = 0 | c; n > o || r > s; ) {
u ? c = h / 2 | 0 : h = c = h - 1;
if (c <= 0) {
cc.logID(4003);
break;
}
x = c;
g = this._getFontDesc();
m.font = g;
n = 0;
for (i = 0; i < t.length; ++i) {
var f = 0, d = a.safeMeasureText(m, t[i]);
l = a.fragmentText(t[i], d, s, this._measureText(m));
for (;f < l.length; ) {
r = a.safeMeasureText(m, l[f]);
n += this._getLineHeight();
++f;
}
}
if (u) if (n > o) h = 0 | c; else {
u = !1;
n = o + 1;
}
}
} else {
n = t.length * this._getLineHeight();
for (i = 0; i < t.length; ++i) r < e[i] && (r = e[i]);
var p = (S.width - O.width) / r, y = S.height / n;
x = A * Math.min(1, p, y) | 0;
g = this._getFontDesc();
m.font = g;
}
}
};
return e;
})(n.default);
i.default = q;
e.exports = i.default;
}), {
"../../../components/CCLabel": 57,
"../../../components/CCLabelOutline": 58,
"../../../components/CCLabelShadow": 59,
"../../../platform/CCMacro": 131,
"../../../utils/text-utils": 206,
"../../assembler-2d": 152,
"../utils": 176
} ],
176: [ (function(t, e, i) {
"use strict";
var n = t("./dynamic-atlas/manager"), r = cc.Color.WHITE, s = {
fontAtlas: null,
fontSize: 0,
lineHeight: 0,
hAlign: 0,
vAlign: 0,
hash: "",
fontFamily: "",
fontDesc: "Arial",
color: r,
isOutlined: !1,
out: r,
margin: 0
};
e.exports = {
deleteFromDynamicAtlas: function(t, e) {
if (e && e._original && n) {
n.deleteAtlasTexture(e);
e._resetDynamicAtlasFrame();
}
},
getFontFamily: function(t) {
if (t.useSystemFont) return t.fontFamily;
if (t.font) {
if (t.font._nativeAsset) return t.font._nativeAsset;
cc.loader.load(t.font.nativeUrl, (function(e, i) {
t.font._nativeAsset = i;
t._updateRenderData(!0);
}));
return "Arial";
}
return "Arial";
},
shareLabelInfo: s
};
}), {
"./dynamic-atlas/manager": void 0
} ],
177: [ (function(t, e, i) {
"use strict";
cc.assemblers = {};
t("./sprite");
t("./mask-assembler");
t("./graphics");
t("./label");
t("./motion-streak");
}), {
"./graphics": void 0,
"./label": 181,
"./mask-assembler": void 0,
"./motion-streak": void 0,
"./sprite": 188
} ],
178: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var o = 0, a = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.initData = function() {
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
};
e.prototype._reserveQuads = function(t, e) {
var i = 4 * e, n = 6 * e, r = this._renderData._flexBuffer;
r.reserve(i, n);
r.used(i, n);
for (var s = this._renderData.iDatas[0], a = 0, c = 0, l = n; a < l; a += 6, c += 4) {
s[a] = c;
s[a + 1] = c + 1;
s[a + 2] = c + 2;
s[a + 3] = c + 1;
s[a + 4] = c + 3;
s[a + 5] = c + 2;
}
o = 0;
};
e.prototype._quadsUpdated = function(t) {
o = 0;
this._renderData._flexBuffer.used(this.verticesCount, this.indicesCount);
};
e.prototype._getColor = function(t) {
return t.node._color._val;
};
e.prototype.appendQuad = function(t, e, i, n, r, s, a) {
var c = this._renderData, l = c.vDatas[0], u = c.uintVDatas[0];
this.verticesCount += 4;
this.indicesCount = this.verticesCount / 2 * 3;
var h = e.width, _ = e.height, f = i.width, d = i.height, p = this._getColor(t), m = void 0, y = void 0, v = void 0, g = void 0, C = this.floatsPerVert, x = o + this.uvOffset;
if (n) {
m = i.x / h;
v = (i.x + d) / h;
y = (i.y + f) / _;
g = i.y / _;
l[x] = m;
l[x + 1] = g;
l[x += C] = m;
l[x + 1] = y;
l[x += C] = v;
l[x + 1] = g;
l[x += C] = v;
l[x + 1] = y;
} else {
m = i.x / h;
v = (i.x + f) / h;
y = (i.y + d) / _;
g = i.y / _;
l[x] = m;
l[x + 1] = y;
l[x += C] = v;
l[x + 1] = y;
l[x += C] = m;
l[x + 1] = g;
l[x += C] = v;
l[x + 1] = g;
}
m = r;
v = r + f * a;
y = s - d * a;
g = s;
this.appendVerts(t, o, m, v, y, g);
for (var A = o + this.colorOffset, b = 0; b < 4; b++) {
u[A] = p;
A += C;
}
o += 4 * this.floatsPerVert;
};
e.prototype.appendVerts = function(t, e, i, n, r, s) {
var o = this._local, a = this.floatsPerVert;
o[e] = i;
o[e + 1] = r;
o[e += a] = n;
o[e + 1] = r;
o[e += a] = i;
o[e + 1] = s;
o[e += a] = n;
o[e + 1] = s;
};
e.prototype.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < c.length; h += u) {
var _ = c[h], f = c[h + 1];
l[h] = _ * i + f * r + o;
l[h + 1] = _ * n + f * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../utils/label/bmfont")).default);
i.default = a;
e.exports = i.default;
}), {
"../../../../utils/label/bmfont": 172
} ],
179: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
t("../../../../../platform/js"), t("./bmfont");
var o = t("../../../../utils/label/letter-font"), a = cc.color(255, 255, 255, 255), c = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.createData = function(t) {
return t.requestRenderData();
};
e.prototype._getColor = function(t) {
a._fastSetA(t.node._color.a);
return a._val;
};
e.prototype.updateColor = function(e) {
var i = this._getColor(e);
t.prototype.updateColor.call(this, e, i);
};
return e;
})(o);
i.default = c;
e.exports = i.default;
}), {
"../../../../../platform/js": 146,
"../../../../utils/label/letter-font": 174,
"./bmfont": 178
} ],
180: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../utils/label/ttf"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../../../../../components/CCLabelShadow"), c = cc.color(255, 255, 255, 255), l = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype.updateUVs = function(t) {
for (var e = this._renderData.vDatas[0], i = t._frame.uv, n = this.uvOffset, r = this.floatsPerVert, s = 0; s < 4; s++) {
var o = 2 * s, a = r * s + n;
e[a] = i[o];
e[a + 1] = i[o + 1];
}
};
e.prototype.updateColor = function(e) {
c._fastSetA(e.node._color.a);
var i = c._val;
t.prototype.updateColor.call(this, e, i);
};
e.prototype.updateVerts = function(t) {
var e = t.node, i = t._ttfTexture.width, n = t._ttfTexture.height, r = e.anchorX * e.width, s = e.anchorY * e.height, o = a && t.getComponent(a);
if (o && o._enabled) {
var c = (i - e.width) / 2, l = (n - e.height) / 2, u = o.offset;
-u.x > c ? r += i - e.width : c > u.x && (r += c - u.x);
-u.y > l ? s += n - e.height : l > u.y && (s += l - u.y);
}
var h = this._local;
h[0] = -r;
h[1] = -s;
h[2] = i - r;
h[3] = n - s;
this.updateUVs(t);
this.updateWorldVerts(t);
};
return e;
})(n.default);
i.default = l;
e.exports = i.default;
}), {
"../../../../../components/CCLabelShadow": 59,
"../../../../utils/label/ttf": 175
} ],
181: [ (function(t, e, i) {
"use strict";
var n = h(t("../../../assembler")), r = h(t("../../../../components/CCLabel")), s = h(t("./2d/ttf")), o = h(t("./2d/bmfont")), a = h(t("./2d/letter")), c = h(t("./3d/ttf")), l = h(t("./3d/bmfont")), u = h(t("./3d/letter"));
function h(t) {
return t && t.__esModule ? t : {
default: t
};
}
r.default._canvasPool = {
pool: [],
get: function() {
var t = this.pool.pop();
if (!t) {
var e = document.createElement("canvas");
t = {
canvas: e,
context: e.getContext("2d")
};
}
return t;
},
put: function(t) {
this.pool.length >= 32 || this.pool.push(t);
}
};
n.default.register(cc.Label, {
getConstructor: function(t) {
var e = t.node.is3DNode, i = e ? c.default : s.default;
t.font instanceof cc.BitmapFont ? i = e ? l.default : o.default : t.cacheMode === r.default.CacheMode.CHAR && (cc.sys.browserType === cc.sys.BROWSER_TYPE_WECHAT_GAME_SUB ? cc.warn("sorry, subdomain does not support CHAR mode currently!") : i = e ? u.default : a.default);
return i;
},
TTF: s.default,
Bmfont: o.default,
Letter: a.default,
TTF3D: c.default,
Bmfont3D: l.default,
Letter3D: u.default
});
}), {
"../../../../components/CCLabel": 57,
"../../../assembler": 153,
"./2d/bmfont": 178,
"./2d/letter": 179,
"./2d/ttf": 180,
"./3d/bmfont": void 0,
"./3d/letter": void 0,
"./3d/ttf": void 0
} ],
182: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../assembler-2d"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = t("../../../../../components/CCSprite").FillType, c = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype.updateRenderData = function(t) {
var e = t._spriteFrame;
if (e) {
this.packToDynamicAtlas(t, e);
if (t._vertsDirty) {
var i = t._fillStart, n = t._fillRange;
if (n < 0) {
i += n;
n = -n;
}
n = i + n;
i = (i = i > 1 ? 1 : i) < 0 ? 0 : i;
n = (n = n > 1 ? 1 : n) < 0 ? 0 : n;
var r = i + (n = (n -= i) < 0 ? 0 : n);
r = r > 1 ? 1 : r;
this.updateUVs(t, i, r);
this.updateVerts(t, i, r);
t._vertsDirty = !1;
}
}
};
e.prototype.updateUVs = function(t, e, i) {
var n = t._spriteFrame, r = n._texture.width, s = n._texture.height, o = n._rect, c = void 0, l = void 0, u = void 0, h = void 0, _ = void 0, f = void 0, d = void 0, p = void 0, m = void 0, y = void 0, v = void 0, g = void 0;
if (n._rotated) {
c = o.x / r;
l = (o.y + o.width) / s;
u = (o.x + o.height) / r;
h = o.y / s;
_ = d = c;
m = v = u;
p = g = l;
f = y = h;
} else {
c = o.x / r;
l = (o.y + o.height) / s;
u = (o.x + o.width) / r;
h = o.y / s;
_ = m = c;
d = v = u;
f = p = l;
y = g = h;
}
var C = this._renderData.vDatas[0], x = this.uvOffset, A = this.floatsPerVert;
switch (t._fillType) {
case a.HORIZONTAL:
C[x] = _ + (d - _) * e;
C[x + 1] = f + (p - f) * e;
C[x + A] = _ + (d - _) * i;
C[x + A + 1] = f + (p - f) * i;
C[x + 2 * A] = m + (v - m) * e;
C[x + 2 * A + 1] = y + (g - y) * e;
C[x + 3 * A] = m + (v - m) * i;
C[x + 3 * A + 1] = y + (g - y) * i;
break;

case a.VERTICAL:
C[x] = _ + (m - _) * e;
C[x + 1] = f + (y - f) * e;
C[x + A] = d + (v - d) * e;
C[x + A + 1] = p + (g - p) * e;
C[x + 2 * A] = _ + (m - _) * i;
C[x + 2 * A + 1] = f + (y - f) * i;
C[x + 3 * A] = d + (v - d) * i;
C[x + 3 * A + 1] = p + (g - p) * i;
break;

default:
cc.errorID(2626);
}
};
e.prototype.updateVerts = function(t, e, i) {
var n = t.node, r = n.width, s = n.height, o = n.anchorX * r, c = n.anchorY * s, l = -o, u = -c, h = r - o, _ = s - c, f = void 0;
switch (t._fillType) {
case a.HORIZONTAL:
f = l + (h - l) * i;
l = l + (h - l) * e;
h = f;
break;

case a.VERTICAL:
f = u + (_ - u) * i;
u = u + (_ - u) * e;
_ = f;
break;

default:
cc.errorID(2626);
}
var d = this._local;
d[0] = l;
d[1] = u;
d[2] = h;
d[3] = _;
this.updateWorldVerts(t);
};
return e;
})(n.default);
i.default = c;
e.exports = i.default;
}), {
"../../../../../components/CCSprite": 61,
"../../../../assembler-2d": 152
} ],
183: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var o = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.initData = function(t) {
this._local = [];
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
};
e.prototype.updateRenderData = function(t) {
this.packToDynamicAtlas(t, t._spriteFrame);
var e = t.spriteFrame;
if (e) {
var i = e.vertices;
if (i) {
this.verticesCount = i.x.length;
this.indicesCount = i.triangles.length;
var n = this._renderData._flexBuffer;
if (n.reserve(this.verticesCount, this.indicesCount)) {
this.updateIndices(i.triangles);
this.updateColor(t);
t._vertsDirty = !0;
}
n.used(this.verticesCount, this.indicesCount);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
this.updateWorldVerts(t);
t._vertsDirty = !1;
}
}
}
};
e.prototype.updateIndices = function(t) {
for (var e = this._renderData.iDatas[0], i = 0; i < t.length; i++) e[i] = t[i];
};
e.prototype.updateUVs = function(t) {
for (var e = t.spriteFrame.vertices, i = e.nu, n = e.nv, r = this.uvOffset, s = this.floatsPerVert, o = this._renderData.vDatas[0], a = 0; a < i.length; a++) {
var c = s * a + r;
o[c] = i[a];
o[c + 1] = n[a];
}
};
e.prototype.updateVerts = function(t) {
var e = t.node, i = Math.abs(e.width), n = Math.abs(e.height), r = e.anchorX * i, s = e.anchorY * n, o = t.spriteFrame, a = o.vertices, c = a.x, l = a.y, u = o._originalSize.width, h = o._originalSize.height, _ = o._rect.width, f = o._rect.height, d = o._offset.x + (u - _) / 2, p = o._offset.y + (h - f) / 2, m = i / (t.trim ? _ : u), y = n / (t.trim ? f : h), v = this._local;
if (t.trim) for (var g = 0, C = c.length; g < C; g++) {
var x = 2 * g;
v[x] = (c[g] - d) * m - r;
v[x + 1] = (h - l[g] - p) * y - s;
} else for (var A = 0, b = c.length; A < b; A++) {
var S = 2 * A;
v[S] = c[A] * m - r;
v[S + 1] = (h - l[A]) * y - s;
}
};
e.prototype.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0, _ = this.verticesCount; h < _; h++) {
var f = c[2 * h], d = c[2 * h + 1];
l[u * h] = f * i + d * r + o;
l[u * h + 1] = f * n + d * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = o;
e.exports = i.default;
}), {
"../../../../assembler-2d": 152
} ],
184: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../assembler-2d"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function o(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var a = 2 * Math.PI, c = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], l = [ 0, 0, 0, 0 ], u = [ 0, 0, 0, 0, 0, 0, 0, 0 ], h = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], _ = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], f = cc.v2(0, 0), d = [];
function p(t, e, i, n, r, s, o) {
var a = Math.sin(s), c = Math.cos(s), l = void 0, u = void 0;
if (0 !== Math.cos(s)) {
l = a / c;
if ((t - r.x) * c > 0) {
var h = r.y + l * (t - r.x);
o[0].x = t;
o[0].y = h;
}
if ((e - r.x) * c > 0) {
var _ = r.y + l * (e - r.x);
o[2].x = e;
o[2].y = _;
}
}
if (0 !== Math.sin(s)) {
u = c / a;
if ((n - r.y) * a > 0) {
var f = r.x + u * (n - r.y);
o[3].x = f;
o[3].y = n;
}
if ((i - r.y) * a > 0) {
var d = r.x + u * (i - r.y);
o[1].x = d;
o[1].y = i;
}
}
}
function m(t) {
var e = t.node, i = e.width, n = e.height, r = e.anchorX * i, s = e.anchorY * n, o = -r, a = -s, u = i - r, h = n - s, _ = l;
_[0] = o;
_[1] = a;
_[2] = u;
_[3] = h;
var p = t._fillCenter, m = f.x = Math.min(Math.max(0, p.x), 1) * (u - o) + o, y = f.y = Math.min(Math.max(0, p.y), 1) * (h - a) + a;
c[0].x = c[3].x = o;
c[1].x = c[2].x = u;
c[0].y = c[1].y = a;
c[2].y = c[3].y = h;
d.length = 0;
m !== _[0] && (d[0] = [ 3, 0 ]);
m !== _[2] && (d[2] = [ 1, 2 ]);
y !== _[1] && (d[1] = [ 0, 1 ]);
y !== _[3] && (d[3] = [ 2, 3 ]);
}
function y(t) {
var e = t._texture.width, i = t._texture.height, n = t._rect, r = void 0, s = void 0, o = void 0, a = void 0, c = u;
if (t._rotated) {
r = n.x / e;
s = (n.x + n.height) / e;
o = n.y / i;
a = (n.y + n.width) / i;
c[0] = c[2] = r;
c[4] = c[6] = s;
c[3] = c[7] = a;
c[1] = c[5] = o;
} else {
r = n.x / e;
s = (n.x + n.width) / e;
o = n.y / i;
a = (n.y + n.height) / i;
c[0] = c[4] = r;
c[2] = c[6] = s;
c[1] = c[3] = a;
c[5] = c[7] = o;
}
}
function v(t, e) {
var i, n;
i = e.x - t.x;
n = e.y - t.y;
if (0 !== i || 0 !== n) {
if (0 === i) return n > 0 ? .5 * Math.PI : 1.5 * Math.PI;
var r = Math.atan(n / i);
i < 0 && (r += Math.PI);
return r;
}
}
var g = (function(t) {
o(e, t);
function e() {
r(this, e);
return s(this, t.apply(this, arguments));
}
e.prototype.initData = function(t) {
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
};
e.prototype.updateRenderData = function(e) {
t.prototype.updateRenderData.call(this, e);
var i = e.spriteFrame;
if (i) {
this.packToDynamicAtlas(e, i);
if (e._vertsDirty) {
var n = e._fillStart, r = e._fillRange;
if (r < 0) {
n += r;
r = -r;
}
for (;n >= 1; ) n -= 1;
for (;n < 0; ) n += 1;
n *= a;
r *= a;
m(e);
y(i);
p(l[0], l[2], l[1], l[3], f, n, h);
p(l[0], l[2], l[1], l[3], f, n + r, _);
this.updateVerts(e, n, r);
e._vertsDirty = !1;
}
}
};
e.prototype.updateVerts = function(t, e, i) {
for (var n = e + i, r = this._local, s = 0, o = 3 * this.floatsPerVert, l = 0; l < 4; ++l) {
var u = d[l];
if (u) if (i >= a) {
r.length = s + o;
this._generateTriangle(r, s, f, c[u[0]], c[u[1]]);
s += o;
} else {
var p = v(f, c[u[0]]), m = v(f, c[u[1]]);
m < p && (m += a);
p -= a;
m -= a;
for (var y = 0; y < 3; ++y) {
if (p >= n) ; else if (p >= e) {
r.length = s + o;
m >= n ? this._generateTriangle(r, s, f, c[u[0]], _[l]) : this._generateTriangle(r, s, f, c[u[0]], c[u[1]]);
s += o;
} else if (m <= e) ; else if (m <= n) {
r.length = s + o;
this._generateTriangle(r, s, f, h[l], c[u[1]]);
s += o;
} else {
r.length = s + o;
this._generateTriangle(r, s, f, h[l], _[l]);
s += o;
}
p += a;
m += a;
}
}
}
this.allocWorldVerts(t);
this.updateWorldVerts(t);
};
e.prototype.allocWorldVerts = function(t) {
var e = t.node._color._val, i = this._renderData, n = this.floatsPerVert, r = this._local, s = r.length / n;
this.verticesCount = this.indicesCount = s;
var o = i._flexBuffer;
if (o.reserve(s, s)) for (var a = i.iDatas[0], c = 0; c < s; c++) a[c] = c;
o.used(this.verticesCount, this.indicesCount);
for (var l = i.vDatas[0], u = i.uintVDatas[0], h = this.uvOffset, _ = 0; _ < r.length; _ += n) {
var f = _ + h;
l[f] = r[f];
l[f + 1] = r[f + 1];
u[f + 2] = e;
}
};
e.prototype.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < c.length; h += u) {
var _ = c[h], f = c[h + 1];
l[h] = _ * i + f * r + o;
l[h + 1] = _ * n + f * s + a;
}
};
e.prototype._generateTriangle = function(t, e, i, n, r) {
var s = l, o = s[0], a = s[1], c = s[2], u = s[3], h = this.floatsPerVert;
t[e] = i.x;
t[e + 1] = i.y;
t[e + h] = n.x;
t[e + h + 1] = n.y;
t[e + 2 * h] = r.x;
t[e + 2 * h + 1] = r.y;
var _ = this.uvOffset, f = void 0, d = void 0;
f = (i.x - o) / (c - o);
d = (i.y - a) / (u - a);
this._generateUV(f, d, t, e + _);
f = (n.x - o) / (c - o);
d = (n.y - a) / (u - a);
this._generateUV(f, d, t, e + h + _);
f = (r.x - o) / (c - o);
d = (r.y - a) / (u - a);
this._generateUV(f, d, t, e + 2 * h + _);
};
e.prototype._generateUV = function(t, e, i, n) {
var r = u, s = r[0] + (r[2] - r[0]) * t, o = r[4] + (r[6] - r[4]) * t, a = r[1] + (r[3] - r[1]) * t, c = r[5] + (r[7] - r[5]) * t;
i[n] = s + (o - s) * e;
i[n + 1] = a + (c - a) * e;
};
return e;
})(n.default);
i.default = g;
e.exports = i.default;
}), {
"../../../../assembler-2d": 152
} ],
185: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var o = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.updateRenderData = function(t) {
var e = t._spriteFrame;
if (e) {
this.packToDynamicAtlas(t, e);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
}
};
e.prototype.updateUVs = function(t) {
for (var e = t._spriteFrame.uv, i = this.uvOffset, n = this.floatsPerVert, r = this._renderData.vDatas[0], s = 0; s < 4; s++) {
var o = 2 * s, a = n * s + i;
r[a] = e[o];
r[a + 1] = e[o + 1];
}
};
e.prototype.updateVerts = function(t) {
var e = t.node, i = e.width, n = e.height, r = e.anchorX * i, s = e.anchorY * n, o = void 0, a = void 0, c = void 0, l = void 0;
if (t.trim) {
o = -r;
a = -s;
c = i - r;
l = n - s;
} else {
var u = t.spriteFrame, h = u._originalSize.width, _ = u._originalSize.height, f = u._rect.width, d = u._rect.height, p = u._offset, m = i / h, y = n / _, v = p.x + (h - f) / 2, g = p.x - (h - f) / 2, C = p.y + (_ - d) / 2, x = p.y - (_ - d) / 2;
o = v * m - r;
a = C * y - s;
c = i + g * m - r;
l = n + x * y - s;
}
var A = this._local;
A[0] = o;
A[1] = a;
A[2] = c;
A[3] = l;
this.updateWorldVerts(t);
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = o;
e.exports = i.default;
}), {
"../../../../assembler-2d": 152
} ],
186: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var o = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.initData = function(t) {
if (!(this._renderData.meshCount > 0)) {
this._renderData.createData(0, this.verticesFloats, this.indicesCount);
for (var e = this._renderData.iDatas[0], i = 0, n = 0; n < 3; ++n) for (var r = 0; r < 3; ++r) {
var s = 4 * n + r;
e[i++] = s;
e[i++] = s + 1;
e[i++] = s + 4;
e[i++] = s + 1;
e[i++] = s + 5;
e[i++] = s + 4;
}
}
};
e.prototype.initLocal = function() {
this._local = [];
this._local.length = 8;
};
e.prototype.updateRenderData = function(t) {
var e = t._spriteFrame;
if (e) {
this.packToDynamicAtlas(t, e);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
}
};
e.prototype.updateVerts = function(t) {
var e = t.node, i = e.width, n = e.height, r = e.anchorX * i, s = e.anchorY * n, o = t.spriteFrame, a = o.insetLeft, c = o.insetRight, l = o.insetTop, u = o.insetBottom, h = i - a - c, _ = n - l - u, f = i / (a + c), d = n / (l + u);
f = isNaN(f) || f > 1 ? 1 : f;
d = isNaN(d) || d > 1 ? 1 : d;
h = h < 0 ? 0 : h;
_ = _ < 0 ? 0 : _;
var p = this._local;
p[0] = -r;
p[1] = -s;
p[2] = a * f - r;
p[3] = u * d - s;
p[4] = p[2] + h;
p[5] = p[3] + _;
p[6] = i - r;
p[7] = n - s;
this.updateWorldVerts(t);
};
e.prototype.updateUVs = function(t) {
for (var e = this._renderData.vDatas[0], i = t.spriteFrame.uvSliced, n = this.uvOffset, r = this.floatsPerVert, s = 0; s < 4; ++s) for (var o = 0; o < 4; ++o) {
var a = 4 * s + o, c = i[a], l = a * r;
e[l + n] = c.u;
e[l + n + 1] = c.v;
}
};
e.prototype.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < 4; ++h) for (var _ = c[2 * h + 1], f = 0; f < 4; ++f) {
var d = c[2 * f], p = (4 * h + f) * u;
l[p] = d * i + _ * r + o;
l[p + 1] = d * n + _ * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = o;
Object.assign(o.prototype, {
verticesCount: 16,
indicesCount: 54
});
e.exports = i.default;
}), {
"../../../../assembler-2d": 152
} ],
187: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function r(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function s(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var o = (function(t) {
s(e, t);
function e() {
n(this, e);
return r(this, t.apply(this, arguments));
}
e.prototype.initData = function(t) {
this.verticesCount = 0;
this.contentWidth = 0;
this.contentHeight = 0;
this.rectWidth = 0;
this.rectHeight = 0;
this.hRepeat = 0;
this.vRepeat = 0;
this.row = 0;
this.col = 0;
this._local = {
x: [],
y: []
};
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
this._updateIndices();
};
e.prototype._updateIndices = function() {
for (var t = this._renderData.iDatas[0], e = 0, i = 0, n = t.length; e < n; e += 6, 
i += 4) {
t[e] = i;
t[e + 1] = i + 1;
t[e + 2] = i + 2;
t[e + 3] = i + 1;
t[e + 4] = i + 3;
t[e + 5] = i + 2;
}
};
e.prototype.updateRenderData = function(t) {
var e = t._spriteFrame;
if (e) {
this.packToDynamicAtlas(t, e);
var i = t.node, n = this.contentWidth = Math.abs(i.width), r = this.contentHeight = Math.abs(i.height), s = e._rect, o = this.rectWidth = s.width, a = this.rectHeight = s.height, c = this.hRepeat = n / o, l = this.vRepeat = r / a, u = (this.row = Math.ceil(l)) * (this.col = Math.ceil(c));
this.verticesCount = 4 * u;
this.indicesCount = 6 * u;
var h = this._renderData._flexBuffer;
if (h.reserve(this.verticesCount, this.indicesCount)) {
this._updateIndices();
this.updateColor(t);
}
h.used(this.verticesCount, this.indicesCount);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
}
};
e.prototype.updateVerts = function(t) {
var e = t.node, i = e.anchorX * e.width, n = e.anchorY * e.height, r = this.row, s = this.col, o = this.rectWidth, a = this.rectHeight, c = this.contentWidth, l = this.contentHeight, u = this._local, h = u.x, _ = u.y;
h.length = _.length = 0;
for (var f = 0; f <= s; ++f) h[f] = Math.min(o * f, c) - i;
for (var d = 0; d <= r; ++d) _[d] = Math.min(a * d, l) - n;
this.updateWorldVerts(t);
};
e.prototype.updateWorldVerts = function(t) {
for (var e = this._renderData, i = this._local, n = i.x, r = i.y, s = e.vDatas[0], o = this.row, a = this.col, c = t.node._worldMatrix.m, l = c[0], u = c[1], h = c[4], _ = c[5], f = c[12], d = c[13], p = void 0, m = void 0, y = void 0, v = void 0, g = this.floatsPerVert, C = 0, x = 0, A = o; x < A; ++x) {
y = r[x];
v = r[x + 1];
for (var b = 0, S = a; b < S; ++b) {
p = n[b];
m = n[b + 1];
s[C] = p * l + y * h + f;
s[C + 1] = p * u + y * _ + d;
s[C += g] = m * l + y * h + f;
s[C + 1] = m * u + y * _ + d;
s[C += g] = p * l + v * h + f;
s[C + 1] = p * u + v * _ + d;
s[C += g] = m * l + v * h + f;
s[C + 1] = m * u + v * _ + d;
C += g;
}
}
};
e.prototype.updateUVs = function(t) {
var e = this._renderData.vDatas[0];
if (e) for (var i = this.row, n = this.col, r = this.hRepeat, s = this.vRepeat, o = t.spriteFrame.uv, a = t.spriteFrame._rotated, c = this.floatsPerVert, l = this.uvOffset, u = 0, h = i; u < h; ++u) for (var _ = Math.min(1, s - u), f = 0, d = n; f < d; ++f) {
var p = Math.min(1, r - f);
if (a) {
e[l] = o[0];
e[l + 1] = o[1];
e[l += c] = o[0];
e[l + 1] = o[1] + (o[7] - o[1]) * p;
e[l += c] = o[0] + (o[6] - o[0]) * _;
e[l + 1] = o[1];
e[l += c] = e[l - c];
e[l + 1] = e[l + 1 - 2 * c];
l += c;
} else {
e[l] = o[0];
e[l + 1] = o[1];
e[l += c] = o[0] + (o[6] - o[0]) * p;
e[l + 1] = o[1];
e[l += c] = o[0];
e[l + 1] = o[1] + (o[7] - o[1]) * _;
e[l += c] = e[l - 2 * c];
e[l + 1] = e[l + 1 - c];
l += c;
}
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = o;
e.exports = i.default;
}), {
"../../../../assembler-2d": 152
} ],
188: [ (function(t, e, i) {
"use strict";
var n = y(t("../../../assembler")), r = t("../../../../components/CCSprite"), s = y(t("./2d/simple")), o = y(t("./2d/sliced")), a = y(t("./2d/tiled")), c = y(t("./2d/radial-filled")), l = y(t("./2d/bar-filled")), u = y(t("./2d/mesh")), h = y(t("./3d/simple")), _ = y(t("./3d/sliced")), f = y(t("./3d/tiled")), d = y(t("./3d/radial-filled")), p = y(t("./3d/bar-filled")), m = y(t("./3d/mesh"));
function y(t) {
return t && t.__esModule ? t : {
default: t
};
}
var v = {
getConstructor: function(t) {
var e = t.node.is3DNode, i = e ? h.default : s.default;
switch (t.type) {
case r.Type.SLICED:
i = e ? _.default : o.default;
break;

case r.Type.TILED:
i = e ? f.default : a.default;
break;

case r.Type.FILLED:
i = t._fillType === r.FillType.RADIAL ? e ? d.default : c.default : e ? p.default : l.default;
break;

case r.Type.MESH:
i = e ? m.default : u.default;
}
return i;
},
Simple: s.default,
Sliced: o.default,
Tiled: a.default,
RadialFilled: c.default,
BarFilled: l.default,
Mesh: u.default,
Simple3D: h.default,
Sliced3D: _.default,
Tiled3D: f.default,
RadialFilled3D: d.default,
BarFilled3D: p.default,
Mesh3D: m.default
};
n.default.register(cc.Sprite, v);
}), {
"../../../../components/CCSprite": 61,
"../../../assembler": 153,
"./2d/bar-filled": 182,
"./2d/mesh": 183,
"./2d/radial-filled": 184,
"./2d/simple": 185,
"./2d/sliced": 186,
"./2d/tiled": 187,
"./3d/bar-filled": void 0,
"./3d/mesh": void 0,
"./3d/radial-filled": void 0,
"./3d/simple": void 0,
"./3d/sliced": void 0,
"./3d/tiled": void 0
} ],
189: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
function n(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var r = (function() {
function t(e, i, r, s, o) {
n(this, t);
this._handler = e;
this._index = i;
this._vfmt = o;
this._verticesBytes = o._bytes;
this._initVerticesCount = r;
this._initIndicesCount = s;
this.reset();
}
t.prototype._reallocVData = function(t, e) {
this.vData = new Float32Array(t);
this.uintVData = new Uint32Array(this.vData.buffer);
e && this.vData.set(e);
this._handler.updateMesh(this._index, this.vData, this.iData);
};
t.prototype._reallocIData = function(t, e) {
this.iData = new Uint16Array(t);
e && this.iData.set(e);
this._handler.updateMesh(this._index, this.vData, this.iData);
};
t.prototype.reserve = function(t, e) {
var i = t * this._verticesBytes >> 2, n = this.vData.length, r = !1;
if (i > n) {
for (;n < i; ) n *= 2;
this._reallocVData(n, this.vData);
r = !0;
}
var s = this.iData.length;
if (e > s) {
for (;s < e; ) s *= 2;
this._reallocIData(e, this.iData);
r = !0;
}
return r;
};
t.prototype.used = function(t, e) {
this.usedVertices = t;
this.usedIndices = e;
this.usedVerticesFloats = t * this._verticesBytes >> 2;
this._handler.updateMeshRange(t, e);
};
t.prototype.reset = function() {
var t = this._initVerticesCount * this._verticesBytes >> 2;
this._reallocVData(t);
this._reallocIData(this._initIndicesCount);
this.usedVertices = 0;
this.usedVerticesFloats = 0;
this.usedIndices = 0;
};
return t;
})();
i.default = r;
cc.FlexBuffer = r;
e.exports = i.default;
}), {} ],
190: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = s;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./flex-buffer")), r = t("./vertex-format");
function s() {
this.vDatas = [];
this.uintVDatas = [];
this.iDatas = [];
this.meshCount = 0;
this._infos = null;
this._flexBuffer = null;
}
cc.js.mixin(s.prototype, {
init: function(t) {},
clear: function() {
this.vDatas.length = 0;
this.iDatas.length = 0;
this.uintVDatas.length = 0;
this.meshCount = 0;
this._infos = null;
this._flexBuffer && this._flexBuffer.reset();
},
updateMesh: function(t, e, i) {
this.vDatas[t] = e;
this.uintVDatas[t] = new Uint32Array(e.buffer, 0, e.length);
this.iDatas[t] = i;
this.meshCount = this.vDatas.length;
},
updateMeshRange: function(t, e) {},
createData: function(t, e, i) {
var n = new Float32Array(e), r = new Uint16Array(i);
this.updateMesh(t, n, r);
},
createQuadData: function(t, e, i) {
this.createData(t, e, i);
this.initQuadIndices(this.iDatas[t]);
},
createFlexData: function(t, e, i, s) {
s = s || r.vfmtPosUvColor;
this._flexBuffer = new n.default(this, t, e, i, s);
},
initQuadIndices: function(t) {
for (var e = t.length / 6, i = 0, n = 0; i < e; i++) {
var r = 4 * i;
t[n++] = r;
t[n++] = r + 1;
t[n++] = r + 2;
t[n++] = r + 1;
t[n++] = r + 3;
t[n++] = r + 2;
}
}
});
cc.RenderData = s;
e.exports = i.default;
}), {
"./flex-buffer": 189,
"./vertex-format": 191
} ],
191: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/gfx"));
var r = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
r.name = "vfmt3D";
n.default.VertexFormat.XYZ_UV_Color = r;
var s = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
s.name = "vfmtPosUvColor";
n.default.VertexFormat.XY_UV_Color = s;
var o = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
}, {
name: n.default.ATTR_COLOR0,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
o.name = "vfmtPosUvTwoColor";
n.default.VertexFormat.XY_UV_Two_Color = o;
var a = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
} ]);
a.name = "vfmtPosUv";
n.default.VertexFormat.XY_UV = a;
var c = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
c.name = "vfmtPosColor";
n.default.VertexFormat.XY_Color = c;
var l = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
} ]);
l.name = "vfmtPos";
n.default.VertexFormat.XY = l;
e.exports = {
vfmt3D: r,
vfmtPosUvColor: s,
vfmtPosUvTwoColor: o,
vfmtPosUv: a,
vfmtPosColor: c,
vfmtPos: l
};
}), {
"../../../renderer/gfx": 246
} ],
192: [ (function(t, e, i) {
"use strict";
t("../platform/CCSys");
var n = /(\.[^\.\/\?\\]*)(\?.*)?$/, r = /((.*)(\/|\\|\\\\))?(.*?\..*$)?/, s = /[^\.\/]+\/\.\.\//;
cc.path = {
join: function() {
for (var t = arguments.length, e = "", i = 0; i < t; i++) e = (e + ("" === e ? "" : "/") + arguments[i]).replace(/(\/|\\\\)$/, "");
return e;
},
extname: function(t) {
var e = n.exec(t);
return e ? e[1] : "";
},
mainFileName: function(t) {
if (t) {
var e = t.lastIndexOf(".");
if (-1 !== e) return t.substring(0, e);
}
return t;
},
basename: function(t, e) {
var i = t.indexOf("?");
i > 0 && (t = t.substring(0, i));
var n = /(\/|\\)([^\/\\]+)$/g.exec(t.replace(/(\/|\\)$/, ""));
if (!n) return null;
var r = n[2];
return e && t.substring(t.length - e.length).toLowerCase() === e.toLowerCase() ? r.substring(0, r.length - e.length) : r;
},
dirname: function(t) {
var e = r.exec(t);
return e ? e[2] : "";
},
changeExtname: function(t, e) {
e = e || "";
var i = t.indexOf("?"), n = "";
if (i > 0) {
n = t.substring(i);
t = t.substring(0, i);
}
return (i = t.lastIndexOf(".")) < 0 ? t + e + n : t.substring(0, i) + e + n;
},
changeBasename: function(t, e, i) {
if (0 === e.indexOf(".")) return this.changeExtname(t, e);
var n = t.indexOf("?"), r = "", s = i ? this.extname(t) : "";
if (n > 0) {
r = t.substring(n);
t = t.substring(0, n);
}
n = (n = t.lastIndexOf("/")) <= 0 ? 0 : n + 1;
return t.substring(0, n) + e + s + r;
},
_normalize: function(t) {
var e = t = String(t);
do {
e = t;
t = t.replace(s, "");
} while (e.length !== t.length);
return t;
},
sep: cc.sys.os === cc.sys.OS_WINDOWS ? "\\" : "/",
stripSep: function(t) {
return t.replace(/[\/\\]$/, "");
}
};
e.exports = cc.path;
}), {
"../platform/CCSys": 135
} ],
193: [ (function(t, e, i) {
"use strict";
var n = function(t, e, i, n, r, s) {
this.a = t;
this.b = e;
this.c = i;
this.d = n;
this.tx = r;
this.ty = s;
};
n.create = function(t, e, i, n, r, s) {
return {
a: t,
b: e,
c: i,
d: n,
tx: r,
ty: s
};
};
n.identity = function() {
return {
a: 1,
b: 0,
c: 0,
d: 1,
tx: 0,
ty: 0
};
};
n.clone = function(t) {
return {
a: t.a,
b: t.b,
c: t.c,
d: t.d,
tx: t.tx,
ty: t.ty
};
};
n.concat = function(t, e, i) {
var n = e.a, r = e.b, s = e.c, o = e.d, a = e.tx, c = e.ty;
t.a = n * i.a + r * i.c;
t.b = n * i.b + r * i.d;
t.c = s * i.a + o * i.c;
t.d = s * i.b + o * i.d;
t.tx = a * i.a + c * i.c + i.tx;
t.ty = a * i.b + c * i.d + i.ty;
return t;
};
n.invert = function(t, e) {
var i = e.a, n = e.b, r = e.c, s = e.d, o = 1 / (i * s - n * r), a = e.tx, c = e.ty;
t.a = o * s;
t.b = -o * n;
t.c = -o * r;
t.d = o * i;
t.tx = o * (r * c - s * a);
t.ty = o * (n * a - i * c);
return t;
};
n.fromMat4 = function(t, e) {
var i = e.m;
t.a = i[0];
t.b = i[1];
t.c = i[4];
t.d = i[5];
t.tx = i[12];
t.ty = i[13];
return t;
};
n.transformVec2 = function(t, e, i, n) {
var r, s;
if (void 0 === n) {
n = i;
r = e.x;
s = e.y;
} else {
r = e;
s = i;
}
t.x = n.a * r + n.c * s + n.tx;
t.y = n.b * r + n.d * s + n.ty;
return t;
};
n.transformSize = function(t, e, i) {
t.width = i.a * e.width + i.c * e.height;
t.height = i.b * e.width + i.d * e.height;
return t;
};
n.transformRect = function(t, e, i) {
var n = e.x, r = e.y, s = n + e.width, o = r + e.height, a = i.a * n + i.c * r + i.tx, c = i.b * n + i.d * r + i.ty, l = i.a * s + i.c * r + i.tx, u = i.b * s + i.d * r + i.ty, h = i.a * n + i.c * o + i.tx, _ = i.b * n + i.d * o + i.ty, f = i.a * s + i.c * o + i.tx, d = i.b * s + i.d * o + i.ty, p = Math.min(a, l, h, f), m = Math.max(a, l, h, f), y = Math.min(c, u, _, d), v = Math.max(c, u, _, d);
t.x = p;
t.y = y;
t.width = m - p;
t.height = v - y;
return t;
};
n.transformObb = function(t, e, i, n, r, s) {
var o = r.x, a = r.y, c = r.width, l = r.height, u = s.a * o + s.c * a + s.tx, h = s.b * o + s.d * a + s.ty, _ = s.a * c, f = s.b * c, d = s.c * l, p = s.d * l;
e.x = u;
e.y = h;
i.x = _ + u;
i.y = f + h;
t.x = d + u;
t.y = p + h;
n.x = _ + d + u;
n.y = f + p + h;
};
cc.AffineTransform = e.exports = n;
}), {} ],
194: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject").Flags, r = t("./misc"), s = t("../platform/js"), o = t("../platform/id-generater"), a = t("../event-manager"), c = t("../renderer/render-flow"), l = n.Destroying, u = n.DontDestroy, h = n.Deactivating, _ = new o("Node");
function f(t) {
if (!t) {
cc.errorID(3804);
return null;
}
return "string" == typeof t ? s.getClassByName(t) : t;
}
function d(t, e) {
if (e._sealed) for (var i = 0; i < t._components.length; ++i) {
var n = t._components[i];
if (n.constructor === e) return n;
} else for (var r = 0; r < t._components.length; ++r) {
var s = t._components[r];
if (s instanceof e) return s;
}
return null;
}
function p(t, e, i) {
if (e._sealed) for (var n = 0; n < t._components.length; ++n) {
var r = t._components[n];
r.constructor === e && i.push(r);
} else for (var s = 0; s < t._components.length; ++s) {
var o = t._components[s];
o instanceof e && i.push(o);
}
}
function m(t, e) {
for (var i = 0; i < t.length; ++i) {
var n = t[i], r = d(n, e);
if (r) return r;
if (n._children.length > 0 && (r = m(n._children, e))) return r;
}
return null;
}
function y(t, e, i) {
for (var n = 0; n < t.length; ++n) {
var r = t[n];
p(r, e, i);
r._children.length > 0 && y(r._children, e, i);
}
}
var v = cc.Class({
name: "cc._BaseNode",
extends: cc.Object,
properties: {
_parent: null,
_children: [],
_active: !0,
_components: [],
_prefab: null,
_persistNode: {
get: function() {
return (this._objFlags & u) > 0;
},
set: function(t) {
t ? this._objFlags |= u : this._objFlags &= ~u;
}
},
name: {
get: function() {
return this._name;
},
set: function(t) {
0;
this._name = t;
this._proxy.setName(this._name);
}
},
uuid: {
get: function() {
return this._id;
}
},
children: {
get: function() {
return this._children;
}
},
childrenCount: {
get: function() {
return this._children.length;
}
},
active: {
get: function() {
return this._active;
},
set: function(t) {
t = !!t;
if (this._active !== t) {
this._active = t;
var e = this._parent;
if (e) {
e._activeInHierarchy && cc.director._nodeActivator.activateNode(this, t);
}
}
}
},
activeInHierarchy: {
get: function() {
return this._activeInHierarchy;
}
}
},
ctor: function(t) {
this._name = void 0 !== t ? t : "New Node";
this._activeInHierarchy = !1;
this._id = _.getNewId();
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
this.__eventTargets = [];
},
getParent: function() {
return this._parent;
},
setParent: function(t) {
if (this._parent !== t) {
0;
var e = this._parent;
0;
this._parent = t || null;
this._onSetParent(t);
if (t) {
0;
a._setDirtyForNode(this);
t._children.push(this);
t.emit && t.emit("child-added", this);
t._renderFlag |= c.FLAG_CHILDREN;
}
if (e) {
if (!(e._objFlags & l)) {
var i = e._children.indexOf(this);
0;
e._children.splice(i, 1);
e.emit && e.emit("child-removed", this);
this._onHierarchyChanged(e);
0 === e._children.length && (e._renderFlag &= ~c.FLAG_CHILDREN);
}
} else t && this._onHierarchyChanged(null);
}
},
attr: function(t) {
s.mixin(this, t);
},
getChildByUuid: function(t) {
if (!t) {
cc.log("Invalid uuid");
return null;
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) if (e[i]._id === t) return e[i];
return null;
},
getChildByName: function(t) {
if (!t) {
cc.log("Invalid name");
return null;
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) if (e[i]._name === t) return e[i];
return null;
},
addChild: function(t) {
0;
cc.assertID(t, 1606);
cc.assertID(null === t._parent, 1605);
t.setParent(this);
},
insertChild: function(t, e) {
t.parent = this;
t.setSiblingIndex(e);
},
getSiblingIndex: function() {
return this._parent ? this._parent._children.indexOf(this) : 0;
},
setSiblingIndex: function(t) {
if (this._parent) if (this._parent._objFlags & h) cc.errorID(3821); else {
var e = this._parent._children;
t = -1 !== t ? t : e.length - 1;
var i = e.indexOf(this);
if (t !== i) {
e.splice(i, 1);
t < e.length ? e.splice(t, 0, this) : e.push(this);
this._onSiblingIndexChanged && this._onSiblingIndexChanged(t);
}
}
},
walk: function(t, e) {
var i, n, r, s, o = cc._BaseNode, a = 1, c = o._stacks[o._stackId];
if (!c) {
c = [];
o._stacks.push(c);
}
o._stackId++;
c.length = 0;
c[0] = this;
var l = null;
s = !1;
for (;a; ) if (n = c[--a]) {
!s && t ? t(n) : s && e && e(n);
c[a] = null;
if (s) {
s = !1;
if (i) if (i[++r]) {
c[a] = i[r];
a++;
} else if (l) {
c[a] = l;
a++;
s = !0;
if (l._parent) {
r = (i = l._parent._children).indexOf(l);
l = l._parent;
} else {
l = null;
i = null;
}
if (r < 0) break;
}
} else if (n._children.length > 0) {
l = n;
i = n._children;
r = 0;
c[a] = i[r];
a++;
} else {
c[a] = n;
a++;
s = !0;
}
}
c.length = 0;
o._stackId--;
},
cleanup: function() {},
removeFromParent: function(t) {
if (this._parent) {
void 0 === t && (t = !0);
this._parent.removeChild(this, t);
}
},
removeChild: function(t, e) {
if (this._children.indexOf(t) > -1) {
(e || void 0 === e) && t.cleanup();
t.parent = null;
}
},
removeAllChildren: function(t) {
var e = this._children;
void 0 === t && (t = !0);
for (var i = e.length - 1; i >= 0; i--) {
var n = e[i];
if (n) {
t && n.cleanup();
n.parent = null;
}
}
this._children.length = 0;
},
isChildOf: function(t) {
var e = this;
do {
if (e === t) return !0;
e = e._parent;
} while (e);
return !1;
},
getComponent: function(t) {
var e = f(t);
return e ? d(this, e) : null;
},
getComponents: function(t) {
var e = f(t), i = [];
e && p(this, e, i);
return i;
},
getComponentInChildren: function(t) {
var e = f(t);
return e ? m(this._children, e) : null;
},
getComponentsInChildren: function(t) {
var e = f(t), i = [];
if (e) {
p(this, e, i);
y(this._children, e, i);
}
return i;
},
_checkMultipleComp: !1,
addComponent: function(t) {
0;
var e;
if ("string" == typeof t) {
if (!(e = s.getClassByName(t))) {
cc.errorID(3807, t);
cc._RFpeek() && cc.errorID(3808, t);
return null;
}
} else {
if (!t) {
cc.errorID(3804);
return null;
}
e = t;
}
if ("function" != typeof e) {
cc.errorID(3809);
return null;
}
if (!s.isChildClassOf(e, cc.Component)) {
cc.errorID(3810);
return null;
}
0;
var i = e._requireComponent;
if (i && !this.getComponent(i)) {
if (!this.addComponent(i)) return null;
}
var n = new e();
n.node = this;
this._components.push(n);
0;
this._activeInHierarchy && cc.director._nodeActivator.activateComp(n);
return n;
},
_addComponentAt: !1,
removeComponent: function(t) {
if (t) {
t instanceof cc.Component || (t = this.getComponent(t));
t && t.destroy();
} else cc.errorID(3813);
},
_getDependComponent: !1,
_removeComponent: function(t) {
if (t) {
if (!(this._objFlags & l)) {
var e = this._components.indexOf(t);
if (-1 !== e) {
this._components.splice(e, 1);
0;
} else t.node !== this && cc.errorID(3815);
}
} else cc.errorID(3814);
},
destroy: function() {
cc.Object.prototype.destroy.call(this) && (this.active = !1);
},
destroyAllChildren: function() {
for (var t = this._children, e = 0; e < t.length; ++e) t[e].destroy();
},
_onSetParent: function(t) {},
_onPostActivated: function() {},
_onBatchRestored: function() {},
_onBatchCreated: function() {},
_onHierarchyChanged: function(t) {
var e = this._parent;
if (this._persistNode && !(e instanceof cc.Scene)) {
cc.game.removePersistRootNode(this);
0;
}
var i = this._active && !(!e || !e._activeInHierarchy);
this._activeInHierarchy !== i && cc.director._nodeActivator.activateNode(this, i);
},
_instantiate: function(t) {
t || (t = cc.instantiate._clone(this, this));
var e = this._prefab;
e && this === e.root && e.sync;
t._parent = null;
t._onBatchRestored();
return t;
},
_registerIfAttached: !1,
_onPreDestroy: function() {
var t, e;
this._objFlags |= l;
var i = this._parent, n = i && i._objFlags & l;
0;
var r = this._children;
for (t = 0, e = r.length; t < e; ++t) r[t]._destroyImmediate();
for (t = 0, e = this._components.length; t < e; ++t) {
this._components[t]._destroyImmediate();
}
var s = this.__eventTargets;
for (t = 0, e = s.length; t < e; ++t) {
var o = s[t];
o && o.targetOff(this);
}
s.length = 0;
this._persistNode && cc.game.removePersistRootNode(this);
if (!n && i) {
var a = i._children.indexOf(this);
i._children.splice(a, 1);
i.emit && i.emit("child-removed", this);
}
return n;
},
onRestore: !1
});
v.idGenerater = _;
v._stacks = [ [] ];
v._stackId = 0;
v.prototype._onPreDestroyBase = v.prototype._onPreDestroy;
0;
v.prototype._onHierarchyChangedBase = v.prototype._onHierarchyChanged;
0;
r.propertyDefine(v, [ "parent", "name", "children", "childrenCount" ], {});
0;
cc._BaseNode = e.exports = v;
}), {
"../event-manager": 70,
"../platform/CCObject": 132,
"../platform/id-generater": 142,
"../platform/js": 146,
"../renderer/render-flow": 171,
"./misc": 200
} ],
195: [ (function(t, e, i) {
"use strict";
var n = t("../components/CCRenderComponent"), r = t("../platform/CCMacro").BlendFactor, s = t("../../renderer/gfx"), o = cc.Class({
properties: {
_srcBlendFactor: r.SRC_ALPHA,
_dstBlendFactor: r.ONE_MINUS_SRC_ALPHA,
srcBlendFactor: {
get: function() {
return this._srcBlendFactor;
},
set: function(t) {
if (this._srcBlendFactor !== t) {
this._srcBlendFactor = t;
this._updateBlendFunc();
}
},
animatable: !1,
type: r,
tooltip: !1,
visible: !0
},
dstBlendFactor: {
get: function() {
return this._dstBlendFactor;
},
set: function(t) {
if (this._dstBlendFactor !== t) {
this._dstBlendFactor = t;
this._updateBlendFunc();
}
},
animatable: !1,
type: r,
tooltip: !1,
visible: !0
}
},
setMaterial: function(t, e) {
if (this._materials[t] !== e) {
n.prototype.setMaterial.call(this, t, e);
e && this._updateMaterialBlendFunc(e);
}
},
_updateBlendFunc: function() {
for (var t = this._materials, e = 0; e < t.length; e++) {
var i = t[e];
this._updateMaterialBlendFunc(i);
}
},
_updateMaterialBlendFunc: function(t) {
t.effect.setBlend(!0, s.BLEND_FUNC_ADD, this._srcBlendFactor, this._dstBlendFactor, s.BLEND_FUNC_ADD, this._srcBlendFactor, this._dstBlendFactor);
t.setDirty(!0);
}
});
e.exports = cc.BlendFunc = o;
}), {
"../../renderer/gfx": 246,
"../components/CCRenderComponent": 60,
"../platform/CCMacro": 131
} ],
196: [ (function(t, e, i) {
"use strict";
var n = t("./misc").BASE64_VALUES, r = "0123456789abcdef".split(""), s = [ "", "", "", "" ], o = s.concat(s, "-", s, "-", s, "-", s, "-", s, s, s), a = o.map((function(t, e) {
return "-" === t ? NaN : e;
})).filter(isFinite);
e.exports = function(t) {
if (22 !== t.length) return t;
o[0] = t[0];
o[1] = t[1];
for (var e = 2, i = 2; e < 22; e += 2) {
var s = n[t.charCodeAt(e)], c = n[t.charCodeAt(e + 1)];
o[a[i++]] = r[s >> 2];
o[a[i++]] = r[(3 & s) << 2 | c >> 4];
o[a[i++]] = r[15 & c];
}
return o.join("");
};
0;
}), {
"./misc": 200
} ],
197: [ (function(t, e, i) {
"use strict";
cc.find = e.exports = function(t, e) {
if (null == t) {
cc.errorID(5600);
return null;
}
if (e) 0; else {
var i = cc.director.getScene();
if (!i) {
0;
return null;
}
0;
e = i;
}
for (var n = e, r = "/" !== t[0] ? 0 : 1, s = t.split("/"), o = r; o < s.length; o++) {
var a = s[o], c = n._children;
n = null;
for (var l = 0, u = c.length; l < u; ++l) {
var h = c[l];
if (h.name === a) {
n = h;
break;
}
}
if (!n) return null;
}
return n;
};
}), {} ],
198: [ (function(t, e, i) {
"use strict";
var n = t("../assets/material/CCMaterial");
function r() {
this._graySpriteMaterial = null;
this._spriteMaterial = null;
}
r.prototype._switchGrayMaterial = function(t, e) {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
var i = void 0;
if (t) {
(i = this._graySpriteMaterial) || (i = n.getBuiltinMaterial("2d-gray-sprite"));
i = this._graySpriteMaterial = n.getInstantiatedMaterial(i, e);
} else {
(i = this._spriteMaterial) || (i = e.sharedMaterials[0] || n.getBuiltinMaterial("2d-sprite", e));
i = this._spriteMaterial = n.getInstantiatedMaterial(i, e);
}
e.setMaterial(0, i);
}
};
e.exports = r;
}), {
"../assets/material/CCMaterial": 38
} ],
199: [ (function(t, e, i) {
"use strict";
t("./CCPath");
t("./profiler/CCProfiler");
t("./find");
t("./mutable-forward-iterator");
}), {
"./CCPath": 192,
"./find": 197,
"./mutable-forward-iterator": 201,
"./profiler/CCProfiler": 203
} ],
200: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = {
propertyDefine: function(t, e, i) {
function r(t, e, i, r) {
var s = Object.getOwnPropertyDescriptor(t, e);
if (s) {
s.get && (t[i] = s.get);
s.set && r && (t[r] = s.set);
} else {
var o = t[i];
n.getset(t, e, o, t[r]);
}
}
for (var s, o = t.prototype, a = 0; a < e.length; a++) {
var c = (s = e[a])[0].toUpperCase() + s.slice(1);
r(o, s, "get" + c, "set" + c);
}
for (s in i) {
var l = i[s];
r(o, s, l[0], l[1]);
}
},
NextPOT: function(t) {
t -= 1;
t |= t >> 1;
t |= t >> 2;
t |= t >> 4;
t |= t >> 8;
return (t |= t >> 16) + 1;
}
};
0;
r.BUILTIN_CLASSID_RE = /^(?:cc|dragonBones|sp|ccsg)\..+/;
for (var s = new Array(123), o = 0; o < 123; ++o) s[o] = 64;
for (var a = 0; a < 64; ++a) s["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(a)] = a;
r.BASE64_VALUES = s;
r.pushToMap = function(t, e, i, n) {
var r = t[e];
if (r) if (Array.isArray(r)) if (n) {
r.push(r[0]);
r[0] = i;
} else r.push(i); else t[e] = n ? [ i, r ] : [ r, i ]; else t[e] = i;
};
r.clampf = function(t, e, i) {
if (e > i) {
var n = e;
e = i;
i = n;
}
return t < e ? e : t < i ? t : i;
};
r.clamp01 = function(t) {
return t < 0 ? 0 : t < 1 ? t : 1;
};
r.lerp = function(t, e, i) {
return t + (e - t) * i;
};
r.degreesToRadians = function(t) {
return t * cc.macro.RAD;
};
r.radiansToDegrees = function(t) {
return t * cc.macro.DEG;
};
cc.misc = e.exports = r;
}), {
"../platform/js": 146
} ],
201: [ (function(t, e, i) {
"use strict";
function n(t) {
this.i = 0;
this.array = t;
}
var r = n.prototype;
r.remove = function(t) {
var e = this.array.indexOf(t);
e >= 0 && this.removeAt(e);
};
r.removeAt = function(t) {
this.array.splice(t, 1);
t <= this.i && --this.i;
};
r.fastRemove = function(t) {
var e = this.array.indexOf(t);
e >= 0 && this.fastRemoveAt(e);
};
r.fastRemoveAt = function(t) {
var e = this.array;
e[t] = e[e.length - 1];
--e.length;
t <= this.i && --this.i;
};
r.push = function(t) {
this.array.push(t);
};
e.exports = n;
}), {} ],
202: [ (function(t, e, i) {
"use strict";
t("../vmath");
cc._PrefabInfo = cc.Class({
name: "cc.PrefabInfo",
properties: {
root: null,
asset: null,
fileId: "",
sync: !1,
_synced: {
default: !1,
serializable: !1
}
}
});
e.exports = {
syncWithPrefab: function(t) {
var e = t._prefab;
e._synced = !0;
if (e.asset) {
var i = t._objFlags, n = t._parent, r = t._id, s = t._name, o = t._active, a = t._eulerAngles.x, c = t._eulerAngles.y, l = t._eulerAngles.z, u = t._localZOrder, h = t._globalZOrder, _ = t._trs, f = _[0], d = _[1], p = _[2];
cc.game._isCloning = !0;
e.asset._doInstantiate(t);
cc.game._isCloning = !1;
t._objFlags = i;
t._parent = n;
t._id = r;
t._prefab = e;
t._name = s;
t._active = o;
t._localZOrder = u;
t._globalZOrder = h;
(_ = t._trs)[0] = f;
_[1] = d;
_[2] = p;
t._eulerAngles.x = a;
t._eulerAngles.y = c;
t._eulerAngles.z = l;
} else {
cc.errorID(3701, t.name);
t._prefab = null;
}
}
};
}), {
"../vmath": 225
} ],
203: [ (function(t, e, i) {
"use strict";
var n = t("../../platform/CCMacro"), r = t("./perf-counter"), s = !1, o = 15, a = null, c = null, l = null;
function u() {
if (!a) {
a = {
frame: {
desc: "Frame time (ms)",
min: 0,
max: 50,
average: 500
},
fps: {
desc: "Framerate (FPS)",
below: 30,
average: 500
},
draws: {
desc: "Draw call"
},
logic: {
desc: "Game Logic (ms)",
min: 0,
max: 50,
average: 500,
color: "#080"
},
render: {
desc: "Renderer (ms)",
min: 0,
max: 50,
average: 500,
color: "#f90"
},
mode: {
desc: cc.game.renderType === cc.game.RENDER_TYPE_WEBGL ? "WebGL" : "Canvas",
min: 1
}
};
var t = performance.now();
for (var e in a) a[e]._counter = new r(e, a[e], t);
}
}
function h() {
if (!c || !c.isValid) {
(c = new cc.Node("PROFILER-NODE")).x = c.y = 10;
c.groupIndex = cc.Node.BuiltinGroupIndex.DEBUG;
cc.Camera._setupDebugCamera();
c.zIndex = n.MAX_ZINDEX;
cc.game.addPersistRootNode(c);
var t = new cc.Node("LEFT-PANEL");
t.anchorX = t.anchorY = 0;
var e = t.addComponent(cc.Label);
e.fontSize = o;
e.lineHeight = o;
t.parent = c;
var i = new cc.Node("RIGHT-PANEL");
i.anchorX = 1;
i.anchorY = 0;
i.x = 200;
var r = i.addComponent(cc.Label);
r.horizontalAlign = cc.Label.HorizontalAlign.RIGHT;
r.fontSize = o;
r.lineHeight = o;
i.parent = c;
if (cc.sys.browserType !== cc.sys.BROWSER_TYPE_BAIDU_GAME_SUB && cc.sys.browserType !== cc.sys.BROWSER_TYPE_WECHAT_GAME_SUB) {
e.cacheMode = cc.Label.CacheMode.CHAR;
r.cacheMode = cc.Label.CacheMode.CHAR;
}
l = {
left: e,
right: r
};
}
}
function _() {
h();
var t = cc.director._lastUpdate;
a.frame._counter.start(t);
a.logic._counter.start(t);
}
function f() {
var t = performance.now();
cc.director.isPaused() ? a.frame._counter.start(t) : a.logic._counter.end(t);
a.render._counter.start(t);
}
function d() {
var t = performance.now();
a.render._counter.end(t);
a.draws._counter.value = cc.renderer.drawCalls;
a.frame._counter.end(t);
a.fps._counter.frame(t);
var e = "", i = "";
for (var n in a) {
var r = a[n];
r._counter.sample(t);
e += r.desc + "\n";
i += r._counter.human() + "\n";
}
if (l) {
l.left.string = e;
l.right.string = i;
}
}
cc.profiler = e.exports = {
isShowingStats: function() {
return s;
},
hideStats: function() {
if (s) {
c && (c.active = !1);
cc.director.off(cc.Director.EVENT_BEFORE_UPDATE, _);
cc.director.off(cc.Director.EVENT_AFTER_UPDATE, f);
cc.director.off(cc.Director.EVENT_AFTER_DRAW, d);
s = !1;
}
},
showStats: function() {
if (!s) {
u();
c && (c.active = !0);
cc.director.on(cc.Director.EVENT_BEFORE_UPDATE, _);
cc.director.on(cc.Director.EVENT_AFTER_UPDATE, f);
cc.director.on(cc.Director.EVENT_AFTER_DRAW, d);
s = !0;
}
}
};
}), {
"../../platform/CCMacro": 131,
"./perf-counter": 205
} ],
204: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Counter",
ctor: function(t, e, i) {
this._id = t;
this._opts = e || {};
this._value = 0;
this._total = 0;
this._averageValue = 0;
this._accumValue = 0;
this._accumSamples = 0;
this._accumStart = i;
},
properties: {
value: {
get: function() {
return this._value;
},
set: function(t) {
this._value = t;
}
}
},
_average: function(t, e) {
if (this._opts.average) {
this._accumValue += t;
++this._accumSamples;
var i = e;
if (i - this._accumStart >= this._opts.average) {
this._averageValue = this._accumValue / this._accumSamples;
this._accumValue = 0;
this._accumStart = i;
this._accumSamples = 0;
}
}
},
sample: function(t) {
this._average(this._value, t);
},
human: function() {
var t = this._opts.average ? this._averageValue : this._value;
return Math.round(100 * t) / 100;
},
alarm: function() {
return this._opts.below && this._value < this._opts.below || this._opts.over && this._value > this._opts.over;
}
});
e.exports = n;
}), {} ],
205: [ (function(t, e, i) {
"use strict";
var n = t("./counter"), r = cc.Class({
name: "cc.PerfCounter",
extends: n,
ctor: function(t, e, i) {
this._time = i;
},
start: function(t) {
this._time = t;
},
end: function(t) {
this._value = t - this._time;
this._average(this._value);
},
tick: function() {
this.end();
this.start();
},
frame: function(t) {
var e = t, i = e - this._time;
this._total++;
if (i > (this._opts.average || 1e3)) {
this._value = 1e3 * this._total / i;
this._total = 0;
this._time = e;
this._average(this._value);
}
}
});
e.exports = r;
}), {
"./counter": 204
} ],
206: [ (function(t, e, i) {
"use strict";
var n = .26;
0;
var r = {
BASELINE_RATIO: n,
MIDDLE_RATIO: (n + 1) / 2 - n,
label_wordRex: /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\S)/,
label_symbolRex: /^[!,.:;'}\]%\?>、‘“》？。，！]/,
label_lastWordRex: /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+|\S)$/,
label_lastEnglish: /[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+$/,
label_firstEnglish: /^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]/,
label_firstEmoji: /^[\uD83C\uDF00-\uDFFF\uDC00-\uDE4F]/,
label_lastEmoji: /([\uDF00-\uDFFF\uDC00-\uDE4F]+|\S)$/,
label_wrapinspection: !0,
__CHINESE_REG: /^[\u4E00-\u9FFF\u3400-\u4DFF]+$/,
__JAPANESE_REG: /[\u3000-\u303F]|[\u3040-\u309F]|[\u30A0-\u30FF]|[\uFF00-\uFFEF]|[\u4E00-\u9FAF]|[\u2605-\u2606]|[\u2190-\u2195]|\u203B/g,
__KOREAN_REG: /^[\u1100-\u11FF]|[\u3130-\u318F]|[\uA960-\uA97F]|[\uAC00-\uD7AF]|[\uD7B0-\uD7FF]+$/,
isUnicodeCJK: function(t) {
return this.__CHINESE_REG.test(t) || this.__JAPANESE_REG.test(t) || this.__KOREAN_REG.test(t);
},
isUnicodeSpace: function(t) {
return (t = t.charCodeAt(0)) >= 9 && t <= 13 || 32 === t || 133 === t || 160 === t || 5760 === t || t >= 8192 && t <= 8202 || 8232 === t || 8233 === t || 8239 === t || 8287 === t || 12288 === t;
},
safeMeasureText: function(t, e) {
var i = t.measureText(e);
return i && i.width || 0;
},
fragmentText: function(t, e, i, n) {
var r = [];
if (0 === t.length || i < 0) {
r.push("");
return r;
}
for (var s = t; e > i && s.length > 1; ) {
for (var o = s.length * (i / e) | 0, a = s.substring(o), c = e - n(a), l = a, u = 0, h = 0; c > i && h++ < 10; ) {
o *= i / c;
o |= 0;
c = e - n(a = s.substring(o));
}
h = 0;
for (;c <= i && h++ < 10; ) {
if (a) {
var _ = this.label_wordRex.exec(a);
u = _ ? _[0].length : 1;
l = a;
}
o += u;
c = e - n(a = s.substring(o));
}
if (0 === (o -= u)) {
o = 1;
l = l.substring(1);
}
var f, d = s.substring(0, 0 + o);
if (this.label_wrapinspection && this.label_symbolRex.test(l || a)) {
0 === (o -= (f = this.label_lastWordRex.exec(d)) ? f[0].length : 0) && (o = 1);
l = s.substring(o);
d = s.substring(0, 0 + o);
}
if (this.label_firstEmoji.test(l) && (f = this.label_lastEmoji.exec(d)) && d !== f[0]) {
o -= f[0].length;
l = s.substring(o);
d = s.substring(0, 0 + o);
}
if (this.label_firstEnglish.test(l) && (f = this.label_lastEnglish.exec(d)) && d !== f[0]) {
o -= f[0].length;
l = s.substring(o);
d = s.substring(0, 0 + o);
}
0 === r.length ? r.push(d) : (d = d.trimLeft()).length > 0 && r.push(d);
e = n(s = l || a);
}
0 === r.length ? r.push(s) : (s = s.trimLeft()).length > 0 && r.push(s);
return r;
}
};
cc.textUtils = e.exports = r;
}), {} ],
207: [ (function(t, e, i) {
"use strict";
var n = t("../assets/CCTexture2D"), r = {
loadImage: function(t, e, i) {
cc.assertID(t, 3103);
var r = cc.loader.getRes(t);
if (r) {
if (r.loaded) {
e && e.call(i, null, r);
return r;
}
r.once("load", (function() {
e && e.call(i, null, r);
}), i);
return r;
}
(r = new n()).url = t;
cc.loader.load({
url: t,
texture: r
}, (function(t, n) {
if (t) return e && e.call(i, t || new Error("Unknown error"));
n.handleLoadedTexture();
e && e.call(i, null, n);
}));
return r;
},
cacheImage: function(t, e) {
if (t && e) {
var i = new n();
i.initWithElement(e);
var r = {
id: t,
url: t,
error: null,
content: i,
complete: !1
};
cc.loader.flowOut(r);
return i;
}
},
postLoadTexture: function(t, e) {
t.loaded ? e && e() : t.url ? cc.loader.load({
url: t.url,
skips: [ "Loader" ]
}, (function(i, n) {
if (n) {
0;
t.loaded || (t._nativeAsset = n);
}
e && e(i);
})) : e && e();
}
};
cc.textureUtil = e.exports = r;
}), {
"../assets/CCTexture2D": 36
} ],
208: [ (function(t, e, i) {
"use strict";
var n = t("./node-unit"), r = t("./node-mem-pool");
e.exports = {
NodeMemPool: new r(n)
};
}), {
"./node-mem-pool": 210,
"./node-unit": 211
} ],
209: [ (function(t, e, i) {
"use strict";
var n = function(t) {
this._unitClass = t;
this._pool = [];
this._findOrder = [];
this._initNative();
}, r = n.prototype;
r._initNative = function() {
this._nativeMemPool = new renderer.MemPool();
};
r._buildUnit = function(t) {
var e = new this._unitClass(t, this);
this._nativeMemPool.updateCommonData(t, e._data, e._signData);
return e;
};
r._destroyUnit = function(t) {
this._pool[t] = null;
for (var e = 0, i = this._findOrder.length; e < i; e++) {
var n = this._findOrder[e];
if (n && n.unitID == t) {
this._findOrder.splice(e, 1);
break;
}
}
this._nativeMemPool.removeCommonData(t);
};
r._findUnitID = function() {
for (var t = 0, e = this._pool; e[t]; ) t++;
return t;
};
r.pop = function() {
for (var t = null, e = 0, i = this._findOrder, n = this._pool, r = i.length; e < r; e++) {
var s = i[e];
if (s && s.hasSpace()) {
t = s;
break;
}
}
if (!t) {
var o = this._findUnitID();
t = this._buildUnit(o);
n[o] = t;
i.push(t);
e = i.length - 1;
}
var a = i[0];
if (a !== t) {
i[0] = t;
i[e] = a;
}
return t.pop();
};
r.push = function(t) {
var e = this._pool[t.unitID];
e.push(t.index);
this._findOrder.length > 1 && e.isAllFree() && this._destroyUnit(t.unitID);
return e;
};
e.exports = n;
}), {} ],
210: [ (function(t, e, i) {
"use strict";
var n = t("./mem-pool"), r = function(t) {
n.call(this, t);
};
(function() {
var t = function() {};
t.prototype = n.prototype;
r.prototype = new t();
})();
var s = r.prototype;
s._initNative = function() {
this._nativeMemPool = new renderer.NodeMemPool();
};
s._destroyUnit = function(t) {
n.prototype._destroyUnit.call(this, t);
this._nativeMemPool.removeNodeData(t);
};
e.exports = r;
}), {
"./mem-pool": 209
} ],
211: [ (function(t, e, i) {
"use strict";
var n = Uint32Array, r = Float32Array, s = Float32Array, o = Float32Array, a = Uint32Array, c = Uint32Array, l = Int32Array, u = Uint8Array, h = Uint8Array, _ = Uint32Array, f = t("./unit-base"), d = function(t, e) {
f.call(this, t, e);
var i = this._contentNum;
this.trsList = new r(10 * i);
this.localMatList = new s(16 * i);
this.worldMatList = new o(16 * i);
this.dirtyList = new n(1 * i);
this.parentList = new a(2 * i);
this.zOrderList = new c(1 * i);
this.cullingMaskList = new l(1 * i);
this.opacityList = new u(1 * i);
this.is3DList = new h(1 * i);
this.nodeList = new _(2 * i);
this._memPool._nativeMemPool.updateNodeData(t, this.dirtyList, this.trsList, this.localMatList, this.worldMatList, this.parentList, this.zOrderList, this.cullingMaskList, this.opacityList, this.is3DList, this.nodeList);
for (var d = 0; d < i; d++) {
var p = this._spacesData[d];
p.trs = new r(this.trsList.buffer, 40 * d, 10);
p.localMat = new s(this.localMatList.buffer, 64 * d, 16);
p.worldMat = new o(this.worldMatList.buffer, 64 * d, 16);
p.dirty = new n(this.dirtyList.buffer, 4 * d, 1);
p.parent = new a(this.parentList.buffer, 8 * d, 2);
p.zOrder = new c(this.zOrderList.buffer, 4 * d, 1);
p.cullingMask = new l(this.cullingMaskList.buffer, 4 * d, 1);
p.opacity = new u(this.opacityList.buffer, 1 * d, 1);
p.is3D = new h(this.is3DList.buffer, 1 * d, 1);
}
};
(function() {
var t = function() {};
t.prototype = f.prototype;
d.prototype = new t();
})();
e.exports = d;
}), {
"./unit-base": 212
} ],
212: [ (function(t, e, i) {
"use strict";
var n = function(t, e, i) {
i = i || 128;
this.unitID = t;
this._memPool = e;
this._data = new Uint16Array(2);
this._data[0] = 0;
this._data[1] = 0;
this._contentNum = i;
this._signData = new Uint16Array(2 * this._contentNum);
this._spacesData = [];
for (var n = 0; n < i; n++) {
var r = 2 * n;
this._signData[r + 0] = n + 1;
this._signData[r + 1] = 0;
this._spacesData[n] = {
index: n,
unitID: t
};
}
this._signData[2 * (i - 1)] = 65535;
}, r = n.prototype;
r.hasSpace = function() {
return 65535 !== this._data[0];
};
r.isAllFree = function() {
return 0 == this._data[1];
};
r.pop = function() {
var t = this._data[0];
if (65535 === t) return null;
var e = t, i = 2 * e, n = this._spacesData[e];
this._signData[i + 1] = 1;
this._data[0] = this._signData[i + 0];
this._data[1]++;
return n;
};
r.push = function(t) {
var e = 2 * t;
this._signData[e + 1] = 0;
this._signData[e + 0] = this._data[0];
this._data[0] = t;
this._data[1]--;
};
r.dump = function() {
for (var t = 0, e = this._data[0], i = ""; 65535 != e; ) {
t++;
i += e + "->";
e = this._signData[2 * e + 0];
}
for (var n = 0, r = "", s = this._contentNum, o = 0; o < s; o++) {
if (1 == this._signData[2 * o + 1]) {
n++;
r += o + "->";
}
}
var a = t + n;
console.log("unitID:", this.unitID, "spaceNum:", t, "calc using num:", n, "store using num:", this._data[1], "calc total num:", a, "actually total num:", this._contentNum);
console.log("free info:", i);
console.log("using info:", r);
n != this._data[1] && cc.error("using num error", "calc using num:", n, "store using num:", this._data[1]);
t + n != this._contentNum && cc.error("total num error", "calc total num:", a, "actually total num:", this._contentNum);
};
e.exports = n;
}), {} ],
213: [ (function(t, e, i) {
"use strict";
var n = t("../vmath"), r = t("./value-type"), s = t("../platform/js"), o = (function() {
function e(t, e, i, n) {
if ("object" == typeof t) {
e = t.g;
i = t.b;
n = t.a;
t = t.r;
}
t = t || 0;
e = e || 0;
i = i || 0;
n = "number" == typeof n ? n : 255;
this._val = (n << 24 >>> 0) + (i << 16) + (e << 8) + t;
}
s.extend(e, r);
t("../platform/CCClass").fastDefine("cc.Color", e, {
r: 0,
g: 0,
b: 0,
a: 255
});
var i = {
WHITE: [ 255, 255, 255, 255 ],
BLACK: [ 0, 0, 0, 255 ],
TRANSPARENT: [ 0, 0, 0, 0 ],
GRAY: [ 127.5, 127.5, 127.5 ],
RED: [ 255, 0, 0 ],
GREEN: [ 0, 255, 0 ],
BLUE: [ 0, 0, 255 ],
YELLOW: [ 255, 235, 4 ],
ORANGE: [ 255, 127, 0 ],
CYAN: [ 0, 255, 255 ],
MAGENTA: [ 255, 0, 255 ]
};
for (var o in i) s.get(e, o, (function(t) {
return function() {
return new e(t[0], t[1], t[2], t[3]);
};
})(i[o]));
var a = e.prototype;
a.clone = function() {
var t = new e();
t._val = this._val;
return t;
};
a.equals = function(t) {
return t && this._val === t._val;
};
a.lerp = function(t, i, n) {
n = n || new e();
var r = this.r, s = this.g, o = this.b, a = this.a;
n.r = r + (t.r - r) * i;
n.g = s + (t.g - s) * i;
n.b = o + (t.b - o) * i;
n.a = a + (t.a - a) * i;
return n;
};
a.toString = function() {
return "rgba(" + this.r.toFixed() + ", " + this.g.toFixed() + ", " + this.b.toFixed() + ", " + this.a.toFixed() + ")";
};
a.getR = function() {
return 255 & this._val;
};
a.setR = function(t) {
t = ~~cc.misc.clampf(t, 0, 255);
this._val = (4294967040 & this._val | t) >>> 0;
return this;
};
a.getG = function() {
return (65280 & this._val) >> 8;
};
a.setG = function(t) {
t = ~~cc.misc.clampf(t, 0, 255);
this._val = (4294902015 & this._val | t << 8) >>> 0;
return this;
};
a.getB = function() {
return (16711680 & this._val) >> 16;
};
a.setB = function(t) {
t = ~~cc.misc.clampf(t, 0, 255);
this._val = (4278255615 & this._val | t << 16) >>> 0;
return this;
};
a.getA = function() {
return (4278190080 & this._val) >>> 24;
};
a.setA = function(t) {
t = ~~cc.misc.clampf(t, 0, 255);
this._val = (16777215 & this._val | t << 24) >>> 0;
return this;
};
a._fastSetA = function(t) {
this._val = (16777215 & this._val | t << 24) >>> 0;
};
s.getset(a, "r", a.getR, a.setR, !0);
s.getset(a, "g", a.getG, a.setG, !0);
s.getset(a, "b", a.getB, a.setB, !0);
s.getset(a, "a", a.getA, a.setA, !0);
a.toCSS = function(t) {
return "rgba" === t ? "rgba(" + (0 | this.r) + "," + (0 | this.g) + "," + (0 | this.b) + "," + (this.a / 255).toFixed(2) + ")" : "rgb" === t ? "rgb(" + (0 | this.r) + "," + (0 | this.g) + "," + (0 | this.b) + ")" : "#" + this.toHEX(t);
};
a.fromHEX = function(t) {
t = 0 === t.indexOf("#") ? t.substring(1) : t;
var e = parseInt(t.substr(0, 2), 16) || 0, i = parseInt(t.substr(2, 2), 16) || 0, n = parseInt(t.substr(4, 2), 16) || 0, r = parseInt(t.substr(6, 2), 16) || 255;
this._val = (r << 24 >>> 0) + (n << 16) + (i << 8) + e;
return this;
};
a.toHEX = function(t) {
var e = [ (this.r < 16 ? "0" : "") + (0 | this.r).toString(16), (this.g < 16 ? "0" : "") + (0 | this.g).toString(16), (this.b < 16 ? "0" : "") + (0 | this.b).toString(16) ], i = -1;
if ("#rgb" === t) for (i = 0; i < e.length; ++i) e[i].length > 1 && (e[i] = e[i][0]); else if ("#rrggbb" === t) for (i = 0; i < e.length; ++i) 1 === e[i].length && (e[i] = "0" + e[i]); else "#rrggbbaa" === t && e.push((this.a < 16 ? "0" : "") + (0 | this.a).toString(16));
return e.join("");
};
a.toRGBValue = function() {
return 16777215 & this._val;
};
a.fromHSV = function(t, e, i) {
var n, r, s;
if (0 === e) n = r = s = i; else if (0 === i) n = r = s = 0; else {
1 === t && (t = 0);
t *= 6;
e = e;
i = i;
var o = Math.floor(t), a = t - o, c = i * (1 - e), l = i * (1 - e * a), u = i * (1 - e * (1 - a));
switch (o) {
case 0:
n = i;
r = u;
s = c;
break;

case 1:
n = l;
r = i;
s = c;
break;

case 2:
n = c;
r = i;
s = u;
break;

case 3:
n = c;
r = l;
s = i;
break;

case 4:
n = u;
r = c;
s = i;
break;

case 5:
n = i;
r = c;
s = l;
}
}
n *= 255;
r *= 255;
s *= 255;
this._val = (this.a << 24 >>> 0) + (s << 16) + (r << 8) + n;
return this;
};
a.toHSV = function() {
var t = this.r / 255, e = this.g / 255, i = this.b / 255, n = {
h: 0,
s: 0,
v: 0
}, r = Math.max(t, e, i), s = Math.min(t, e, i), o = 0;
n.v = r;
n.s = r ? (r - s) / r : 0;
if (n.s) {
o = r - s;
n.h = t === r ? (e - i) / o : e === r ? 2 + (i - t) / o : 4 + (t - e) / o;
n.h /= 6;
n.h < 0 && (n.h += 1);
} else n.h = 0;
return n;
};
a.set = function(t) {
if (t._val) this._val = t._val; else {
this.r = t.r;
this.g = t.g;
this.b = t.b;
this.a = t.a;
}
};
a.array = function(t) {
n.color4.array(t, this);
};
return e;
})();
cc.Color = o;
cc.color = function(t, e, i, n) {
if ("string" == typeof t) {
return new cc.Color().fromHEX(t);
}
return "object" == typeof t ? new cc.Color(t.r, t.g, t.b, t.a) : new cc.Color(t, e, i, n);
};
e.exports = cc.Color;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"../vmath": 225,
"./value-type": 219
} ],
214: [ (function(t, e, i) {
"use strict";
t("./value-type");
cc.vmath = t("../vmath").default;
e.exports = {
Vec2: t("./vec2"),
Vec3: t("./vec3"),
Vec4: t("./vec4"),
Quat: t("./quat"),
Mat4: t("./mat4"),
Size: t("./size"),
Rect: t("./rect"),
Color: t("./color")
};
}), {
"../vmath": 225,
"./color": 213,
"./mat4": 215,
"./quat": 216,
"./rect": 217,
"./size": 218,
"./value-type": 219,
"./vec2": 220,
"./vec3": 221,
"./vec4": 222
} ],
215: [ (function(t, e, i) {
"use strict";
var n = t("../vmath"), r = t("./value-type"), s = t("../platform/js"), o = t("../platform/CCClass");
function a(t, e, i, n, r, s, o, a, c, l, u, h, _, f, d, p) {
this.m = new Float32Array(16);
var m = this.m;
m[0] = t;
m[1] = e;
m[2] = i;
m[3] = n;
m[4] = r;
m[5] = s;
m[6] = o;
m[7] = a;
m[8] = c;
m[9] = l;
m[10] = u;
m[11] = h;
m[12] = _;
m[13] = f;
m[14] = d;
m[15] = p;
}
s.extend(a, r);
o.fastDefine("cc.Mat4", a, {
m00: 1,
m01: 0,
m02: 0,
m03: 0,
m04: 0,
m05: 1,
m06: 0,
m07: 0,
m08: 0,
m09: 0,
m10: 1,
m11: 0,
m12: 0,
m13: 0,
m14: 0,
m15: 1
});
for (var c = function(t) {
Object.defineProperty(a.prototype, "m" + t, {
get: function() {
return this.m[t];
},
set: function(e) {
this.m[t] = e;
}
});
}, l = 0; l < 16; l++) c(l);
s.mixin(a.prototype, {
clone: function() {
var t = this.m;
return new a(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);
},
set: function(t) {
var e = this.m, i = t.m;
e[0] = i[0];
e[1] = i[1];
e[2] = i[2];
e[3] = i[3];
e[4] = i[4];
e[5] = i[5];
e[6] = i[6];
e[7] = i[7];
e[8] = i[8];
e[9] = i[9];
e[10] = i[10];
e[11] = i[11];
e[12] = i[12];
e[13] = i[13];
e[14] = i[14];
e[15] = i[15];
return this;
},
equals: function(t) {
return n.mat4.exactEquals(this, t);
},
fuzzyEquals: function(t) {
return n.mat4.equals(this, t);
},
toString: function() {
var t = this.m;
return t ? "[\n" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ",\n" + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ",\n" + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ",\n" + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + "\n]" : "[\n1, 0, 0, 0\n0, 1, 0, 0\n0, 0, 1, 0\n0, 0, 0, 1\n]";
},
identity: function() {
return n.mat4.identity(this);
},
transpose: function(t) {
t = t || new cc.Mat4();
return n.mat4.transpose(t, this);
},
invert: function(t) {
t = t || new cc.Mat4();
return n.mat4.invert(t, this);
},
adjoint: function(t) {
t = t || new cc.Mat4();
return n.mat4.adjoint(t, this);
},
determinant: function() {
return n.mat4.determinant(this);
},
add: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.add(e, this, t);
},
sub: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.subtract(e, this, t);
},
mul: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.multiply(e, this, t);
},
mulScalar: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.mulScalar(e, this, t);
},
translate: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.translate(e, this, t);
},
scale: function(t, e) {
e = e || new cc.Mat4();
return n.mat4.scale(e, this, t);
},
rotate: function(t, e, i) {
i = i || new cc.Mat4();
return n.mat4.rotate(i, this, t, e);
},
getTranslation: function(t) {
t = t || new cc.Vec3();
return n.mat4.getTranslation(t, this);
},
getScale: function(t) {
t = t || new cc.Vec3();
return n.mat4.getScaling(t, this);
},
getRotation: function(t) {
t = t || new cc.Quat();
return n.mat4.getRotation(t, this);
},
fromRTS: function(t, e, i) {
return n.mat4.fromRTS(this, t, e, i);
},
fromQuat: function(t) {
return n.mat4.fromQuat(this, t);
},
array: function(t) {
return n.mat4.array(t, this);
}
});
cc.mat4 = function(t, e, i, r, s, o, c, l, u, h, _, f, d, p, m, y) {
var v = new a(t, e, i, r, s, o, c, l, u, h, _, f, d, p, m, y);
void 0 === t && n.mat4.identity(v);
return v;
};
e.exports = cc.Mat4 = a;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"../vmath": 225,
"./value-type": 219
} ],
216: [ (function(t, e, i) {
"use strict";
var n = t("./value-type"), r = t("../platform/js"), s = t("../platform/CCClass"), o = t("../vmath/quat");
function a(t, e, i, n) {
if (t && "object" == typeof t) {
i = t.z;
e = t.y;
n = t.w;
t = t.x;
}
this.x = t || 0;
this.y = e || 0;
this.z = i || 0;
this.w = n || 1;
}
r.extend(a, n);
s.fastDefine("cc.Quat", a, {
x: 0,
y: 0,
z: 0,
w: 1
});
var c = a.prototype;
c.clone = function() {
return new a(this.x, this.y, this.z, this.w);
};
c.set = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
this.w = t.w;
return this;
};
c.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.z === t.z && this.w === t.w;
};
c.toEuler = function(t) {
o.toEuler(t, this);
return t;
};
c.fromEuler = function(t) {
o.fromEuler(this, t.x, t.y, t.z);
return this;
};
c.lerp = function(t, e, i) {
i = i || new cc.Quat();
o.slerp(i, this, t, e);
return i;
};
c.mul = function(t, e) {
e = e || new cc.Quat();
o.mul(e, this, t);
return e;
};
c.array = function(t) {
o.array(t, this);
};
c.rotateAround = function(t, e, i, n) {
n = n || new cc.Quat();
return o.rotateAround(n, t, e, i);
};
cc.quat = function(t, e, i, n) {
return new a(t, e, i, n);
};
e.exports = cc.Quat = a;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"../vmath/quat": 230,
"./value-type": 219
} ],
217: [ (function(t, e, i) {
"use strict";
var n = t("./value-type"), r = t("../platform/js");
function s(t, e, i, n) {
if (t && "object" == typeof t) {
e = t.y;
i = t.width;
n = t.height;
t = t.x;
}
this.x = t || 0;
this.y = e || 0;
this.width = i || 0;
this.height = n || 0;
}
r.extend(s, n);
t("../platform/CCClass").fastDefine("cc.Rect", s, {
x: 0,
y: 0,
width: 0,
height: 0
});
s.fromMinMax = function(t, e) {
var i = Math.min(t.x, e.x), n = Math.min(t.y, e.y);
return new s(i, n, Math.max(t.x, e.x) - i, Math.max(t.y, e.y) - n);
};
var o = s.prototype;
o.clone = function() {
return new s(this.x, this.y, this.width, this.height);
};
o.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.width === t.width && this.height === t.height;
};
o.lerp = function(t, e, i) {
i = i || new s();
var n = this.x, r = this.y, o = this.width, a = this.height;
i.x = n + (t.x - n) * e;
i.y = r + (t.y - r) * e;
i.width = o + (t.width - o) * e;
i.height = a + (t.height - a) * e;
return i;
};
o.set = function(t) {
this.x = t.x;
this.y = t.y;
this.width = t.width;
this.height = t.height;
};
o.intersects = function(t) {
var e = this.x + this.width, i = this.y + this.height, n = t.x + t.width, r = t.y + t.height;
return !(e < t.x || n < this.x || i < t.y || r < this.y);
};
o.intersection = function(t, e) {
var i = this.x, n = this.y, r = this.x + this.width, s = this.y + this.height, o = e.x, a = e.y, c = e.x + e.width, l = e.y + e.height;
t.x = Math.max(i, o);
t.y = Math.max(n, a);
t.width = Math.min(r, c) - t.x;
t.height = Math.min(s, l) - t.y;
return t;
};
o.contains = function(t) {
return this.x <= t.x && this.x + this.width >= t.x && this.y <= t.y && this.y + this.height >= t.y;
};
o.containsRect = function(t) {
return this.x <= t.x && this.x + this.width >= t.x + t.width && this.y <= t.y && this.y + this.height >= t.y + t.height;
};
o.union = function(t, e) {
var i = this.x, n = this.y, r = this.width, s = this.height, o = e.x, a = e.y, c = e.width, l = e.height;
t.x = Math.min(i, o);
t.y = Math.min(n, a);
t.width = Math.max(i + r, o + c) - t.x;
t.height = Math.max(n + s, a + l) - t.y;
return t;
};
o.transformMat4 = function(t, e) {
var i = this.x, n = this.y, r = i + this.width, s = n + this.height, o = e.m, a = o[0] * i + o[4] * n + o[12], c = o[1] * i + o[5] * n + o[13], l = o[0] * r + o[4] * n + o[12], u = o[1] * r + o[5] * n + o[13], h = o[0] * i + o[4] * s + o[12], _ = o[1] * i + o[5] * s + o[13], f = o[0] * r + o[4] * s + o[12], d = o[1] * r + o[5] * s + o[13], p = Math.min(a, l, h, f), m = Math.max(a, l, h, f), y = Math.min(c, u, _, d), v = Math.max(c, u, _, d);
t.x = p;
t.y = y;
t.width = m - p;
t.height = v - y;
return t;
};
o.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.width.toFixed(2) + ", " + this.height.toFixed(2) + ")";
};
r.getset(o, "xMin", (function() {
return this.x;
}), (function(t) {
this.width += this.x - t;
this.x = t;
}));
r.getset(o, "yMin", (function() {
return this.y;
}), (function(t) {
this.height += this.y - t;
this.y = t;
}));
r.getset(o, "xMax", (function() {
return this.x + this.width;
}), (function(t) {
this.width = t - this.x;
}));
r.getset(o, "yMax", (function() {
return this.y + this.height;
}), (function(t) {
this.height = t - this.y;
}));
r.getset(o, "center", (function() {
return new cc.Vec2(this.x + .5 * this.width, this.y + .5 * this.height);
}), (function(t) {
this.x = t.x - .5 * this.width;
this.y = t.y - .5 * this.height;
}));
r.getset(o, "origin", (function() {
return new cc.Vec2(this.x, this.y);
}), (function(t) {
this.x = t.x;
this.y = t.y;
}));
r.getset(o, "size", (function() {
return new cc.Size(this.width, this.height);
}), (function(t) {
this.width = t.width;
this.height = t.height;
}));
cc.Rect = s;
cc.rect = function(t, e, i, n) {
return new s(t, e, i, n);
};
e.exports = cc.Rect;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"./value-type": 219
} ],
218: [ (function(t, e, i) {
"use strict";
var n = t("./value-type"), r = t("../platform/js");
function s(t, e) {
if (t && "object" == typeof t) {
e = t.height;
t = t.width;
}
this.width = t || 0;
this.height = e || 0;
}
r.extend(s, n);
t("../platform/CCClass").fastDefine("cc.Size", s, {
width: 0,
height: 0
});
r.get(s, "ZERO", (function() {
return new s(0, 0);
}));
var o = s.prototype;
o.clone = function() {
return new s(this.width, this.height);
};
o.equals = function(t) {
return t && this.width === t.width && this.height === t.height;
};
o.lerp = function(t, e, i) {
i = i || new s();
var n = this.width, r = this.height;
i.width = n + (t.width - n) * e;
i.height = r + (t.height - r) * e;
return i;
};
o.set = function(t) {
this.width = t.width;
this.height = t.height;
};
o.toString = function() {
return "(" + this.width.toFixed(2) + ", " + this.height.toFixed(2) + ")";
};
cc.size = function(t, e) {
return new s(t, e);
};
cc.Size = e.exports = s;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"./value-type": 219
} ],
219: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
function r() {}
n.setClassName("cc.ValueType", r);
var s = r.prototype;
0;
s.toString = function() {
return "" + {};
};
cc.ValueType = e.exports = r;
}), {
"../platform/js": 146
} ],
220: [ (function(t, e, i) {
"use strict";
var n = t("../vmath"), r = t("./value-type"), s = t("../platform/js"), o = t("../platform/CCClass"), a = t("../utils/misc");
function c(t, e) {
if (t && "object" == typeof t) {
e = t.y;
t = t.x;
}
this.x = t || 0;
this.y = e || 0;
}
s.extend(c, r);
o.fastDefine("cc.Vec2", c, {
x: 0,
y: 0
});
var l = c.prototype;
s.value(l, "z", 0, !0);
l.clone = function() {
return new c(this.x, this.y);
};
l.set = function(t) {
this.x = t.x;
this.y = t.y;
return this;
};
l.equals = function(t) {
return t && this.x === t.x && this.y === t.y;
};
l.fuzzyEquals = function(t, e) {
return this.x - e <= t.x && t.x <= this.x + e && this.y - e <= t.y && t.y <= this.y + e;
};
l.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ")";
};
l.lerp = function(t, e, i) {
i = i || new c();
var n = this.x, r = this.y;
i.x = n + (t.x - n) * e;
i.y = r + (t.y - r) * e;
return i;
};
l.clampf = function(t, e) {
this.x = a.clampf(this.x, t.x, e.x);
this.y = a.clampf(this.y, t.y, e.y);
return this;
};
l.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
return this;
};
l.add = function(t, e) {
(e = e || new c()).x = this.x + t.x;
e.y = this.y + t.y;
return e;
};
l.subSelf = function(t) {
this.x -= t.x;
this.y -= t.y;
return this;
};
l.sub = function(t, e) {
(e = e || new c()).x = this.x - t.x;
e.y = this.y - t.y;
return e;
};
l.mulSelf = function(t) {
this.x *= t;
this.y *= t;
return this;
};
l.mul = function(t, e) {
(e = e || new c()).x = this.x * t;
e.y = this.y * t;
return e;
};
l.scaleSelf = function(t) {
this.x *= t.x;
this.y *= t.y;
return this;
};
l.scale = function(t, e) {
(e = e || new c()).x = this.x * t.x;
e.y = this.y * t.y;
return e;
};
l.divSelf = function(t) {
this.x /= t;
this.y /= t;
return this;
};
l.div = function(t, e) {
(e = e || new c()).x = this.x / t;
e.y = this.y / t;
return e;
};
l.negSelf = function() {
this.x = -this.x;
this.y = -this.y;
return this;
};
l.neg = function(t) {
(t = t || new c()).x = -this.x;
t.y = -this.y;
return t;
};
l.dot = function(t) {
return this.x * t.x + this.y * t.y;
};
l.cross = function(t) {
return this.x * t.y - this.y * t.x;
};
l.mag = function() {
return Math.sqrt(this.x * this.x + this.y * this.y);
};
l.magSqr = function() {
return this.x * this.x + this.y * this.y;
};
l.normalizeSelf = function() {
var t = this.x * this.x + this.y * this.y;
if (1 === t) return this;
if (0 === t) return this;
var e = 1 / Math.sqrt(t);
this.x *= e;
this.y *= e;
return this;
};
l.normalize = function(t) {
(t = t || new c()).x = this.x;
t.y = this.y;
t.normalizeSelf();
return t;
};
l.angle = function(t) {
var e = this.magSqr(), i = t.magSqr();
if (0 === e || 0 === i) {
console.warn("Can't get angle between zero vector");
return 0;
}
var n = this.dot(t) / Math.sqrt(e * i);
n = a.clampf(n, -1, 1);
return Math.acos(n);
};
l.signAngle = function(t) {
var e = this.angle(t);
return this.cross(t) < 0 ? -e : e;
};
l.rotate = function(t, e) {
(e = e || new c()).x = this.x;
e.y = this.y;
return e.rotateSelf(t);
};
l.rotateSelf = function(t) {
var e = Math.sin(t), i = Math.cos(t), n = this.x;
this.x = i * n - e * this.y;
this.y = e * n + i * this.y;
return this;
};
l.project = function(t) {
return t.mul(this.dot(t) / t.dot(t));
};
l.transformMat4 = function(t, e) {
e = e || new c();
n.vec2.transformMat4(e, this, t);
};
l.fromTranslation = function(t) {
this.x = t[0];
this.y = t[1];
return this;
};
l.toTranslation = function(t) {
t[0] = this.x;
t[1] = this.y;
};
l.fromScale = function(t) {
this.x = t[7];
this.y = t[8];
return this;
};
l.toScale = function(t) {
t[7] = this.x;
t[8] = this.y;
};
l.array = function(t) {
n.vec2.array(t, this);
};
s.get(c, "ONE", (function() {
return new c(1, 1);
}));
s.get(c, "ZERO", (function() {
return new c(0, 0);
}));
s.get(c, "UP", (function() {
return new c(0, 1);
}));
s.get(c, "RIGHT", (function() {
return new c(1, 0);
}));
cc.Vec2 = c;
cc.v2 = function(t, e) {
return new c(t, e);
};
cc.p = cc.v2;
e.exports = cc.Vec2;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"../utils/misc": 200,
"../vmath": 225,
"./value-type": 219
} ],
221: [ (function(t, e, i) {
"use strict";
var n = t("../vmath"), r = t("./value-type"), s = t("../platform/js"), o = t("../platform/CCClass"), a = t("../utils/misc"), c = t("./vec2").prototype;
function l(t, e, i) {
if (t && "object" == typeof t) {
i = t.z;
e = t.y;
t = t.x;
}
this.x = t || 0;
this.y = e || 0;
this.z = i || 0;
}
s.extend(l, r);
o.fastDefine("cc.Vec3", l, {
x: 0,
y: 0,
z: 0
});
var u = l.prototype;
u.clone = function() {
return new l(this.x, this.y, this.z);
};
u.set = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
return this;
};
u.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.z === t.z;
};
u.fuzzyEquals = function(t, e) {
return this.x - e <= t.x && t.x <= this.x + e && this.y - e <= t.y && t.y <= this.y + e && this.z - e <= t.z && t.z <= this.z + e;
};
u.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.z.toFixed(2) + ")";
};
u.lerp = function(t, e, i) {
i = i || new l();
n.vec3.lerp(i, this, t, e);
return i;
};
u.clampf = function(t, e) {
this.x = a.clampf(this.x, t.x, e.x);
this.y = a.clampf(this.y, t.y, e.y);
this.z = a.clampf(this.z, t.z, e.z);
return this;
};
u.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
return this;
};
u.add = function(t, e) {
(e = e || new l()).x = this.x + t.x;
e.y = this.y + t.y;
e.z = this.z + t.z;
return e;
};
u.subSelf = function(t) {
this.x -= t.x;
this.y -= t.y;
this.z -= t.z;
return this;
};
u.sub = function(t, e) {
(e = e || new l()).x = this.x - t.x;
e.y = this.y - t.y;
e.z = this.z - t.z;
return e;
};
u.mulSelf = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
return this;
};
u.mul = function(t, e) {
(e = e || new l()).x = this.x * t;
e.y = this.y * t;
e.z = this.z * t;
return e;
};
u.scaleSelf = function(t) {
this.x *= t.x;
this.y *= t.y;
this.z *= t.z;
return this;
};
u.scale = function(t, e) {
(e = e || new l()).x = this.x * t.x;
e.y = this.y * t.y;
e.z = this.z * t.z;
return e;
};
u.divSelf = function(t) {
this.x /= t;
this.y /= t;
this.z /= t;
return this;
};
u.div = function(t, e) {
(e = e || new l()).x = this.x / t;
e.y = this.y / t;
e.z = this.z / t;
return e;
};
u.negSelf = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
return this;
};
u.neg = function(t) {
(t = t || new l()).x = -this.x;
t.y = -this.y;
t.z = -this.z;
return t;
};
u.dot = function(t) {
return this.x * t.x + this.y * t.y + this.z * t.z;
};
u.cross = function(t, e) {
e = e || new l();
n.vec3.cross(e, this, t);
return e;
};
u.mag = function() {
return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
};
u.magSqr = function() {
return this.x * this.x + this.y * this.y + this.z * this.z;
};
u.normalizeSelf = function() {
n.vec3.normalize(this, this);
return this;
};
u.normalize = function(t) {
t = t || new l();
n.vec3.normalize(t, this);
return t;
};
u.transformMat4 = function(t, e) {
e = e || new l();
n.vec3.transformMat4(e, this, t);
};
u.angle = c.angle;
u.project = c.project;
u.signAngle = function(t) {
cc.warnID(1408, "vec3.signAngle", "v2.1", "cc.v2(selfVector).signAngle(vector)");
var e = new cc.Vec2(this.x, this.y), i = new cc.Vec2(t.x, t.y);
return e.signAngle(i);
};
u.rotate = function(t, e) {
cc.warnID(1408, "vec3.rotate", "v2.1", "cc.v2(selfVector).rotate(radians, out)");
return c.rotate.call(this, t, e);
};
u.rotateSelf = function(t) {
cc.warnID(1408, "vec3.rotateSelf", "v2.1", "cc.v2(selfVector).rotateSelf(radians)");
return c.rotateSelf.call(this, t);
};
u.array = function(t) {
n.vec3.array(t, this);
};
s.get(l, "ONE", (function() {
return new l(1, 1, 1);
}));
s.get(l, "ZERO", (function() {
return new l(0, 0, 0);
}));
s.get(l, "UP", (function() {
return new l(0, 1, 0);
}));
s.get(l, "RIGHT", (function() {
return new l(1, 0, 0);
}));
s.get(l, "FRONT", (function() {
return new l(0, 0, 1);
}));
cc.v3 = function(t, e, i) {
return new l(t, e, i);
};
e.exports = cc.Vec3 = l;
}), {
"../platform/CCClass": 126,
"../platform/js": 146,
"../utils/misc": 200,
"../vmath": 225,
"./value-type": 219,
"./vec2": 220
} ],
222: [ (function(t, e, i) {
"use strict";
var n = a(t("./value-type")), r = a(t("../platform/CCClass")), s = t("../vmath"), o = t("../utils/misc");
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function l(t, e) {
if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return !e || "object" != typeof e && "function" != typeof e ? t : e;
}
function u(t, e) {
if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
t.prototype = Object.create(e && e.prototype, {
constructor: {
value: t,
enumerable: !1,
writable: !0,
configurable: !0
}
});
e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
}
var h = (function(t) {
u(e, t);
function e(i, n, r, s) {
c(this, e);
var o = l(this, t.call(this));
if (i && "object" == typeof i) {
s = i.w;
r = i.z;
n = i.y;
i = i.x;
}
o.x = i || 0;
o.y = n || 0;
o.z = r || 0;
o.w = s || 0;
return o;
}
e.prototype.clone = function() {
return new e(this.x, this.y, this.z, this.w);
};
e.prototype.set = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
this.w = t.w;
return this;
};
e.prototype.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.z === t.z && this.w === t.w;
};
e.prototype.fuzzyEquals = function(t, e) {
return this.x - e <= t.x && t.x <= this.x + e && this.y - e <= t.y && t.y <= this.y + e && this.z - e <= t.z && t.z <= this.z + e && this.w - e <= t.w && t.w <= this.w + e;
};
e.prototype.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.z.toFixed(2) + ", " + this.w.toFixed(2) + ")";
};
e.prototype.lerp = function(t, i, n) {
n = n || new e();
s.vec4.lerp(n, this, t, i);
return n;
};
e.prototype.clampf = function(t, e) {
this.x = (0, o.clampf)(this.x, t.x, e.x);
this.y = (0, o.clampf)(this.y, t.y, e.y);
this.z = (0, o.clampf)(this.z, t.z, e.z);
this.w = (0, o.clampf)(this.w, t.w, e.w);
return this;
};
e.prototype.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
this.w += t.w;
return this;
};
e.prototype.add = function(t, i) {
(i = i || new e()).x = this.x + t.x;
i.y = this.y + t.y;
i.z = this.z + t.z;
i.w = this.w + t.w;
return i;
};
e.prototype.subSelf = function(t) {
this.x -= t.x;
this.y -= t.y;
this.z -= t.z;
this.w -= t.w;
return this;
};
e.prototype.sub = function(t, i) {
(i = i || new e()).x = this.x - t.x;
i.y = this.y - t.y;
i.z = this.z - t.z;
i.w = this.w - t.w;
return i;
};
e.prototype.mulSelf = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
this.w *= t;
return this;
};
e.prototype.mul = function(t, i) {
(i = i || new e()).x = this.x * t;
i.y = this.y * t;
i.z = this.z * t;
i.w = this.w * t;
return i;
};
e.prototype.scaleSelf = function(t) {
this.x *= t.x;
this.y *= t.y;
this.z *= t.z;
this.w *= t.w;
return this;
};
e.prototype.scale = function(t, i) {
(i = i || new e()).x = this.x * t.x;
i.y = this.y * t.y;
i.z = this.z * t.z;
i.w = this.w * t.w;
return i;
};
e.prototype.divSelf = function(t) {
this.x /= t;
this.y /= t;
this.z /= t;
this.w /= t;
return this;
};
e.prototype.div = function(t, i) {
(i = i || new e()).x = this.x / t;
i.y = this.y / t;
i.z = this.z / t;
i.w = this.w / t;
return i;
};
e.prototype.negSelf = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
this.w = -this.w;
return this;
};
e.prototype.neg = function(t) {
(t = t || new e()).x = -this.x;
t.y = -this.y;
t.z = -this.z;
t.w = -this.w;
return t;
};
e.prototype.dot = function(t) {
return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
};
e.prototype.cross = function(t, i) {
i = i || new e();
s.vec4.cross(i, this, t);
return i;
};
e.prototype.mag = function() {
var t = this.x, e = this.y, i = this.z, n = this.w;
return Math.sqrt(t * t + e * e + i * i + n * n);
};
e.prototype.magSqr = function() {
var t = this.x, e = this.y, i = this.z, n = this.w;
return t * t + e * e + i * i + n * n;
};
e.prototype.normalizeSelf = function() {
s.vec4.normalize(this, this);
return this;
};
e.prototype.normalize = function(t) {
t = t || new e();
s.vec4.normalize(t, this);
return t;
};
e.prototype.transformMat4 = function(t, i) {
i = i || new e();
s.vec4.transformMat4(i, this, t);
return i;
};
e.prototype.array = function(t) {
s.vec4.array(t, this);
};
return e;
})(n.default);
r.default.fastDefine("cc.Vec4", h, {
x: 0,
y: 0,
z: 0,
w: 0
});
cc.v4 = function(t, e, i, n) {
return new h(t, e, i, n);
};
e.exports = cc.Vec4 = h;
}), {
"../platform/CCClass": 126,
"../utils/misc": 200,
"../vmath": 225,
"./value-type": 219
} ],
223: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
r(this, t);
this.r = e;
this.g = i;
this.b = n;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1);
};
t.clone = function(e) {
return new t(e.r, e.g, e.b);
};
t.copy = function(t, e) {
t.r = e.r;
t.g = e.g;
t.b = e.b;
return t;
};
t.set = function(t, e, i, n) {
t.r = e;
t.g = i;
t.b = n;
return t;
};
t.fromHex = function(t, e) {
var i = (e >> 16) / 255, n = (e >> 8 & 255) / 255, r = (255 & e) / 255;
t.r = i;
t.g = n;
t.b = r;
return t;
};
t.add = function(t, e, i) {
t.r = e.r + i.r;
t.g = e.g + i.g;
t.b = e.b + i.b;
return t;
};
t.subtract = function(t, e, i) {
t.r = e.r - i.r;
t.g = e.g - i.g;
t.b = e.b - i.b;
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiply = function(t, e, i) {
t.r = e.r * i.r;
t.g = e.g * i.g;
t.b = e.b * i.b;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.divide = function(t, e, i) {
t.r = e.r / i.r;
t.g = e.g / i.g;
t.b = e.b / i.b;
return t;
};
t.div = function(e, i, n) {
return t.divide(e, i, n);
};
t.scale = function(t, e, i) {
t.r = e.r * i;
t.g = e.g * i;
t.b = e.b * i;
return t;
};
t.lerp = function(t, e, i, n) {
var r = e.r, s = e.g, o = e.b;
t.r = r + n * (i.r - r);
t.g = s + n * (i.g - s);
t.b = o + n * (i.b - o);
return t;
};
t.str = function(t) {
return "color3(" + t.r + ", " + t.g + ", " + t.b + ")";
};
t.array = function(t, e) {
var i = e instanceof cc.Color ? 1 / 255 : 1;
t[0] = e.r * i;
t[1] = e.g * i;
t[2] = e.b * i;
return t;
};
t.exactEquals = function(t, e) {
return t.r === e.r && t.g === e.g && t.b === e.b;
};
t.equals = function(t, e) {
var i = t.r, r = t.g, s = t.b, o = e.r, a = e.g, c = e.b;
return Math.abs(i - o) <= n.EPSILON * Math.max(1, Math.abs(i), Math.abs(o)) && Math.abs(r - a) <= n.EPSILON * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(s - c) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(c));
};
t.hex = function(t) {
return 255 * t.r << 16 | 255 * t.g << 8 | 255 * t.b;
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
224: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
r(this, t);
this.r = e;
this.g = i;
this.b = n;
this.a = s;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1);
};
t.clone = function(e) {
return new t(e.r, e.g, e.b, e.a);
};
t.copy = function(t, e) {
t.r = e.r;
t.g = e.g;
t.b = e.b;
t.a = e.a;
return t;
};
t.set = function(t, e, i, n, r) {
t.r = e;
t.g = i;
t.b = n;
t.a = r;
return t;
};
t.fromHex = function(t, e) {
var i = (e >> 24) / 255, n = (e >> 16 & 255) / 255, r = (e >> 8 & 255) / 255, s = (255 & e) / 255;
t.r = i;
t.g = n;
t.b = r;
t.a = s;
return t;
};
t.add = function(t, e, i) {
t.r = e.r + i.r;
t.g = e.g + i.g;
t.b = e.b + i.b;
t.a = e.a + i.a;
return t;
};
t.subtract = function(t, e, i) {
t.r = e.r - i.r;
t.g = e.g - i.g;
t.b = e.b - i.b;
t.a = e.a - i.a;
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiply = function(t, e, i) {
t.r = e.r * i.r;
t.g = e.g * i.g;
t.b = e.b * i.b;
t.a = e.a * i.a;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.divide = function(t, e, i) {
t.r = e.r / i.r;
t.g = e.g / i.g;
t.b = e.b / i.b;
t.a = e.a / i.a;
return t;
};
t.div = function(e, i, n) {
return t.divide(e, i, n);
};
t.scale = function(t, e, i) {
t.r = e.r * i;
t.g = e.g * i;
t.b = e.b * i;
t.a = e.a * i;
return t;
};
t.lerp = function(t, e, i, n) {
var r = e.r, s = e.g, o = e.b, a = e.a;
t.r = r + n * (i.r - r);
t.g = s + n * (i.g - s);
t.b = o + n * (i.b - o);
t.a = a + n * (i.a - a);
return t;
};
t.str = function(t) {
return "color4(" + t.r + ", " + t.g + ", " + t.b + ", " + t.a + ")";
};
t.array = function(t, e) {
var i = e instanceof cc.Color || e.a > 1 ? 1 / 255 : 1;
t[0] = e.r * i;
t[1] = e.g * i;
t[2] = e.b * i;
t[3] = e.a * i;
return t;
};
t.exactEquals = function(t, e) {
return t.r === e.r && t.g === e.g && t.b === e.b && t.a === e.a;
};
t.equals = function(t, e) {
var i = t.r, r = t.g, s = t.b, o = t.a, a = e.r, c = e.g, l = e.b, u = e.a;
return Math.abs(i - a) <= n.EPSILON * Math.max(1, Math.abs(i), Math.abs(a)) && Math.abs(r - c) <= n.EPSILON * Math.max(1, Math.abs(r), Math.abs(c)) && Math.abs(s - l) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(l)) && Math.abs(o - u) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(u));
};
t.hex = function(t) {
return (255 * t.r << 24 | 255 * t.g << 16 | 255 * t.b << 8 | 255 * t.a) >>> 0;
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
225: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.color4 = i.color3 = i.mat4 = i.mat3 = i.mat23 = i.mat2 = i.trs = i.quat = i.vec4 = i.vec3 = i.vec2 = void 0;
var n = t("./utils");
Object.keys(n).forEach((function(t) {
"default" !== t && "__esModule" !== t && Object.defineProperty(i, t, {
enumerable: !0,
get: function() {
return n[t];
}
});
}));
var r = p(t("./vec2")), s = p(t("./vec3")), o = p(t("./vec4")), a = p(t("./quat")), c = p(t("./trs")), l = p(t("./mat2")), u = p(t("./mat23")), h = p(t("./mat3")), _ = p(t("./mat4")), f = p(t("./color3")), d = p(t("./color4"));
function p(t) {
return t && t.__esModule ? t : {
default: t
};
}
i.vec2 = r.default;
i.vec3 = s.default;
i.vec4 = o.default;
i.quat = a.default;
i.trs = c.default;
i.mat2 = l.default;
i.mat23 = u.default;
i.mat3 = h.default;
i.mat4 = _.default;
i.color3 = f.default;
i.color4 = d.default;
i.default = {
vec2: r.default,
vec3: s.default,
vec4: o.default,
quat: a.default,
trs: c.default,
mat2: l.default,
mat23: u.default,
mat3: h.default,
mat4: _.default,
color3: f.default,
color4: d.default
};
}), {
"./color3": 223,
"./color4": 224,
"./mat2": 226,
"./mat23": 227,
"./mat3": 228,
"./mat4": 229,
"./quat": 230,
"./trs": 231,
"./utils": 232,
"./vec2": 233,
"./vec3": 234,
"./vec4": 235
} ],
226: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
r(this, t);
if (e instanceof Float32Array) if (i) {
this.m = new Float32Array(4);
this.m.set(e);
} else this.m = e; else {
this.m = new Float32Array(4);
var o = this.m;
o[0] = e;
o[1] = i;
o[2] = n;
o[3] = s;
}
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1);
};
t.clone = function(e) {
var i = e.m;
return new t(i[0], i[1], i[2], i[3]);
};
t.copy = function(t, e) {
t.m.set(e.m);
return t;
};
t.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 1;
return t;
};
t.set = function(t, e, i, n, r) {
var s = t.m;
s[0] = e;
s[1] = i;
s[2] = n;
s[3] = r;
return t;
};
t.transpose = function(t, e) {
var i = t.m, n = e.m;
if (t === e) {
var r = n[1];
i[1] = n[2];
i[2] = r;
} else {
i[0] = n[0];
i[1] = n[2];
i[2] = n[1];
i[3] = n[3];
}
return t;
};
t.invert = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = r * a - o * s;
if (!c) return null;
c = 1 / c;
n[0] = a * c;
n[1] = -s * c;
n[2] = -o * c;
n[3] = r * c;
return t;
};
t.adjoint = function(t, e) {
var i = t.m, n = e.m, r = n[0];
i[0] = n[3];
i[1] = -n[1];
i[2] = -n[2];
i[3] = r;
return t;
};
t.determinant = function(t) {
var e = t.m;
return e[0] * e[3] - e[2] * e[1];
};
t.multiply = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = bm[0], u = bm[1], h = bm[2], _ = bm[3];
r[0] = s * l + a * u;
r[1] = o * l + c * u;
r[2] = s * h + a * _;
r[3] = o * h + c * _;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.rotate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = Math.sin(i), u = Math.cos(i);
r[0] = s * u + a * l;
r[1] = o * u + c * l;
r[2] = s * -l + a * u;
r[3] = o * -l + c * u;
return t;
};
t.scale = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = i.x, u = i.y;
r[0] = s * l;
r[1] = o * l;
r[2] = a * u;
r[3] = c * u;
return t;
};
t.fromRotation = function(t, e) {
var i = t.m, n = Math.sin(e), r = Math.cos(e);
i[0] = r;
i[1] = n;
i[2] = -n;
i[3] = r;
return t;
};
t.fromScaling = function(t, e) {
var i = t.m;
i[0] = e.x;
i[1] = 0;
i[2] = 0;
i[3] = e.y;
return t;
};
t.str = function(t) {
var e = t.m;
return "mat2(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3] + ")";
};
t.array = function(t, e) {
var i = e.m;
t[0] = i[0];
t[1] = i[1];
t[2] = i[2];
t[3] = i[3];
return t;
};
t.frob = function(t) {
var e = t.m;
return Math.sqrt(Math.pow(e[0], 2) + Math.pow(e[1], 2) + Math.pow(e[2], 2) + Math.pow(e[3], 2));
};
t.LDU = function(t, e, i, n) {
var r = t.m, s = i.m, o = n.m;
r[2] = o[2] / o[0];
s[0] = o[0];
s[1] = o[1];
s[3] = o[3] - r[2] * s[1];
};
t.add = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] + r[0];
s[1] = n[1] + r[1];
s[2] = n[2] + r[2];
s[3] = n[3] + r[3];
return t;
};
t.subtract = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] - r[0];
s[1] = n[1] - r[1];
s[2] = n[2] - r[2];
s[3] = n[3] - r[3];
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.exactEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3];
};
t.equals = function(t, e) {
var i = t.m, r = e.m, s = i[0], o = i[1], a = i[2], c = i[3], l = r[0], u = r[1], h = r[2], _ = r[3];
return Math.abs(s - l) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(l)) && Math.abs(o - u) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(u)) && Math.abs(a - h) <= n.EPSILON * Math.max(1, Math.abs(a), Math.abs(h)) && Math.abs(c - _) <= n.EPSILON * Math.max(1, Math.abs(c), Math.abs(_));
};
t.multiplyScalar = function(t, e, i) {
var n = e.m, r = t.m;
r[0] = n[0] * i;
r[1] = n[1] * i;
r[2] = n[2] * i;
r[3] = n[3] * i;
return t;
};
t.multiplyScalarAndAdd = function(t, e, i, n) {
var r = e.m, s = i.m, o = t.m;
o[0] = r[0] + s[0] * n;
o[1] = r[1] + s[1] * n;
o[2] = r[2] + s[2] * n;
o[3] = r[3] + s[3] * n;
return t;
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
227: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
r(this, t);
if (e instanceof Float32Array) if (i) {
this.m = new Float32Array(6);
this.m.set(e);
} else this.m = e; else {
this.m = new Float32Array(6);
var c = this.m;
c[0] = e;
c[1] = i;
c[2] = n;
c[3] = s;
c[4] = o;
c[5] = a;
}
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0);
};
t.clone = function(e) {
var i = e.m;
return new t(i[0], i[1], i[2], i[3], i[4], i[5]);
};
t.copy = function(t, e) {
t.m.set(e.m);
return t;
};
t.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 1;
e[4] = 0;
e[5] = 0;
return t;
};
t.set = function(t, e, i, n, r, s, o) {
var a = t.m;
a[0] = e;
a[1] = i;
a[2] = n;
a[3] = r;
a[4] = s;
a[5] = o;
return t;
};
t.invert = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = r * a - s * o;
if (!u) return null;
u = 1 / u;
n[0] = a * u;
n[1] = -s * u;
n[2] = -o * u;
n[3] = r * u;
n[4] = (o * l - a * c) * u;
n[5] = (s * c - r * l) * u;
return t;
};
t.determinant = function(t) {
var e = t.m;
return e[0] * e[3] - e[1] * e[2];
};
t.multiply = function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[2], l = n[3], u = n[4], h = n[5], _ = r[0], f = r[1], d = r[2], p = r[3], m = r[4], y = r[5];
s[0] = o * _ + c * f;
s[1] = a * _ + l * f;
s[2] = o * d + c * p;
s[3] = a * d + l * p;
s[4] = o * m + c * y + u;
s[5] = a * m + l * y + h;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.rotate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = Math.sin(i), _ = Math.cos(i);
r[0] = s * _ + a * h;
r[1] = o * _ + c * h;
r[2] = s * -h + a * _;
r[3] = o * -h + c * _;
r[4] = l;
r[5] = u;
return t;
};
t.scale = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = i.x, _ = i.y;
r[0] = s * h;
r[1] = o * h;
r[2] = a * _;
r[3] = c * _;
r[4] = l;
r[5] = u;
return t;
};
t.translate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = i.x, _ = i.y;
r[0] = s;
r[1] = o;
r[2] = a;
r[3] = c;
r[4] = s * h + a * _ + l;
r[5] = o * h + c * _ + u;
return t;
};
t.fromRotation = function(t, e) {
var i = t.m, n = Math.sin(e), r = Math.cos(e);
i[0] = r;
i[1] = n;
i[2] = -n;
i[3] = r;
i[4] = 0;
i[5] = 0;
return t;
};
t.fromScaling = function(t, e) {
var i = e.m, n = t.m;
n[0] = i[0];
n[1] = 0;
n[2] = 0;
n[3] = i[1];
n[4] = 0;
n[5] = 0;
return t;
};
t.fromTranslation = function(t, e) {
var i = t.m;
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 1;
i[4] = e.x;
i[5] = e.y;
return t;
};
t.fromRTS = function(t, e, i, n) {
var r = t.m, s = Math.sin(e), o = Math.cos(e);
r[0] = o * n.x;
r[1] = s * n.x;
r[2] = -s * n.y;
r[3] = o * n.y;
r[4] = i.x;
r[5] = i.y;
return t;
};
t.str = function(t) {
var e = t.m;
return "mat23(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3] + ", " + e[4] + ", " + e[5] + ")";
};
t.array = function(t, e) {
var i = e.m;
t[0] = i[0];
t[1] = i[1];
t[2] = i[2];
t[3] = i[3];
t[4] = i[4];
t[5] = i[5];
return t;
};
t.array4x4 = function(t, e) {
var i = e.m;
t[0] = i[0];
t[1] = i[1];
t[2] = 0;
t[3] = 0;
t[4] = i[2];
t[5] = i[3];
t[6] = 0;
t[7] = 0;
t[8] = 0;
t[9] = 0;
t[10] = 1;
t[11] = 0;
t[12] = i[4];
t[13] = i[5];
t[14] = 0;
t[15] = 1;
return t;
};
t.frob = function(t) {
var e = t.m;
return Math.sqrt(Math.pow(e[0], 2) + Math.pow(e[1], 2) + Math.pow(e[2], 2) + Math.pow(e[3], 2) + Math.pow(e[4], 2) + Math.pow(e[5], 2) + 1);
};
t.add = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] + r[0];
s[1] = n[1] + r[1];
s[2] = n[2] + r[2];
s[3] = n[3] + r[3];
s[4] = n[4] + r[4];
s[5] = n[5] + r[5];
return t;
};
t.subtract = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] - r[0];
s[1] = n[1] - r[1];
s[2] = n[2] - r[2];
s[3] = n[3] - r[3];
s[4] = n[4] - r[4];
s[5] = n[5] - r[5];
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiplyScalar = function(t, e, i) {
var n = e.m, r = t.m;
r[0] = n[0] * i;
r[1] = n[1] * i;
r[2] = n[2] * i;
r[3] = n[3] * i;
r[4] = n[4] * i;
r[5] = n[5] * i;
return t;
};
t.multiplyScalarAndAdd = function(t, e, i, n) {
var r = e.m, s = i.m, o = t.m;
o[0] = r[0] + s[0] * n;
o[1] = r[1] + s[1] * n;
o[2] = r[2] + s[2] * n;
o[3] = r[3] + s[3] * n;
o[4] = r[4] + s[4] * n;
o[5] = r[5] + s[5] * n;
return t;
};
t.exactEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3] && i[4] === n[4] && i[5] === n[5];
};
t.equals = function(t, e) {
var i = t.m, r = e.m, s = i[0], o = i[1], a = i[2], c = i[3], l = i[4], u = i[5], h = r[0], _ = r[1], f = r[2], d = r[3], p = r[4], m = r[5];
return Math.abs(s - h) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(h)) && Math.abs(o - _) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(_)) && Math.abs(a - f) <= n.EPSILON * Math.max(1, Math.abs(a), Math.abs(f)) && Math.abs(c - d) <= n.EPSILON * Math.max(1, Math.abs(c), Math.abs(d)) && Math.abs(l - p) <= n.EPSILON * Math.max(1, Math.abs(l), Math.abs(p)) && Math.abs(u - m) <= n.EPSILON * Math.max(1, Math.abs(u), Math.abs(m));
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
228: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vec3"));
function s(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var o = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0, c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0, l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0, u = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 1;
s(this, t);
if (e instanceof Float32Array) if (i) {
this.m = new Float32Array(9);
this.m.set(e);
} else this.m = e; else {
this.m = new Float32Array(9);
var h = this.m;
h[0] = e;
h[1] = i;
h[2] = n;
h[3] = r;
h[4] = o;
h[5] = a;
h[6] = c;
h[7] = l;
h[8] = u;
}
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0, arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0, arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0, arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 1);
};
t.clone = function(e) {
var i = e.m;
return new t(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]);
};
t.copy = function(t, e) {
t.m.set(e.m);
return t;
};
t.set = function(t, e, i, n, r, s, o, a, c, l) {
var u = t.m;
u[0] = e;
u[1] = i;
u[2] = n;
u[3] = r;
u[4] = s;
u[5] = o;
u[6] = a;
u[7] = c;
u[8] = l;
return t;
};
t.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 1;
e[5] = 0;
e[6] = 0;
e[7] = 0;
e[8] = 1;
return t;
};
t.transpose = function(t, e) {
var i = e.m, n = t.m;
if (t === e) {
var r = i[1], s = i[2], o = i[5];
n[1] = i[3];
n[2] = i[6];
n[3] = r;
n[5] = i[7];
n[6] = s;
n[7] = o;
} else {
n[0] = i[0];
n[1] = i[3];
n[2] = i[6];
n[3] = i[1];
n[4] = i[4];
n[5] = i[7];
n[6] = i[2];
n[7] = i[5];
n[8] = i[8];
}
return t;
};
t.invert = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], _ = i[8], f = _ * c - l * h, d = -_ * a + l * u, p = h * a - c * u, m = r * f + s * d + o * p;
if (!m) return null;
m = 1 / m;
n[0] = f * m;
n[1] = (-_ * s + o * h) * m;
n[2] = (l * s - o * c) * m;
n[3] = d * m;
n[4] = (_ * r - o * u) * m;
n[5] = (-l * r + o * a) * m;
n[6] = p * m;
n[7] = (-h * r + s * u) * m;
n[8] = (c * r - s * a) * m;
return t;
};
t.adjoint = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], _ = i[8];
n[0] = c * _ - l * h;
n[1] = o * h - s * _;
n[2] = s * l - o * c;
n[3] = l * u - a * _;
n[4] = r * _ - o * u;
n[5] = o * a - r * l;
n[6] = a * h - c * u;
n[7] = s * u - r * h;
n[8] = r * c - s * a;
return t;
};
t.determinant = function(t) {
var e = t.m, i = e[0], n = e[1], r = e[2], s = e[3], o = e[4], a = e[5], c = e[6], l = e[7], u = e[8];
return i * (u * o - a * l) + n * (-u * s + a * c) + r * (l * s - o * c);
};
t.multiply = function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[2], l = n[3], u = n[4], h = n[5], _ = n[6], f = n[7], d = n[8], p = r[0], m = r[1], y = r[2], v = r[3], g = r[4], C = r[5], x = r[6], A = r[7], b = r[8];
s[0] = p * o + m * l + y * _;
s[1] = p * a + m * u + y * f;
s[2] = p * c + m * h + y * d;
s[3] = v * o + g * l + C * _;
s[4] = v * a + g * u + C * f;
s[5] = v * c + g * h + C * d;
s[6] = x * o + A * l + b * _;
s[7] = x * a + A * u + b * f;
s[8] = x * c + A * h + b * d;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.translate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = n[6], _ = n[7], f = n[8], d = i.x, p = i.y;
r[0] = s;
r[1] = o;
r[2] = a;
r[3] = c;
r[4] = l;
r[5] = u;
r[6] = d * s + p * c + h;
r[7] = d * o + p * l + _;
r[8] = d * a + p * u + f;
return t;
};
t.rotate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = n[6], _ = n[7], f = n[8], d = Math.sin(i), p = Math.cos(i);
r[0] = p * s + d * c;
r[1] = p * o + d * l;
r[2] = p * a + d * u;
r[3] = p * c - d * s;
r[4] = p * l - d * o;
r[5] = p * u - d * a;
r[6] = h;
r[7] = _;
r[8] = f;
return t;
};
t.scale = function(t, e, i) {
var n = i.x, r = i.y, s = e.m, o = t.m;
o[0] = n * s[0];
o[1] = n * s[1];
o[2] = n * s[2];
o[3] = r * s[3];
o[4] = r * s[4];
o[5] = r * s[5];
o[6] = s[6];
o[7] = s[7];
o[8] = s[8];
return t;
};
t.fromMat4 = function(t, e) {
var i = e.m, n = t.m;
n[0] = i[0];
n[1] = i[1];
n[2] = i[2];
n[3] = i[4];
n[4] = i[5];
n[5] = i[6];
n[6] = i[8];
n[7] = i[9];
n[8] = i[10];
return t;
};
t.fromTranslation = function(t, e) {
var i = t.m;
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 1;
i[5] = 0;
i[6] = e.x;
i[7] = e.y;
i[8] = 1;
return t;
};
t.fromRotation = function(t, e) {
var i = Math.sin(e), n = Math.cos(e), r = t.m;
r[0] = n;
r[1] = i;
r[2] = 0;
r[3] = -i;
r[4] = n;
r[5] = 0;
r[6] = 0;
r[7] = 0;
r[8] = 1;
return t;
};
t.fromScaling = function(t, e) {
var i = t.m;
i[0] = e.x;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = e.y;
i[5] = 0;
i[6] = 0;
i[7] = 0;
i[8] = 1;
return t;
};
t.fromMat2d = function(t, e) {
var i = e.m, n = t.m;
n[0] = i[0];
n[1] = i[1];
n[2] = 0;
n[3] = i[2];
n[4] = i[3];
n[5] = 0;
n[6] = i[4];
n[7] = i[5];
n[8] = 1;
return t;
};
t.fromQuat = function(t, e) {
var i = t.m, n = e.x, r = e.y, s = e.z, o = e.w, a = n + n, c = r + r, l = s + s, u = n * a, h = r * a, _ = r * c, f = s * a, d = s * c, p = s * l, m = o * a, y = o * c, v = o * l;
i[0] = 1 - _ - p;
i[3] = h - v;
i[6] = f + y;
i[1] = h + v;
i[4] = 1 - u - p;
i[7] = d - m;
i[2] = f - y;
i[5] = d + m;
i[8] = 1 - u - _;
return t;
};
t.fromViewUp = function(e, i, s) {
return (function() {
var e = r.default.create(0, 1, 0), i = r.default.create(0, 0, 0), s = r.default.create(0, 0, 0);
return function(o, a, c) {
if (r.default.sqrMag(a) < n.EPSILON * n.EPSILON) {
t.identity(o);
return o;
}
c = c || e;
r.default.normalize(i, r.default.cross(i, c, a));
if (r.default.sqrMag(i) < n.EPSILON * n.EPSILON) {
t.identity(o);
return o;
}
r.default.cross(s, a, i);
t.set(o, i.x, i.y, i.z, s.x, s.y, s.z, a.x, a.y, a.z);
return o;
};
})()(e, i, s);
};
t.normalFromMat4 = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], _ = i[8], f = i[9], d = i[10], p = i[11], m = i[12], y = i[13], v = i[14], g = i[15], C = r * l - s * c, x = r * u - o * c, A = r * h - a * c, b = s * u - o * l, S = s * h - a * l, w = o * h - a * u, T = _ * y - f * m, B = _ * v - d * m, E = _ * g - p * m, M = f * v - d * y, I = f * g - p * y, R = d * g - p * v, D = C * R - x * I + A * M + b * E - S * B + w * T;
if (!D) return null;
D = 1 / D;
n[0] = (l * R - u * I + h * M) * D;
n[1] = (u * E - c * R - h * B) * D;
n[2] = (c * I - l * E + h * T) * D;
n[3] = (o * I - s * R - a * M) * D;
n[4] = (r * R - o * E + a * B) * D;
n[5] = (s * E - r * I - a * T) * D;
n[6] = (y * w - v * S + g * b) * D;
n[7] = (v * A - m * w - g * x) * D;
n[8] = (m * S - y * A + g * C) * D;
return t;
};
t.str = function(t) {
var e = t.m;
return "mat3(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3] + ", " + e[4] + ", " + e[5] + ", " + e[6] + ", " + e[7] + ", " + e[8] + ")";
};
t.array = function(t, e) {
var i = e.m;
t[0] = i[0];
t[1] = i[1];
t[2] = i[2];
t[3] = i[3];
t[4] = i[4];
t[5] = i[5];
t[6] = i[6];
t[7] = i[7];
t[8] = i[8];
return t;
};
t.frob = function(t) {
var e = t.m;
return Math.sqrt(Math.pow(e[0], 2) + Math.pow(e[1], 2) + Math.pow(e[2], 2) + Math.pow(e[3], 2) + Math.pow(e[4], 2) + Math.pow(e[5], 2) + Math.pow(e[6], 2) + Math.pow(e[7], 2) + Math.pow(e[8], 2));
};
t.add = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] + r[0];
s[1] = n[1] + r[1];
s[2] = n[2] + r[2];
s[3] = n[3] + r[3];
s[4] = n[4] + r[4];
s[5] = n[5] + r[5];
s[6] = n[6] + r[6];
s[7] = n[7] + r[7];
s[8] = n[8] + r[8];
return t;
};
t.subtract = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] - r[0];
s[1] = n[1] - r[1];
s[2] = n[2] - r[2];
s[3] = n[3] - r[3];
s[4] = n[4] - r[4];
s[5] = n[5] - r[5];
s[6] = n[6] - r[6];
s[7] = n[7] - r[7];
s[8] = n[8] - r[8];
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiplyScalar = function(t, e, i) {
var n = e.m, r = t.m;
r[0] = n[0] * i;
r[1] = n[1] * i;
r[2] = n[2] * i;
r[3] = n[3] * i;
r[4] = n[4] * i;
r[5] = n[5] * i;
r[6] = n[6] * i;
r[7] = n[7] * i;
r[8] = n[8] * i;
return t;
};
t.multiplyScalarAndAdd = function(t, e, i, n) {
var r = e.m, s = i.m, o = t.m;
o[0] = r[0] + s[0] * n;
o[1] = r[1] + s[1] * n;
o[2] = r[2] + s[2] * n;
o[3] = r[3] + s[3] * n;
o[4] = r[4] + s[4] * n;
o[5] = r[5] + s[5] * n;
o[6] = r[6] + s[6] * n;
o[7] = r[7] + s[7] * n;
o[8] = r[8] + s[8] * n;
return t;
};
t.exactEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3] && i[4] === n[4] && i[5] === n[5] && i[6] === n[6] && i[7] === n[7] && i[8] === n[8];
};
t.equals = function(t, e) {
var i = t.m, r = e.m, s = i[0], o = i[1], a = i[2], c = i[3], l = i[4], u = i[5], h = i[6], _ = i[7], f = i[8], d = r[0], p = r[1], m = r[2], y = r[3], v = r[4], g = r[5], C = r[6], x = r[7], A = r[8];
return Math.abs(s - d) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(d)) && Math.abs(o - p) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - m) <= n.EPSILON * Math.max(1, Math.abs(a), Math.abs(m)) && Math.abs(c - y) <= n.EPSILON * Math.max(1, Math.abs(c), Math.abs(y)) && Math.abs(l - v) <= n.EPSILON * Math.max(1, Math.abs(l), Math.abs(v)) && Math.abs(u - g) <= n.EPSILON * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - C) <= n.EPSILON * Math.max(1, Math.abs(h), Math.abs(C)) && Math.abs(_ - x) <= n.EPSILON * Math.max(1, Math.abs(_), Math.abs(x)) && Math.abs(f - A) <= n.EPSILON * Math.max(1, Math.abs(f), Math.abs(A));
};
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"./utils": 232,
"./vec3": 234
} ],
229: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0, l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0, u = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0, h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0, _ = arguments.length > 10 && void 0 !== arguments[10] ? arguments[10] : 1, f = arguments.length > 11 && void 0 !== arguments[11] ? arguments[11] : 0, d = arguments.length > 12 && void 0 !== arguments[12] ? arguments[12] : 0, p = arguments.length > 13 && void 0 !== arguments[13] ? arguments[13] : 0, m = arguments.length > 14 && void 0 !== arguments[14] ? arguments[14] : 0, y = arguments.length > 15 && void 0 !== arguments[15] ? arguments[15] : 1;
r(this, t);
if (e instanceof Float32Array) if (i) {
this.m = new Float32Array(16);
this.m.set(e);
} else this.m = e; else {
this.m = new Float32Array(16);
var v = this.m;
v[0] = e;
v[1] = i;
v[2] = n;
v[3] = s;
v[4] = o;
v[5] = a;
v[6] = c;
v[7] = l;
v[8] = u;
v[9] = h;
v[10] = _;
v[11] = f;
v[12] = d;
v[13] = p;
v[14] = m;
v[15] = y;
}
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1, arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0, arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0, arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0, arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0, arguments.length > 10 && void 0 !== arguments[10] ? arguments[10] : 1, arguments.length > 11 && void 0 !== arguments[11] ? arguments[11] : 0, arguments.length > 12 && void 0 !== arguments[12] ? arguments[12] : 0, arguments.length > 13 && void 0 !== arguments[13] ? arguments[13] : 0, arguments.length > 14 && void 0 !== arguments[14] ? arguments[14] : 0, arguments.length > 15 && void 0 !== arguments[15] ? arguments[15] : 1);
};
t.clone = function(e) {
var i = e.m;
return new t(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9], i[10], i[11], i[12], i[13], i[14], i[15]);
};
t.copy = function(t, e) {
t.m.set(e.m);
return t;
};
t.set = function(t, e, i, n, r, s, o, a, c, l, u, h, _, f, d, p, m) {
var y = t.m;
y[0] = e;
y[1] = i;
y[2] = n;
y[3] = r;
y[4] = s;
y[5] = o;
y[6] = a;
y[7] = c;
y[8] = l;
y[9] = u;
y[10] = h;
y[11] = _;
y[12] = f;
y[13] = d;
y[14] = p;
y[15] = m;
return t;
};
t.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 0;
e[5] = 1;
e[6] = 0;
e[7] = 0;
e[8] = 0;
e[9] = 0;
e[10] = 1;
e[11] = 0;
e[12] = 0;
e[13] = 0;
e[14] = 0;
e[15] = 1;
return t;
};
t.transpose = function(t, e) {
var i = e.m, n = t.m;
if (t === e) {
var r = i[1], s = i[2], o = i[3], a = i[6], c = i[7], l = i[11];
n[1] = i[4];
n[2] = i[8];
n[3] = i[12];
n[4] = r;
n[6] = i[9];
n[7] = i[13];
n[8] = s;
n[9] = a;
n[11] = i[14];
n[12] = o;
n[13] = c;
n[14] = l;
} else {
n[0] = i[0];
n[1] = i[4];
n[2] = i[8];
n[3] = i[12];
n[4] = i[1];
n[5] = i[5];
n[6] = i[9];
n[7] = i[13];
n[8] = i[2];
n[9] = i[6];
n[10] = i[10];
n[11] = i[14];
n[12] = i[3];
n[13] = i[7];
n[14] = i[11];
n[15] = i[15];
}
return t;
};
t.invert = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], _ = i[8], f = i[9], d = i[10], p = i[11], m = i[12], y = i[13], v = i[14], g = i[15], C = r * l - s * c, x = r * u - o * c, A = r * h - a * c, b = s * u - o * l, S = s * h - a * l, w = o * h - a * u, T = _ * y - f * m, B = _ * v - d * m, E = _ * g - p * m, M = f * v - d * y, I = f * g - p * y, R = d * g - p * v, D = C * R - x * I + A * M + b * E - S * B + w * T;
if (!D) return null;
D = 1 / D;
n[0] = (l * R - u * I + h * M) * D;
n[1] = (o * I - s * R - a * M) * D;
n[2] = (y * w - v * S + g * b) * D;
n[3] = (d * S - f * w - p * b) * D;
n[4] = (u * E - c * R - h * B) * D;
n[5] = (r * R - o * E + a * B) * D;
n[6] = (v * A - m * w - g * x) * D;
n[7] = (_ * w - d * A + p * x) * D;
n[8] = (c * I - l * E + h * T) * D;
n[9] = (s * E - r * I - a * T) * D;
n[10] = (m * S - y * A + g * C) * D;
n[11] = (f * A - _ * S - p * C) * D;
n[12] = (l * B - c * M - u * T) * D;
n[13] = (r * M - s * B + o * T) * D;
n[14] = (y * x - m * b - v * C) * D;
n[15] = (_ * b - f * x + d * C) * D;
return t;
};
t.adjoint = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], _ = i[8], f = i[9], d = i[10], p = i[11], m = i[12], y = i[13], v = i[14], g = i[15];
n[0] = l * (d * g - p * v) - f * (u * g - h * v) + y * (u * p - h * d);
n[1] = -(s * (d * g - p * v) - f * (o * g - a * v) + y * (o * p - a * d));
n[2] = s * (u * g - h * v) - l * (o * g - a * v) + y * (o * h - a * u);
n[3] = -(s * (u * p - h * d) - l * (o * p - a * d) + f * (o * h - a * u));
n[4] = -(c * (d * g - p * v) - _ * (u * g - h * v) + m * (u * p - h * d));
n[5] = r * (d * g - p * v) - _ * (o * g - a * v) + m * (o * p - a * d);
n[6] = -(r * (u * g - h * v) - c * (o * g - a * v) + m * (o * h - a * u));
n[7] = r * (u * p - h * d) - c * (o * p - a * d) + _ * (o * h - a * u);
n[8] = c * (f * g - p * y) - _ * (l * g - h * y) + m * (l * p - h * f);
n[9] = -(r * (f * g - p * y) - _ * (s * g - a * y) + m * (s * p - a * f));
n[10] = r * (l * g - h * y) - c * (s * g - a * y) + m * (s * h - a * l);
n[11] = -(r * (l * p - h * f) - c * (s * p - a * f) + _ * (s * h - a * l));
n[12] = -(c * (f * v - d * y) - _ * (l * v - u * y) + m * (l * d - u * f));
n[13] = r * (f * v - d * y) - _ * (s * v - o * y) + m * (s * d - o * f);
n[14] = -(r * (l * v - u * y) - c * (s * v - o * y) + m * (s * u - o * l));
n[15] = r * (l * d - u * f) - c * (s * d - o * f) + _ * (s * u - o * l);
return t;
};
t.determinant = function(t) {
var e = t.m, i = e[0], n = e[1], r = e[2], s = e[3], o = e[4], a = e[5], c = e[6], l = e[7], u = e[8], h = e[9], _ = e[10], f = e[11], d = e[12], p = e[13], m = e[14], y = e[15];
return (i * a - n * o) * (_ * y - f * m) - (i * c - r * o) * (h * y - f * p) + (i * l - s * o) * (h * m - _ * p) + (n * c - r * a) * (u * y - f * d) - (n * l - s * a) * (u * m - _ * d) + (r * l - s * c) * (u * p - h * d);
};
t.multiply = function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[2], l = n[3], u = n[4], h = n[5], _ = n[6], f = n[7], d = n[8], p = n[9], m = n[10], y = n[11], v = n[12], g = n[13], C = n[14], x = n[15], A = r[0], b = r[1], S = r[2], w = r[3];
s[0] = A * o + b * u + S * d + w * v;
s[1] = A * a + b * h + S * p + w * g;
s[2] = A * c + b * _ + S * m + w * C;
s[3] = A * l + b * f + S * y + w * x;
A = r[4];
b = r[5];
S = r[6];
w = r[7];
s[4] = A * o + b * u + S * d + w * v;
s[5] = A * a + b * h + S * p + w * g;
s[6] = A * c + b * _ + S * m + w * C;
s[7] = A * l + b * f + S * y + w * x;
A = r[8];
b = r[9];
S = r[10];
w = r[11];
s[8] = A * o + b * u + S * d + w * v;
s[9] = A * a + b * h + S * p + w * g;
s[10] = A * c + b * _ + S * m + w * C;
s[11] = A * l + b * f + S * y + w * x;
A = r[12];
b = r[13];
S = r[14];
w = r[15];
s[12] = A * o + b * u + S * d + w * v;
s[13] = A * a + b * h + S * p + w * g;
s[14] = A * c + b * _ + S * m + w * C;
s[15] = A * l + b * f + S * y + w * x;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.translate = function(t, e, i) {
var n = e.m, r = t.m, s = i.x, o = i.y, a = i.z, c = void 0, l = void 0, u = void 0, h = void 0, _ = void 0, f = void 0, d = void 0, p = void 0, m = void 0, y = void 0, v = void 0, g = void 0;
if (e === t) {
r[12] = n[0] * s + n[4] * o + n[8] * a + n[12];
r[13] = n[1] * s + n[5] * o + n[9] * a + n[13];
r[14] = n[2] * s + n[6] * o + n[10] * a + n[14];
r[15] = n[3] * s + n[7] * o + n[11] * a + n[15];
} else {
c = n[0];
l = n[1];
u = n[2];
h = n[3];
_ = n[4];
f = n[5];
d = n[6];
p = n[7];
m = n[8];
y = n[9];
v = n[10];
g = n[11];
r[0] = c;
r[1] = l;
r[2] = u;
r[3] = h;
r[4] = _;
r[5] = f;
r[6] = d;
r[7] = p;
r[8] = m;
r[9] = y;
r[10] = v;
r[11] = g;
r[12] = c * s + _ * o + m * a + n[12];
r[13] = l * s + f * o + y * a + n[13];
r[14] = u * s + d * o + v * a + n[14];
r[15] = h * s + p * o + g * a + n[15];
}
return t;
};
t.scale = function(t, e, i) {
var n = i.x, r = i.y, s = i.z, o = e.m, a = t.m;
a[0] = o[0] * n;
a[1] = o[1] * n;
a[2] = o[2] * n;
a[3] = o[3] * n;
a[4] = o[4] * r;
a[5] = o[5] * r;
a[6] = o[6] * r;
a[7] = o[7] * r;
a[8] = o[8] * s;
a[9] = o[9] * s;
a[10] = o[10] * s;
a[11] = o[11] * s;
a[12] = o[12];
a[13] = o[13];
a[14] = o[14];
a[15] = o[15];
return t;
};
t.rotate = function(t, e, i, r) {
var s, o, a, c, l, u, h, _, f, d, p, m, y, v, g, C, x, A, b, S, w, T, B, E, M = e.m, I = t.m, R = r.x, D = r.y, P = r.z, V = Math.sqrt(R * R + D * D + P * P);
if (Math.abs(V) < n.EPSILON) return null;
R *= V = 1 / V;
D *= V;
P *= V;
s = Math.sin(i);
a = 1 - (o = Math.cos(i));
c = M[0];
l = M[1];
u = M[2];
h = M[3];
_ = M[4];
f = M[5];
d = M[6];
p = M[7];
m = M[8];
y = M[9];
v = M[10];
g = M[11];
C = R * R * a + o;
x = D * R * a + P * s;
A = P * R * a - D * s;
b = R * D * a - P * s;
S = D * D * a + o;
w = P * D * a + R * s;
T = R * P * a + D * s;
B = D * P * a - R * s;
E = P * P * a + o;
I[0] = c * C + _ * x + m * A;
I[1] = l * C + f * x + y * A;
I[2] = u * C + d * x + v * A;
I[3] = h * C + p * x + g * A;
I[4] = c * b + _ * S + m * w;
I[5] = l * b + f * S + y * w;
I[6] = u * b + d * S + v * w;
I[7] = h * b + p * S + g * w;
I[8] = c * T + _ * B + m * E;
I[9] = l * T + f * B + y * E;
I[10] = u * T + d * B + v * E;
I[11] = h * T + p * B + g * E;
if (e !== t) {
I[12] = M[12];
I[13] = M[13];
I[14] = M[14];
I[15] = M[15];
}
return t;
};
t.rotateX = function(t, e, i) {
var n = e.m, r = t.m, s = Math.sin(i), o = Math.cos(i), a = n[4], c = n[5], l = n[6], u = n[7], h = n[8], _ = n[9], f = n[10], d = n[11];
if (e !== t) {
r[0] = n[0];
r[1] = n[1];
r[2] = n[2];
r[3] = n[3];
r[12] = n[12];
r[13] = n[13];
r[14] = n[14];
r[15] = n[15];
}
r[4] = a * o + h * s;
r[5] = c * o + _ * s;
r[6] = l * o + f * s;
r[7] = u * o + d * s;
r[8] = h * o - a * s;
r[9] = _ * o - c * s;
r[10] = f * o - l * s;
r[11] = d * o - u * s;
return t;
};
t.rotateY = function(t, e, i) {
var n = e.m, r = t.m, s = Math.sin(i), o = Math.cos(i), a = n[0], c = n[1], l = n[2], u = n[3], h = n[8], _ = n[9], f = n[10], d = n[11];
if (e !== t) {
r[4] = n[4];
r[5] = n[5];
r[6] = n[6];
r[7] = n[7];
r[12] = n[12];
r[13] = n[13];
r[14] = n[14];
r[15] = n[15];
}
r[0] = a * o - h * s;
r[1] = c * o - _ * s;
r[2] = l * o - f * s;
r[3] = u * o - d * s;
r[8] = a * s + h * o;
r[9] = c * s + _ * o;
r[10] = l * s + f * o;
r[11] = u * s + d * o;
return t;
};
t.rotateZ = function(t, e, i) {
var n = e.m, r = t.m, s = Math.sin(i), o = Math.cos(i), a = n[0], c = n[1], l = n[2], u = n[3], h = n[4], _ = n[5], f = n[6], d = n[7];
if (e !== t) {
r[8] = n[8];
r[9] = n[9];
r[10] = n[10];
r[11] = n[11];
r[12] = n[12];
r[13] = n[13];
r[14] = n[14];
r[15] = n[15];
}
r[0] = a * o + h * s;
r[1] = c * o + _ * s;
r[2] = l * o + f * s;
r[3] = u * o + d * s;
r[4] = h * o - a * s;
r[5] = _ * o - c * s;
r[6] = f * o - l * s;
r[7] = d * o - u * s;
return t;
};
t.fromTranslation = function(t, e) {
var i = t.m;
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 0;
i[5] = 1;
i[6] = 0;
i[7] = 0;
i[8] = 0;
i[9] = 0;
i[10] = 1;
i[11] = 0;
i[12] = e.x;
i[13] = e.y;
i[14] = e.z;
i[15] = 1;
return t;
};
t.fromScaling = function(t, e) {
var i = t.m;
i[0] = e.x;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 0;
i[5] = e.y;
i[6] = 0;
i[7] = 0;
i[8] = 0;
i[9] = 0;
i[10] = e.z;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
t.fromRotation = function(t, e, i) {
var r, s, o, a = t.m, c = i.x, l = i.y, u = i.z, h = Math.sqrt(c * c + l * l + u * u);
if (Math.abs(h) < n.EPSILON) return null;
c *= h = 1 / h;
l *= h;
u *= h;
r = Math.sin(e);
o = 1 - (s = Math.cos(e));
a[0] = c * c * o + s;
a[1] = l * c * o + u * r;
a[2] = u * c * o - l * r;
a[3] = 0;
a[4] = c * l * o - u * r;
a[5] = l * l * o + s;
a[6] = u * l * o + c * r;
a[7] = 0;
a[8] = c * u * o + l * r;
a[9] = l * u * o - c * r;
a[10] = u * u * o + s;
a[11] = 0;
a[12] = 0;
a[13] = 0;
a[14] = 0;
a[15] = 1;
return t;
};
t.fromXRotation = function(t, e) {
var i = t.m, n = Math.sin(e), r = Math.cos(e);
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 0;
i[5] = r;
i[6] = n;
i[7] = 0;
i[8] = 0;
i[9] = -n;
i[10] = r;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
t.fromYRotation = function(t, e) {
var i = t.m, n = Math.sin(e), r = Math.cos(e);
i[0] = r;
i[1] = 0;
i[2] = -n;
i[3] = 0;
i[4] = 0;
i[5] = 1;
i[6] = 0;
i[7] = 0;
i[8] = n;
i[9] = 0;
i[10] = r;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
t.fromZRotation = function(t, e) {
var i = t.m, n = Math.sin(e), r = Math.cos(e);
i[0] = r;
i[1] = n;
i[2] = 0;
i[3] = 0;
i[4] = -n;
i[5] = r;
i[6] = 0;
i[7] = 0;
i[8] = 0;
i[9] = 0;
i[10] = 1;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
t.fromRT = function(t, e, i) {
var n = t.m, r = e.x, s = e.y, o = e.z, a = e.w, c = r + r, l = s + s, u = o + o, h = r * c, _ = r * l, f = r * u, d = s * l, p = s * u, m = o * u, y = a * c, v = a * l, g = a * u;
n[0] = 1 - (d + m);
n[1] = _ + g;
n[2] = f - v;
n[3] = 0;
n[4] = _ - g;
n[5] = 1 - (h + m);
n[6] = p + y;
n[7] = 0;
n[8] = f + v;
n[9] = p - y;
n[10] = 1 - (h + d);
n[11] = 0;
n[12] = i.x;
n[13] = i.y;
n[14] = i.z;
n[15] = 1;
return t;
};
t.fromTRSArray = function(t, e) {
var i = t.m, n = e[3], r = e[4], s = e[5], o = e[6], a = n + n, c = r + r, l = s + s, u = n * a, h = n * c, _ = n * l, f = r * c, d = r * l, p = s * l, m = o * a, y = o * c, v = o * l, g = e[7], C = e[8], x = e[9];
i[0] = (1 - (f + p)) * g;
i[1] = (h + v) * g;
i[2] = (_ - y) * g;
i[3] = 0;
i[4] = (h - v) * C;
i[5] = (1 - (u + p)) * C;
i[6] = (d + m) * C;
i[7] = 0;
i[8] = (_ + y) * x;
i[9] = (d - m) * x;
i[10] = (1 - (u + f)) * x;
i[11] = 0;
i[12] = e[0];
i[13] = e[1];
i[14] = e[2];
i[15] = 1;
return t;
};
t.getTranslation = function(t, e) {
var i = e.m;
t.x = i[12];
t.y = i[13];
t.z = i[14];
return t;
};
t.getScaling = function(t, e) {
var i = e.m, n = i[0], r = i[1], s = i[2], o = i[4], a = i[5], c = i[6], l = i[8], u = i[9], h = i[10];
t.x = Math.sqrt(n * n + r * r + s * s);
t.y = Math.sqrt(o * o + a * a + c * c);
t.z = Math.sqrt(l * l + u * u + h * h);
return t;
};
t.getRotation = function(t, e) {
var i = e.m, n = i[0] + i[5] + i[10], r = 0;
if (n > 0) {
r = 2 * Math.sqrt(n + 1);
t.w = .25 * r;
t.x = (i[6] - i[9]) / r;
t.y = (i[8] - i[2]) / r;
t.z = (i[1] - i[4]) / r;
} else if (i[0] > i[5] & i[0] > i[10]) {
r = 2 * Math.sqrt(1 + i[0] - i[5] - i[10]);
t.w = (i[6] - i[9]) / r;
t.x = .25 * r;
t.y = (i[1] + i[4]) / r;
t.z = (i[8] + i[2]) / r;
} else if (i[5] > i[10]) {
r = 2 * Math.sqrt(1 + i[5] - i[0] - i[10]);
t.w = (i[8] - i[2]) / r;
t.x = (i[1] + i[4]) / r;
t.y = .25 * r;
t.z = (i[6] + i[9]) / r;
} else {
r = 2 * Math.sqrt(1 + i[10] - i[0] - i[5]);
t.w = (i[1] - i[4]) / r;
t.x = (i[8] + i[2]) / r;
t.y = (i[6] + i[9]) / r;
t.z = .25 * r;
}
return t;
};
t.fromRTS = function(t, e, i, n) {
var r = t.m, s = e.x, o = e.y, a = e.z, c = e.w, l = s + s, u = o + o, h = a + a, _ = s * l, f = s * u, d = s * h, p = o * u, m = o * h, y = a * h, v = c * l, g = c * u, C = c * h, x = n.x, A = n.y, b = n.z;
r[0] = (1 - (p + y)) * x;
r[1] = (f + C) * x;
r[2] = (d - g) * x;
r[3] = 0;
r[4] = (f - C) * A;
r[5] = (1 - (_ + y)) * A;
r[6] = (m + v) * A;
r[7] = 0;
r[8] = (d + g) * b;
r[9] = (m - v) * b;
r[10] = (1 - (_ + p)) * b;
r[11] = 0;
r[12] = i.x;
r[13] = i.y;
r[14] = i.z;
r[15] = 1;
return t;
};
t.fromRTSOrigin = function(t, e, i, n, r) {
var s = t.m, o = e.x, a = e.y, c = e.z, l = e.w, u = o + o, h = a + a, _ = c + c, f = o * u, d = o * h, p = o * _, m = a * h, y = a * _, v = c * _, g = l * u, C = l * h, x = l * _, A = n.x, b = n.y, S = n.z, w = r.x, T = r.y, B = r.z;
s[0] = (1 - (m + v)) * A;
s[1] = (d + x) * A;
s[2] = (p - C) * A;
s[3] = 0;
s[4] = (d - x) * b;
s[5] = (1 - (f + v)) * b;
s[6] = (y + g) * b;
s[7] = 0;
s[8] = (p + C) * S;
s[9] = (y - g) * S;
s[10] = (1 - (f + m)) * S;
s[11] = 0;
s[12] = i.x + w - (s[0] * w + s[4] * T + s[8] * B);
s[13] = i.y + T - (s[1] * w + s[5] * T + s[9] * B);
s[14] = i.z + B - (s[2] * w + s[6] * T + s[10] * B);
s[15] = 1;
return t;
};
t.fromQuat = function(t, e) {
var i = t.m, n = e.x, r = e.y, s = e.z, o = e.w, a = n + n, c = r + r, l = s + s, u = n * a, h = r * a, _ = r * c, f = s * a, d = s * c, p = s * l, m = o * a, y = o * c, v = o * l;
i[0] = 1 - _ - p;
i[1] = h + v;
i[2] = f - y;
i[3] = 0;
i[4] = h - v;
i[5] = 1 - u - p;
i[6] = d + m;
i[7] = 0;
i[8] = f + y;
i[9] = d - m;
i[10] = 1 - u - _;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
t.frustum = function(t, e, i, n, r, s, o) {
var a = t.m, c = 1 / (i - e), l = 1 / (r - n), u = 1 / (s - o);
a[0] = 2 * s * c;
a[1] = 0;
a[2] = 0;
a[3] = 0;
a[4] = 0;
a[5] = 2 * s * l;
a[6] = 0;
a[7] = 0;
a[8] = (i + e) * c;
a[9] = (r + n) * l;
a[10] = (o + s) * u;
a[11] = -1;
a[12] = 0;
a[13] = 0;
a[14] = o * s * 2 * u;
a[15] = 0;
return t;
};
t.perspective = function(t, e, i, n, r) {
var s = t.m, o = 1 / Math.tan(e / 2), a = 1 / (n - r);
s[0] = o / i;
s[1] = 0;
s[2] = 0;
s[3] = 0;
s[4] = 0;
s[5] = o;
s[6] = 0;
s[7] = 0;
s[8] = 0;
s[9] = 0;
s[10] = (r + n) * a;
s[11] = -1;
s[12] = 0;
s[13] = 0;
s[14] = 2 * r * n * a;
s[15] = 0;
return t;
};
t.perspectiveFromFieldOfView = function(t, e, i, n) {
var r = t.m, s = Math.tan(e.upDegrees * Math.PI / 180), o = Math.tan(e.downDegrees * Math.PI / 180), a = Math.tan(e.leftDegrees * Math.PI / 180), c = Math.tan(e.rightDegrees * Math.PI / 180), l = 2 / (a + c), u = 2 / (s + o);
r[0] = l;
r[1] = 0;
r[2] = 0;
r[3] = 0;
r[4] = 0;
r[5] = u;
r[6] = 0;
r[7] = 0;
r[8] = -(a - c) * l * .5;
r[9] = (s - o) * u * .5;
r[10] = n / (i - n);
r[11] = -1;
r[12] = 0;
r[13] = 0;
r[14] = n * i / (i - n);
r[15] = 0;
return t;
};
t.ortho = function(t, e, i, n, r, s, o) {
var a = t.m, c = 1 / (e - i), l = 1 / (n - r), u = 1 / (s - o);
a[0] = -2 * c;
a[1] = 0;
a[2] = 0;
a[3] = 0;
a[4] = 0;
a[5] = -2 * l;
a[6] = 0;
a[7] = 0;
a[8] = 0;
a[9] = 0;
a[10] = 2 * u;
a[11] = 0;
a[12] = (e + i) * c;
a[13] = (r + n) * l;
a[14] = (o + s) * u;
a[15] = 1;
return t;
};
t.lookAt = function(t, e, i, n) {
var r, s, o, a = t.m, c = void 0, l = void 0, u = void 0, h = void 0, _ = void 0, f = void 0, d = void 0, p = e.x, m = e.y, y = e.z, v = n.x, g = n.y, C = n.z, x = i.x, A = i.y, b = i.z;
h = p - x;
_ = m - A;
f = y - b;
c = g * (f *= d = 1 / Math.sqrt(h * h + _ * _ + f * f)) - C * (_ *= d);
l = C * (h *= d) - v * f;
u = v * _ - g * h;
r = _ * (u *= d = 1 / Math.sqrt(c * c + l * l + u * u)) - f * (l *= d);
s = f * (c *= d) - h * u;
o = h * l - _ * c;
a[0] = c;
a[1] = r;
a[2] = h;
a[3] = 0;
a[4] = l;
a[5] = s;
a[6] = _;
a[7] = 0;
a[8] = u;
a[9] = o;
a[10] = f;
a[11] = 0;
a[12] = -(c * p + l * m + u * y);
a[13] = -(r * p + s * m + o * y);
a[14] = -(h * p + _ * m + f * y);
a[15] = 1;
return t;
};
t.str = function(t) {
var e = t.m;
return "mat4(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3] + ", " + e[4] + ", " + e[5] + ", " + e[6] + ", " + e[7] + ", " + e[8] + ", " + e[9] + ", " + e[10] + ", " + e[11] + ", " + e[12] + ", " + e[13] + ", " + e[14] + ", " + e[15] + ")";
};
t.array = function(t, e) {
var i = e.m;
t[0] = i[0];
t[1] = i[1];
t[2] = i[2];
t[3] = i[3];
t[4] = i[4];
t[5] = i[5];
t[6] = i[6];
t[7] = i[7];
t[8] = i[8];
t[9] = i[9];
t[10] = i[10];
t[11] = i[11];
t[12] = i[12];
t[13] = i[13];
t[14] = i[14];
t[15] = i[15];
return t;
};
t.frob = function(t) {
var e = t.m;
return Math.sqrt(Math.pow(e[0], 2) + Math.pow(e[1], 2) + Math.pow(e[2], 2) + Math.pow(e[3], 2) + Math.pow(e[4], 2) + Math.pow(e[5], 2) + Math.pow(e[6], 2) + Math.pow(e[7], 2) + Math.pow(e[8], 2) + Math.pow(e[9], 2) + Math.pow(e[10], 2) + Math.pow(e[11], 2) + Math.pow(e[12], 2) + Math.pow(e[13], 2) + Math.pow(e[14], 2) + Math.pow(e[15], 2));
};
t.add = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] + r[0];
s[1] = n[1] + r[1];
s[2] = n[2] + r[2];
s[3] = n[3] + r[3];
s[4] = n[4] + r[4];
s[5] = n[5] + r[5];
s[6] = n[6] + r[6];
s[7] = n[7] + r[7];
s[8] = n[8] + r[8];
s[9] = n[9] + r[9];
s[10] = n[10] + r[10];
s[11] = n[11] + r[11];
s[12] = n[12] + r[12];
s[13] = n[13] + r[13];
s[14] = n[14] + r[14];
s[15] = n[15] + r[15];
return t;
};
t.subtract = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] - r[0];
s[1] = n[1] - r[1];
s[2] = n[2] - r[2];
s[3] = n[3] - r[3];
s[4] = n[4] - r[4];
s[5] = n[5] - r[5];
s[6] = n[6] - r[6];
s[7] = n[7] - r[7];
s[8] = n[8] - r[8];
s[9] = n[9] - r[9];
s[10] = n[10] - r[10];
s[11] = n[11] - r[11];
s[12] = n[12] - r[12];
s[13] = n[13] - r[13];
s[14] = n[14] - r[14];
s[15] = n[15] - r[15];
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiplyScalar = function(t, e, i) {
var n = e.m, r = t.m;
r[0] = n[0] * i;
r[1] = n[1] * i;
r[2] = n[2] * i;
r[3] = n[3] * i;
r[4] = n[4] * i;
r[5] = n[5] * i;
r[6] = n[6] * i;
r[7] = n[7] * i;
r[8] = n[8] * i;
r[9] = n[9] * i;
r[10] = n[10] * i;
r[11] = n[11] * i;
r[12] = n[12] * i;
r[13] = n[13] * i;
r[14] = n[14] * i;
r[15] = n[15] * i;
return t;
};
t.multiplyScalarAndAdd = function(t, e, i, n) {
var r = e.m, s = i.m, o = t.m;
o[0] = r[0] + s[0] * n;
o[1] = r[1] + s[1] * n;
o[2] = r[2] + s[2] * n;
o[3] = r[3] + s[3] * n;
o[4] = r[4] + s[4] * n;
o[5] = r[5] + s[5] * n;
o[6] = r[6] + s[6] * n;
o[7] = r[7] + s[7] * n;
o[8] = r[8] + s[8] * n;
o[9] = r[9] + s[9] * n;
o[10] = r[10] + s[10] * n;
o[11] = r[11] + s[11] * n;
o[12] = r[12] + s[12] * n;
o[13] = r[13] + s[13] * n;
o[14] = r[14] + s[14] * n;
o[15] = r[15] + s[15] * n;
return t;
};
t.exactEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3] && i[4] === n[4] && i[5] === n[5] && i[6] === n[6] && i[7] === n[7] && i[8] === n[8] && i[9] === n[9] && i[10] === n[10] && i[11] === n[11] && i[12] === n[12] && i[13] === n[13] && i[14] === n[14] && i[15] === n[15];
};
t.equals = function(t, e) {
var i = t.m, r = e.m, s = i[0], o = i[1], a = i[2], c = i[3], l = i[4], u = i[5], h = i[6], _ = i[7], f = i[8], d = i[9], p = i[10], m = i[11], y = i[12], v = i[13], g = i[14], C = i[15], x = r[0], A = r[1], b = r[2], S = r[3], w = r[4], T = r[5], B = r[6], E = r[7], M = r[8], I = r[9], R = r[10], D = r[11], P = r[12], V = r[13], L = r[14], O = r[15];
return Math.abs(s - x) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(x)) && Math.abs(o - A) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(A)) && Math.abs(a - b) <= n.EPSILON * Math.max(1, Math.abs(a), Math.abs(b)) && Math.abs(c - S) <= n.EPSILON * Math.max(1, Math.abs(c), Math.abs(S)) && Math.abs(l - w) <= n.EPSILON * Math.max(1, Math.abs(l), Math.abs(w)) && Math.abs(u - T) <= n.EPSILON * Math.max(1, Math.abs(u), Math.abs(T)) && Math.abs(h - B) <= n.EPSILON * Math.max(1, Math.abs(h), Math.abs(B)) && Math.abs(_ - E) <= n.EPSILON * Math.max(1, Math.abs(_), Math.abs(E)) && Math.abs(f - M) <= n.EPSILON * Math.max(1, Math.abs(f), Math.abs(M)) && Math.abs(d - I) <= n.EPSILON * Math.max(1, Math.abs(d), Math.abs(I)) && Math.abs(p - R) <= n.EPSILON * Math.max(1, Math.abs(p), Math.abs(R)) && Math.abs(m - D) <= n.EPSILON * Math.max(1, Math.abs(m), Math.abs(D)) && Math.abs(y - P) <= n.EPSILON * Math.max(1, Math.abs(y), Math.abs(P)) && Math.abs(v - V) <= n.EPSILON * Math.max(1, Math.abs(v), Math.abs(V)) && Math.abs(g - L) <= n.EPSILON * Math.max(1, Math.abs(g), Math.abs(L)) && Math.abs(C - O) <= n.EPSILON * Math.max(1, Math.abs(C), Math.abs(O));
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
230: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = a(t("./vec3")), r = a(t("./vec4")), s = a(t("./mat3")), o = t("./utils");
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var l = .5 * Math.PI / 180, u = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
c(this, t);
this.x = e;
this.y = i;
this.z = n;
this.w = r;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1);
};
t.clone = function(e) {
return new t(e.x, e.y, e.z, e.w);
};
t.copy = function(t, e) {
return r.default.copy(t, e);
};
t.set = function(t, e, i, n, r) {
t.x = e;
t.y = i;
t.z = n;
t.w = r;
return t;
};
t.identity = function(t) {
t.x = 0;
t.y = 0;
t.z = 0;
t.w = 1;
return t;
};
t.rotationTo = function(e, i, r) {
return (function() {
var e = n.default.create(0, 0, 0), i = n.default.create(1, 0, 0), r = n.default.create(0, 1, 0);
return function(s, o, a) {
var c = n.default.dot(o, a);
if (c < -.999999) {
n.default.cross(e, i, o);
n.default.magnitude(e) < 1e-6 && n.default.cross(e, r, o);
n.default.normalize(e, e);
t.fromAxisAngle(s, e, Math.PI);
return s;
}
if (c > .999999) {
s.x = 0;
s.y = 0;
s.z = 0;
s.w = 1;
return s;
}
n.default.cross(e, o, a);
s.x = e.x;
s.y = e.y;
s.z = e.z;
s.w = 1 + c;
return t.normalize(s, s);
};
})()(e, i, r);
};
t.getAxisAngle = function(t, e) {
var i = 2 * Math.acos(e.w), n = Math.sin(i / 2);
if (0 != n) {
t.x = e.x / n;
t.y = e.y / n;
t.z = e.z / n;
} else {
t.x = 1;
t.y = 0;
t.z = 0;
}
return i;
};
t.multiply = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = e.w, a = i.x, c = i.y, l = i.z, u = i.w;
t.x = n * u + o * a + r * l - s * c;
t.y = r * u + o * c + s * a - n * l;
t.z = s * u + o * l + n * c - r * a;
t.w = o * u - n * a - r * c - s * l;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.scale = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
t.w = e.w * i;
return t;
};
t.rotateX = function(t, e, i) {
i *= .5;
var n = e.x, r = e.y, s = e.z, o = e.w, a = Math.sin(i), c = Math.cos(i);
t.x = n * c + o * a;
t.y = r * c + s * a;
t.z = s * c - r * a;
t.w = o * c - n * a;
return t;
};
t.rotateY = function(t, e, i) {
i *= .5;
var n = e.x, r = e.y, s = e.z, o = e.w, a = Math.sin(i), c = Math.cos(i);
t.x = n * c - s * a;
t.y = r * c + o * a;
t.z = s * c + n * a;
t.w = o * c - r * a;
return t;
};
t.rotateZ = function(t, e, i) {
i *= .5;
var n = e.x, r = e.y, s = e.z, o = e.w, a = Math.sin(i), c = Math.cos(i);
t.x = n * c + r * a;
t.y = r * c - n * a;
t.z = s * c + o * a;
t.w = o * c - s * a;
return t;
};
t.rotateAround = function(e, i, r, s) {
return (function() {
var e = n.default.create(0, 0, 0), i = t.create();
return function(r, s, o, a) {
t.invert(i, s);
n.default.transformQuat(e, o, i);
t.fromAxisAngle(i, e, a);
t.mul(r, s, i);
return r;
};
})()(e, i, r, s);
};
t.rotateAroundLocal = function(e, i, n, r) {
return (function() {
var e = t.create();
return function(i, n, r, s) {
t.fromAxisAngle(e, r, s);
t.mul(i, n, e);
return i;
};
})()(e, i, n, r);
};
t.calculateW = function(t, e) {
var i = e.x, n = e.y, r = e.z;
t.x = i;
t.y = n;
t.z = r;
t.w = Math.sqrt(Math.abs(1 - i * i - n * n - r * r));
return t;
};
t.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z + t.w * e.w;
};
t.lerp = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z, a = e.w;
t.x = r + n * (i.x - r);
t.y = s + n * (i.y - s);
t.z = o + n * (i.z - o);
t.w = a + n * (i.w - a);
return t;
};
t.slerp = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z, a = e.w, c = i.x, l = i.y, u = i.z, h = i.w, _ = void 0, f = void 0, d = void 0, p = void 0, m = void 0;
if ((f = r * c + s * l + o * u + a * h) < 0) {
f = -f;
c = -c;
l = -l;
u = -u;
h = -h;
}
if (1 - f > 1e-6) {
_ = Math.acos(f);
d = Math.sin(_);
p = Math.sin((1 - n) * _) / d;
m = Math.sin(n * _) / d;
} else {
p = 1 - n;
m = n;
}
t.x = p * r + m * c;
t.y = p * s + m * l;
t.z = p * o + m * u;
t.w = p * a + m * h;
return t;
};
t.sqlerp = function(e, i, n, r, s, o) {
return (function() {
var e = t.create(), i = t.create();
return function(n, r, s, o, a, c) {
t.slerp(e, r, a, c);
t.slerp(i, s, o, c);
t.slerp(n, e, i, 2 * c * (1 - c));
return n;
};
})()(e, i, n, r, s, o);
};
t.invert = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = e.w, o = i * i + n * n + r * r + s * s, a = o ? 1 / o : 0;
t.x = -i * a;
t.y = -n * a;
t.z = -r * a;
t.w = s * a;
return t;
};
t.conjugate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
t.w = e.w;
return t;
};
t.magnitude = function(t) {
var e = t.x, i = t.y, n = t.z, r = t.w;
return Math.sqrt(e * e + i * i + n * n + r * r);
};
t.mag = function(e) {
return t.magnitude(e);
};
t.squaredMagnitude = function(t) {
var e = t.x, i = t.y, n = t.z, r = t.w;
return e * e + i * i + n * n + r * r;
};
t.sqrMag = function(e) {
return t.squaredMagnitude(e);
};
t.normalize = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = e.w, o = i * i + n * n + r * r + s * s;
if (o > 0) {
o = 1 / Math.sqrt(o);
t.x = i * o;
t.y = n * o;
t.z = r * o;
t.w = s * o;
}
return t;
};
t.fromAxes = function(e, i, n, r) {
return (function() {
var e = s.default.create();
return function(i, n, r, o) {
s.default.set(e, n.x, n.y, n.z, r.x, r.y, r.z, o.x, o.y, o.z);
return t.normalize(i, t.fromMat3(i, e));
};
})()(e, i, n, r);
};
t.fromViewUp = function(e, i, n) {
return (function() {
var e = s.default.create();
return function(i, n, r) {
s.default.fromViewUp(e, n, r);
return e ? t.normalize(i, t.fromMat3(i, e)) : null;
};
})()(e, i, n);
};
t.fromAxisAngle = function(t, e, i) {
i *= .5;
var n = Math.sin(i);
t.x = n * e.x;
t.y = n * e.y;
t.z = n * e.z;
t.w = Math.cos(i);
return t;
};
t.fromMat3 = function(t, e) {
var i = e.m, n = i[0], r = i[3], s = i[6], o = i[1], a = i[4], c = i[7], l = i[2], u = i[5], h = i[8], _ = n + a + h;
if (_ > 0) {
var f = .5 / Math.sqrt(_ + 1);
t.w = .25 / f;
t.x = (u - c) * f;
t.y = (s - l) * f;
t.z = (o - r) * f;
} else if (n > a && n > h) {
var d = 2 * Math.sqrt(1 + n - a - h);
t.w = (u - c) / d;
t.x = .25 * d;
t.y = (r + o) / d;
t.z = (s + l) / d;
} else if (a > h) {
var p = 2 * Math.sqrt(1 + a - n - h);
t.w = (s - l) / p;
t.x = (r + o) / p;
t.y = .25 * p;
t.z = (c + u) / p;
} else {
var m = 2 * Math.sqrt(1 + h - n - a);
t.w = (o - r) / m;
t.x = (s + l) / m;
t.y = (c + u) / m;
t.z = .25 * m;
}
return t;
};
t.fromEuler = function(t, e, i, n) {
e *= l;
i *= l;
n *= l;
var r = Math.sin(e), s = Math.cos(e), o = Math.sin(i), a = Math.cos(i), c = Math.sin(n), u = Math.cos(n);
t.x = r * a * u + s * o * c;
t.y = s * o * u + r * a * c;
t.z = s * a * c - r * o * u;
t.w = s * a * u - r * o * c;
return t;
};
t.fromAngleZ = function(t, e) {
e *= l;
t.x = t.y = 0;
t.z = Math.sin(e);
t.w = Math.cos(e);
};
t.toEuler = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = e.w, a = void 0, c = void 0, l = void 0, u = i * n + r * s;
if (u > .499) {
a = 2 * Math.atan2(i, s);
c = Math.PI / 2;
l = 0;
}
if (u < -.499) {
a = -2 * Math.atan2(i, s);
c = -Math.PI / 2;
l = 0;
}
if (isNaN(a)) {
var h = i * i, _ = n * n, f = r * r;
a = Math.atan2(2 * n * s - 2 * i * r, 1 - 2 * _ - 2 * f);
c = Math.asin(2 * u);
l = Math.atan2(2 * i * s - 2 * n * r, 1 - 2 * h - 2 * f);
}
t.y = (0, o.toDegree)(a);
t.z = (0, o.toDegree)(c);
t.x = (0, o.toDegree)(l);
return t;
};
t.str = function(t) {
return "quat(" + t.x + ", " + t.y + ", " + t.z + ", " + t.w + ")";
};
t.array = function(t, e) {
t[0] = e.x;
t[1] = e.y;
t[2] = e.z;
t[3] = e.w;
return t;
};
t.exactEquals = function(t, e) {
return r.default.exactEquals(t, e);
};
t.equals = function(t, e) {
return r.default.equals(t, e);
};
return t;
})();
i.default = u;
e.exports = i.default;
}), {
"./mat3": 228,
"./utils": 232,
"./vec3": 234,
"./vec4": 235
} ],
231: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./quat"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = n.default.create(), o = (function() {
function t() {
r(this, t);
}
t.toRotation = function(t, e) {
t.x = e[3];
t.y = e[4];
t.z = e[5];
t.w = e[6];
return t;
};
t.fromRotation = function(t, e) {
t[3] = e.x;
t[4] = e.y;
t[5] = e.z;
t[6] = e.w;
return t;
};
t.toEuler = function(e, i) {
t.toRotation(s, i);
n.default.toEuler(e, s);
return e;
};
t.fromEuler = function(e, i) {
n.default.fromEuler(s, i.x, i.y, i.z);
t.fromRotation(e, s);
return e;
};
t.fromEulerNumber = function(e, i, r, o) {
n.default.fromEuler(s, i, r, o);
t.fromRotation(e, s);
return e;
};
t.toScale = function(t, e) {
t.x = e[7];
t.y = e[8];
t.z = e[9];
return t;
};
t.fromScale = function(t, e) {
t[7] = e.x;
t[8] = e.y;
t[9] = e.z;
return t;
};
t.toPosition = function(t, e) {
t.x = e[0];
t.y = e[1];
t.z = e[2];
return t;
};
t.fromPosition = function(t, e) {
t[0] = e.x;
t[1] = e.y;
t[2] = e.z;
return t;
};
t.fromAngleZ = function(e, i) {
n.default.fromAngleZ(s, i);
t.fromRotation(e, s);
return e;
};
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"./quat": 230
} ],
232: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.equals = function(t, e) {
return Math.abs(t - e) <= s * Math.max(1, Math.abs(t), Math.abs(e));
};
i.approx = function(t, e, i) {
i = i || s;
return Math.abs(t - e) <= i;
};
i.clamp = function(t, e, i) {
return t < e ? e : t > i ? i : t;
};
i.clamp01 = function(t) {
return t < 0 ? 0 : t > 1 ? 1 : t;
};
i.lerp = function(t, e, i) {
return t + (e - t) * i;
};
i.toRadian = function(t) {
return t * n;
};
i.toDegree = function(t) {
return t * r;
};
i.randomRange = o;
i.randomRangeInt = function(t, e) {
return Math.floor(o(t, e));
};
i.pseudoRandom = a;
i.pseudoRandomRange = c;
i.pseudoRandomRangeInt = function(t, e, i) {
return Math.floor(c(t, e, i));
};
i.nextPow2 = function(t) {
t = (t = (t = (t = (t = --t >> 1 | t) >> 2 | t) >> 4 | t) >> 8 | t) >> 16 | t;
return ++t;
};
i.repeat = l;
i.pingPong = function(t, e) {
t = l(t, 2 * e);
return t = e - Math.abs(t - e);
};
i.inverseLerp = function(t, e, i) {
return (i - t) / (e - t);
};
var n = Math.PI / 180, r = 180 / Math.PI, s = i.EPSILON = 1e-6;
i.random = Math.random;
function o(t, e) {
return Math.random() * (e - t) + t;
}
function a(t) {
return (t = (9301 * t + 49297) % 233280) / 233280;
}
function c(t, e, i) {
return a(t) * (i - e) + e;
}
function l(t, e) {
return t - Math.floor(t / e) * e;
}
}), {} ],
233: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
r(this, t);
this.x = e;
this.y = i;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0);
};
t.zero = function(t) {
t.x = 0;
t.y = 0;
return t;
};
t.clone = function(e) {
return new t(e.x, e.y);
};
t.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
return t;
};
t.set = function(t, e, i) {
t.x = e;
t.y = i;
return t;
};
t.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
return t;
};
t.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
return t;
};
t.div = function(e, i, n) {
return t.divide(e, i, n);
};
t.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
return t;
};
t.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
return t;
};
t.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
return t;
};
t.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
return t;
};
t.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
return t;
};
t.scale = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
return t;
};
t.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
return t;
};
t.distance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y;
return Math.sqrt(i * i + n * n);
};
t.dist = function(e, i) {
return t.distance(e, i);
};
t.squaredDistance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y;
return i * i + n * n;
};
t.sqrDist = function(e, i) {
return t.squaredDistance(e, i);
};
t.magnitude = function(t) {
var e = t.x, i = t.y;
return Math.sqrt(e * e + i * i);
};
t.mag = function(e) {
return t.magnitude(e);
};
t.squaredMagnitude = function(t) {
var e = t.x, i = t.y;
return e * e + i * i;
};
t.sqrMag = function(e) {
return t.squaredMagnitude(e);
};
t.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
return t;
};
t.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
return t;
};
t.inverseSafe = function(t, e) {
var i = e.x, r = e.y;
Math.abs(i) < n.EPSILON ? t.x = 0 : t.x = 1 / i;
Math.abs(r) < n.EPSILON ? t.y = 0 : t.y = 1 / e.y;
return t;
};
t.normalize = function(t, e) {
var i = e.x, n = e.y, r = i * i + n * n;
if (r > 0) {
r = 1 / Math.sqrt(r);
t.x = e.x * r;
t.y = e.y * r;
}
return t;
};
t.dot = function(t, e) {
return t.x * e.x + t.y * e.y;
};
t.cross = function(t, e, i) {
var n = e.x * i.y - e.y * i.x;
t.x = t.y = 0;
t.z = n;
return t;
};
t.lerp = function(t, e, i, n) {
var r = e.x, s = e.y;
t.x = r + n * (i.x - r);
t.y = s + n * (i.y - s);
return t;
};
t.random = function(t, e) {
e = e || 1;
var i = 2 * (0, n.random)() * Math.PI;
t.x = Math.cos(i) * e;
t.y = Math.sin(i) * e;
return t;
};
t.transformMat2 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y;
t.x = n[0] * r + n[2] * s;
t.y = n[1] * r + n[3] * s;
return t;
};
t.transformMat23 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y;
t.x = n[0] * r + n[2] * s + n[4];
t.y = n[1] * r + n[3] * s + n[5];
return t;
};
t.transformMat3 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y;
t.x = n[0] * r + n[3] * s + n[6];
t.y = n[1] * r + n[4] * s + n[7];
return t;
};
t.transformMat4 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y;
t.x = n[0] * r + n[4] * s + n[12];
t.y = n[1] * r + n[5] * s + n[13];
return t;
};
t.forEach = function(e, i, n, r, s, o) {
return t._forEach(e, i, n, r, s, o);
};
t.str = function(t) {
return "vec2(" + t.x + ", " + t.y + ")";
};
t.array = function(t, e) {
t[0] = e.x;
t[1] = e.y;
return t;
};
t.exactEquals = function(t, e) {
return t.x === e.x && t.y === e.y;
};
t.equals = function(t, e) {
var i = t.x, r = t.y, s = e.x, o = e.y;
return Math.abs(i - s) <= n.EPSILON * Math.max(1, Math.abs(i), Math.abs(s)) && Math.abs(r - o) <= n.EPSILON * Math.max(1, Math.abs(r), Math.abs(o));
};
t.angle = function(e, i) {
return t._angle(e, i);
};
return t;
})();
s._forEach = (function() {
var t = s.create(0, 0);
return function(e, i, n, r, s, o) {
var a = void 0, c = void 0;
i || (i = 2);
n || (n = 0);
c = r ? Math.min(r * i + n, e.length) : e.length;
for (a = n; a < c; a += i) {
t.x = e[a];
t.y = e[a + 1];
s(t, t, o);
e[a] = t.x;
e[a + 1] = t.y;
}
return e;
};
})();
s._angle = (function() {
var t = s.create(0, 0), e = s.create(0, 0);
return function(i, n) {
s.normalize(t, i);
s.normalize(e, n);
var r = s.dot(t, e);
return r > 1 ? 0 : r < -1 ? Math.PI : Math.acos(r);
};
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
234: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
r(this, t);
this.x = e;
this.y = i;
this.z = n;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0);
};
t.zero = function(t) {
t.x = 0;
t.y = 0;
t.z = 0;
return t;
};
t.clone = function(e) {
return new t(e.x, e.y, e.z);
};
t.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
return t;
};
t.set = function(t, e, i, n) {
t.x = e;
t.y = i;
t.z = n;
return t;
};
t.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
t.z = e.z + i.z;
return t;
};
t.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
t.z = e.z - i.z;
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
t.z = e.z * i.z;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
t.z = e.z / i.z;
return t;
};
t.div = function(e, i, n) {
return t.divide(e, i, n);
};
t.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
t.z = Math.ceil(e.z);
return t;
};
t.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
t.z = Math.floor(e.z);
return t;
};
t.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
t.z = Math.min(e.z, i.z);
return t;
};
t.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
t.z = Math.max(e.z, i.z);
return t;
};
t.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
t.z = Math.round(e.z);
return t;
};
t.scale = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
return t;
};
t.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
t.z = e.z + i.z * n;
return t;
};
t.distance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z;
return Math.sqrt(i * i + n * n + r * r);
};
t.dist = function(e, i) {
return t.distance(e, i);
};
t.squaredDistance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z;
return i * i + n * n + r * r;
};
t.sqrDist = function(e, i) {
return t.squaredDistance(e, i);
};
t.magnitude = function(t) {
var e = t.x, i = t.y, n = t.z;
return Math.sqrt(e * e + i * i + n * n);
};
t.mag = function(e) {
return t.magnitude(e);
};
t.squaredMagnitude = function(t) {
var e = t.x, i = t.y, n = t.z;
return e * e + i * i + n * n;
};
t.sqrMag = function(e) {
return t.squaredMagnitude(e);
};
t.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
return t;
};
t.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
t.z = 1 / e.z;
return t;
};
t.inverseSafe = function(t, e) {
var i = e.x, r = e.y, s = e.z;
Math.abs(i) < n.EPSILON ? t.x = 0 : t.x = 1 / i;
Math.abs(r) < n.EPSILON ? t.y = 0 : t.y = 1 / r;
Math.abs(s) < n.EPSILON ? t.z = 0 : t.z = 1 / s;
return t;
};
t.normalize = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = i * i + n * n + r * r;
if (s > 0) {
s = 1 / Math.sqrt(s);
t.x = i * s;
t.y = n * s;
t.z = r * s;
}
return t;
};
t.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z;
};
t.cross = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = i.x, a = i.y, c = i.z;
t.x = r * c - s * a;
t.y = s * o - n * c;
t.z = n * a - r * o;
return t;
};
t.lerp = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z;
t.x = r + n * (i.x - r);
t.y = s + n * (i.y - s);
t.z = o + n * (i.z - o);
return t;
};
t.hermite = function(t, e, i, n, r, s) {
var o = s * s, a = o * (2 * s - 3) + 1, c = o * (s - 2) + s, l = o * (s - 1), u = o * (3 - 2 * s);
t.x = e.x * a + i.x * c + n.x * l + r.x * u;
t.y = e.y * a + i.y * c + n.y * l + r.y * u;
t.z = e.z * a + i.z * c + n.z * l + r.z * u;
return t;
};
t.bezier = function(t, e, i, n, r, s) {
var o = 1 - s, a = o * o, c = s * s, l = a * o, u = 3 * s * a, h = 3 * c * o, _ = c * s;
t.x = e.x * l + i.x * u + n.x * h + r.x * _;
t.y = e.y * l + i.y * u + n.y * h + r.y * _;
t.z = e.z * l + i.z * u + n.z * h + r.z * _;
return t;
};
t.random = function(t, e) {
e = e || 1;
var i = 2 * (0, n.random)() * Math.PI, r = Math.acos(2 * (0, n.random)() - 1);
t.x = Math.sin(r) * Math.cos(i) * e;
t.y = Math.sin(r) * Math.sin(i) * e;
t.z = Math.cos(r) * e;
return t;
};
t.transformMat4 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y, o = e.z, a = n[3] * r + n[7] * s + n[11] * o + n[15];
a = a ? 1 / a : 1;
t.x = (n[0] * r + n[4] * s + n[8] * o + n[12]) * a;
t.y = (n[1] * r + n[5] * s + n[9] * o + n[13]) * a;
t.z = (n[2] * r + n[6] * s + n[10] * o + n[14]) * a;
return t;
};
t.transformMat4Normal = function(t, e, i) {
var n = i.m, r = e.x, s = e.y, o = e.z, a = n[3] * r + n[7] * s + n[11] * o;
a = a ? 1 / a : 1;
t.x = (n[0] * r + n[4] * s + n[8] * o) * a;
t.y = (n[1] * r + n[5] * s + n[9] * o) * a;
t.z = (n[2] * r + n[6] * s + n[10] * o) * a;
return t;
};
t.transformMat3 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y, o = e.z;
t.x = r * n[0] + s * n[3] + o * n[6];
t.y = r * n[1] + s * n[4] + o * n[7];
t.z = r * n[2] + s * n[5] + o * n[8];
return t;
};
t.transformQuat = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = i.x, a = i.y, c = i.z, l = i.w, u = l * n + a * s - c * r, h = l * r + c * n - o * s, _ = l * s + o * r - a * n, f = -o * n - a * r - c * s;
t.x = u * l + f * -o + h * -c - _ * -a;
t.y = h * l + f * -a + _ * -o - u * -c;
t.z = _ * l + f * -c + u * -a - h * -o;
return t;
};
t.rotateX = function(t, e, i, n) {
var r = e.x - i.x, s = e.y - i.y, o = e.z - i.z, a = r, c = s * Math.cos(n) - o * Math.sin(n), l = s * Math.sin(n) + o * Math.cos(n);
t.x = a + i.x;
t.y = c + i.y;
t.z = l + i.z;
return t;
};
t.rotateY = function(t, e, i, n) {
var r = e.x - i.x, s = e.y - i.y, o = e.z - i.z, a = o * Math.sin(n) + r * Math.cos(n), c = s, l = o * Math.cos(n) - r * Math.sin(n);
t.x = a + i.x;
t.y = c + i.y;
t.z = l + i.z;
return t;
};
t.rotateZ = function(t, e, i, n) {
var r = e.x - i.x, s = e.y - i.y, o = e.z - i.z, a = r * Math.cos(n) - s * Math.sin(n), c = r * Math.sin(n) + s * Math.cos(n), l = o;
t.x = a + i.x;
t.y = c + i.y;
t.z = l + i.z;
return t;
};
t.str = function(t) {
return "vec3(" + t.x + ", " + t.y + ", " + t.z + ")";
};
t.array = function(t, e) {
t[0] = e.x;
t[1] = e.y;
t[2] = e.z;
return t;
};
t.exactEquals = function(t, e) {
return t.x === e.x && t.y === e.y && t.z === e.z;
};
t.equals = function(t, e) {
var i = t.x, r = t.y, s = t.z, o = e.x, a = e.y, c = e.z;
return Math.abs(i - o) <= n.EPSILON * Math.max(1, Math.abs(i), Math.abs(o)) && Math.abs(r - a) <= n.EPSILON * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(s - c) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(c));
};
t.forEach = function(e, i, n, r, s, o) {
return t._forEach(e, i, n, r, s, o);
};
t.angle = function(e, i) {
return t._angle(e, i);
};
t.projectOnPlane = function(e, i, n) {
return t.sub(e, i, t.project(e, i, n));
};
t.project = function(e, i, n) {
var r = t.squaredMagnitude(n);
return r < 1e-6 ? t.set(e, 0, 0, 0) : t.scale(e, n, t.dot(i, n) / r);
};
return t;
})();
s._forEach = (function() {
var t = s.create(0, 0, 0);
return function(e, i, n, r, s, o) {
var a = void 0, c = void 0;
i || (i = 3);
n || (n = 0);
c = r ? Math.min(r * i + n, e.length) : e.length;
for (a = n; a < c; a += i) {
t.x = e[a];
t.y = e[a + 1];
t.z = e[a + 2];
s(t, t, o);
e[a] = t.x;
e[a + 1] = t.y;
e[a + 2] = t.z;
}
return e;
};
})();
s._angle = (function() {
var t = s.create(0, 0, 0), e = s.create(0, 0, 0);
return function(i, n) {
s.copy(t, i);
s.copy(e, n);
s.normalize(t, t);
s.normalize(e, e);
var r = s.dot(t, e);
return r > 1 ? 0 : r < -1 ? Math.PI : Math.acos(r);
};
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
235: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./utils");
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
r(this, t);
this.x = e;
this.y = i;
this.z = n;
this.w = s;
}
t.create = function() {
return new t(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1);
};
t.zero = function(t) {
t.x = 0;
t.y = 0;
t.z = 0;
t.w = 0;
return t;
};
t.clone = function(e) {
return new t(e.x, e.y, e.z, e.w);
};
t.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
t.w = e.w;
return t;
};
t.set = function(t, e, i, n, r) {
t.x = e;
t.y = i;
t.z = n;
t.w = r;
return t;
};
t.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
t.z = e.z + i.z;
t.w = e.w + i.w;
return t;
};
t.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
t.z = e.z - i.z;
t.w = e.w - i.w;
return t;
};
t.sub = function(e, i, n) {
return t.subtract(e, i, n);
};
t.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
t.z = e.z * i.z;
t.w = e.w * i.w;
return t;
};
t.mul = function(e, i, n) {
return t.multiply(e, i, n);
};
t.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
t.z = e.z / i.z;
t.w = e.w / i.w;
return t;
};
t.div = function(e, i, n) {
return t.divide(e, i, n);
};
t.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
t.z = Math.ceil(e.z);
t.w = Math.ceil(e.w);
return t;
};
t.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
t.z = Math.floor(e.z);
t.w = Math.floor(e.w);
return t;
};
t.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
t.z = Math.min(e.z, i.z);
t.w = Math.min(e.w, i.w);
return t;
};
t.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
t.z = Math.max(e.z, i.z);
t.w = Math.max(e.w, i.w);
return t;
};
t.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
t.z = Math.round(e.z);
t.w = Math.round(e.w);
return t;
};
t.scale = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
t.w = e.w * i;
return t;
};
t.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
t.z = e.z + i.z * n;
t.w = e.w + i.w * n;
return t;
};
t.distance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z, s = e.w - t.w;
return Math.sqrt(i * i + n * n + r * r + s * s);
};
t.dist = function(e, i) {
return t.distance(e, i);
};
t.squaredDistance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z, s = e.w - t.w;
return i * i + n * n + r * r + s * s;
};
t.sqrDist = function(e, i) {
return t.squaredDistance(e, i);
};
t.magnitude = function(t) {
var e = t.x, i = t.y, n = t.z, r = t.w;
return Math.sqrt(e * e + i * i + n * n + r * r);
};
t.mag = function(e) {
return t.magnitude(e);
};
t.squaredMagnitude = function(t) {
var e = t.x, i = t.y, n = t.z, r = t.w;
return e * e + i * i + n * n + r * r;
};
t.sqrMag = function(e) {
return t.squaredMagnitude(e);
};
t.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
t.w = -e.w;
return t;
};
t.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
t.z = 1 / e.z;
t.w = 1 / e.w;
return t;
};
t.inverseSafe = function(t, e) {
var i = e.x, r = e.y, s = e.z, o = e.w;
Math.abs(i) < n.EPSILON ? t.x = 0 : t.x = 1 / i;
Math.abs(r) < n.EPSILON ? t.y = 0 : t.y = 1 / r;
Math.abs(s) < n.EPSILON ? t.z = 0 : t.z = 1 / s;
Math.abs(o) < n.EPSILON ? t.w = 0 : t.w = 1 / o;
return t;
};
t.normalize = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = e.w, o = i * i + n * n + r * r + s * s;
if (o > 0) {
o = 1 / Math.sqrt(o);
t.x = i * o;
t.y = n * o;
t.z = r * o;
t.w = s * o;
}
return t;
};
t.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z + t.w * e.w;
};
t.lerp = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z, a = e.w;
t.x = r + n * (i.x - r);
t.y = s + n * (i.y - s);
t.z = o + n * (i.z - o);
t.w = a + n * (i.w - a);
return t;
};
t.random = function(t, e) {
e = e || 1;
var i = 2 * (0, n.random)() * Math.PI, r = Math.acos(2 * (0, n.random)() - 1);
t.x = Math.sin(r) * Math.cos(i) * e;
t.y = Math.sin(r) * Math.sin(i) * e;
t.z = Math.cos(r) * e;
t.w = 0;
return t;
};
t.transformMat4 = function(t, e, i) {
var n = i.m, r = e.x, s = e.y, o = e.z, a = e.w;
t.x = n[0] * r + n[4] * s + n[8] * o + n[12] * a;
t.y = n[1] * r + n[5] * s + n[9] * o + n[13] * a;
t.z = n[2] * r + n[6] * s + n[10] * o + n[14] * a;
t.w = n[3] * r + n[7] * s + n[11] * o + n[15] * a;
return t;
};
t.transformQuat = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = i.x, a = i.y, c = i.z, l = i.w, u = l * n + a * s - c * r, h = l * r + c * n - o * s, _ = l * s + o * r - a * n, f = -o * n - a * r - c * s;
t.x = u * l + f * -o + h * -c - _ * -a;
t.y = h * l + f * -a + _ * -o - u * -c;
t.z = _ * l + f * -c + u * -a - h * -o;
t.w = e.w;
return t;
};
t.str = function(t) {
return "vec4(" + t.x + ", " + t.y + ", " + t.z + ", " + t.w + ")";
};
t.array = function(t, e) {
t[0] = e.x;
t[1] = e.y;
t[2] = e.z;
t[3] = e.w;
return t;
};
t.exactEquals = function(t, e) {
return t.x === e.x && t.y === e.y && t.z === e.z && t.w === e.w;
};
t.equals = function(t, e) {
var i = t.x, r = t.y, s = t.z, o = t.w, a = e.x, c = e.y, l = e.z, u = e.w;
return Math.abs(i - a) <= n.EPSILON * Math.max(1, Math.abs(i), Math.abs(a)) && Math.abs(r - c) <= n.EPSILON * Math.max(1, Math.abs(r), Math.abs(c)) && Math.abs(s - l) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(l)) && Math.abs(o - u) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(u));
};
t.forEach = function(e, i, n, r, s, o) {
return t._forEach(e, i, n, r, s, o);
};
return t;
})();
s._forEach = (function() {
var t = s.create(0, 0, 0, 0);
return function(e, i, n, r, s, o) {
var a = void 0, c = void 0;
i || (i = 4);
n || (n = 0);
c = r ? Math.min(r * i + n, e.length) : e.length;
for (a = n; a < c; a += i) {
t.x = e[a];
t.y = e[a + 1];
t.z = e[a + 2];
t.w = e[a + 3];
s(t, t, o);
e[a] = t.x;
e[a + 1] = t.y;
e[a + 2] = t.z;
e[a + 3] = t.w;
}
return e;
};
})();
i.default = s;
e.exports = i.default;
}), {
"./utils": 232
} ],
236: [ (function(t, e, i) {
"use strict";
cc.js;
}), {} ],
237: [ (function(t, e, i) {
"use strict";
t("./core/CCGame");
t("./actions");
}), {
"./actions": 7,
"./core/CCGame": 14
} ],
238: [ (function(t, e, i) {
"use strict";
var n = t("../core/assets/CCAsset"), r = t("../core/assets/CCSpriteFrame"), s = cc.Class({
name: "cc.ParticleAsset",
extends: n,
properties: {
spriteFrame: {
default: null,
type: r
}
}
});
cc.ParticleAsset = e.exports = s;
}), {
"../core/assets/CCAsset": 19,
"../core/assets/CCSpriteFrame": 33
} ],
239: [ (function(t, e, i) {
"use strict";
var n, r, s, o = 512, a = 513, c = 514, l = 515, u = 516, h = 517, _ = 518, f = 519, d = 32774, p = 32778, m = 32779, y = 0, v = 1, g = 768, C = 769, x = 774, A = 775, b = 770, S = 771, w = 772, T = 773, B = 32769, E = 32770, M = 32771, I = 32772, R = 776, D = 7680, P = 7681, V = 7682, L = 34055, O = 7683, F = 34056, N = 5386, G = 0, z = 1028, k = 1029;
(function(t) {
t[t.COMPRESSED_RGB_S3TC_DXT1_EXT = 33776] = "COMPRESSED_RGB_S3TC_DXT1_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT1_EXT = 33777] = "COMPRESSED_RGBA_S3TC_DXT1_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT3_EXT = 33778] = "COMPRESSED_RGBA_S3TC_DXT3_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT5_EXT = 33779] = "COMPRESSED_RGBA_S3TC_DXT5_EXT";
t[t.COMPRESSED_SRGB_S3TC_DXT1_EXT = 35916] = "COMPRESSED_SRGB_S3TC_DXT1_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 35917] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 35918] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 35919] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";
t[t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840] = "COMPRESSED_RGB_PVRTC_4BPPV1_IMG";
t[t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841] = "COMPRESSED_RGB_PVRTC_2BPPV1_IMG";
t[t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842] = "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG";
t[t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843] = "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG";
t[t.COMPRESSED_RGB_ETC1_WEBGL = 36196] = "COMPRESSED_RGB_ETC1_WEBGL";
})(n || (n = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.BUFFER = 1] = "BUFFER";
t[t.TEXTURE = 2] = "TEXTURE";
t[t.TEXTURE_VIEW = 3] = "TEXTURE_VIEW";
t[t.RENDER_PASS = 4] = "RENDER_PASS";
t[t.FRAMEBUFFER = 5] = "FRAMEBUFFER";
t[t.SAMPLER = 6] = "SAMPLER";
t[t.SHADER = 7] = "SHADER";
t[t.PIPELINE_LAYOUT = 8] = "PIPELINE_LAYOUT";
t[t.PIPELINE_STATE = 9] = "PIPELINE_STATE";
t[t.BINDING_LAYOUT = 10] = "BINDING_LAYOUT";
t[t.INPUT_ASSEMBLER = 11] = "INPUT_ASSEMBLER";
t[t.COMMAND_ALLOCATOR = 12] = "COMMAND_ALLOCATOR";
t[t.COMMAND_BUFFER = 13] = "COMMAND_BUFFER";
t[t.QUEUE = 14] = "QUEUE";
t[t.WINDOW = 15] = "WINDOW";
})(r || (r = {}));
(function(t) {
t[t.UNREADY = 0] = "UNREADY";
t[t.FAILED = 1] = "FAILED";
t[t.SUCCESS = 2] = "SUCCESS";
})(s || (s = {}));
var U, j, W, H, q, X, Y, J, Z, K, Q, $, tt, et, it, nt, rt, st, ot, at, ct, lt, ut, ht, _t, ft, dt, pt, mt, yt, vt, gt, Ct, xt, At;
(function() {
function t(t) {
this._gfxType = r.UNKNOWN;
this._status = s.UNREADY;
this._gfxType = t;
}
Object.defineProperty(t.prototype, "gfxType", {
get: function() {
return this._gfxType;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "status", {
get: function() {
return this._status;
},
enumerable: !0,
configurable: !0
});
})();
(function(t) {
t.ATTR_POSITION = "a_position";
t.ATTR_NORMAL = "a_normal";
t.ATTR_TANGENT = "a_tangent";
t.ATTR_BITANGENT = "a_bitangent";
t.ATTR_WEIGHTS = "a_weights";
t.ATTR_JOINTS = "a_joints";
t.ATTR_COLOR = "a_color";
t.ATTR_COLOR1 = "a_color1";
t.ATTR_COLOR2 = "a_color2";
t.ATTR_TEX_COORD = "a_texCoord";
t.ATTR_TEX_COORD1 = "a_texCoord1";
t.ATTR_TEX_COORD2 = "a_texCoord2";
t.ATTR_TEX_COORD3 = "a_texCoord3";
t.ATTR_TEX_COORD4 = "a_texCoord4";
t.ATTR_TEX_COORD5 = "a_texCoord5";
t.ATTR_TEX_COORD6 = "a_texCoord6";
t.ATTR_TEX_COORD7 = "a_texCoord7";
t.ATTR_TEX_COORD8 = "a_texCoord8";
})(U || (U = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.BOOL = 1] = "BOOL";
t[t.BOOL2 = 2] = "BOOL2";
t[t.BOOL3 = 3] = "BOOL3";
t[t.BOOL4 = 4] = "BOOL4";
t[t.INT = 5] = "INT";
t[t.INT2 = 6] = "INT2";
t[t.INT3 = 7] = "INT3";
t[t.INT4 = 8] = "INT4";
t[t.UINT = 9] = "UINT";
t[t.UINT2 = 10] = "UINT2";
t[t.UINT3 = 11] = "UINT3";
t[t.UINT4 = 12] = "UINT4";
t[t.FLOAT = 13] = "FLOAT";
t[t.FLOAT2 = 14] = "FLOAT2";
t[t.FLOAT3 = 15] = "FLOAT3";
t[t.FLOAT4 = 16] = "FLOAT4";
t[t.COLOR4 = 17] = "COLOR4";
t[t.MAT2 = 18] = "MAT2";
t[t.MAT2X3 = 19] = "MAT2X3";
t[t.MAT2X4 = 20] = "MAT2X4";
t[t.MAT3X2 = 21] = "MAT3X2";
t[t.MAT3 = 22] = "MAT3";
t[t.MAT3X4 = 23] = "MAT3X4";
t[t.MAT4X2 = 24] = "MAT4X2";
t[t.MAT4X3 = 25] = "MAT4X3";
t[t.MAT4 = 26] = "MAT4";
t[t.SAMPLER1D = 27] = "SAMPLER1D";
t[t.SAMPLER1D_ARRAY = 28] = "SAMPLER1D_ARRAY";
t[t.SAMPLER2D = 29] = "SAMPLER2D";
t[t.SAMPLER2D_ARRAY = 30] = "SAMPLER2D_ARRAY";
t[t.SAMPLER3D = 31] = "SAMPLER3D";
t[t.SAMPLER_CUBE = 32] = "SAMPLER_CUBE";
t[t.COUNT = 33] = "COUNT";
})(j || (j = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.A8 = 1] = "A8";
t[t.L8 = 2] = "L8";
t[t.LA8 = 3] = "LA8";
t[t.R8 = 4] = "R8";
t[t.R8SN = 5] = "R8SN";
t[t.R8UI = 6] = "R8UI";
t[t.R8I = 7] = "R8I";
t[t.R16F = 8] = "R16F";
t[t.R16UI = 9] = "R16UI";
t[t.R16I = 10] = "R16I";
t[t.R32F = 11] = "R32F";
t[t.R32UI = 12] = "R32UI";
t[t.R32I = 13] = "R32I";
t[t.RG8 = 14] = "RG8";
t[t.RG8SN = 15] = "RG8SN";
t[t.RG8UI = 16] = "RG8UI";
t[t.RG8I = 17] = "RG8I";
t[t.RG16F = 18] = "RG16F";
t[t.RG16UI = 19] = "RG16UI";
t[t.RG16I = 20] = "RG16I";
t[t.RG32F = 21] = "RG32F";
t[t.RG32UI = 22] = "RG32UI";
t[t.RG32I = 23] = "RG32I";
t[t.RGB8 = 24] = "RGB8";
t[t.SRGB8 = 25] = "SRGB8";
t[t.RGB8SN = 26] = "RGB8SN";
t[t.RGB8UI = 27] = "RGB8UI";
t[t.RGB8I = 28] = "RGB8I";
t[t.RGB16F = 29] = "RGB16F";
t[t.RGB16UI = 30] = "RGB16UI";
t[t.RGB16I = 31] = "RGB16I";
t[t.RGB32F = 32] = "RGB32F";
t[t.RGB32UI = 33] = "RGB32UI";
t[t.RGB32I = 34] = "RGB32I";
t[t.RGBA8 = 35] = "RGBA8";
t[t.SRGB8_A8 = 36] = "SRGB8_A8";
t[t.RGBA8SN = 37] = "RGBA8SN";
t[t.RGBA8UI = 38] = "RGBA8UI";
t[t.RGBA8I = 39] = "RGBA8I";
t[t.RGBA16F = 40] = "RGBA16F";
t[t.RGBA16UI = 41] = "RGBA16UI";
t[t.RGBA16I = 42] = "RGBA16I";
t[t.RGBA32F = 43] = "RGBA32F";
t[t.RGBA32UI = 44] = "RGBA32UI";
t[t.RGBA32I = 45] = "RGBA32I";
t[t.R5G6B5 = 46] = "R5G6B5";
t[t.R11G11B10F = 47] = "R11G11B10F";
t[t.RGB5A1 = 48] = "RGB5A1";
t[t.RGBA4 = 49] = "RGBA4";
t[t.RGB10A2 = 50] = "RGB10A2";
t[t.RGB10A2UI = 51] = "RGB10A2UI";
t[t.RGB9E5 = 52] = "RGB9E5";
t[t.D16 = 53] = "D16";
t[t.D16S8 = 54] = "D16S8";
t[t.D24 = 55] = "D24";
t[t.D24S8 = 56] = "D24S8";
t[t.D32F = 57] = "D32F";
t[t.D32F_S8 = 58] = "D32F_S8";
t[t.BC1 = 59] = "BC1";
t[t.BC1_ALPHA = 60] = "BC1_ALPHA";
t[t.BC1_SRGB = 61] = "BC1_SRGB";
t[t.BC1_SRGB_ALPHA = 62] = "BC1_SRGB_ALPHA";
t[t.BC2 = 63] = "BC2";
t[t.BC2_SRGB = 64] = "BC2_SRGB";
t[t.BC3 = 65] = "BC3";
t[t.BC3_SRGB = 66] = "BC3_SRGB";
t[t.BC4 = 67] = "BC4";
t[t.BC4_SNORM = 68] = "BC4_SNORM";
t[t.BC5 = 69] = "BC5";
t[t.BC5_SNORM = 70] = "BC5_SNORM";
t[t.BC6H_UF16 = 71] = "BC6H_UF16";
t[t.BC6H_SF16 = 72] = "BC6H_SF16";
t[t.BC7 = 73] = "BC7";
t[t.BC7_SRGB = 74] = "BC7_SRGB";
t[t.ETC_RGB8 = 75] = "ETC_RGB8";
t[t.ETC2_RGB8 = 76] = "ETC2_RGB8";
t[t.ETC2_SRGB8 = 77] = "ETC2_SRGB8";
t[t.ETC2_RGB8_A1 = 78] = "ETC2_RGB8_A1";
t[t.ETC2_SRGB8_A1 = 79] = "ETC2_SRGB8_A1";
t[t.ETC2_RGBA8 = 80] = "ETC2_RGBA8";
t[t.ETC2_SRGB8_A8 = 81] = "ETC2_SRGB8_A8";
t[t.EAC_R11 = 82] = "EAC_R11";
t[t.EAC_R11SN = 83] = "EAC_R11SN";
t[t.EAC_RG11 = 84] = "EAC_RG11";
t[t.EAC_RG11SN = 85] = "EAC_RG11SN";
t[t.PVRTC_RGB2 = 86] = "PVRTC_RGB2";
t[t.PVRTC_RGBA2 = 87] = "PVRTC_RGBA2";
t[t.PVRTC_RGB4 = 88] = "PVRTC_RGB4";
t[t.PVRTC_RGBA4 = 89] = "PVRTC_RGBA4";
t[t.PVRTC2_2BPP = 90] = "PVRTC2_2BPP";
t[t.PVRTC2_4BPP = 91] = "PVRTC2_4BPP";
})(W || (W = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.TRANSFER_SRC = 1] = "TRANSFER_SRC";
t[t.TRANSFER_DST = 2] = "TRANSFER_DST";
t[t.INDEX = 4] = "INDEX";
t[t.VERTEX = 8] = "VERTEX";
t[t.UNIFORM = 16] = "UNIFORM";
t[t.STORAGE = 32] = "STORAGE";
t[t.INDIRECT = 64] = "INDIRECT";
})(H || (H = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.DEVICE = 1] = "DEVICE";
t[t.HOST = 2] = "HOST";
})(q || (q = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.READ = 1] = "READ";
t[t.WRITE = 2] = "WRITE";
})(X || (X = {}));
(function(t) {
t[t.POINT_LIST = 0] = "POINT_LIST";
t[t.LINE_LIST = 1] = "LINE_LIST";
t[t.LINE_STRIP = 2] = "LINE_STRIP";
t[t.LINE_LOOP = 3] = "LINE_LOOP";
t[t.LINE_LIST_ADJACENCY = 4] = "LINE_LIST_ADJACENCY";
t[t.LINE_STRIP_ADJACENCY = 5] = "LINE_STRIP_ADJACENCY";
t[t.ISO_LINE_LIST = 6] = "ISO_LINE_LIST";
t[t.TRIANGLE_LIST = 7] = "TRIANGLE_LIST";
t[t.TRIANGLE_STRIP = 8] = "TRIANGLE_STRIP";
t[t.TRIANGLE_FAN = 9] = "TRIANGLE_FAN";
t[t.TRIANGLE_LIST_ADJACENCY = 10] = "TRIANGLE_LIST_ADJACENCY";
t[t.TRIANGLE_STRIP_ADJACENCY = 11] = "TRIANGLE_STRIP_ADJACENCY";
t[t.TRIANGLE_PATCH_ADJACENCY = 12] = "TRIANGLE_PATCH_ADJACENCY";
t[t.QUAD_PATCH_LIST = 13] = "QUAD_PATCH_LIST";
})(Y || (Y = {}));
(function(t) {
t[t.FILL = 0] = "FILL";
t[t.POINT = 1] = "POINT";
t[t.LINE = 2] = "LINE";
})(J || (J = {}));
(function(t) {
t[t.GOURAND = 0] = "GOURAND";
t[t.FLAT = 1] = "FLAT";
})(Z || (Z = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.FRONT = 1] = "FRONT";
t[t.BACK = 2] = "BACK";
})(K || (K = {}));
(function(t) {
t[t.NEVER = 0] = "NEVER";
t[t.LESS = 1] = "LESS";
t[t.EQUAL = 2] = "EQUAL";
t[t.LESS_EQUAL = 3] = "LESS_EQUAL";
t[t.GREATER = 4] = "GREATER";
t[t.NOT_EQUAL = 5] = "NOT_EQUAL";
t[t.GREATER_EQUAL = 6] = "GREATER_EQUAL";
t[t.ALWAYS = 7] = "ALWAYS";
})(Q || (Q = {}));
(function(t) {
t[t.ZERO = 0] = "ZERO";
t[t.KEEP = 1] = "KEEP";
t[t.REPLACE = 2] = "REPLACE";
t[t.INCR = 3] = "INCR";
t[t.DECR = 4] = "DECR";
t[t.INVERT = 5] = "INVERT";
t[t.INCR_WRAP = 6] = "INCR_WRAP";
t[t.DECR_WRAP = 7] = "DECR_WRAP";
})($ || ($ = {}));
(function(t) {
t[t.ADD = 0] = "ADD";
t[t.SUB = 1] = "SUB";
t[t.REV_SUB = 2] = "REV_SUB";
t[t.MIN = 3] = "MIN";
t[t.MAX = 4] = "MAX";
})(tt || (tt = {}));
(function(t) {
t[t.ZERO = 0] = "ZERO";
t[t.ONE = 1] = "ONE";
t[t.SRC_ALPHA = 2] = "SRC_ALPHA";
t[t.DST_ALPHA = 3] = "DST_ALPHA";
t[t.ONE_MINUS_SRC_ALPHA = 4] = "ONE_MINUS_SRC_ALPHA";
t[t.ONE_MINUS_DST_ALPHA = 5] = "ONE_MINUS_DST_ALPHA";
t[t.SRC_COLOR = 6] = "SRC_COLOR";
t[t.DST_COLOR = 7] = "DST_COLOR";
t[t.ONE_MINUS_SRC_COLOR = 8] = "ONE_MINUS_SRC_COLOR";
t[t.ONE_MINUS_DST_COLOR = 9] = "ONE_MINUS_DST_COLOR";
t[t.SRC_ALPHA_SATURATE = 10] = "SRC_ALPHA_SATURATE";
t[t.CONSTANT_COLOR = 11] = "CONSTANT_COLOR";
t[t.ONE_MINUS_CONSTANT_COLOR = 12] = "ONE_MINUS_CONSTANT_COLOR";
t[t.CONSTANT_ALPHA = 13] = "CONSTANT_ALPHA";
t[t.ONE_MINUS_CONSTANT_ALPHA = 14] = "ONE_MINUS_CONSTANT_ALPHA";
})(et || (et = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.R = 1] = "R";
t[t.G = 2] = "G";
t[t.B = 4] = "B";
t[t.A = 8] = "A";
t[t.ALL = 15] = "ALL";
})(it || (it = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.POINT = 1] = "POINT";
t[t.LINEAR = 2] = "LINEAR";
t[t.ANISOTROPIC = 3] = "ANISOTROPIC";
})(nt || (nt = {}));
(function(t) {
t[t.WRAP = 0] = "WRAP";
t[t.MIRROR = 1] = "MIRROR";
t[t.CLAMP = 2] = "CLAMP";
t[t.BORDER = 3] = "BORDER";
})(rt || (rt = {}));
(function(t) {
t[t.TEX1D = 0] = "TEX1D";
t[t.TEX2D = 1] = "TEX2D";
t[t.TEX3D = 2] = "TEX3D";
})(st || (st = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.TRANSFER_SRC = 1] = "TRANSFER_SRC";
t[t.TRANSFER_DST = 2] = "TRANSFER_DST";
t[t.SAMPLED = 4] = "SAMPLED";
t[t.STORAGE = 8] = "STORAGE";
t[t.COLOR_ATTACHMENT = 16] = "COLOR_ATTACHMENT";
t[t.DEPTH_STENCIL_ATTACHMENT = 32] = "DEPTH_STENCIL_ATTACHMENT";
t[t.TRANSIENT_ATTACHMENT = 64] = "TRANSIENT_ATTACHMENT";
t[t.INPUT_ATTACHMENT = 128] = "INPUT_ATTACHMENT";
})(ot || (ot = {}));
(function(t) {
t[t.X1 = 0] = "X1";
t[t.X2 = 1] = "X2";
t[t.X4 = 2] = "X4";
t[t.X8 = 3] = "X8";
t[t.X16 = 4] = "X16";
t[t.X32 = 5] = "X32";
t[t.X64 = 6] = "X64";
})(at || (at = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.GEN_MIPMAP = 1] = "GEN_MIPMAP";
t[t.CUBEMAP = 2] = "CUBEMAP";
t[t.BAKUP_BUFFER = 4] = "BAKUP_BUFFER";
})(ct || (ct = {}));
(function(t) {
t[t.TV1D = 0] = "TV1D";
t[t.TV2D = 1] = "TV2D";
t[t.TV3D = 2] = "TV3D";
t[t.CUBE = 3] = "CUBE";
t[t.TV1D_ARRAY = 4] = "TV1D_ARRAY";
t[t.TV2D_ARRAY = 5] = "TV2D_ARRAY";
})(lt || (lt = {}));
(function(t) {
t[t.VERTEX = 0] = "VERTEX";
t[t.HULL = 1] = "HULL";
t[t.DOMAIN = 2] = "DOMAIN";
t[t.GEOMETRY = 3] = "GEOMETRY";
t[t.FRAGMENT = 4] = "FRAGMENT";
t[t.COMPUTE = 5] = "COMPUTE";
t[t.COUNT = 6] = "COUNT";
})(ut || (ut = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.UNIFORM_BUFFER = 1] = "UNIFORM_BUFFER";
t[t.SAMPLER = 2] = "SAMPLER";
t[t.STORAGE_BUFFER = 3] = "STORAGE_BUFFER";
})(ht || (ht = {}));
(function(t) {
t[t.PRIMARY = 0] = "PRIMARY";
t[t.SECONDARY = 1] = "SECONDARY";
})(_t || (_t = {}));
(function(t) {
t[t.LOAD = 0] = "LOAD";
t[t.CLEAR = 1] = "CLEAR";
t[t.DISCARD = 2] = "DISCARD";
})(ft || (ft = {}));
(function(t) {
t[t.STORE = 0] = "STORE";
t[t.DISCARD = 1] = "DISCARD";
})(dt || (dt = {}));
(function(t) {
t[t.UNDEFINED = 0] = "UNDEFINED";
t[t.GENERAL = 1] = "GENERAL";
t[t.COLOR_ATTACHMENT_OPTIMAL = 2] = "COLOR_ATTACHMENT_OPTIMAL";
t[t.DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3] = "DEPTH_STENCIL_ATTACHMENT_OPTIMAL";
t[t.DEPTH_STENCIL_READONLY_OPTIMAL = 4] = "DEPTH_STENCIL_READONLY_OPTIMAL";
t[t.SHADER_READONLY_OPTIMAL = 5] = "SHADER_READONLY_OPTIMAL";
t[t.TRANSFER_SRC_OPTIMAL = 6] = "TRANSFER_SRC_OPTIMAL";
t[t.TRANSFER_DST_OPTIMAL = 7] = "TRANSFER_DST_OPTIMAL";
t[t.PREINITIALIZED = 8] = "PREINITIALIZED";
t[t.PRESENT_SRC = 9] = "PRESENT_SRC";
})(pt || (pt = {}));
(function(t) {
t[t.GRAPHICS = 0] = "GRAPHICS";
t[t.COMPUTE = 1] = "COMPUTE";
t[t.RAY_TRACING = 2] = "RAY_TRACING";
})(mt || (mt = {}));
(function(t) {
t[t.VIEWPORT = 0] = "VIEWPORT";
t[t.SCISSOR = 1] = "SCISSOR";
t[t.LINE_WIDTH = 2] = "LINE_WIDTH";
t[t.DEPTH_BIAS = 3] = "DEPTH_BIAS";
t[t.BLEND_CONSTANTS = 4] = "BLEND_CONSTANTS";
t[t.DEPTH_BOUNDS = 5] = "DEPTH_BOUNDS";
t[t.STENCIL_WRITE_MASK = 6] = "STENCIL_WRITE_MASK";
t[t.STENCIL_COMPARE_MASK = 7] = "STENCIL_COMPARE_MASK";
})(yt || (yt = {}));
(function(t) {
t[t.FRONT = 0] = "FRONT";
t[t.BACK = 1] = "BACK";
t[t.ALL = 2] = "ALL";
})(vt || (vt = {}));
(function(t) {
t[t.GRAPHICS = 0] = "GRAPHICS";
t[t.COMPUTE = 1] = "COMPUTE";
t[t.TRANSFER = 2] = "TRANSFER";
})(gt || (gt = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.COLOR = 1] = "COLOR";
t[t.DEPTH = 2] = "DEPTH";
t[t.STENCIL = 4] = "STENCIL";
t[t.DEPTH_STENCIL = 6] = "DEPTH_STENCIL";
t[t.ALL = 7] = "ALL";
})(Ct || (Ct = {}));
(function(t) {
t[t.DEFAULT = 100] = "DEFAULT";
})(xt || (xt = {}));
(function(t) {
t[t.MIN = 0] = "MIN";
t[t.MAX = 255] = "MAX";
t[t.DEFAULT = 128] = "DEFAULT";
})(At || (At = {}));
var bt, St, wt, Tt;
(function(t) {
t[t.UBO_GLOBAL = 23] = "UBO_GLOBAL";
t[t.UBO_SHADOW = 22] = "UBO_SHADOW";
t[t.UBO_LOCAL = 21] = "UBO_LOCAL";
t[t.UBO_FORWARD_LIGHTS = 20] = "UBO_FORWARD_LIGHTS";
t[t.UBO_SKINNING = 19] = "UBO_SKINNING";
t[t.UBO_SKINNING_TEXTURE = 18] = "UBO_SKINNING_TEXTURE";
t[t.UBO_UI = 17] = "UBO_UI";
t[t.SAMPLER_JOINTS = 25] = "SAMPLER_JOINTS";
t[t.SAMPLER_ENVIRONMENT = 26] = "SAMPLER_ENVIRONMENT";
t[t.CUSTUM_UBO_BINDING_END_POINT = 17] = "CUSTUM_UBO_BINDING_END_POINT";
t[t.CUSTOM_SAMPLER_BINDING_START_POINT = 30] = "CUSTOM_SAMPLER_BINDING_START_POINT";
})(bt || (bt = {}));
(function(t) {
t[t.minFilter = 0] = "minFilter";
t[t.magFilter = 1] = "magFilter";
t[t.mipFilter = 2] = "mipFilter";
t[t.addressU = 3] = "addressU";
t[t.addressV = 4] = "addressV";
t[t.addressW = 5] = "addressW";
t[t.maxAnisotropy = 6] = "maxAnisotropy";
t[t.cmpFunc = 7] = "cmpFunc";
t[t.minLOD = 8] = "minLOD";
t[t.maxLOD = 9] = "maxLOD";
t[t.mipLODBias = 10] = "mipLODBias";
t[t.borderColor = 11] = "borderColor";
t[t.total = 15] = "total";
})(Tt || (Tt = {}));
var Bt = {};
Bt[Bt.bool = j.BOOL] = "bool";
Bt[Bt.int = j.INT] = "int";
Bt[Bt.ivec2 = j.INT2] = "ivec2invTypeParams";
Bt[Bt.ivec3 = j.INT3] = "ivec3";
Bt[Bt.ivec4 = j.INT4] = "ivec4";
Bt[Bt.float = j.FLOAT] = "float";
Bt[Bt.vec2 = j.FLOAT2] = "vec2";
Bt[Bt.vec3 = j.FLOAT3] = "vec3";
Bt[Bt.vec4 = j.FLOAT4] = "vec4";
Bt[Bt.mat2 = j.MAT2] = "mat2";
Bt[Bt.mat3 = j.MAT3] = "mat3";
Bt[Bt.mat4 = j.MAT4] = "mat4";
Bt[Bt.sampler2D = j.SAMPLER2D] = "sampler2D";
Bt[Bt.samplerCube = j.SAMPLER_CUBE] = "samplerCube";
var Et = ((St = {})[j.BOOL] = 4, St[j.INT] = 4, St[j.INT2] = 8, St[j.INT3] = 12, 
St[j.INT4] = 16, St[j.FLOAT] = 4, St[j.FLOAT2] = 8, St[j.FLOAT3] = 12, St[j.FLOAT4] = 16, 
St[j.MAT2] = 16, St[j.MAT3] = 36, St[j.MAT4] = 64, St[j.SAMPLER2D] = 4, St[j.SAMPLER_CUBE] = 4, 
St), Mt = ((wt = {})[j.BOOL] = W.R32I, wt[j.INT] = W.R32I, wt[j.INT2] = W.RG32I, 
wt[j.INT3] = W.RGB32I, wt[j.INT4] = W.RGBA32I, wt[j.FLOAT] = W.R32F, wt[j.FLOAT2] = W.RG32F, 
wt[j.FLOAT3] = W.RGB32F, wt[j.FLOAT4] = W.RGBA32F, wt), It = {
BACK: k,
FRONT: z,
NONE: G,
ADD: d,
SUB: p,
REV_SUB: m,
ZERO: y,
ONE: v,
SRC_COLOR: g,
ONE_MINUS_SRC_COLOR: C,
DST_COLOR: x,
ONE_MINUS_DST_COLOR: A,
SRC_ALPHA: b,
ONE_MINUS_SRC_ALPHA: S,
DST_ALPHA: w,
ONE_MINUS_DST_ALPHA: T,
CONSTANT_COLOR: B,
ONE_MINUS_CONSTANT_COLOR: E,
CONSTANT_ALPHA: M,
ONE_MINUS_CONSTANT_ALPHA: I,
SRC_ALPHA_SATURATE: R,
NEVER: o,
LESS: a,
EQUAL: c,
LEQUAL: l,
GREATER: u,
NOTEQUAL: h,
GEQUAL: _,
ALWAYS: f,
KEEP: D,
REPLACE: P,
INCR: V,
INCR_WRAP: L,
DECR: O,
DECR_WRAP: F,
INVERT: N
};
Object.assign(It, xt);
var Rt = {
murmurhash2_32_gc: function(t, e) {
for (var i, n = t.length, r = e ^ n, s = 0; n >= 4; ) {
i = 1540483477 * (65535 & (i = 255 & t.charCodeAt(s) | (255 & t.charCodeAt(++s)) << 8 | (255 & t.charCodeAt(++s)) << 16 | (255 & t.charCodeAt(++s)) << 24)) + ((1540483477 * (i >>> 16) & 65535) << 16);
r = 1540483477 * (65535 & r) + ((1540483477 * (r >>> 16) & 65535) << 16) ^ (i = 1540483477 * (65535 & (i ^= i >>> 24)) + ((1540483477 * (i >>> 16) & 65535) << 16));
n -= 4;
++s;
}
switch (n) {
case 3:
r ^= (255 & t.charCodeAt(s + 2)) << 16;

case 2:
r ^= (255 & t.charCodeAt(s + 1)) << 8;

case 1:
r = 1540483477 * (65535 & (r ^= 255 & t.charCodeAt(s))) + ((1540483477 * (r >>> 16) & 65535) << 16);
}
r = 1540483477 * (65535 & (r ^= r >>> 13)) + ((1540483477 * (r >>> 16) & 65535) << 16);
return (r ^= r >>> 15) >>> 0;
},
SamplerInfoIndex: Tt,
effectStructure: {
$techniques: [ {
$passes: [ {
depthStencilState: {},
rasterizerState: {},
blendState: {
targets: [ {} ]
},
properties: {
any: {
sampler: {},
inspector: {}
}
}
} ]
} ]
},
typeMap: Bt,
sizeMap: Et,
formatMap: Mt,
passParams: It,
RenderQueue: {
OPAQUE: 0,
TRANSPARENT: 1,
OVERLAY: 2
},
RenderPriority: At,
GFXGetTypeSize: function(t) {
switch (t) {
case j.BOOL:
case j.INT:
case j.UINT:
case j.FLOAT:
return 4;

case j.BOOL2:
case j.INT2:
case j.UINT2:
case j.FLOAT2:
return 8;

case j.BOOL3:
case j.INT3:
case j.UINT3:
case j.FLOAT3:
return 12;

case j.BOOL4:
case j.INT4:
case j.UINT4:
case j.FLOAT4:
case j.MAT2:
return 16;

case j.MAT2X3:
return 24;

case j.MAT2X4:
return 32;

case j.MAT3X2:
return 24;

case j.MAT3:
return 36;

case j.MAT3X4:
return 48;

case j.MAT4X2:
case j.MAT4X2:
return 32;

case j.MAT4:
return 64;

case j.SAMPLER1D:
case j.SAMPLER1D_ARRAY:
case j.SAMPLER2D:
case j.SAMPLER2D_ARRAY:
case j.SAMPLER3D:
case j.SAMPLER_CUBE:
return 4;

default:
return 0;
}
},
UniformBinding: bt
};
e.exports = Rt;
}), {} ],
240: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = 0, r = {};
i.default = {
addStage: function(t) {
if (void 0 === r[t]) {
var e = 1 << n;
r[t] = e;
n += 1;
window.renderer.addStage(t);
}
},
stageID: function(t) {
var e = r[t];
return void 0 === e ? -1 : e;
},
stageIDs: function(t) {
for (var e = 0, i = 0; i < t.length; ++i) {
var n = r[t[i]];
void 0 !== n && (e |= n);
}
return e;
}
};
e.exports = i.default;
}), {} ],
241: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = c(t("../config")), r = c(t("../core/pass")), s = c(t("../core/technique")), o = t("../types"), a = c(t("../enums"));
c(t("../gfx"));
function c(t) {
return t && t.__esModule ? t : {
default: t
};
}
function l(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var u = (function() {
function t(e, i) {
var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [];
l(this, t);
this._name = e;
this._techniques = i;
this._properties = n;
this._defines = r;
this._dependencies = s;
}
t.prototype.clear = function() {
this._techniques.length = 0;
this._properties = {};
this._defines = {};
};
t.prototype.setCullMode = function(t) {
for (var e = this._techniques[0].passes, i = 0; i < e.length; i++) e[i].setCullMode(t);
};
t.prototype.setDepth = function(t, e, i) {
for (var n = this._techniques[0].passes, r = 0; r < n.length; r++) n[r].setDepth(t, e, i);
};
t.prototype.setBlend = function(t, e, i, n, r, s, o, a) {
for (var c = this._techniques[0].passes, l = 0; l < c.length; l++) {
c[l].setBlend(t, e, i, n, r, s, o, a);
}
};
t.prototype.setStencilEnabled = function(t) {
for (var e = this._techniques[0].passes, i = 0; i < e.length; i++) e[i].setStencilEnabled(t);
};
t.prototype.setStencil = function(t, e, i, n, r, s, o, a) {
for (var c = this._techniques[0].passes, l = 0; l < c.length; ++l) {
var u = c[l];
u.setStencilFront(t, e, i, n, r, s, o, a);
u.setStencilBack(t, e, i, n, r, s, o, a);
}
};
t.prototype.getTechnique = function(t) {
var e = n.default.stageID(t);
if (-1 === e) return null;
for (var i = 0; i < this._techniques.length; ++i) {
var r = this._techniques[i];
if (r.stageIDs & e) return r;
}
return null;
};
t.prototype.getProperty = function(t) {
if (!this._properties[t]) {
cc.warn(this._name + " : Failed to get property " + t + ", property not found.");
return null;
}
return this._properties[t].value;
};
t.prototype.setProperty = function(t, e) {
var i = this._properties[t];
if (i) if (Array.isArray(e)) {
var n = i.value;
if (n.length !== e.length) {
cc.warn(this._name + " : Failed to set property " + t + ", property length not correct.");
return;
}
for (var r = 0; r < e.length; r++) n[r] = e[r];
} else i.type === a.default.PARAM_TEXTURE_2D ? i.value = e ? e.getImpl() : null : e.array ? e.array(i.value) : i.value = e; else cc.warn(this._name + " : Failed to set property " + t + ", property not found.");
};
t.prototype.updateHash = function(t) {};
t.prototype.getDefine = function(t) {
var e = this._defines[t];
void 0 === e && cc.warn(this._name + " : Failed to get define " + t + ", define not found.");
return e;
};
t.prototype.define = function(t, e) {
void 0 !== this._defines[t] ? this._defines[t] = e : cc.warn(this._name + " : Failed to set define " + t + ", define not found.");
};
t.prototype.extractProperties = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
Object.assign(t, this._properties);
return t;
};
t.prototype.extractDefines = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
Object.assign(t, this._defines);
return t;
};
t.prototype.extractDependencies = function() {
for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = 0; e < this._dependencies.length; ++e) {
var i = this._dependencies[e];
t[i.define] = i.extension;
}
return t;
};
t.prototype.clone = function() {
var t = this.extractDefines({}), e = this.extractDependencies({}), i = {}, n = this._properties;
for (var r in n) {
var s = n[r], o = i[r] = {}, a = s.value;
Array.isArray(a) ? o.value = a.concat() : ArrayBuffer.isView(a) ? o.value = new a.__proto__.constructor(a) : o.value = a;
for (var c in s) "value" !== c && (o[c] = s[c]);
}
for (var l = [], u = 0; u < this._techniques.length; u++) l.push(this._techniques[u].clone());
return new cc.Effect(this._name, l, i, t, e);
};
return t;
})(), h = function(t) {
var e = [], i = cc.renderer._forward._programLib;
t.techniques.forEach((function(t) {
t.passes.forEach((function(t) {
e.push(i.getTemplate(t.program));
}));
}));
return e;
};
function _(t, e) {
var i = {}, n = {};
t.techniques.forEach((function(t) {
t.passes.forEach((function(t) {
Object.assign(n, t.properties);
}));
}));
var r = function(r) {
for (var s = n[r], o = void 0, c = 0; c < e.length && !(o = e[c].uniforms.find((function(t) {
return t.name === r;
}))); c++) ;
if (!o) {
cc.warn(t.name + " : illegal property: " + r + ", myabe defined a not used property");
return "continue";
}
i[r] = Object.assign({}, s);
i[r].value = s.type === a.default.PARAM_TEXTURE_2D ? null : new Float32Array(s.value);
};
for (var s in n) r(s);
return i;
}
u.parseTechniques = function(t) {
for (var e = t.techniques.length, i = new Array(e), n = 0; n < e; ++n) {
var o = t.techniques[n];
o.stages || (o.stages = [ "opaque" ]);
for (var a = o.passes.length, c = new Array(a), l = 0; l < a; ++l) {
var u = o.passes[l];
c[l] = new r.default(u.program);
u.rasterizerState && c[l].setCullMode(u.rasterizerState.cullMode);
var h = u.blendState && u.blendState.targets[0];
h && c[l].setBlend(h.blend, h.blendEq, h.blendSrc, h.blendDst, h.blendAlphaEq, h.blendSrcAlpha, h.blendDstAlpha, h.blendColor);
var _ = u.depthStencilState;
if (_) {
c[l].setDepth(_.depthTest, _.depthWrite, _.depthFunc);
c[l].setStencilFront(_.stencilTest, _.stencilFuncFront, _.stencilRefFront, _.stencilMaskFront, _.stencilFailOpFront, _.stencilZFailOpFront, _.stencilZPassOpFront, _.stencilWriteMaskFront);
c[l].setStencilBack(_.stencilTest, _.stencilFuncBack, _.stencilRefBack, _.stencilMaskBack, _.stencilFailOpBack, _.stencilZFailOpBack, _.stencilZPassOpBack, _.stencilWriteMaskBack);
}
}
i[n] = new s.default(o.stages, c, o.layer);
}
return i;
};
u.parseEffect = function(t) {
var e = u.parseTechniques(t), i = h(t), n = _(t, i), r = {}, s = {};
i.forEach((function(t) {
t.uniforms.forEach((function(t) {
var e = t.name, i = r[e] = Object.assign({}, t);
n[e] ? i.value = n[e].value : i.value = o.enums2default[t.type];
}));
t.defines.forEach((function(t) {
s[t.name] = o.enums2default[t.type];
}));
}));
var a = i.reduce((function(t, e) {
return t.concat(e.extensions);
}), []);
a = a.map((function(t) {
return Object.assign({}, t);
}));
return new cc.Effect(t.name, e, r, s, a, t);
};
0;
cc.Effect = u;
i.default = u;
e.exports = i.default;
}), {
"../config": 240,
"../core/pass": 243,
"../core/technique": 244,
"../enums": 245,
"../gfx": 246,
"../types": 248
} ],
242: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
return function(e, i, n) {
i && t(e.prototype, i);
n && t(e, n);
return e;
};
})(), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../gfx"));
function s(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var o = (function() {
function t(e, i) {
var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : r.default.PT_TRIANGLES;
s(this, t);
this._vertexBuffer = e;
this._indexBuffer = i;
this._primitiveType = n;
this._start = 0;
this._count = -1;
}
n(t, [ {
key: "count",
get: function() {
return -1 !== this._count ? this._count : this._indexBuffer ? this._indexBuffer.count : this._vertexBuffer.count;
}
} ]);
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"../gfx": 246
} ],
243: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../gfx"));
function r(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var s = (function() {
function t(e) {
r(this, t);
this._programName = e;
this._cullMode = n.default.CULL_BACK;
this._blend = !1;
this._blendEq = n.default.BLEND_FUNC_ADD;
this._blendAlphaEq = n.default.BLEND_FUNC_ADD;
this._blendSrc = n.default.BLEND_SRC_ALPHA;
this._blendDst = n.default.BLEND_ONE_MINUS_SRC_ALPHA;
this._blendSrcAlpha = n.default.BLEND_SRC_ALPHA;
this._blendDstAlpha = n.default.BLEND_ONE_MINUS_SRC_ALPHA;
this._blendColor = 4294967295;
this._depthTest = !1;
this._depthWrite = !1;
this._depthFunc = n.default.DS_FUNC_LESS, this._stencilTest = n.default.STENCIL_INHERIT;
this._stencilFuncFront = n.default.DS_FUNC_ALWAYS;
this._stencilRefFront = 0;
this._stencilMaskFront = 255;
this._stencilFailOpFront = n.default.STENCIL_OP_KEEP;
this._stencilZFailOpFront = n.default.STENCIL_OP_KEEP;
this._stencilZPassOpFront = n.default.STENCIL_OP_KEEP;
this._stencilWriteMaskFront = 255;
this._stencilFuncBack = n.default.DS_FUNC_ALWAYS;
this._stencilRefBack = 0;
this._stencilMaskBack = 255;
this._stencilFailOpBack = n.default.STENCIL_OP_KEEP;
this._stencilZFailOpBack = n.default.STENCIL_OP_KEEP;
this._stencilZPassOpBack = n.default.STENCIL_OP_KEEP;
this._stencilWriteMaskBack = 255;
}
t.prototype.setCullMode = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.default.CULL_BACK;
this._cullMode = t;
};
t.prototype.setBlend = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.default.BLEND_FUNC_ADD, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : n.default.BLEND_SRC_ALPHA, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n.default.BLEND_ONE_MINUS_SRC_ALPHA, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : n.default.BLEND_FUNC_ADD, o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : n.default.BLEND_SRC_ALPHA, a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : n.default.BLEND_ONE_MINUS_SRC_ALPHA, c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 4294967295;
this._blend = t;
this._blendEq = e;
this._blendSrc = i;
this._blendDst = r;
this._blendAlphaEq = s;
this._blendSrcAlpha = o;
this._blendDstAlpha = a;
this._blendColor = c;
};
t.prototype.setDepth = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : n.default.DS_FUNC_LESS;
this._depthTest = t;
this._depthWrite = e;
this._depthFunc = i;
};
t.prototype.setStencilFront = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.default.STENCIL_INHERIT, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.default.DS_FUNC_ALWAYS, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 255, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : n.default.STENCIL_OP_KEEP, o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : n.default.STENCIL_OP_KEEP, a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : n.default.STENCIL_OP_KEEP, c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 255;
this._stencilTest = t;
this._stencilFuncFront = e;
this._stencilRefFront = i;
this._stencilMaskFront = r;
this._stencilFailOpFront = s;
this._stencilZFailOpFront = o;
this._stencilZPassOpFront = a;
this._stencilWriteMaskFront = c;
};
t.prototype.setStencilEnabled = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.default.STENCIL_INHERIT;
this._stencilTest = t;
};
t.prototype.setStencilBack = function() {
var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.default.STENCIL_INHERIT, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.default.DS_FUNC_ALWAYS, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 255, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : n.default.STENCIL_OP_KEEP, o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : n.default.STENCIL_OP_KEEP, a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : n.default.STENCIL_OP_KEEP, c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 255;
this._stencilTest = t;
this._stencilFuncBack = e;
this._stencilRefBack = i;
this._stencilMaskBack = r;
this._stencilFailOpBack = s;
this._stencilZFailOpBack = o;
this._stencilZPassOpBack = a;
this._stencilWriteMaskBack = c;
};
t.prototype.clone = function() {
var e = new t(this._programName);
Object.assign(e, this);
return e;
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"../gfx": 246
} ],
244: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
return function(e, i, n) {
i && t(e.prototype, i);
n && t(e, n);
return e;
};
})(), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../config"));
function s(t, e) {
if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
var o = 0, a = (function() {
function t(e, i) {
var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
s(this, t);
this._id = o++;
this._stages = e;
this._stageIDs = r.default.stageIDs(e);
this._passes = i;
this._layer = n;
}
t.prototype.setStages = function(t) {
this._stageIDs = r.default.stageIDs(t);
};
t.prototype.clone = function() {
for (var e = [], i = 0; i < this._passes.length; i++) e.push(this._passes[i].clone());
return new t(this._stages, e, this._layer);
};
n(t, [ {
key: "passes",
get: function() {
return this._passes;
}
}, {
key: "stageIDs",
get: function() {
return this._stageIDs;
}
} ]);
return t;
})();
i.default = a;
e.exports = i.default;
}), {
"../config": 240
} ],
245: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = t("./build/mappings");
i.default = {
PROJ_PERSPECTIVE: 0,
PROJ_ORTHO: 1,
LIGHT_DIRECTIONAL: 0,
LIGHT_POINT: 1,
LIGHT_SPOT: 2,
LIGHT_AMBIENT: 3,
SHADOW_NONE: 0,
SHADOW_HARD: 1,
SHADOW_SOFT: 2,
PARAM_INT: n.typeMap.int,
PARAM_INT2: n.typeMap.ivec2,
PARAM_INT3: n.typeMap.ivec3,
PARAM_INT4: n.typeMap.ivec4,
PARAM_FLOAT: n.typeMap.float,
PARAM_FLOAT2: n.typeMap.vec2,
PARAM_FLOAT3: n.typeMap.vec3,
PARAM_FLOAT4: n.typeMap.vec4,
PARAM_MAT2: n.typeMap.mat2,
PARAM_MAT3: n.typeMap.mat3,
PARAM_MAT4: n.typeMap.mat4,
PARAM_TEXTURE_2D: n.typeMap.sampler2D,
PARAM_TEXTURE_CUBE: n.typeMap.samplerCube,
CLEAR_COLOR: 1,
CLEAR_DEPTH: 2,
CLEAR_STENCIL: 4,
CLEAR_SKYBOX: 8,
BUFFER_VIEW_INT8: 0,
BUFFER_VIEW_UINT8: 1,
BUFFER_VIEW_INT16: 2,
BUFFER_VIEW_UINT16: 3,
BUFFER_VIEW_INT32: 4,
BUFFER_VIEW_UINT32: 5,
BUFFER_VIEW_FLOAT32: 6
};
e.exports = i.default;
}), {
"./build/mappings": 239
} ],
246: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
t("./enums");
var n = null;
n = window.gfx;
i.default = n;
cc.gfx = n;
e.exports = i.default;
}), {
"./device": void 0,
"./enums": void 0,
"./frame-buffer": void 0,
"./index-buffer": void 0,
"./program": void 0,
"./render-buffer": void 0,
"./texture": void 0,
"./texture-2d": void 0,
"./texture-cube": void 0,
"./vertex-buffer": void 0,
"./vertex-format": void 0
} ],
247: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e) {
var i, n = t.length, r = e ^ n, s = 0;
for (;n >= 4; ) {
i = 1540483477 * (65535 & (i = 255 & t.charCodeAt(s) | (255 & t.charCodeAt(++s)) << 8 | (255 & t.charCodeAt(++s)) << 16 | (255 & t.charCodeAt(++s)) << 24)) + ((1540483477 * (i >>> 16) & 65535) << 16);
r = 1540483477 * (65535 & r) + ((1540483477 * (r >>> 16) & 65535) << 16) ^ (i = 1540483477 * (65535 & (i ^= i >>> 24)) + ((1540483477 * (i >>> 16) & 65535) << 16));
n -= 4;
++s;
}
switch (n) {
case 3:
r ^= (255 & t.charCodeAt(s + 2)) << 16;

case 2:
r ^= (255 & t.charCodeAt(s + 1)) << 8;

case 1:
r = 1540483477 * (65535 & (r ^= 255 & t.charCodeAt(s))) + ((1540483477 * (r >>> 16) & 65535) << 16);
}
r = 1540483477 * (65535 & (r ^= r >>> 13)) + ((1540483477 * (r >>> 16) & 65535) << 16);
return (r ^= r >>> 15) >>> 0;
};
e.exports = i.default;
}), {} ],
248: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.getClassName = i.getInstanceCtor = i.getInstanceType = i.enums2default = i.ctor2enums = void 0;
var n, r, s, o;
i.getInspectorProps = function(t) {
var e = {
type: t.type
};
Object.assign(e, t.inspector);
e.defines = t.defines;
e.value = m(e.type)(t.value);
var i = y(e.type);
e.typeName = v[i] || i;
if ("cc.Texture2D" == e.typeName) {
e.typeName = "cc.Asset";
e.assetType = "cc.Texture2D";
}
return e;
};
var a = u(t("./enums")), c = t("../core/value-types"), l = u(t("../core/assets/CCTexture2D"));
function u(t) {
return t && t.__esModule ? t : {
default: t
};
}
var h = null;
h = gfx.Texture2D;
var _ = cc.Object, f = ((n = {})[Boolean] = function(t) {
return t || !1;
}, n[Number] = function(t) {
return t ? ArrayBuffer.isView(t) ? t[0] : t : 0;
}, n[c.Vec2] = function(t) {
return t ? cc.v2(t[0], t[1]) : cc.v2();
}, n[c.Vec3] = function(t) {
return t ? cc.v3(t[0], t[1], t[2]) : cc.v3();
}, n[c.Vec4] = function(t) {
return t ? cc.v4(t[0], t[1], t[2], t[3]) : cc.v4();
}, n[c.Color] = function(t) {
return t ? cc.color(255 * t[0], 255 * t[1], 255 * t[2], 255 * (t[3] || 1)) : cc.color();
}, n[c.Mat4] = function(t) {
return t ? cc.mat4(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]) : cc.mat4();
}, n[l.default] = function() {
return null;
}, n[_] = function() {
return null;
}, n), d = ((r = {})[a.default.PARAM_INT] = Number, r[a.default.PARAM_INT2] = c.Vec2, 
r[a.default.PARAM_INT3] = c.Vec3, r[a.default.PARAM_INT4] = c.Vec4, r[a.default.PARAM_FLOAT] = Number, 
r[a.default.PARAM_FLOAT2] = c.Vec2, r[a.default.PARAM_FLOAT3] = c.Vec3, r[a.default.PARAM_FLOAT4] = c.Vec4, 
r[a.default.PARAM_MAT4] = c.Mat4, r[a.default.PARAM_TEXTURE_2D] = l.default, r.color = c.Color, 
r.number = Number, r.boolean = Boolean, r.default = _, r), p = (i.ctor2enums = ((s = {})[Number] = a.default.PARAM_FLOAT, 
s[c.Vec2] = a.default.PARAM_FLOAT2, s[c.Vec3] = a.default.PARAM_FLOAT3, s[c.Vec4] = a.default.PARAM_FLOAT4, 
s[c.Color] = a.default.PARAM_COLOR3, s[c.Color] = a.default.PARAM_COLOR4, s[c.Mat4] = a.default.PARAM_MAT4, 
s[l.default] = a.default.PARAM_TEXTURE_2D, s[h] = a.default.PARAM_TEXTURE_2D, s), 
i.enums2default = ((o = {})[a.default.PARAM_INT] = new Uint32Array([ 0 ]), o[a.default.PARAM_INT2] = new Uint32Array([ 0, 0 ]), 
o[a.default.PARAM_INT3] = new Uint32Array([ 0, 0, 0 ]), o[a.default.PARAM_INT4] = new Uint32Array([ 0, 0, 0, 0 ]), 
o[a.default.PARAM_FLOAT] = new Float32Array([ 0 ]), o[a.default.PARAM_FLOAT2] = new Float32Array([ 0, 0 ]), 
o[a.default.PARAM_FLOAT3] = new Float32Array([ 0, 0, 0 ]), o[a.default.PARAM_FLOAT4] = new Float32Array([ 0, 0, 0, 0 ]), 
o[a.default.PARAM_MAT4] = cc.mat4().m, o[a.default.PARAM_TEXTURE_2D] = null, o.number = 0, 
o.boolean = !1, o), i.getInstanceType = function(t) {
return d[t] || d.default;
}), m = i.getInstanceCtor = function(t) {
return f[p(t)];
}, y = i.getClassName = function(t) {
return cc.js.getClassName(p(t));
}, v = {
Number: "number",
Boolean: "boolean"
};
}), {
"../core/assets/CCTexture2D": 36,
"../core/value-types": 214,
"./enums": 245,
"./gfx/texture-2d": void 0
} ],
249: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TiledMapAsset",
extends: cc.Asset,
properties: {
tmxXmlStr: "",
textures: {
default: [],
type: [ cc.Texture2D ]
},
textureNames: [ cc.String ],
imageLayerTextures: {
default: [],
type: [ cc.Texture2D ]
},
imageLayerTextureNames: [ cc.String ],
tsxFiles: [ cc.TextAsset ],
tsxFileNames: [ cc.String ]
},
statics: {
preventDeferredLoadDependents: !0
},
createNode: !1
});
cc.TiledMapAsset = n;
e.exports = n;
}), {} ],
250: [ (function(t, e, i) {
"use strict";
var n = t("./webview-impl"), r = n.EventType;
function s() {}
var o = cc.Class({
name: "cc.WebView",
extends: cc.Component,
editor: !1,
properties: {
_useOriginalSize: !0,
_url: "",
url: {
type: cc.String,
tooltip: !1,
get: function() {
return this._url;
},
set: function(t) {
this._url = t;
var e = this._impl;
e && e.loadURL(t);
}
},
webviewEvents: {
default: [],
type: cc.Component.EventHandler
}
},
statics: {
EventType: r,
Impl: n
},
ctor: function() {
this._impl = new o.Impl();
},
onRestore: function() {
this._impl || (this._impl = new o.Impl());
},
onEnable: function() {
var t = this._impl;
t.createDomElementIfNeeded(this.node.width, this.node.height);
t.setEventListener(r.LOADED, this._onWebViewLoaded.bind(this));
t.setEventListener(r.LOADING, this._onWebViewLoading.bind(this));
t.setEventListener(r.ERROR, this._onWebViewLoadError.bind(this));
t.loadURL(this._url);
t.setVisible(!0);
},
onDisable: function() {
var t = this._impl;
t.setVisible(!1);
t.setEventListener(r.LOADED, s);
t.setEventListener(r.LOADING, s);
t.setEventListener(r.ERROR, s);
},
onDestroy: function() {
if (this._impl) {
this._impl.destroy();
this._impl = null;
}
},
update: function(t) {
this._impl && this._impl.updateMatrix(this.node);
},
_onWebViewLoaded: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.LOADED);
this.node.emit("loaded", this);
},
_onWebViewLoading: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.LOADING);
this.node.emit("loading", this);
return !0;
},
_onWebViewLoadError: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.ERROR);
this.node.emit("error", this);
},
setJavascriptInterfaceScheme: function(t) {
this._impl && this._impl.setJavascriptInterfaceScheme(t);
},
setOnJSCallback: function(t) {
this._impl && this._impl.setOnJSCallback(t);
},
evaluateJS: function(t) {
this._impl && this._impl.evaluateJS(t);
}
});
cc.WebView = e.exports = o;
}), {
"./webview-impl": 251
} ],
251: [ (function(t, e, i) {
"use strict";
var n = t("../core/vmath"), r = t("../core/platform/utils"), s = t("../core/platform/CCSys"), o = n.mat4.create(), a = cc.Class({
name: "WebViewImpl",
ctor: function() {
this._EventList = {};
this._visible = !1;
this._parent = null;
this._div = null;
this._iframe = null;
this._listener = null;
this._forceUpdate = !0;
this._m00 = 0;
this._m01 = 0;
this._m04 = 0;
this._m05 = 0;
this._m12 = 0;
this._m13 = 0;
this._w = 0;
this._h = 0;
this.__eventListeners = {};
},
_updateVisibility: function() {
if (this._div) {
var t = this._div;
this._visible ? t.style.visibility = "visible" : t.style.visibility = "hidden";
this._forceUpdate = !0;
}
},
_updateSize: function(t, e) {
var i = this._div;
if (i) {
i.style.width = t + "px";
i.style.height = e + "px";
}
},
_initEvent: function() {
var t = this._iframe;
if (t) {
var e = this.__eventListeners, i = this;
e.load = function() {
i._dispatchEvent(a.EventType.LOADED);
};
e.error = function() {
i._dispatchEvent(a.EventType.ERROR);
};
t.addEventListener("load", e.load);
t.addEventListener("error", e.error);
}
},
_initStyle: function() {
if (this._div) {
var t = this._div;
t.style.position = "absolute";
t.style.bottom = "0px";
t.style.left = "0px";
}
},
_setOpacity: function(t) {
var e = this._iframe;
e && e.style && (e.style.opacity = t / 255);
},
_createDom: function(t, e) {
if (a._polyfill.enableDiv) {
this._div = document.createElement("div");
this._div.style["-webkit-overflow"] = "auto";
this._div.style["-webkit-overflow-scrolling"] = "touch";
this._iframe = document.createElement("iframe");
this._div.appendChild(this._iframe);
this._iframe.style.width = "100%";
this._iframe.style.height = "100%";
} else this._div = this._iframe = document.createElement("iframe");
a._polyfill.enableBG && (this._div.style.background = "#FFF");
this._div.style.background = "#FFF";
this._div.style.height = e + "px";
this._div.style.width = t + "px";
this._div.style.overflow = "scroll";
this._iframe.style.border = "none";
cc.game.container.appendChild(this._div);
this._updateVisibility();
},
_createNativeControl: function(t, e) {
this._createDom(t, e);
this._initStyle();
this._initEvent();
},
createDomElementIfNeeded: function(t, e) {
this._div ? this._updateSize(t, e) : this._createNativeControl(t, e);
},
removeDom: function() {
var t = this._div;
if (t) {
r.contains(cc.game.container, t) && cc.game.container.removeChild(t);
this._div = null;
}
var e = this._iframe;
if (e) {
var i = this.__eventListeners;
e.removeEventListener("load", i.load);
e.removeEventListener("error", i.error);
i.load = null;
i.error = null;
this._iframe = null;
}
},
setOnJSCallback: function(t) {},
setJavascriptInterfaceScheme: function(t) {},
loadData: function(t, e, i, n) {},
loadHTMLString: function(t, e) {},
loadURL: function(t) {
var e = this._iframe;
if (e) {
e.src = t;
var i = this;
e.addEventListener("load", (function t() {
i._loaded = !0;
i._updateVisibility();
e.removeEventListener("load", t);
}));
this._dispatchEvent(a.EventType.LOADING);
}
},
stopLoading: function() {
cc.logID(7800);
},
reload: function() {
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.location.reload();
}
},
canGoBack: function() {
cc.logID(7801);
return !0;
},
canGoForward: function() {
cc.logID(7802);
return !0;
},
goBack: function() {
try {
if (a._polyfill.closeHistory) return cc.logID(7803);
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.history.back.call(e);
}
} catch (t) {
cc.log(t);
}
},
goForward: function() {
try {
if (a._polyfill.closeHistory) return cc.logID(7804);
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.history.forward.call(e);
}
} catch (t) {
cc.log(t);
}
},
evaluateJS: function(t) {
var e = this._iframe;
if (e) {
var i = e.contentWindow;
try {
i.eval(t);
this._dispatchEvent(a.EventType.JS_EVALUATED);
} catch (t) {
console.error(t);
}
}
},
setScalesPageToFit: function() {
cc.logID(7805);
},
setEventListener: function(t, e) {
this._EventList[t] = e;
},
removeEventListener: function(t) {
this._EventList[t] = null;
},
_dispatchEvent: function(t) {
var e = this._EventList[t];
e && e.call(this, this, this._iframe.src);
},
_createRenderCmd: function() {
return new a.RenderCmd(this);
},
destroy: function() {
this.removeDom();
},
setVisible: function(t) {
if (this._visible !== t) {
this._visible = !!t;
this._updateVisibility();
}
},
updateMatrix: function(t) {
if (this._div && this._visible) {
t.getWorldMatrix(o);
var e = cc.Camera._findRendererCamera(t);
e && e.worldMatrixToScreen(o, o, cc.visibleRect.width, cc.visibleRect.height);
var i = o.m;
if (this._forceUpdate || this._m00 !== i[0] || this._m01 !== i[1] || this._m04 !== i[4] || this._m05 !== i[5] || this._m12 !== i[12] || this._m13 !== i[13] || this._w !== t._contentSize.width || this._h !== t._contentSize.height) {
this._m00 = i[0];
this._m01 = i[1];
this._m04 = i[4];
this._m05 = i[5];
this._m12 = i[12];
this._m13 = i[13];
this._w = t._contentSize.width;
this._h = t._contentSize.height;
var n = cc.view._scaleX, r = cc.view._scaleY, s = cc.view._devicePixelRatio;
n /= s;
r /= s;
var a = cc.game.container, c = i[0] * n, l = i[1], u = i[4], h = i[5] * r, _ = a && a.style.paddingLeft ? parseInt(a.style.paddingLeft) : 0, f = a && a.style.paddingBottom ? parseInt(a.style.paddingBottom) : 0;
this._updateSize(this._w, this._h);
var d = this._div.clientWidth * n, p = this._div.clientHeight * r, m = d * i[0] * t._anchorPoint.x, y = p * i[5] * t._anchorPoint.y, v = cc.view._viewportRect;
_ += v.x / s;
f += v.y / s;
var g = "matrix(" + c + "," + -l + "," + -u + "," + h + "," + (i[12] * n - m + _) + "," + -(i[13] * r - y + f) + ")";
this._div.style.transform = g;
this._div.style["-webkit-transform"] = g;
this._div.style["transform-origin"] = "0px 100% 0px";
this._div.style["-webkit-transform-origin"] = "0px 100% 0px";
this._setOpacity(t.opacity);
}
}
}
});
a.EventType = {
LOADING: 0,
LOADED: 1,
ERROR: 2,
JS_EVALUATED: 3
};
var c = a._polyfill = {
devicePixelRatio: !1,
enableDiv: !1
};
s.os === s.OS_IOS && (c.enableDiv = !0);
s.isMobile ? s.browserType === s.BROWSER_TYPE_FIREFOX && (c.enableBG = !0) : s.browserType === s.BROWSER_TYPE_IE && (c.closeHistory = !0);
e.exports = a;
}), {
"../core/platform/CCSys": 135,
"../core/platform/utils": 150,
"../core/vmath": 225
} ],
252: [ (function(t, e, i) {
"use strict";
t("./cocos2d/core");
t("./cocos2d/animation");
t("./cocos2d/particle");
t("./cocos2d/tilemap");
t("./cocos2d/videoplayer/CCVideoPlayer");
t("./cocos2d/webview/CCWebView");
t("./cocos2d/core/components/CCStudioComponent");
t("./extensions/ccpool/CCNodePool");
t("./cocos2d/actions");
t("./extensions/spine");
t("./extensions/dragonbones");
t("./cocos2d/deprecated");
}), {
"./cocos2d/actions": 7,
"./cocos2d/animation": void 0,
"./cocos2d/core": 77,
"./cocos2d/core/components/CCStudioComponent": 62,
"./cocos2d/deprecated": 236,
"./cocos2d/particle": void 0,
"./cocos2d/particle/CCParticleAsset": 238,
"./cocos2d/tilemap": void 0,
"./cocos2d/tilemap/CCTiledMapAsset": 249,
"./cocos2d/videoplayer/CCVideoPlayer": void 0,
"./cocos2d/webview/CCWebView": 250,
"./extensions/ccpool/CCNodePool": 253,
"./extensions/dragonbones": void 0,
"./extensions/spine": void 0
} ],
253: [ (function(t, e, i) {
"use strict";
cc.NodePool = function(t) {
this.poolHandlerComp = t;
this._pool = [];
};
cc.NodePool.prototype = {
constructor: cc.NodePool,
size: function() {
return this._pool.length;
},
clear: function() {
for (var t = this._pool.length, e = 0; e < t; ++e) this._pool[e].destroy();
this._pool.length = 0;
},
put: function(t) {
if (t && -1 === this._pool.indexOf(t)) {
t.removeFromParent(!1);
var e = this.poolHandlerComp ? t.getComponent(this.poolHandlerComp) : null;
e && e.unuse && e.unuse();
this._pool.push(t);
}
},
get: function() {
var t = this._pool.length - 1;
if (t < 0) return null;
var e = this._pool[t];
this._pool.length = t;
var i = this.poolHandlerComp ? e.getComponent(this.poolHandlerComp) : null;
i && i.reuse && i.reuse.apply(i, arguments);
return e;
}
};
e.exports = cc.NodePool;
}), {} ],
254: [ (function(t, e, i) {
"use strict";
(function(t, n) {
"object" == typeof i && "undefined" != typeof e ? n(i) : "function" == typeof define && define.amd ? define([ "exports" ], n) : n(t.box2d = {});
})(void 0, (function(t) {
function e(t, e) {
return void 0 !== t ? t : e;
}
var i = 1e37, n = 1e-5, r = n * n, s = 3.14159265359, o = 2, a = 8, c = .008, l = 2 / 180 * s, u = 2 * c, h = -1;
var _ = (function() {
function t(t, e, i) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
this.major = 0;
this.minor = 0;
this.revision = 0;
this.major = t;
this.minor = e;
this.revision = i;
}
t.prototype.toString = function() {
return this.major + "." + this.minor + "." + this.revision;
};
return t;
})(), f = new _(2, 3, 2);
function d(t, e) {
for (var i = [], n = 0; n < t; ++n) i.push(e(n));
return i;
}
function p(t, e) {
void 0 === e && (e = 0);
for (var i = [], n = 0; n < t; ++n) i.push(e);
return i;
}
var m = s / 180, y = 180 / s, v = Math.abs, g = Math.min, C = Math.max;
function x(t, e, i) {
return t < e ? e : t > i ? i : t;
}
var A = isFinite;
function b(t) {
return t * t;
}
function S(t) {
return 1 / Math.sqrt(t);
}
var w = Math.sqrt, T = Math.pow;
var B = Math.cos, E = Math.sin, M = Math.acos, I = Math.asin, R = Math.atan2;
var D = (function() {
function t(t, e) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
this.x = t;
this.y = e;
}
t.prototype.Clone = function() {
return new t(this.x, this.y);
};
t.prototype.SetZero = function() {
this.x = 0;
this.y = 0;
return this;
};
t.prototype.Set = function(t, e) {
this.x = t;
this.y = e;
return this;
};
t.prototype.Copy = function(t) {
this.x = t.x;
this.y = t.y;
return this;
};
t.prototype.SelfAdd = function(t) {
this.x += t.x;
this.y += t.y;
return this;
};
t.prototype.SelfAddXY = function(t, e) {
this.x += t;
this.y += e;
return this;
};
t.prototype.SelfSub = function(t) {
this.x -= t.x;
this.y -= t.y;
return this;
};
t.prototype.SelfSubXY = function(t, e) {
this.x -= t;
this.y -= e;
return this;
};
t.prototype.SelfMul = function(t) {
this.x *= t;
this.y *= t;
return this;
};
t.prototype.SelfMulAdd = function(t, e) {
this.x += t * e.x;
this.y += t * e.y;
return this;
};
t.prototype.SelfMulSub = function(t, e) {
this.x -= t * e.x;
this.y -= t * e.y;
return this;
};
t.prototype.Dot = function(t) {
return this.x * t.x + this.y * t.y;
};
t.prototype.Cross = function(t) {
return this.x * t.y - this.y * t.x;
};
t.prototype.Length = function() {
var t = this.x, e = this.y;
return Math.sqrt(t * t + e * e);
};
t.prototype.LengthSquared = function() {
var t = this.x, e = this.y;
return t * t + e * e;
};
t.prototype.Normalize = function() {
var t = this.Length();
if (t >= n) {
var e = 1 / t;
this.x *= e;
this.y *= e;
}
return t;
};
t.prototype.SelfNormalize = function() {
var t = this.Length();
if (t >= n) {
var e = 1 / t;
this.x *= e;
this.y *= e;
}
return this;
};
t.prototype.SelfRotate = function(t) {
var e = Math.cos(t), i = Math.sin(t), n = this.x;
this.x = e * n - i * this.y;
this.y = i * n + e * this.y;
return this;
};
t.prototype.IsValid = function() {
return isFinite(this.x) && isFinite(this.y);
};
t.prototype.SelfCrossVS = function(t) {
var e = this.x;
this.x = t * this.y;
this.y = -t * e;
return this;
};
t.prototype.SelfCrossSV = function(t) {
var e = this.x;
this.x = -t * this.y;
this.y = t * e;
return this;
};
t.prototype.SelfMinV = function(t) {
this.x = g(this.x, t.x);
this.y = g(this.y, t.y);
return this;
};
t.prototype.SelfMaxV = function(t) {
this.x = C(this.x, t.x);
this.y = C(this.y, t.y);
return this;
};
t.prototype.SelfAbs = function() {
this.x = v(this.x);
this.y = v(this.y);
return this;
};
t.prototype.SelfNeg = function() {
this.x = -this.x;
this.y = -this.y;
return this;
};
t.prototype.SelfSkew = function() {
var t = this.x;
this.x = -this.y;
this.y = t;
return this;
};
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.AbsV = function(t, e) {
e.x = v(t.x);
e.y = v(t.y);
return e;
};
t.MinV = function(t, e, i) {
i.x = g(t.x, e.x);
i.y = g(t.y, e.y);
return i;
};
t.MaxV = function(t, e, i) {
i.x = C(t.x, e.x);
i.y = C(t.y, e.y);
return i;
};
t.ClampV = function(t, e, i, n) {
n.x = x(t.x, e.x, i.x);
n.y = x(t.y, e.y, i.y);
return n;
};
t.RotateV = function(t, e, i) {
var n = t.x, r = t.y, s = Math.cos(e), o = Math.sin(e);
i.x = s * n - o * r;
i.y = o * n + s * r;
return i;
};
t.DotVV = function(t, e) {
return t.x * e.x + t.y * e.y;
};
t.CrossVV = function(t, e) {
return t.x * e.y - t.y * e.x;
};
t.CrossVS = function(t, e, i) {
var n = t.x;
i.x = e * t.y;
i.y = -e * n;
return i;
};
t.CrossVOne = function(t, e) {
var i = t.x;
e.x = t.y;
e.y = -i;
return e;
};
t.CrossSV = function(t, e, i) {
var n = e.x;
i.x = -t * e.y;
i.y = t * n;
return i;
};
t.CrossOneV = function(t, e) {
var i = t.x;
e.x = -t.y;
e.y = i;
return e;
};
t.AddVV = function(t, e, i) {
i.x = t.x + e.x;
i.y = t.y + e.y;
return i;
};
t.SubVV = function(t, e, i) {
i.x = t.x - e.x;
i.y = t.y - e.y;
return i;
};
t.MulSV = function(t, e, i) {
i.x = e.x * t;
i.y = e.y * t;
return i;
};
t.MulVS = function(t, e, i) {
i.x = t.x * e;
i.y = t.y * e;
return i;
};
t.AddVMulSV = function(t, e, i, n) {
n.x = t.x + e * i.x;
n.y = t.y + e * i.y;
return n;
};
t.SubVMulSV = function(t, e, i, n) {
n.x = t.x - e * i.x;
n.y = t.y - e * i.y;
return n;
};
t.AddVCrossSV = function(t, e, i, n) {
var r = i.x;
n.x = t.x - e * i.y;
n.y = t.y + e * r;
return n;
};
t.MidVV = function(t, e, i) {
i.x = .5 * (t.x + e.x);
i.y = .5 * (t.y + e.y);
return i;
};
t.ExtVV = function(t, e, i) {
i.x = .5 * (e.x - t.x);
i.y = .5 * (e.y - t.y);
return i;
};
t.IsEqualToV = function(t, e) {
return t.x === e.x && t.y === e.y;
};
t.DistanceVV = function(t, e) {
var i = t.x - e.x, n = t.y - e.y;
return Math.sqrt(i * i + n * n);
};
t.DistanceSquaredVV = function(t, e) {
var i = t.x - e.x, n = t.y - e.y;
return i * i + n * n;
};
t.NegV = function(t, e) {
e.x = -t.x;
e.y = -t.y;
return e;
};
t.ZERO = new t(0, 0);
t.UNITX = new t(1, 0);
t.UNITY = new t(0, 1);
t.s_t0 = new t();
t.s_t1 = new t();
t.s_t2 = new t();
t.s_t3 = new t();
return t;
})(), P = new D(0, 0), V = (function() {
function t(t, e, i) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
this.x = t;
this.y = e;
this.z = i;
}
t.prototype.Clone = function() {
return new t(this.x, this.y, this.z);
};
t.prototype.SetZero = function() {
this.x = 0;
this.y = 0;
this.z = 0;
return this;
};
t.prototype.SetXYZ = function(t, e, i) {
this.x = t;
this.y = e;
this.z = i;
return this;
};
t.prototype.Copy = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
return this;
};
t.prototype.SelfNeg = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
return this;
};
t.prototype.SelfAdd = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
return this;
};
t.prototype.SelfAddXYZ = function(t, e, i) {
this.x += t;
this.y += e;
this.z += i;
return this;
};
t.prototype.SelfSub = function(t) {
this.x -= t.x;
this.y -= t.y;
this.z -= t.z;
return this;
};
t.prototype.SelfSubXYZ = function(t, e, i) {
this.x -= t;
this.y -= e;
this.z -= i;
return this;
};
t.prototype.SelfMul = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
return this;
};
t.DotV3V3 = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z;
};
t.CrossV3V3 = function(t, e, i) {
var n = t.x, r = t.y, s = t.z, o = e.x, a = e.y, c = e.z;
i.x = r * c - s * a;
i.y = s * o - n * c;
i.z = n * a - r * o;
return i;
};
t.ZERO = new t(0, 0, 0);
t.s_t0 = new t();
return t;
})(), L = (function() {
function t() {
this.ex = new D(1, 0);
this.ey = new D(0, 1);
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.FromVV = function(e, i) {
return new t().SetVV(e, i);
};
t.FromSSSS = function(e, i, n, r) {
return new t().SetSSSS(e, i, n, r);
};
t.FromAngle = function(e) {
return new t().SetAngle(e);
};
t.prototype.SetSSSS = function(t, e, i, n) {
this.ex.Set(t, i);
this.ey.Set(e, n);
return this;
};
t.prototype.SetVV = function(t, e) {
this.ex.Copy(t);
this.ey.Copy(e);
return this;
};
t.prototype.SetAngle = function(t) {
var e = Math.cos(t), i = Math.sin(t);
this.ex.Set(e, i);
this.ey.Set(-i, e);
return this;
};
t.prototype.Copy = function(t) {
this.ex.Copy(t.ex);
this.ey.Copy(t.ey);
return this;
};
t.prototype.SetIdentity = function() {
this.ex.Set(1, 0);
this.ey.Set(0, 1);
return this;
};
t.prototype.SetZero = function() {
this.ex.SetZero();
this.ey.SetZero();
return this;
};
t.prototype.GetAngle = function() {
return Math.atan2(this.ex.y, this.ex.x);
};
t.prototype.GetInverse = function(t) {
var e = this.ex.x, i = this.ey.x, n = this.ex.y, r = this.ey.y, s = e * r - i * n;
0 !== s && (s = 1 / s);
t.ex.x = s * r;
t.ey.x = -s * i;
t.ex.y = -s * n;
t.ey.y = s * e;
return t;
};
t.prototype.Solve = function(t, e, i) {
var n = this.ex.x, r = this.ey.x, s = this.ex.y, o = this.ey.y, a = n * o - r * s;
0 !== a && (a = 1 / a);
i.x = a * (o * t - r * e);
i.y = a * (n * e - s * t);
return i;
};
t.prototype.SelfAbs = function() {
this.ex.SelfAbs();
this.ey.SelfAbs();
return this;
};
t.prototype.SelfInv = function() {
this.GetInverse(this);
return this;
};
t.prototype.SelfAddM = function(t) {
this.ex.SelfAdd(t.ex);
this.ey.SelfAdd(t.ey);
return this;
};
t.prototype.SelfSubM = function(t) {
this.ex.SelfSub(t.ex);
this.ey.SelfSub(t.ey);
return this;
};
t.AbsM = function(t, e) {
var i = t.ex, n = t.ey;
e.ex.x = v(i.x);
e.ex.y = v(i.y);
e.ey.x = v(n.x);
e.ey.y = v(n.y);
return e;
};
t.MulMV = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.x, o = e.y;
i.x = n.x * s + r.x * o;
i.y = n.y * s + r.y * o;
return i;
};
t.MulTMV = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.x, o = e.y;
i.x = n.x * s + n.y * o;
i.y = r.x * s + r.y * o;
return i;
};
t.AddMM = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.ex, o = e.ey;
i.ex.x = n.x + s.x;
i.ex.y = n.y + s.y;
i.ey.x = r.x + o.x;
i.ey.y = r.y + o.y;
return i;
};
t.MulMM = function(t, e, i) {
var n = t.ex.x, r = t.ex.y, s = t.ey.x, o = t.ey.y, a = e.ex.x, c = e.ex.y, l = e.ey.x, u = e.ey.y;
i.ex.x = n * a + s * c;
i.ex.y = r * a + o * c;
i.ey.x = n * l + s * u;
i.ey.y = r * l + o * u;
return i;
};
t.MulTMM = function(t, e, i) {
var n = t.ex.x, r = t.ex.y, s = t.ey.x, o = t.ey.y, a = e.ex.x, c = e.ex.y, l = e.ey.x, u = e.ey.y;
i.ex.x = n * a + r * c;
i.ex.y = s * a + o * c;
i.ey.x = n * l + r * u;
i.ey.y = s * l + o * u;
return i;
};
t.IDENTITY = new t();
return t;
})(), O = (function() {
function t() {
this.ex = new V(1, 0, 0);
this.ey = new V(0, 1, 0);
this.ez = new V(0, 0, 1);
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.SetVVV = function(t, e, i) {
this.ex.Copy(t);
this.ey.Copy(e);
this.ez.Copy(i);
return this;
};
t.prototype.Copy = function(t) {
this.ex.Copy(t.ex);
this.ey.Copy(t.ey);
this.ez.Copy(t.ez);
return this;
};
t.prototype.SetIdentity = function() {
this.ex.SetXYZ(1, 0, 0);
this.ey.SetXYZ(0, 1, 0);
this.ez.SetXYZ(0, 0, 1);
return this;
};
t.prototype.SetZero = function() {
this.ex.SetZero();
this.ey.SetZero();
this.ez.SetZero();
return this;
};
t.prototype.SelfAddM = function(t) {
this.ex.SelfAdd(t.ex);
this.ey.SelfAdd(t.ey);
this.ez.SelfAdd(t.ez);
return this;
};
t.prototype.Solve33 = function(t, e, i, n) {
var r = this.ex.x, s = this.ex.y, o = this.ex.z, a = this.ey.x, c = this.ey.y, l = this.ey.z, u = this.ez.x, h = this.ez.y, _ = this.ez.z, f = r * (c * _ - l * h) + s * (l * u - a * _) + o * (a * h - c * u);
0 !== f && (f = 1 / f);
n.x = f * (t * (c * _ - l * h) + e * (l * u - a * _) + i * (a * h - c * u));
n.y = f * (r * (e * _ - i * h) + s * (i * u - t * _) + o * (t * h - e * u));
n.z = f * (r * (c * i - l * e) + s * (l * t - a * i) + o * (a * e - c * t));
return n;
};
t.prototype.Solve22 = function(t, e, i) {
var n = this.ex.x, r = this.ey.x, s = this.ex.y, o = this.ey.y, a = n * o - r * s;
0 !== a && (a = 1 / a);
i.x = a * (o * t - r * e);
i.y = a * (n * e - s * t);
return i;
};
t.prototype.GetInverse22 = function(t) {
var e = this.ex.x, i = this.ey.x, n = this.ex.y, r = this.ey.y, s = e * r - i * n;
0 !== s && (s = 1 / s);
t.ex.x = s * r;
t.ey.x = -s * i;
t.ex.z = 0;
t.ex.y = -s * n;
t.ey.y = s * e;
t.ey.z = 0;
t.ez.x = 0;
t.ez.y = 0;
t.ez.z = 0;
};
t.prototype.GetSymInverse33 = function(t) {
var e = V.DotV3V3(this.ex, V.CrossV3V3(this.ey, this.ez, V.s_t0));
0 !== e && (e = 1 / e);
var i = this.ex.x, n = this.ey.x, r = this.ez.x, s = this.ey.y, o = this.ez.y, a = this.ez.z;
t.ex.x = e * (s * a - o * o);
t.ex.y = e * (r * o - n * a);
t.ex.z = e * (n * o - r * s);
t.ey.x = t.ex.y;
t.ey.y = e * (i * a - r * r);
t.ey.z = e * (r * n - i * o);
t.ez.x = t.ex.z;
t.ez.y = t.ey.z;
t.ez.z = e * (i * s - n * n);
};
t.MulM33V3 = function(t, e, i) {
var n = e.x, r = e.y, s = e.z;
i.x = t.ex.x * n + t.ey.x * r + t.ez.x * s;
i.y = t.ex.y * n + t.ey.y * r + t.ez.y * s;
i.z = t.ex.z * n + t.ey.z * r + t.ez.z * s;
return i;
};
t.MulM33XYZ = function(t, e, i, n, r) {
r.x = t.ex.x * e + t.ey.x * i + t.ez.x * n;
r.y = t.ex.y * e + t.ey.y * i + t.ez.y * n;
r.z = t.ex.z * e + t.ey.z * i + t.ez.z * n;
return r;
};
t.MulM33V2 = function(t, e, i) {
var n = e.x, r = e.y;
i.x = t.ex.x * n + t.ey.x * r;
i.y = t.ex.y * n + t.ey.y * r;
return i;
};
t.MulM33XY = function(t, e, i, n) {
n.x = t.ex.x * e + t.ey.x * i;
n.y = t.ex.y * e + t.ey.y * i;
return n;
};
t.IDENTITY = new t();
return t;
})(), F = (function() {
function t(t) {
void 0 === t && (t = 0);
this.s = 0;
this.c = 1;
if (t) {
this.s = Math.sin(t);
this.c = Math.cos(t);
}
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.s = t.s;
this.c = t.c;
return this;
};
t.prototype.SetAngle = function(t) {
this.s = Math.sin(t);
this.c = Math.cos(t);
return this;
};
t.prototype.SetIdentity = function() {
this.s = 0;
this.c = 1;
return this;
};
t.prototype.GetAngle = function() {
return Math.atan2(this.s, this.c);
};
t.prototype.GetXAxis = function(t) {
t.x = this.c;
t.y = this.s;
return t;
};
t.prototype.GetYAxis = function(t) {
t.x = -this.s;
t.y = this.c;
return t;
};
t.MulRR = function(t, e, i) {
var n = t.c, r = t.s, s = e.c, o = e.s;
i.s = r * s + n * o;
i.c = n * s - r * o;
return i;
};
t.MulTRR = function(t, e, i) {
var n = t.c, r = t.s, s = e.c, o = e.s;
i.s = n * o - r * s;
i.c = n * s + r * o;
return i;
};
t.MulRV = function(t, e, i) {
var n = t.c, r = t.s, s = e.x, o = e.y;
i.x = n * s - r * o;
i.y = r * s + n * o;
return i;
};
t.MulTRV = function(t, e, i) {
var n = t.c, r = t.s, s = e.x, o = e.y;
i.x = n * s + r * o;
i.y = -r * s + n * o;
return i;
};
t.IDENTITY = new t();
return t;
})(), N = (function() {
function t() {
this.p = new D();
this.q = new F();
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.p.Copy(t.p);
this.q.Copy(t.q);
return this;
};
t.prototype.SetIdentity = function() {
this.p.SetZero();
this.q.SetIdentity();
return this;
};
t.prototype.SetPositionRotation = function(t, e) {
this.p.Copy(t);
this.q.Copy(e);
return this;
};
t.prototype.SetPositionAngle = function(t, e) {
this.p.Copy(t);
this.q.SetAngle(e);
return this;
};
t.prototype.SetPosition = function(t) {
this.p.Copy(t);
return this;
};
t.prototype.SetPositionXY = function(t, e) {
this.p.Set(t, e);
return this;
};
t.prototype.SetRotation = function(t) {
this.q.Copy(t);
return this;
};
t.prototype.SetRotationAngle = function(t) {
this.q.SetAngle(t);
return this;
};
t.prototype.GetPosition = function() {
return this.p;
};
t.prototype.GetRotation = function() {
return this.q;
};
t.prototype.GetRotationAngle = function() {
return this.q.GetAngle();
};
t.prototype.GetAngle = function() {
return this.q.GetAngle();
};
t.MulXV = function(t, e, i) {
var n = t.q.c, r = t.q.s, s = e.x, o = e.y;
i.x = n * s - r * o + t.p.x;
i.y = r * s + n * o + t.p.y;
return i;
};
t.MulTXV = function(t, e, i) {
var n = t.q.c, r = t.q.s, s = e.x - t.p.x, o = e.y - t.p.y;
i.x = n * s + r * o;
i.y = -r * s + n * o;
return i;
};
t.MulXX = function(t, e, i) {
F.MulRR(t.q, e.q, i.q);
D.AddVV(F.MulRV(t.q, e.p, i.p), t.p, i.p);
return i;
};
t.MulTXX = function(t, e, i) {
F.MulTRR(t.q, e.q, i.q);
F.MulTRV(t.q, D.SubVV(e.p, t.p, i.p), i.p);
return i;
};
t.IDENTITY = new t();
return t;
})(), G = (function() {
function t() {
this.localCenter = new D();
this.c0 = new D();
this.c = new D();
this.a0 = 0;
this.a = 0;
this.alpha0 = 0;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.localCenter.Copy(t.localCenter);
this.c0.Copy(t.c0);
this.c.Copy(t.c);
this.a0 = t.a0;
this.a = t.a;
this.alpha0 = t.alpha0;
return this;
};
t.prototype.GetTransform = function(t, e) {
var i = 1 - e;
t.p.x = i * this.c0.x + e * this.c.x;
t.p.y = i * this.c0.y + e * this.c.y;
var n = i * this.a0 + e * this.a;
t.q.SetAngle(n);
t.p.SelfSub(F.MulRV(t.q, this.localCenter, D.s_t0));
return t;
};
t.prototype.Advance = function(t) {
var e = (t - this.alpha0) / (1 - this.alpha0), i = 1 - e;
this.c0.x = i * this.c0.x + e * this.c.x;
this.c0.y = i * this.c0.y + e * this.c.y;
this.a0 = i * this.a0 + e * this.a;
this.alpha0 = t;
};
t.prototype.Normalize = function() {
var t = 6.28318530718 * Math.floor(this.a0 / 6.28318530718);
this.a0 -= t;
this.a -= t;
};
return t;
})(), z = (function() {
function t(t, e, i, n) {
void 0 === t && (t = .5);
void 0 === e && (e = .5);
void 0 === i && (i = .5);
void 0 === n && (n = 1);
this.r = t;
this.g = e;
this.b = i;
this.a = n;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.r = t.r;
this.g = t.g;
this.b = t.b;
this.a = t.a;
return this;
};
t.prototype.IsEqual = function(t) {
return this.r === t.r && this.g === t.g && this.b === t.b && this.a === t.a;
};
t.prototype.IsZero = function() {
return 0 === this.r && 0 === this.g && 0 === this.b && 0 === this.a;
};
t.prototype.Set = function(t, e, i, n) {
void 0 === n && (n = this.a);
this.SetRGBA(t, e, i, n);
};
t.prototype.SetByteRGB = function(t, e, i) {
this.r = t / 255;
this.g = e / 255;
this.b = i / 255;
return this;
};
t.prototype.SetByteRGBA = function(t, e, i, n) {
this.r = t / 255;
this.g = e / 255;
this.b = i / 255;
this.a = n / 255;
return this;
};
t.prototype.SetRGB = function(t, e, i) {
this.r = t;
this.g = e;
this.b = i;
return this;
};
t.prototype.SetRGBA = function(t, e, i, n) {
this.r = t;
this.g = e;
this.b = i;
this.a = n;
return this;
};
t.prototype.SelfAdd = function(t) {
this.r += t.r;
this.g += t.g;
this.b += t.b;
this.a += t.a;
return this;
};
t.prototype.Add = function(t, e) {
e.r = this.r + t.r;
e.g = this.g + t.g;
e.b = this.b + t.b;
e.a = this.a + t.a;
return e;
};
t.prototype.SelfSub = function(t) {
this.r -= t.r;
this.g -= t.g;
this.b -= t.b;
this.a -= t.a;
return this;
};
t.prototype.Sub = function(t, e) {
e.r = this.r - t.r;
e.g = this.g - t.g;
e.b = this.b - t.b;
e.a = this.a - t.a;
return e;
};
t.prototype.SelfMul = function(t) {
this.r *= t;
this.g *= t;
this.b *= t;
this.a *= t;
return this;
};
t.prototype.Mul = function(t, e) {
e.r = this.r * t;
e.g = this.g * t;
e.b = this.b * t;
e.a = this.a * t;
return e;
};
t.prototype.Mix = function(e, i) {
t.MixColors(this, e, i);
};
t.MixColors = function(t, e, i) {
var n = i * (e.r - t.r), r = i * (e.g - t.g), s = i * (e.b - t.b), o = i * (e.a - t.a);
t.r += n;
t.g += r;
t.b += s;
t.a += o;
e.r -= n;
e.g -= r;
e.b -= s;
e.a -= o;
};
t.prototype.MakeStyleString = function(e) {
void 0 === e && (e = this.a);
return t.MakeStyleString(this.r, this.g, this.b, e);
};
t.MakeStyleString = function(t, e, i, n) {
void 0 === n && (n = 1);
t *= 255;
e *= 255;
i *= 255;
return n < 1 ? "rgba(" + t + "," + e + "," + i + "," + n + ")" : "rgb(" + t + "," + e + "," + i + ")";
};
t.ZERO = new t(0, 0, 0, 0);
t.RED = new t(1, 0, 0);
t.GREEN = new t(0, 1, 0);
t.BLUE = new t(0, 0, 1);
return t;
})();
(function(t) {
t[t.e_none = 0] = "e_none";
t[t.e_shapeBit = 1] = "e_shapeBit";
t[t.e_jointBit = 2] = "e_jointBit";
t[t.e_aabbBit = 4] = "e_aabbBit";
t[t.e_pairBit = 8] = "e_pairBit";
t[t.e_centerOfMassBit = 16] = "e_centerOfMassBit";
t[t.e_particleBit = 32] = "e_particleBit";
t[t.e_controllerBit = 64] = "e_controllerBit";
t[t.e_all = 63] = "e_all";
})(t.b2DrawFlags || (t.b2DrawFlags = {}));
var k = (function() {
function t() {
this.m_drawFlags = 0;
}
t.prototype.SetFlags = function(t) {
this.m_drawFlags = t;
};
t.prototype.GetFlags = function() {
return this.m_drawFlags;
};
t.prototype.AppendFlags = function(t) {
this.m_drawFlags |= t;
};
t.prototype.ClearFlags = function(t) {
this.m_drawFlags &= ~t;
};
return t;
})(), U = (function() {
function t() {
this.m_start = Date.now();
}
t.prototype.Reset = function() {
this.m_start = Date.now();
return this;
};
t.prototype.GetMilliseconds = function() {
return Date.now() - this.m_start;
};
return t;
})(), j = (function() {
function t() {
this.m_count = 0;
this.m_min_count = 0;
this.m_max_count = 0;
}
t.prototype.GetCount = function() {
return this.m_count;
};
t.prototype.GetMinCount = function() {
return this.m_min_count;
};
t.prototype.GetMaxCount = function() {
return this.m_max_count;
};
t.prototype.ResetCount = function() {
var t = this.m_count;
this.m_count = 0;
return t;
};
t.prototype.ResetMinCount = function() {
this.m_min_count = 0;
};
t.prototype.ResetMaxCount = function() {
this.m_max_count = 0;
};
t.prototype.Increment = function() {
this.m_count++;
this.m_max_count < this.m_count && (this.m_max_count = this.m_count);
};
t.prototype.Decrement = function() {
this.m_count--;
this.m_min_count > this.m_count && (this.m_min_count = this.m_count);
};
return t;
})(), W = (function() {
function t(t) {
this.m_stack = [];
this.m_count = 0;
this.m_stack = d(t, (function(t) {
return null;
}));
this.m_count = 0;
}
t.prototype.Reset = function() {
this.m_count = 0;
return this;
};
t.prototype.Push = function(t) {
this.m_stack[this.m_count] = t;
this.m_count++;
};
t.prototype.Pop = function() {
this.m_count--;
var t = this.m_stack[this.m_count];
this.m_stack[this.m_count] = null;
if (null === t) throw new Error();
return t;
};
t.prototype.GetCount = function() {
return this.m_count;
};
return t;
})(), H = (function() {
return function() {};
})(), q = (function() {
return function() {};
})(), X = (function() {
function t() {
this.m_buffer = D.MakeArray(2);
this.m_vertices = this.m_buffer;
this.m_count = 0;
this.m_radius = 0;
}
t.prototype.Copy = function(t) {
if (t.m_vertices === t.m_buffer) {
this.m_vertices = this.m_buffer;
this.m_buffer[0].Copy(t.m_buffer[0]);
this.m_buffer[1].Copy(t.m_buffer[1]);
} else this.m_vertices = t.m_vertices;
this.m_count = t.m_count;
this.m_radius = t.m_radius;
return this;
};
t.prototype.Reset = function() {
this.m_vertices = this.m_buffer;
this.m_count = 0;
this.m_radius = 0;
return this;
};
t.prototype.SetShape = function(t, e) {
t.SetupDistanceProxy(this, e);
};
t.prototype.SetVerticesRadius = function(t, e, i) {
this.m_vertices = t;
this.m_count = e;
this.m_radius = i;
};
t.prototype.GetSupport = function(t) {
for (var e = 0, i = D.DotVV(this.m_vertices[0], t), n = 1; n < this.m_count; ++n) {
var r = D.DotVV(this.m_vertices[n], t);
if (r > i) {
e = n;
i = r;
}
}
return e;
};
t.prototype.GetSupportVertex = function(t) {
for (var e = 0, i = D.DotVV(this.m_vertices[0], t), n = 1; n < this.m_count; ++n) {
var r = D.DotVV(this.m_vertices[n], t);
if (r > i) {
e = n;
i = r;
}
}
return this.m_vertices[e];
};
t.prototype.GetVertexCount = function() {
return this.m_count;
};
t.prototype.GetVertex = function(t) {
return this.m_vertices[t];
};
return t;
})(), Y = (function() {
function t() {
this.metric = 0;
this.count = 0;
this.indexA = [ 0, 0, 0 ];
this.indexB = [ 0, 0, 0 ];
}
t.prototype.Reset = function() {
this.metric = 0;
this.count = 0;
return this;
};
return t;
})(), J = (function() {
function t() {
this.proxyA = new X();
this.proxyB = new X();
this.transformA = new N();
this.transformB = new N();
this.useRadii = !1;
}
t.prototype.Reset = function() {
this.proxyA.Reset();
this.proxyB.Reset();
this.transformA.SetIdentity();
this.transformB.SetIdentity();
this.useRadii = !1;
return this;
};
return t;
})(), Z = (function() {
function t() {
this.pointA = new D();
this.pointB = new D();
this.distance = 0;
this.iterations = 0;
}
t.prototype.Reset = function() {
this.pointA.SetZero();
this.pointB.SetZero();
this.distance = 0;
this.iterations = 0;
return this;
};
return t;
})(), K = (function() {
return function() {
this.proxyA = new X();
this.proxyB = new X();
this.transformA = new N();
this.transformB = new N();
this.translationB = new D();
};
})(), Q = (function() {
return function() {
this.point = new D();
this.normal = new D();
this.lambda = 0;
this.iterations = 0;
};
})();
t.b2_gjkCalls = 0;
t.b2_gjkIters = 0;
t.b2_gjkMaxIters = 0;
var $ = (function() {
function t() {
this.wA = new D();
this.wB = new D();
this.w = new D();
this.a = 0;
this.indexA = 0;
this.indexB = 0;
}
t.prototype.Copy = function(t) {
this.wA.Copy(t.wA);
this.wB.Copy(t.wB);
this.w.Copy(t.w);
this.a = t.a;
this.indexA = t.indexA;
this.indexB = t.indexB;
return this;
};
return t;
})(), tt = (function() {
function t() {
this.m_v1 = new $();
this.m_v2 = new $();
this.m_v3 = new $();
this.m_vertices = [];
this.m_count = 0;
this.m_vertices[0] = this.m_v1;
this.m_vertices[1] = this.m_v2;
this.m_vertices[2] = this.m_v3;
}
t.prototype.ReadCache = function(t, e, i, r, s) {
this.m_count = t.count;
for (var o = this.m_vertices, a = 0; a < this.m_count; ++a) {
(_ = o[a]).indexA = t.indexA[a];
_.indexB = t.indexB[a];
var c = e.GetVertex(_.indexA), l = r.GetVertex(_.indexB);
N.MulXV(i, c, _.wA);
N.MulXV(s, l, _.wB);
D.SubVV(_.wB, _.wA, _.w);
_.a = 0;
}
if (this.m_count > 1) {
var u = t.metric, h = this.GetMetric();
(h < .5 * u || 2 * u < h || h < n) && (this.m_count = 0);
}
if (0 === this.m_count) {
var _;
(_ = o[0]).indexA = 0;
_.indexB = 0;
c = e.GetVertex(0), l = r.GetVertex(0);
N.MulXV(i, c, _.wA);
N.MulXV(s, l, _.wB);
D.SubVV(_.wB, _.wA, _.w);
_.a = 1;
this.m_count = 1;
}
};
t.prototype.WriteCache = function(t) {
t.metric = this.GetMetric();
t.count = this.m_count;
for (var e = this.m_vertices, i = 0; i < this.m_count; ++i) {
t.indexA[i] = e[i].indexA;
t.indexB[i] = e[i].indexB;
}
};
t.prototype.GetSearchDirection = function(t) {
switch (this.m_count) {
case 1:
return D.NegV(this.m_v1.w, t);

case 2:
var e = D.SubVV(this.m_v2.w, this.m_v1.w, t);
return D.CrossVV(e, D.NegV(this.m_v1.w, D.s_t0)) > 0 ? D.CrossOneV(e, t) : D.CrossVOne(e, t);

default:
return t.SetZero();
}
};
t.prototype.GetClosestPoint = function(t) {
switch (this.m_count) {
case 0:
return t.SetZero();

case 1:
return t.Copy(this.m_v1.w);

case 2:
return t.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);

case 3:
default:
return t.SetZero();
}
};
t.prototype.GetWitnessPoints = function(t, e) {
switch (this.m_count) {
case 0:
break;

case 1:
t.Copy(this.m_v1.wA);
e.Copy(this.m_v1.wB);
break;

case 2:
t.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;
t.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;
e.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;
e.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
break;

case 3:
e.x = t.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;
e.y = t.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;
}
};
t.prototype.GetMetric = function() {
switch (this.m_count) {
case 0:
case 1:
return 0;

case 2:
return D.DistanceVV(this.m_v1.w, this.m_v2.w);

case 3:
return D.CrossVV(D.SubVV(this.m_v2.w, this.m_v1.w, D.s_t0), D.SubVV(this.m_v3.w, this.m_v1.w, D.s_t1));

default:
return 0;
}
};
t.prototype.Solve2 = function() {
var e = this.m_v1.w, i = this.m_v2.w, n = D.SubVV(i, e, t.s_e12), r = -D.DotVV(e, n);
if (r <= 0) {
this.m_v1.a = 1;
this.m_count = 1;
} else {
var s = D.DotVV(i, n);
if (s <= 0) {
this.m_v2.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v2);
} else {
var o = 1 / (s + r);
this.m_v1.a = s * o;
this.m_v2.a = r * o;
this.m_count = 2;
}
}
};
t.prototype.Solve3 = function() {
var e = this.m_v1.w, i = this.m_v2.w, n = this.m_v3.w, r = D.SubVV(i, e, t.s_e12), s = D.DotVV(e, r), o = D.DotVV(i, r), a = -s, c = D.SubVV(n, e, t.s_e13), l = D.DotVV(e, c), u = D.DotVV(n, c), h = -l, _ = D.SubVV(n, i, t.s_e23), f = D.DotVV(i, _), d = D.DotVV(n, _), p = -f, m = D.CrossVV(r, c), y = m * D.CrossVV(i, n), v = m * D.CrossVV(n, e), g = m * D.CrossVV(e, i);
if (a <= 0 && h <= 0) {
this.m_v1.a = 1;
this.m_count = 1;
} else if (o > 0 && a > 0 && g <= 0) {
var C = 1 / (o + a);
this.m_v1.a = o * C;
this.m_v2.a = a * C;
this.m_count = 2;
} else if (u > 0 && h > 0 && v <= 0) {
var x = 1 / (u + h);
this.m_v1.a = u * x;
this.m_v3.a = h * x;
this.m_count = 2;
this.m_v2.Copy(this.m_v3);
} else if (o <= 0 && p <= 0) {
this.m_v2.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v2);
} else if (u <= 0 && d <= 0) {
this.m_v3.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v3);
} else if (d > 0 && p > 0 && y <= 0) {
var A = 1 / (d + p);
this.m_v2.a = d * A;
this.m_v3.a = p * A;
this.m_count = 2;
this.m_v1.Copy(this.m_v3);
} else {
var b = 1 / (y + v + g);
this.m_v1.a = y * b;
this.m_v2.a = v * b;
this.m_v3.a = g * b;
this.m_count = 3;
}
};
t.s_e12 = new D();
t.s_e13 = new D();
t.s_e23 = new D();
return t;
})(), et = new tt(), it = [ 0, 0, 0 ], nt = [ 0, 0, 0 ], rt = new D(), st = new D(), ot = new D(), at = new D(), ct = new D();
function lt(e, i, s) {
++t.b2_gjkCalls;
var o = s.proxyA, a = s.proxyB, c = s.transformA, l = s.transformB, u = et;
u.ReadCache(i, o, c, a, l);
for (var h = u.m_vertices, _ = it, f = nt, d = 0, p = 0; p < 20; ) {
d = u.m_count;
for (var m = 0; m < d; ++m) {
_[m] = h[m].indexA;
f[m] = h[m].indexB;
}
switch (u.m_count) {
case 1:
break;

case 2:
u.Solve2();
break;

case 3:
u.Solve3();
}
if (3 === u.m_count) break;
var y = u.GetSearchDirection(st);
if (y.LengthSquared() < r) break;
var v = h[u.m_count];
v.indexA = o.GetSupport(F.MulTRV(c.q, D.NegV(y, D.s_t0), at));
N.MulXV(c, o.GetVertex(v.indexA), v.wA);
v.indexB = a.GetSupport(F.MulTRV(l.q, y, ct));
N.MulXV(l, a.GetVertex(v.indexB), v.wB);
D.SubVV(v.wB, v.wA, v.w);
++p;
++t.b2_gjkIters;
var g = !1;
for (m = 0; m < d; ++m) if (v.indexA === _[m] && v.indexB === f[m]) {
g = !0;
break;
}
if (g) break;
++u.m_count;
}
t.b2_gjkMaxIters = C(t.b2_gjkMaxIters, p);
u.GetWitnessPoints(e.pointA, e.pointB);
e.distance = D.DistanceVV(e.pointA, e.pointB);
e.iterations = p;
u.WriteCache(i);
if (s.useRadii) {
var x = o.m_radius, A = a.m_radius;
if (e.distance > x + A && e.distance > n) {
e.distance -= x + A;
var b = D.SubVV(e.pointB, e.pointA, ot);
b.Normalize();
e.pointA.SelfMulAdd(x, b);
e.pointB.SelfMulSub(A, b);
} else {
var S = D.MidVV(e.pointA, e.pointB, rt);
e.pointA.Copy(S);
e.pointB.Copy(S);
e.distance = 0;
}
}
}
var ut = new D(), ht = new tt(), _t = new D(), ft = new D(), dt = new D(), pt = new D(), mt = new D(), yt = new D();
(function(t) {
t[t.e_vertex = 0] = "e_vertex";
t[t.e_face = 1] = "e_face";
})(t.b2ContactFeatureType || (t.b2ContactFeatureType = {}));
var vt = (function() {
function t() {
this._key = 0;
this._key_invalid = !1;
this._indexA = 0;
this._indexB = 0;
this._typeA = 0;
this._typeB = 0;
}
Object.defineProperty(t.prototype, "key", {
get: function() {
if (this._key_invalid) {
this._key_invalid = !1;
this._key = this._indexA | this._indexB << 8 | this._typeA << 16 | this._typeB << 24;
}
return this._key;
},
set: function(t) {
this._key = t;
this._key_invalid = !1;
this._indexA = 255 & this._key;
this._indexB = this._key >> 8 & 255;
this._typeA = this._key >> 16 & 255;
this._typeB = this._key >> 24 & 255;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "indexA", {
get: function() {
return this._indexA;
},
set: function(t) {
this._indexA = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "indexB", {
get: function() {
return this._indexB;
},
set: function(t) {
this._indexB = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "typeA", {
get: function() {
return this._typeA;
},
set: function(t) {
this._typeA = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "typeB", {
get: function() {
return this._typeB;
},
set: function(t) {
this._typeB = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
return t;
})(), gt = (function() {
function t() {
this.cf = new vt();
}
t.prototype.Copy = function(t) {
this.key = t.key;
return this;
};
t.prototype.Clone = function() {
return new t().Copy(this);
};
Object.defineProperty(t.prototype, "key", {
get: function() {
return this.cf.key;
},
set: function(t) {
this.cf.key = t;
},
enumerable: !0,
configurable: !0
});
return t;
})(), Ct = (function() {
function t() {
this.localPoint = new D();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.id = new gt();
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.prototype.Reset = function() {
this.localPoint.SetZero();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.id.key = 0;
};
t.prototype.Copy = function(t) {
this.localPoint.Copy(t.localPoint);
this.normalImpulse = t.normalImpulse;
this.tangentImpulse = t.tangentImpulse;
this.id.Copy(t.id);
return this;
};
return t;
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_circles = 0] = "e_circles";
t[t.e_faceA = 1] = "e_faceA";
t[t.e_faceB = 2] = "e_faceB";
})(t.b2ManifoldType || (t.b2ManifoldType = {}));
var xt = (function() {
function e() {
this.points = Ct.MakeArray(o);
this.localNormal = new D();
this.localPoint = new D();
this.type = t.b2ManifoldType.e_unknown;
this.pointCount = 0;
}
e.prototype.Reset = function() {
for (var e = 0; e < o; ++e) this.points[e].Reset();
this.localNormal.SetZero();
this.localPoint.SetZero();
this.type = t.b2ManifoldType.e_unknown;
this.pointCount = 0;
};
e.prototype.Copy = function(t) {
this.pointCount = t.pointCount;
for (var e = 0; e < o; ++e) this.points[e].Copy(t.points[e]);
this.localNormal.Copy(t.localNormal);
this.localPoint.Copy(t.localPoint);
this.type = t.type;
return this;
};
e.prototype.Clone = function() {
return new e().Copy(this);
};
return e;
})(), At = (function() {
function e() {
this.normal = new D();
this.points = D.MakeArray(o);
this.separations = p(o);
}
e.prototype.Initialize = function(i, n, s, o, a) {
if (0 !== i.pointCount) switch (i.type) {
case t.b2ManifoldType.e_circles:
this.normal.Set(1, 0);
var c = N.MulXV(n, i.localPoint, e.Initialize_s_pointA), l = N.MulXV(o, i.points[0].localPoint, e.Initialize_s_pointB);
D.DistanceSquaredVV(c, l) > r && D.SubVV(l, c, this.normal).SelfNormalize();
var u = D.AddVMulSV(c, s, this.normal, e.Initialize_s_cA), h = D.SubVMulSV(l, a, this.normal, e.Initialize_s_cB);
D.MidVV(u, h, this.points[0]);
this.separations[0] = D.DotVV(D.SubVV(h, u, D.s_t0), this.normal);
break;

case t.b2ManifoldType.e_faceA:
F.MulRV(n.q, i.localNormal, this.normal);
for (var _ = N.MulXV(n, i.localPoint, e.Initialize_s_planePoint), f = 0; f < i.pointCount; ++f) {
var d = N.MulXV(o, i.points[f].localPoint, e.Initialize_s_clipPoint), p = s - D.DotVV(D.SubVV(d, _, D.s_t0), this.normal);
u = D.AddVMulSV(d, p, this.normal, e.Initialize_s_cA), h = D.SubVMulSV(d, a, this.normal, e.Initialize_s_cB);
D.MidVV(u, h, this.points[f]);
this.separations[f] = D.DotVV(D.SubVV(h, u, D.s_t0), this.normal);
}
break;

case t.b2ManifoldType.e_faceB:
F.MulRV(o.q, i.localNormal, this.normal);
for (_ = N.MulXV(o, i.localPoint, e.Initialize_s_planePoint), f = 0; f < i.pointCount; ++f) {
d = N.MulXV(n, i.points[f].localPoint, e.Initialize_s_clipPoint), p = a - D.DotVV(D.SubVV(d, _, D.s_t0), this.normal), 
h = D.AddVMulSV(d, p, this.normal, e.Initialize_s_cB), u = D.SubVMulSV(d, s, this.normal, e.Initialize_s_cA);
D.MidVV(u, h, this.points[f]);
this.separations[f] = D.DotVV(D.SubVV(u, h, D.s_t0), this.normal);
}
this.normal.SelfNeg();
}
};
e.Initialize_s_pointA = new D();
e.Initialize_s_pointB = new D();
e.Initialize_s_cA = new D();
e.Initialize_s_cB = new D();
e.Initialize_s_planePoint = new D();
e.Initialize_s_clipPoint = new D();
return e;
})();
(function(t) {
t[t.b2_nullState = 0] = "b2_nullState";
t[t.b2_addState = 1] = "b2_addState";
t[t.b2_persistState = 2] = "b2_persistState";
t[t.b2_removeState = 3] = "b2_removeState";
})(t.b2PointState || (t.b2PointState = {}));
var bt = (function() {
function t() {
this.v = new D();
this.id = new gt();
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.prototype.Copy = function(t) {
this.v.Copy(t.v);
this.id.Copy(t.id);
return this;
};
return t;
})(), St = (function() {
function t() {
this.p1 = new D();
this.p2 = new D();
this.maxFraction = 1;
}
t.prototype.Copy = function(t) {
this.p1.Copy(t.p1);
this.p2.Copy(t.p2);
this.maxFraction = t.maxFraction;
return this;
};
return t;
})(), wt = (function() {
function t() {
this.normal = new D();
this.fraction = 0;
}
t.prototype.Copy = function(t) {
this.normal.Copy(t.normal);
this.fraction = t.fraction;
return this;
};
return t;
})(), Tt = (function() {
function t() {
this.lowerBound = new D();
this.upperBound = new D();
this.m_cache_center = new D();
this.m_cache_extent = new D();
}
t.prototype.Copy = function(t) {
this.lowerBound.Copy(t.lowerBound);
this.upperBound.Copy(t.upperBound);
return this;
};
t.prototype.IsValid = function() {
var t = this.upperBound.x - this.lowerBound.x, e = this.upperBound.y - this.lowerBound.y, i = t >= 0 && e >= 0;
return i = i && this.lowerBound.IsValid() && this.upperBound.IsValid();
};
t.prototype.GetCenter = function() {
return D.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);
};
t.prototype.GetExtents = function() {
return D.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);
};
t.prototype.GetPerimeter = function() {
return 2 * (this.upperBound.x - this.lowerBound.x + (this.upperBound.y - this.lowerBound.y));
};
t.prototype.Combine1 = function(t) {
this.lowerBound.x = g(this.lowerBound.x, t.lowerBound.x);
this.lowerBound.y = g(this.lowerBound.y, t.lowerBound.y);
this.upperBound.x = C(this.upperBound.x, t.upperBound.x);
this.upperBound.y = C(this.upperBound.y, t.upperBound.y);
return this;
};
t.prototype.Combine2 = function(t, e) {
this.lowerBound.x = g(t.lowerBound.x, e.lowerBound.x);
this.lowerBound.y = g(t.lowerBound.y, e.lowerBound.y);
this.upperBound.x = C(t.upperBound.x, e.upperBound.x);
this.upperBound.y = C(t.upperBound.y, e.upperBound.y);
return this;
};
t.Combine = function(t, e, i) {
i.Combine2(t, e);
return i;
};
t.prototype.Contains = function(t) {
var e = !0;
return e = (e = (e = (e = e && this.lowerBound.x <= t.lowerBound.x) && this.lowerBound.y <= t.lowerBound.y) && t.upperBound.x <= this.upperBound.x) && t.upperBound.y <= this.upperBound.y;
};
t.prototype.RayCast = function(t, e) {
var r = -i, s = i, o = e.p1.x, a = e.p1.y, c = e.p2.x - e.p1.x, l = e.p2.y - e.p1.y, u = v(c), h = v(l), _ = t.normal;
if (u < n) {
if (o < this.lowerBound.x || this.upperBound.x < o) return !1;
} else {
var f = 1 / c, d = -1;
if ((m = (this.lowerBound.x - o) * f) > (y = (this.upperBound.x - o) * f)) {
var p = m;
m = y;
y = p;
d = 1;
}
if (m > r) {
_.x = d;
_.y = 0;
r = m;
}
if (r > (s = g(s, y))) return !1;
}
if (h < n) {
if (a < this.lowerBound.y || this.upperBound.y < a) return !1;
} else {
var m, y;
f = 1 / l, d = -1;
if ((m = (this.lowerBound.y - a) * f) > (y = (this.upperBound.y - a) * f)) {
p = m;
m = y;
y = p;
d = 1;
}
if (m > r) {
_.x = 0;
_.y = d;
r = m;
}
if (r > (s = g(s, y))) return !1;
}
if (r < 0 || e.maxFraction < r) return !1;
t.fraction = r;
return !0;
};
t.prototype.TestContain = function(t) {
return !(t.x < this.lowerBound.x || this.upperBound.x < t.x) && !(t.y < this.lowerBound.y || this.upperBound.y < t.y);
};
t.prototype.TestOverlap = function(t) {
var e = t.lowerBound.x - this.upperBound.x, i = t.lowerBound.y - this.upperBound.y, n = this.lowerBound.x - t.upperBound.x, r = this.lowerBound.y - t.upperBound.y;
return !(e > 0 || i > 0) && !(n > 0 || r > 0);
};
return t;
})();
function Bt(t, e) {
var i = e.lowerBound.x - t.upperBound.x, n = e.lowerBound.y - t.upperBound.y, r = t.lowerBound.x - e.upperBound.x, s = t.lowerBound.y - e.upperBound.y;
return !(i > 0 || n > 0) && !(r > 0 || s > 0);
}
function Et(e, i, n, r, s) {
var o = 0, a = i[0], c = i[1], l = D.DotVV(n, a.v) - r, u = D.DotVV(n, c.v) - r;
l <= 0 && e[o++].Copy(a);
u <= 0 && e[o++].Copy(c);
if (l * u < 0) {
var h = l / (l - u), _ = e[o].v;
_.x = a.v.x + h * (c.v.x - a.v.x);
_.y = a.v.y + h * (c.v.y - a.v.y);
var f = e[o].id;
f.cf.indexA = s;
f.cf.indexB = a.id.cf.indexB;
f.cf.typeA = t.b2ContactFeatureType.e_vertex;
f.cf.typeB = t.b2ContactFeatureType.e_face;
++o;
}
return o;
}
var Mt = new J(), It = new Y(), Rt = new Z();
function Dt(t, e, i, r, s, o) {
var a = Mt.Reset();
a.proxyA.SetShape(t, e);
a.proxyB.SetShape(i, r);
a.transformA.Copy(s);
a.transformB.Copy(o);
a.useRadii = !0;
var c = It.Reset();
c.count = 0;
var l = Rt.Reset();
lt(l, c, a);
return l.distance < 10 * n;
}
function Pt(t) {
if (null === t) throw new Error();
return t;
}
var Vt = (function() {
function t(t) {
void 0 === t && (t = 0);
this.m_id = 0;
this.aabb = new Tt();
this.parent = null;
this.child1 = null;
this.child2 = null;
this.height = 0;
this.m_id = t;
}
t.prototype.IsLeaf = function() {
return null === this.child1;
};
return t;
})(), Lt = (function() {
function t() {
this.m_root = null;
this.m_freeList = null;
this.m_path = 0;
this.m_insertionCount = 0;
this.m_stack = new W(256);
}
t.prototype.Query = function(t, e) {
if (null !== this.m_root) {
var i = this.m_stack.Reset();
i.Push(this.m_root);
for (;i.GetCount() > 0; ) {
var n = i.Pop();
if (n.aabb.TestOverlap(t)) if (n.IsLeaf()) {
if (!e(n)) return;
} else {
i.Push(Pt(n.child1));
i.Push(Pt(n.child2));
}
}
}
};
t.prototype.QueryPoint = function(t, e) {
if (null !== this.m_root) {
var i = this.m_stack.Reset();
i.Push(this.m_root);
for (;i.GetCount() > 0; ) {
var n = i.Pop();
if (n.aabb.TestContain(t)) if (n.IsLeaf()) {
if (!e(n)) return;
} else {
i.Push(Pt(n.child1));
i.Push(Pt(n.child2));
}
}
}
};
t.prototype.RayCast = function(e, i) {
if (null !== this.m_root) {
var n = e.p1, r = e.p2, s = D.SubVV(r, n, t.s_r);
s.Normalize();
var o = D.CrossOneV(s, t.s_v), a = D.AbsV(o, t.s_abs_v), c = e.maxFraction, l = t.s_segmentAABB, u = n.x + c * (r.x - n.x), h = n.y + c * (r.y - n.y);
l.lowerBound.x = g(n.x, u);
l.lowerBound.y = g(n.y, h);
l.upperBound.x = C(n.x, u);
l.upperBound.y = C(n.y, h);
var _ = this.m_stack.Reset();
_.Push(this.m_root);
for (;_.GetCount() > 0; ) {
var f = _.Pop();
if (Bt(f.aabb, l)) {
var d = f.aabb.GetCenter(), p = f.aabb.GetExtents();
if (!(v(D.DotVV(o, D.SubVV(n, d, D.s_t0))) - D.DotVV(a, p) > 0)) if (f.IsLeaf()) {
var m = t.s_subInput;
m.p1.Copy(e.p1);
m.p2.Copy(e.p2);
m.maxFraction = c;
var y = i(m, f);
if (0 === y) return;
if (y > 0) {
c = y;
u = n.x + c * (r.x - n.x);
h = n.y + c * (r.y - n.y);
l.lowerBound.x = g(n.x, u);
l.lowerBound.y = g(n.y, h);
l.upperBound.x = C(n.x, u);
l.upperBound.y = C(n.y, h);
}
} else {
_.Push(Pt(f.child1));
_.Push(Pt(f.child2));
}
}
}
}
};
t.prototype.AllocateNode = function() {
if (this.m_freeList) {
var e = this.m_freeList;
this.m_freeList = e.parent;
e.parent = null;
e.child1 = null;
e.child2 = null;
e.height = 0;
delete e.userData;
return e;
}
return new Vt(t.s_node_id++);
};
t.prototype.FreeNode = function(t) {
t.parent = this.m_freeList;
t.child1 = null;
t.child2 = null;
t.height = -1;
delete t.userData;
this.m_freeList = t;
};
t.prototype.CreateProxy = function(t, e) {
var i = this.AllocateNode();
i.aabb.lowerBound.x = t.lowerBound.x - .1;
i.aabb.lowerBound.y = t.lowerBound.y - .1;
i.aabb.upperBound.x = t.upperBound.x + .1;
i.aabb.upperBound.y = t.upperBound.y + .1;
i.userData = e;
i.height = 0;
this.InsertLeaf(i);
return i;
};
t.prototype.DestroyProxy = function(t) {
this.RemoveLeaf(t);
this.FreeNode(t);
};
t.prototype.MoveProxy = function(t, e, i) {
if (t.aabb.Contains(e)) return !1;
this.RemoveLeaf(t);
var n = .1 + 2 * (i.x > 0 ? i.x : -i.x), r = .1 + 2 * (i.y > 0 ? i.y : -i.y);
t.aabb.lowerBound.x = e.lowerBound.x - n;
t.aabb.lowerBound.y = e.lowerBound.y - r;
t.aabb.upperBound.x = e.upperBound.x + n;
t.aabb.upperBound.y = e.upperBound.y + r;
this.InsertLeaf(t);
return !0;
};
t.prototype.InsertLeaf = function(e) {
++this.m_insertionCount;
if (null !== this.m_root) {
for (var i = e.aabb, n = this.m_root; !n.IsLeaf(); ) {
var r = Pt(n.child1), s = Pt(n.child2), o = n.aabb.GetPerimeter(), a = t.s_combinedAABB;
a.Combine2(n.aabb, i);
var c = a.GetPerimeter(), l = 2 * c, u = 2 * (c - o), h = void 0, _ = t.s_aabb, f = void 0;
if (r.IsLeaf()) {
_.Combine2(i, r.aabb);
h = _.GetPerimeter() + u;
} else {
_.Combine2(i, r.aabb);
f = r.aabb.GetPerimeter();
h = _.GetPerimeter() - f + u;
}
var d = void 0;
if (s.IsLeaf()) {
_.Combine2(i, s.aabb);
d = _.GetPerimeter() + u;
} else {
_.Combine2(i, s.aabb);
f = s.aabb.GetPerimeter();
d = _.GetPerimeter() - f + u;
}
if (l < h && l < d) break;
n = h < d ? r : s;
}
var p = n, m = p.parent, y = this.AllocateNode();
y.parent = m;
delete y.userData;
y.aabb.Combine2(i, p.aabb);
y.height = p.height + 1;
if (m) {
m.child1 === p ? m.child1 = y : m.child2 = y;
y.child1 = p;
y.child2 = e;
p.parent = y;
e.parent = y;
} else {
y.child1 = p;
y.child2 = e;
p.parent = y;
e.parent = y;
this.m_root = y;
}
for (var v = e.parent; null !== v; ) {
r = Pt((v = this.Balance(v)).child1), s = Pt(v.child2);
v.height = 1 + C(r.height, s.height);
v.aabb.Combine2(r.aabb, s.aabb);
v = v.parent;
}
} else {
this.m_root = e;
this.m_root.parent = null;
}
};
t.prototype.RemoveLeaf = function(t) {
if (t !== this.m_root) {
var e, i = Pt(t.parent), n = i && i.parent;
e = i.child1 === t ? Pt(i.child2) : Pt(i.child1);
if (n) {
n.child1 === i ? n.child1 = e : n.child2 = e;
e.parent = n;
this.FreeNode(i);
for (var r = n; r; ) {
var s = Pt((r = this.Balance(r)).child1), o = Pt(r.child2);
r.aabb.Combine2(s.aabb, o.aabb);
r.height = 1 + C(s.height, o.height);
r = r.parent;
}
} else {
this.m_root = e;
e.parent = null;
this.FreeNode(i);
}
} else this.m_root = null;
};
t.prototype.Balance = function(t) {
if (t.IsLeaf() || t.height < 2) return t;
var e = Pt(t.child1), i = Pt(t.child2), n = i.height - e.height;
if (n > 1) {
var r = Pt(i.child1), s = Pt(i.child2);
i.child1 = t;
i.parent = t.parent;
t.parent = i;
null !== i.parent ? i.parent.child1 === t ? i.parent.child1 = i : i.parent.child2 = i : this.m_root = i;
if (r.height > s.height) {
i.child2 = r;
t.child2 = s;
s.parent = t;
t.aabb.Combine2(e.aabb, s.aabb);
i.aabb.Combine2(t.aabb, r.aabb);
t.height = 1 + C(e.height, s.height);
i.height = 1 + C(t.height, r.height);
} else {
i.child2 = s;
t.child2 = r;
r.parent = t;
t.aabb.Combine2(e.aabb, r.aabb);
i.aabb.Combine2(t.aabb, s.aabb);
t.height = 1 + C(e.height, r.height);
i.height = 1 + C(t.height, s.height);
}
return i;
}
if (n < -1) {
var o = Pt(e.child1), a = Pt(e.child2);
e.child1 = t;
e.parent = t.parent;
t.parent = e;
null !== e.parent ? e.parent.child1 === t ? e.parent.child1 = e : e.parent.child2 = e : this.m_root = e;
if (o.height > a.height) {
e.child2 = o;
t.child1 = a;
a.parent = t;
t.aabb.Combine2(i.aabb, a.aabb);
e.aabb.Combine2(t.aabb, o.aabb);
t.height = 1 + C(i.height, a.height);
e.height = 1 + C(t.height, o.height);
} else {
e.child2 = a;
t.child1 = o;
o.parent = t;
t.aabb.Combine2(i.aabb, o.aabb);
e.aabb.Combine2(t.aabb, a.aabb);
t.height = 1 + C(i.height, o.height);
e.height = 1 + C(t.height, a.height);
}
return e;
}
return t;
};
t.prototype.GetHeight = function() {
return null === this.m_root ? 0 : this.m_root.height;
};
t.GetAreaNode = function(e) {
if (null === e) return 0;
if (e.IsLeaf()) return 0;
var i = e.aabb.GetPerimeter();
i += t.GetAreaNode(e.child1);
return i += t.GetAreaNode(e.child2);
};
t.prototype.GetAreaRatio = function() {
if (null === this.m_root) return 0;
var e = this.m_root.aabb.GetPerimeter();
return t.GetAreaNode(this.m_root) / e;
};
t.prototype.ComputeHeightNode = function(t) {
if (!t || t.IsLeaf()) return 0;
var e = this.ComputeHeightNode(t.child1), i = this.ComputeHeightNode(t.child2);
return 1 + C(e, i);
};
t.prototype.ComputeHeight = function() {
return this.ComputeHeightNode(this.m_root);
};
t.prototype.ValidateStructure = function(t) {
if (null !== t) {
this.m_root;
var e = t;
if (!e.IsLeaf()) {
var i = Pt(e.child1), n = Pt(e.child2);
this.ValidateStructure(i);
this.ValidateStructure(n);
}
}
};
t.prototype.ValidateMetrics = function(e) {
if (null !== e) {
var i = e;
if (!i.IsLeaf()) {
var n = Pt(i.child1), r = Pt(i.child2);
t.s_aabb.Combine2(n.aabb, r.aabb);
this.ValidateMetrics(n);
this.ValidateMetrics(r);
}
}
};
t.prototype.Validate = function() {};
t.GetMaxBalanceNode = function(t, e) {
if (null === t) return e;
if (t.height <= 1) return e;
var i = Pt(t.child1), n = Pt(t.child2), r = v(n.height - i.height);
return C(e, r);
};
t.prototype.GetMaxBalance = function() {
return t.GetMaxBalanceNode(this.m_root, 0);
};
t.prototype.RebuildBottomUp = function() {
this.Validate();
};
t.ShiftOriginNode = function(e, i) {
if (null !== e && !(e.height <= 1)) {
var n = e.child1, r = e.child2;
t.ShiftOriginNode(n, i);
t.ShiftOriginNode(r, i);
e.aabb.lowerBound.SelfSub(i);
e.aabb.upperBound.SelfSub(i);
}
};
t.prototype.ShiftOrigin = function(e) {
t.ShiftOriginNode(this.m_root, e);
};
t.s_r = new D();
t.s_v = new D();
t.s_abs_v = new D();
t.s_segmentAABB = new Tt();
t.s_subInput = new St();
t.s_combinedAABB = new Tt();
t.s_aabb = new Tt();
t.s_node_id = 0;
return t;
})(), Ot = (function() {
return function(t, e) {
this.proxyA = t;
this.proxyB = e;
};
})(), Ft = (function() {
function t() {
this.m_tree = new Lt();
this.m_proxyCount = 0;
this.m_moveCount = 0;
this.m_moveBuffer = [];
this.m_pairCount = 0;
this.m_pairBuffer = [];
}
t.prototype.CreateProxy = function(t, e) {
var i = this.m_tree.CreateProxy(t, e);
++this.m_proxyCount;
this.BufferMove(i);
return i;
};
t.prototype.DestroyProxy = function(t) {
this.UnBufferMove(t);
--this.m_proxyCount;
this.m_tree.DestroyProxy(t);
};
t.prototype.MoveProxy = function(t, e, i) {
this.m_tree.MoveProxy(t, e, i) && this.BufferMove(t);
};
t.prototype.TouchProxy = function(t) {
this.BufferMove(t);
};
t.prototype.GetProxyCount = function() {
return this.m_proxyCount;
};
t.prototype.UpdatePairs = function(t) {
var e = this;
this.m_pairCount = 0;
for (var i = function(t) {
var i = n.m_moveBuffer[t];
if (null === i) return "continue";
var r = i.aabb;
n.m_tree.Query(r, (function(t) {
if (t.m_id === i.m_id) return !0;
var n, r;
if (t.m_id < i.m_id) {
n = t;
r = i;
} else {
n = i;
r = t;
}
if (e.m_pairCount === e.m_pairBuffer.length) e.m_pairBuffer[e.m_pairCount] = new Ot(n, r); else {
var s = e.m_pairBuffer[e.m_pairCount];
s.proxyA = n;
s.proxyB = r;
}
++e.m_pairCount;
return !0;
}));
}, n = this, r = 0; r < this.m_moveCount; ++r) i(r);
this.m_moveCount = 0;
this.m_pairBuffer.length = this.m_pairCount;
this.m_pairBuffer.sort(Nt);
for (var s = 0; s < this.m_pairCount; ) {
var o = this.m_pairBuffer[s], a = o.proxyA.userData, c = o.proxyB.userData;
a && c && t(a, c);
++s;
for (;s < this.m_pairCount; ) {
var l = this.m_pairBuffer[s];
if (l.proxyA.m_id !== o.proxyA.m_id || l.proxyB.m_id !== o.proxyB.m_id) break;
++s;
}
}
};
t.prototype.Query = function(t, e) {
this.m_tree.Query(t, e);
};
t.prototype.QueryPoint = function(t, e) {
this.m_tree.QueryPoint(t, e);
};
t.prototype.RayCast = function(t, e) {
this.m_tree.RayCast(t, e);
};
t.prototype.GetTreeHeight = function() {
return this.m_tree.GetHeight();
};
t.prototype.GetTreeBalance = function() {
return this.m_tree.GetMaxBalance();
};
t.prototype.GetTreeQuality = function() {
return this.m_tree.GetAreaRatio();
};
t.prototype.ShiftOrigin = function(t) {
this.m_tree.ShiftOrigin(t);
};
t.prototype.BufferMove = function(t) {
this.m_moveBuffer[this.m_moveCount] = t;
++this.m_moveCount;
};
t.prototype.UnBufferMove = function(t) {
var e = this.m_moveBuffer.indexOf(t);
this.m_moveBuffer[e] = null;
};
return t;
})();
function Nt(t, e) {
return t.proxyA.m_id === e.proxyA.m_id ? t.proxyB.m_id - e.proxyB.m_id : t.proxyA.m_id - e.proxyA.m_id;
}
t.b2_toiTime = 0;
t.b2_toiMaxTime = 0;
t.b2_toiCalls = 0;
t.b2_toiIters = 0;
t.b2_toiMaxIters = 0;
t.b2_toiRootIters = 0;
t.b2_toiMaxRootIters = 0;
var Gt = new N(), zt = new N(), kt = new D(), Ut = new D(), jt = new D(), Wt = new D(), Ht = new D(), qt = (function() {
return function() {
this.proxyA = new X();
this.proxyB = new X();
this.sweepA = new G();
this.sweepB = new G();
this.tMax = 0;
};
})();
(function(t) {
t[t.e_unknown = 0] = "e_unknown";
t[t.e_failed = 1] = "e_failed";
t[t.e_overlapped = 2] = "e_overlapped";
t[t.e_touching = 3] = "e_touching";
t[t.e_separated = 4] = "e_separated";
})(t.b2TOIOutputState || (t.b2TOIOutputState = {}));
var Xt = (function() {
return function() {
this.state = t.b2TOIOutputState.e_unknown;
this.t = 0;
};
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_points = 0] = "e_points";
t[t.e_faceA = 1] = "e_faceA";
t[t.e_faceB = 2] = "e_faceB";
})(t.b2SeparationFunctionType || (t.b2SeparationFunctionType = {}));
var Yt = (function() {
function e() {
this.m_sweepA = new G();
this.m_sweepB = new G();
this.m_type = t.b2SeparationFunctionType.e_unknown;
this.m_localPoint = new D();
this.m_axis = new D();
}
e.prototype.Initialize = function(e, i, n, r, s, o) {
this.m_proxyA = i;
this.m_proxyB = r;
var a = e.count;
this.m_sweepA.Copy(n);
this.m_sweepB.Copy(s);
var c = Gt, l = zt;
this.m_sweepA.GetTransform(c, o);
this.m_sweepB.GetTransform(l, o);
if (1 === a) {
this.m_type = t.b2SeparationFunctionType.e_points;
var u = this.m_proxyA.GetVertex(e.indexA[0]), h = this.m_proxyB.GetVertex(e.indexB[0]), _ = N.MulXV(c, u, kt), f = N.MulXV(l, h, Ut);
D.SubVV(f, _, this.m_axis);
var d = this.m_axis.Normalize();
this.m_localPoint.SetZero();
return d;
}
if (e.indexA[0] === e.indexA[1]) {
this.m_type = t.b2SeparationFunctionType.e_faceB;
var p = this.m_proxyB.GetVertex(e.indexB[0]), m = this.m_proxyB.GetVertex(e.indexB[1]);
D.CrossVOne(D.SubVV(m, p, D.s_t0), this.m_axis).SelfNormalize();
var y = F.MulRV(l.q, this.m_axis, jt);
D.MidVV(p, m, this.m_localPoint);
f = N.MulXV(l, this.m_localPoint, Ut), u = this.m_proxyA.GetVertex(e.indexA[0]), 
_ = N.MulXV(c, u, kt);
if ((d = D.DotVV(D.SubVV(_, f, D.s_t0), y)) < 0) {
this.m_axis.SelfNeg();
d = -d;
}
return d;
}
this.m_type = t.b2SeparationFunctionType.e_faceA;
var v = this.m_proxyA.GetVertex(e.indexA[0]), g = this.m_proxyA.GetVertex(e.indexA[1]);
D.CrossVOne(D.SubVV(g, v, D.s_t0), this.m_axis).SelfNormalize();
y = F.MulRV(c.q, this.m_axis, jt);
D.MidVV(v, g, this.m_localPoint);
_ = N.MulXV(c, this.m_localPoint, kt), h = this.m_proxyB.GetVertex(e.indexB[0]), 
f = N.MulXV(l, h, Ut);
if ((d = D.DotVV(D.SubVV(f, _, D.s_t0), y)) < 0) {
this.m_axis.SelfNeg();
d = -d;
}
return d;
};
e.prototype.FindMinSeparation = function(e, i, n) {
var r = Gt, s = zt;
this.m_sweepA.GetTransform(r, n);
this.m_sweepB.GetTransform(s, n);
switch (this.m_type) {
case t.b2SeparationFunctionType.e_points:
var o = F.MulTRV(r.q, this.m_axis, Wt), a = F.MulTRV(s.q, D.NegV(this.m_axis, D.s_t0), Ht);
e[0] = this.m_proxyA.GetSupport(o);
i[0] = this.m_proxyB.GetSupport(a);
var c = this.m_proxyA.GetVertex(e[0]), l = this.m_proxyB.GetVertex(i[0]), u = N.MulXV(r, c, kt), h = N.MulXV(s, l, Ut);
return D.DotVV(D.SubVV(h, u, D.s_t0), this.m_axis);

case t.b2SeparationFunctionType.e_faceA:
var _ = F.MulRV(r.q, this.m_axis, jt);
u = N.MulXV(r, this.m_localPoint, kt), a = F.MulTRV(s.q, D.NegV(_, D.s_t0), Ht);
e[0] = -1;
i[0] = this.m_proxyB.GetSupport(a);
l = this.m_proxyB.GetVertex(i[0]), h = N.MulXV(s, l, Ut);
return D.DotVV(D.SubVV(h, u, D.s_t0), _);

case t.b2SeparationFunctionType.e_faceB:
_ = F.MulRV(s.q, this.m_axis, jt), h = N.MulXV(s, this.m_localPoint, Ut), o = F.MulTRV(r.q, D.NegV(_, D.s_t0), Wt);
i[0] = -1;
e[0] = this.m_proxyA.GetSupport(o);
c = this.m_proxyA.GetVertex(e[0]), u = N.MulXV(r, c, kt);
return D.DotVV(D.SubVV(u, h, D.s_t0), _);

default:
e[0] = -1;
i[0] = -1;
return 0;
}
};
e.prototype.Evaluate = function(e, i, n) {
var r = Gt, s = zt;
this.m_sweepA.GetTransform(r, n);
this.m_sweepB.GetTransform(s, n);
switch (this.m_type) {
case t.b2SeparationFunctionType.e_points:
var o = this.m_proxyA.GetVertex(e), a = this.m_proxyB.GetVertex(i), c = N.MulXV(r, o, kt), l = N.MulXV(s, a, Ut);
return D.DotVV(D.SubVV(l, c, D.s_t0), this.m_axis);

case t.b2SeparationFunctionType.e_faceA:
var u = F.MulRV(r.q, this.m_axis, jt);
c = N.MulXV(r, this.m_localPoint, kt), a = this.m_proxyB.GetVertex(i), l = N.MulXV(s, a, Ut);
return D.DotVV(D.SubVV(l, c, D.s_t0), u);

case t.b2SeparationFunctionType.e_faceB:
u = F.MulRV(s.q, this.m_axis, jt), l = N.MulXV(s, this.m_localPoint, Ut), o = this.m_proxyA.GetVertex(e), 
c = N.MulXV(r, o, kt);
return D.DotVV(D.SubVV(c, l, D.s_t0), u);

default:
return 0;
}
};
return e;
})(), Jt = new U(), Zt = new Y(), Kt = new J(), Qt = new Z(), $t = new Yt(), te = [ 0 ], ee = [ 0 ], ie = new G(), ne = new G();
function re(e, i) {
var n = Jt.Reset();
++t.b2_toiCalls;
e.state = t.b2TOIOutputState.e_unknown;
e.t = i.tMax;
var r = i.proxyA, s = i.proxyB, o = ie.Copy(i.sweepA), l = ne.Copy(i.sweepB);
o.Normalize();
l.Normalize();
var u = i.tMax, h = r.m_radius + s.m_radius, _ = C(c, h - 3 * c), f = .25 * c, d = 0, p = 0, m = Zt;
m.count = 0;
var y = Kt;
y.proxyA.Copy(i.proxyA);
y.proxyB.Copy(i.proxyB);
y.useRadii = !1;
for (;;) {
var g = Gt, x = zt;
o.GetTransform(g, d);
l.GetTransform(x, d);
y.transformA.Copy(g);
y.transformB.Copy(x);
var A = Qt;
lt(A, m, y);
if (A.distance <= 0) {
e.state = t.b2TOIOutputState.e_overlapped;
e.t = 0;
break;
}
if (A.distance < _ + f) {
e.state = t.b2TOIOutputState.e_touching;
e.t = d;
break;
}
var b = $t;
b.Initialize(m, r, o, s, l, d);
for (var S = !1, w = u, T = 0; ;) {
var B = te, E = ee, M = b.FindMinSeparation(B, E, w);
if (M > _ + f) {
e.state = t.b2TOIOutputState.e_separated;
e.t = u;
S = !0;
break;
}
if (M > _ - f) {
d = w;
break;
}
var I = b.Evaluate(B[0], E[0], d);
if (I < _ - f) {
e.state = t.b2TOIOutputState.e_failed;
e.t = d;
S = !0;
break;
}
if (I <= _ + f) {
e.state = t.b2TOIOutputState.e_touching;
e.t = d;
S = !0;
break;
}
for (var R = 0, D = d, P = w; ;) {
var V = 0;
V = 1 & R ? D + (_ - I) * (P - D) / (M - I) : .5 * (D + P);
++R;
++t.b2_toiRootIters;
var L = b.Evaluate(B[0], E[0], V);
if (v(L - _) < f) {
w = V;
break;
}
if (L > _) {
D = V;
I = L;
} else {
P = V;
M = L;
}
if (50 === R) break;
}
t.b2_toiMaxRootIters = C(t.b2_toiMaxRootIters, R);
if (++T === a) break;
}
++p;
++t.b2_toiIters;
if (S) break;
if (20 === p) {
e.state = t.b2TOIOutputState.e_failed;
e.t = d;
break;
}
}
t.b2_toiMaxIters = C(t.b2_toiMaxIters, p);
var O = n.GetMilliseconds();
t.b2_toiMaxTime = C(t.b2_toiMaxTime, O);
t.b2_toiTime += O;
}
var se = new D(), oe = new D();
function ae(e, i, n, r, s) {
e.pointCount = 0;
var o = N.MulXV(n, i.m_p, se), a = N.MulXV(s, r.m_p, oe), c = D.DistanceSquaredVV(o, a), l = i.m_radius + r.m_radius;
if (!(c > l * l)) {
e.type = t.b2ManifoldType.e_circles;
e.localPoint.Copy(i.m_p);
e.localNormal.SetZero();
e.pointCount = 1;
e.points[0].localPoint.Copy(r.m_p);
e.points[0].id.key = 0;
}
}
var ce = new D(), le = new D(), ue = new D();
function he(e, r, s, o, a) {
e.pointCount = 0;
for (var c = N.MulXV(a, o.m_p, ce), l = N.MulTXV(s, c, le), u = 0, h = -i, _ = r.m_radius + o.m_radius, f = r.m_count, d = r.m_vertices, p = r.m_normals, m = 0; m < f; ++m) {
var y = D.DotVV(p[m], D.SubVV(l, d[m], D.s_t0));
if (y > _) return;
if (y > h) {
h = y;
u = m;
}
}
var v = u, g = (v + 1) % f, C = d[v], x = d[g];
if (h < n) {
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(p[u]);
D.MidVV(C, x, e.localPoint);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else {
var A = D.DotVV(D.SubVV(l, C, D.s_t0), D.SubVV(x, C, D.s_t1)), b = D.DotVV(D.SubVV(l, x, D.s_t0), D.SubVV(C, x, D.s_t1));
if (A <= 0) {
if (D.DistanceSquaredVV(l, C) > _ * _) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
D.SubVV(l, C, e.localNormal).SelfNormalize();
e.localPoint.Copy(C);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else if (b <= 0) {
if (D.DistanceSquaredVV(l, x) > _ * _) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
D.SubVV(l, x, e.localNormal).SelfNormalize();
e.localPoint.Copy(x);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else {
var S = D.MidVV(C, x, ue);
if (D.DotVV(D.SubVV(l, S, D.s_t1), p[v]) > _) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(p[v]).SelfNormalize();
e.localPoint.Copy(S);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
}
}
}
var _e = new D(), fe = new D(), de = new D(), pe = new D();
function me(t, e, n, r, s) {
for (var o = t.m_vertices, a = t.m_normals, c = r.m_count, l = r.m_vertices, u = F.MulRV(e.q, a[n], _e), h = F.MulTRV(s.q, u, fe), _ = 0, f = i, d = 0; d < c; ++d) {
var p = D.DotVV(l[d], h);
if (p < f) {
f = p;
_ = d;
}
}
var m = N.MulXV(e, o[n], de), y = N.MulXV(s, l[_], pe);
return D.DotVV(D.SubVV(y, m, D.s_t0), u);
}
var ye = new D(), ve = new D();
function ge(t, e, n, r, s) {
for (var o = e.m_count, a = e.m_normals, c = D.SubVV(N.MulXV(s, r.m_centroid, D.s_t0), N.MulXV(n, e.m_centroid, D.s_t1), ye), l = F.MulTRV(n.q, c, ve), u = 0, h = -i, _ = 0; _ < o; ++_) {
var f = D.DotVV(a[_], l);
if (f > h) {
h = f;
u = _;
}
}
var d = me(e, n, u, r, s), p = (u + o - 1) % o, m = me(e, n, p, r, s), y = (u + 1) % o, v = me(e, n, y, r, s), g = 0, C = 0, x = 0;
if (m > d && m > v) {
x = -1;
g = p;
C = m;
} else {
if (!(v > d)) {
t[0] = u;
return d;
}
x = 1;
g = y;
C = v;
}
for (;(d = me(e, n, u = -1 === x ? (g + o - 1) % o : (g + 1) % o, r, s)) > C; ) {
g = u;
C = d;
}
t[0] = g;
return C;
}
var Ce = new D();
function xe(e, n, r, s, o, a) {
for (var c = n.m_normals, l = o.m_count, u = o.m_vertices, h = o.m_normals, _ = F.MulTRV(a.q, F.MulRV(r.q, c[s], D.s_t0), Ce), f = 0, d = i, p = 0; p < l; ++p) {
var m = D.DotVV(_, h[p]);
if (m < d) {
d = m;
f = p;
}
}
var y = f, v = (y + 1) % l, g = e[0];
N.MulXV(a, u[y], g.v);
var C = g.id.cf;
C.indexA = s;
C.indexB = y;
C.typeA = t.b2ContactFeatureType.e_face;
C.typeB = t.b2ContactFeatureType.e_vertex;
var x = e[1];
N.MulXV(a, u[v], x.v);
var A = x.id.cf;
A.indexA = s;
A.indexB = v;
A.typeA = t.b2ContactFeatureType.e_face;
A.typeB = t.b2ContactFeatureType.e_vertex;
}
var Ae = bt.MakeArray(2), be = bt.MakeArray(2), Se = bt.MakeArray(2), we = [ 0 ], Te = [ 0 ], Be = new D(), Ee = new D(), Me = new D(), Ie = new D(), Re = new D(), De = new D(), Pe = new D(), Ve = new D();
function Le(e, i, n, r, s) {
e.pointCount = 0;
var a = i.m_radius + r.m_radius, c = we;
c[0] = 0;
var l = ge(c, i, n, r, s);
if (!(l > a)) {
var u = Te;
u[0] = 0;
var h = ge(u, r, s, i, n);
if (!(h > a)) {
var _, f, d, p, m = 0, y = 0;
if (h > .98 * l + .001) {
_ = r;
f = i;
d = s;
p = n;
m = u[0];
e.type = t.b2ManifoldType.e_faceB;
y = 1;
} else {
_ = i;
f = r;
d = n;
p = s;
m = c[0];
e.type = t.b2ManifoldType.e_faceA;
y = 0;
}
var v = Ae;
xe(v, _, d, m, f, p);
var g = _.m_count, C = _.m_vertices, x = m, A = (m + 1) % g, b = C[x], S = C[A], w = D.SubVV(S, b, Be);
w.Normalize();
var T = D.CrossVOne(w, Ee), B = D.MidVV(b, S, Me), E = F.MulRV(d.q, w, Re), M = D.CrossVOne(E, Ie), I = N.MulXV(d, b, Pe), R = N.MulXV(d, S, Ve), P = D.DotVV(M, I), V = -D.DotVV(E, I) + a, L = D.DotVV(E, R) + a, O = be, G = Se;
if (!(Et(O, v, D.NegV(E, De), V, x) < 2 || Et(G, O, E, L, A) < 2)) {
e.localNormal.Copy(T);
e.localPoint.Copy(B);
for (var z = 0, k = 0; k < o; ++k) {
var U = G[k];
if (D.DotVV(M, U.v) - P <= a) {
var j = e.points[z];
N.MulTXV(p, U.v, j.localPoint);
j.id.Copy(U.id);
if (y) {
var W = j.id.cf;
j.id.cf.indexA = W.indexB;
j.id.cf.indexB = W.indexA;
j.id.cf.typeA = W.typeB;
j.id.cf.typeB = W.typeA;
}
++z;
}
}
e.pointCount = z;
}
}
}
}
var Oe = new D(), Fe = new D(), Ne = new D(), Ge = new D(), ze = new D(), ke = new D(), Ue = new D(), je = new gt();
function We(e, i, n, r, s) {
e.pointCount = 0;
var o = N.MulTXV(n, N.MulXV(s, r.m_p, D.s_t0), Oe), a = i.m_vertex1, c = i.m_vertex2, l = D.SubVV(c, a, Fe), u = D.DotVV(l, D.SubVV(c, o, D.s_t0)), h = D.DotVV(l, D.SubVV(o, a, D.s_t0)), _ = i.m_radius + r.m_radius, f = je;
f.cf.indexB = 0;
f.cf.typeB = t.b2ContactFeatureType.e_vertex;
if (h <= 0) {
var d = a, p = D.SubVV(o, d, Ne);
if (D.DotVV(p, p) > _ * _) return;
if (i.m_hasVertex0) {
var m = i.m_vertex0, y = a, v = D.SubVV(y, m, Ge);
if (D.DotVV(v, D.SubVV(y, o, D.s_t0)) > 0) return;
}
f.cf.indexA = 0;
f.cf.typeA = t.b2ContactFeatureType.e_vertex;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_circles;
e.localNormal.SetZero();
e.localPoint.Copy(d);
e.points[0].id.Copy(f);
e.points[0].localPoint.Copy(r.m_p);
} else if (u <= 0) {
var g = c, C = D.SubVV(o, g, Ne);
if (D.DotVV(C, C) > _ * _) return;
if (i.m_hasVertex3) {
var x = i.m_vertex3, A = c, b = D.SubVV(x, A, ze);
if (D.DotVV(b, D.SubVV(o, A, D.s_t0)) > 0) return;
}
f.cf.indexA = 1;
f.cf.typeA = t.b2ContactFeatureType.e_vertex;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_circles;
e.localNormal.SetZero();
e.localPoint.Copy(g);
e.points[0].id.Copy(f);
e.points[0].localPoint.Copy(r.m_p);
} else {
var S = D.DotVV(l, l), w = ke;
w.x = 1 / S * (u * a.x + h * c.x);
w.y = 1 / S * (u * a.y + h * c.y);
var T = D.SubVV(o, w, Ne);
if (!(D.DotVV(T, T) > _ * _)) {
var B = Ue.Set(-l.y, l.x);
D.DotVV(B, D.SubVV(o, a, D.s_t0)) < 0 && B.Set(-B.x, -B.y);
B.Normalize();
f.cf.indexA = 0;
f.cf.typeA = t.b2ContactFeatureType.e_face;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(B);
e.localPoint.Copy(a);
e.points[0].id.Copy(f);
e.points[0].localPoint.Copy(r.m_p);
}
}
}
var He = (function() {
return function() {
this.type = 0;
this.index = 0;
this.separation = 0;
};
})(), qe = (function() {
return function() {
this.vertices = D.MakeArray(a);
this.normals = D.MakeArray(a);
this.count = 0;
};
})(), Xe = (function() {
return function() {
this.i1 = 0;
this.i2 = 0;
this.v1 = new D();
this.v2 = new D();
this.normal = new D();
this.sideNormal1 = new D();
this.sideOffset1 = 0;
this.sideNormal2 = new D();
this.sideOffset2 = 0;
};
})(), Ye = new (function() {
function e() {
this.m_polygonB = new qe();
this.m_xf = new N();
this.m_centroidB = new D();
this.m_v0 = new D();
this.m_v1 = new D();
this.m_v2 = new D();
this.m_v3 = new D();
this.m_normal0 = new D();
this.m_normal1 = new D();
this.m_normal2 = new D();
this.m_normal = new D();
this.m_type1 = 0;
this.m_type2 = 0;
this.m_lowerLimit = new D();
this.m_upperLimit = new D();
this.m_radius = 0;
this.m_front = !1;
}
e.prototype.Collide = function(i, n, r, s, a) {
N.MulTXX(r, a, this.m_xf);
N.MulXV(this.m_xf, s.m_centroid, this.m_centroidB);
this.m_v0.Copy(n.m_vertex0);
this.m_v1.Copy(n.m_vertex1);
this.m_v2.Copy(n.m_vertex2);
this.m_v3.Copy(n.m_vertex3);
var c = n.m_hasVertex0, l = n.m_hasVertex3, u = D.SubVV(this.m_v2, this.m_v1, e.s_edge1);
u.Normalize();
this.m_normal1.Set(u.y, -u.x);
var h = D.DotVV(this.m_normal1, D.SubVV(this.m_centroidB, this.m_v1, D.s_t0)), _ = 0, f = 0, d = !1, p = !1;
if (c) {
var m = D.SubVV(this.m_v1, this.m_v0, e.s_edge0);
m.Normalize();
this.m_normal0.Set(m.y, -m.x);
d = D.CrossVV(m, u) >= 0;
_ = D.DotVV(this.m_normal0, D.SubVV(this.m_centroidB, this.m_v0, D.s_t0));
}
if (l) {
var y = D.SubVV(this.m_v3, this.m_v2, e.s_edge2);
y.Normalize();
this.m_normal2.Set(y.y, -y.x);
p = D.CrossVV(u, y) > 0;
f = D.DotVV(this.m_normal2, D.SubVV(this.m_centroidB, this.m_v2, D.s_t0));
}
if (c && l) if (d && p) {
this.m_front = _ >= 0 || h >= 0 || f >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else if (d) {
this.m_front = _ >= 0 || h >= 0 && f >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else if (p) {
this.m_front = f >= 0 || _ >= 0 && h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else {
this.m_front = _ >= 0 && h >= 0 && f >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else if (c) if (d) {
this.m_front = _ >= 0 || h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else {
this.m_front = _ >= 0 && h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else if (l) if (p) {
this.m_front = h >= 0 || f >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
}
} else {
this.m_front = h >= 0 && f >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
}
} else {
this.m_front = h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1);
}
}
this.m_polygonB.count = s.m_count;
for (var v = 0; v < s.m_count; ++v) {
N.MulXV(this.m_xf, s.m_vertices[v], this.m_polygonB.vertices[v]);
F.MulRV(this.m_xf.q, s.m_normals[v], this.m_polygonB.normals[v]);
}
this.m_radius = s.m_radius + n.m_radius;
i.pointCount = 0;
var g = this.ComputeEdgeSeparation(e.s_edgeAxis);
if (0 !== g.type && !(g.separation > this.m_radius)) {
var C = this.ComputePolygonSeparation(e.s_polygonAxis);
if (!(0 !== C.type && C.separation > this.m_radius)) {
var x;
x = 0 === C.type ? g : C.separation > .98 * g.separation + .001 ? C : g;
var A = e.s_ie, b = e.s_rf;
if (1 === x.type) {
i.type = t.b2ManifoldType.e_faceA;
var S = 0, w = D.DotVV(this.m_normal, this.m_polygonB.normals[0]);
for (v = 1; v < this.m_polygonB.count; ++v) {
var T = D.DotVV(this.m_normal, this.m_polygonB.normals[v]);
if (T < w) {
w = T;
S = v;
}
}
var B = S, E = (B + 1) % this.m_polygonB.count;
(M = A[0]).v.Copy(this.m_polygonB.vertices[B]);
M.id.cf.indexA = 0;
M.id.cf.indexB = B;
M.id.cf.typeA = t.b2ContactFeatureType.e_face;
M.id.cf.typeB = t.b2ContactFeatureType.e_vertex;
(I = A[1]).v.Copy(this.m_polygonB.vertices[E]);
I.id.cf.indexA = 0;
I.id.cf.indexB = E;
I.id.cf.typeA = t.b2ContactFeatureType.e_face;
I.id.cf.typeB = t.b2ContactFeatureType.e_vertex;
if (this.m_front) {
b.i1 = 0;
b.i2 = 1;
b.v1.Copy(this.m_v1);
b.v2.Copy(this.m_v2);
b.normal.Copy(this.m_normal1);
} else {
b.i1 = 1;
b.i2 = 0;
b.v1.Copy(this.m_v2);
b.v2.Copy(this.m_v1);
b.normal.Copy(this.m_normal1).SelfNeg();
}
} else {
i.type = t.b2ManifoldType.e_faceB;
var M, I;
(M = A[0]).v.Copy(this.m_v1);
M.id.cf.indexA = 0;
M.id.cf.indexB = x.index;
M.id.cf.typeA = t.b2ContactFeatureType.e_vertex;
M.id.cf.typeB = t.b2ContactFeatureType.e_face;
(I = A[1]).v.Copy(this.m_v2);
I.id.cf.indexA = 0;
I.id.cf.indexB = x.index;
I.id.cf.typeA = t.b2ContactFeatureType.e_vertex;
I.id.cf.typeB = t.b2ContactFeatureType.e_face;
b.i1 = x.index;
b.i2 = (b.i1 + 1) % this.m_polygonB.count;
b.v1.Copy(this.m_polygonB.vertices[b.i1]);
b.v2.Copy(this.m_polygonB.vertices[b.i2]);
b.normal.Copy(this.m_polygonB.normals[b.i1]);
}
b.sideNormal1.Set(b.normal.y, -b.normal.x);
b.sideNormal2.Copy(b.sideNormal1).SelfNeg();
b.sideOffset1 = D.DotVV(b.sideNormal1, b.v1);
b.sideOffset2 = D.DotVV(b.sideNormal2, b.v2);
var R = e.s_clipPoints1, P = e.s_clipPoints2;
if (!(Et(R, A, b.sideNormal1, b.sideOffset1, b.i1) < o || Et(P, R, b.sideNormal2, b.sideOffset2, b.i2) < o)) {
if (1 === x.type) {
i.localNormal.Copy(b.normal);
i.localPoint.Copy(b.v1);
} else {
i.localNormal.Copy(s.m_normals[b.i1]);
i.localPoint.Copy(s.m_vertices[b.i1]);
}
var V = 0;
for (v = 0; v < o; ++v) {
if (D.DotVV(b.normal, D.SubVV(P[v].v, b.v1, D.s_t0)) <= this.m_radius) {
var L = i.points[V];
if (1 === x.type) {
N.MulTXV(this.m_xf, P[v].v, L.localPoint);
L.id = P[v].id;
} else {
L.localPoint.Copy(P[v].v);
L.id.cf.typeA = P[v].id.cf.typeB;
L.id.cf.typeB = P[v].id.cf.typeA;
L.id.cf.indexA = P[v].id.cf.indexB;
L.id.cf.indexB = P[v].id.cf.indexA;
}
++V;
}
}
i.pointCount = V;
}
}
}
};
e.prototype.ComputeEdgeSeparation = function(t) {
var e = t;
e.type = 1;
e.index = this.m_front ? 0 : 1;
e.separation = i;
for (var n = 0; n < this.m_polygonB.count; ++n) {
var r = D.DotVV(this.m_normal, D.SubVV(this.m_polygonB.vertices[n], this.m_v1, D.s_t0));
r < e.separation && (e.separation = r);
}
return e;
};
e.prototype.ComputePolygonSeparation = function(t) {
var n = t;
n.type = 0;
n.index = -1;
n.separation = -i;
for (var r = e.s_perp.Set(-this.m_normal.y, this.m_normal.x), s = 0; s < this.m_polygonB.count; ++s) {
var o = D.NegV(this.m_polygonB.normals[s], e.s_n), a = D.DotVV(o, D.SubVV(this.m_polygonB.vertices[s], this.m_v1, D.s_t0)), c = D.DotVV(o, D.SubVV(this.m_polygonB.vertices[s], this.m_v2, D.s_t0)), u = g(a, c);
if (u > this.m_radius) {
n.type = 2;
n.index = s;
n.separation = u;
return n;
}
if (D.DotVV(o, r) >= 0) {
if (D.DotVV(D.SubVV(o, this.m_upperLimit, D.s_t0), this.m_normal) < -l) continue;
} else if (D.DotVV(D.SubVV(o, this.m_lowerLimit, D.s_t0), this.m_normal) < -l) continue;
if (u > n.separation) {
n.type = 2;
n.index = s;
n.separation = u;
}
}
return n;
};
e.s_edge1 = new D();
e.s_edge0 = new D();
e.s_edge2 = new D();
e.s_ie = bt.MakeArray(2);
e.s_rf = new Xe();
e.s_clipPoints1 = bt.MakeArray(2);
e.s_clipPoints2 = bt.MakeArray(2);
e.s_edgeAxis = new He();
e.s_polygonAxis = new He();
e.s_n = new D();
e.s_perp = new D();
return e;
}())();
function Je(t, e, i, n, r) {
Ye.Collide(t, e, i, n, r);
}
var Ze = (function() {
return function() {
this.mass = 0;
this.center = new D(0, 0);
this.I = 0;
};
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_circleShape = 0] = "e_circleShape";
t[t.e_edgeShape = 1] = "e_edgeShape";
t[t.e_polygonShape = 2] = "e_polygonShape";
t[t.e_chainShape = 3] = "e_chainShape";
t[t.e_shapeTypeCount = 4] = "e_shapeTypeCount";
})(t.b2ShapeType || (t.b2ShapeType = {}));
var Ke = (function() {
function e(e, i) {
this.m_type = t.b2ShapeType.e_unknown;
this.m_radius = 0;
this.m_type = e;
this.m_radius = i;
}
e.prototype.Copy = function(t) {
this.m_radius = t.m_radius;
return this;
};
e.prototype.GetType = function() {
return this.m_type;
};
return e;
})(), Qe = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
};
function $e(t, e) {
Qe(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}
var ti = (function(e) {
$e(i, e);
function i(i) {
void 0 === i && (i = 0);
var n = e.call(this, t.b2ShapeType.e_circleShape, i) || this;
n.m_p = new D();
return n;
}
i.prototype.Set = function(t, e) {
void 0 === e && (e = this.m_radius);
this.m_p.Copy(t);
this.m_radius = e;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_p.Copy(t.m_p);
return this;
};
i.prototype.GetChildCount = function() {
return 1;
};
i.prototype.TestPoint = function(t, e) {
var n = N.MulXV(t, this.m_p, i.TestPoint_s_center), r = D.SubVV(e, n, i.TestPoint_s_d);
return D.DotVV(r, r) <= b(this.m_radius);
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = N.MulXV(t, this.m_p, i.ComputeDistance_s_center);
D.SubVV(e, s, n);
return n.Normalize() - this.m_radius;
};
i.prototype.RayCast = function(t, e, r, s) {
var o = N.MulXV(r, this.m_p, i.RayCast_s_position), a = D.SubVV(e.p1, o, i.RayCast_s_s), c = D.DotVV(a, a) - b(this.m_radius), l = D.SubVV(e.p2, e.p1, i.RayCast_s_r), u = D.DotVV(a, l), h = D.DotVV(l, l), _ = u * u - h * c;
if (_ < 0 || h < n) return !1;
var f = -(u + w(_));
if (0 <= f && f <= e.maxFraction * h) {
f /= h;
t.fraction = f;
D.AddVMulSV(a, f, l, t.normal).SelfNormalize();
return !0;
}
return !1;
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = N.MulXV(e, this.m_p, i.ComputeAABB_s_p);
t.lowerBound.Set(r.x - this.m_radius, r.y - this.m_radius);
t.upperBound.Set(r.x + this.m_radius, r.y + this.m_radius);
};
i.prototype.ComputeMass = function(t, e) {
var i = b(this.m_radius);
t.mass = e * s * i;
t.center.Copy(this.m_p);
t.I = t.mass * (.5 * i + D.DotVV(this.m_p, this.m_p));
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_p);
t.m_count = 1;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, r) {
var o = N.MulXV(i, this.m_p, new D()), a = -(D.DotVV(t, o) - e);
if (a < -this.m_radius + n) return 0;
if (a > this.m_radius) {
r.Copy(o);
return s * this.m_radius * this.m_radius;
}
var c = this.m_radius * this.m_radius, l = a * a, u = c * (I(a / this.m_radius) + s / 2) + a * w(c - l), h = -2 / 3 * T(c - l, 1.5) / u;
r.x = o.x + t.x * h;
r.y = o.y + t.y * h;
return u;
};
i.prototype.Dump = function(t) {
t("    const shape: b2CircleShape = new b2CircleShape();\n");
t("    shape.m_radius = %.15f;\n", this.m_radius);
t("    shape.m_p.Set(%.15f, %.15f);\n", this.m_p.x, this.m_p.y);
};
i.TestPoint_s_center = new D();
i.TestPoint_s_d = new D();
i.ComputeDistance_s_center = new D();
i.RayCast_s_position = new D();
i.RayCast_s_s = new D();
i.RayCast_s_r = new D();
i.ComputeAABB_s_p = new D();
return i;
})(Ke), ei = (function(e) {
$e(r, e);
function r() {
var i = e.call(this, t.b2ShapeType.e_polygonShape, u) || this;
i.m_centroid = new D(0, 0);
i.m_vertices = [];
i.m_normals = [];
i.m_count = 0;
return i;
}
r.prototype.Clone = function() {
return new r().Copy(this);
};
r.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_centroid.Copy(t.m_centroid);
this.m_count = t.m_count;
this.m_vertices = D.MakeArray(this.m_count);
this.m_normals = D.MakeArray(this.m_count);
for (var i = 0; i < this.m_count; ++i) {
this.m_vertices[i].Copy(t.m_vertices[i]);
this.m_normals[i].Copy(t.m_normals[i]);
}
return this;
};
r.prototype.GetChildCount = function() {
return 1;
};
r.prototype.Set = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
if (e < 3) return this.SetAsBox(1, 1);
for (var n = g(e, a), s = r.Set_s_ps, o = 0, l = 0; l < n; ++l) {
for (var u = t[i + l], h = !0, _ = 0; _ < o; ++_) if (D.DistanceSquaredVV(u, s[_]) < .5 * c * (.5 * c)) {
h = !1;
break;
}
h && s[o++].Copy(u);
}
if ((n = o) < 3) return this.SetAsBox(1, 1);
var f = 0, d = s[0].x;
for (l = 1; l < n; ++l) {
var p = s[l].x;
if (p > d || p === d && s[l].y < s[f].y) {
f = l;
d = p;
}
}
for (var m = r.Set_s_hull, y = 0, v = f; ;) {
m[y] = v;
var C = 0;
for (_ = 1; _ < n; ++_) if (C !== v) {
var x = D.SubVV(s[C], s[m[y]], r.Set_s_r), A = (u = D.SubVV(s[_], s[m[y]], r.Set_s_v), 
D.CrossVV(x, u));
A < 0 && (C = _);
0 === A && u.LengthSquared() > x.LengthSquared() && (C = _);
} else C = _;
++y;
v = C;
if (C === f) break;
}
this.m_count = y;
this.m_vertices = D.MakeArray(this.m_count);
this.m_normals = D.MakeArray(this.m_count);
for (l = 0; l < y; ++l) this.m_vertices[l].Copy(s[m[l]]);
for (l = 0; l < y; ++l) {
var b = this.m_vertices[l], S = this.m_vertices[(l + 1) % y], w = D.SubVV(S, b, D.s_t0);
D.CrossVOne(w, this.m_normals[l]).SelfNormalize();
}
r.ComputeCentroid(this.m_vertices, y, this.m_centroid);
return this;
};
r.prototype.SetAsArray = function(t, e) {
void 0 === e && (e = t.length);
return this.Set(t, e);
};
r.prototype.SetAsBox = function(t, e, i, n) {
void 0 === n && (n = 0);
this.m_count = 4;
this.m_vertices = D.MakeArray(this.m_count);
this.m_normals = D.MakeArray(this.m_count);
this.m_vertices[0].Set(-t, -e);
this.m_vertices[1].Set(t, -e);
this.m_vertices[2].Set(t, e);
this.m_vertices[3].Set(-t, e);
this.m_normals[0].Set(0, -1);
this.m_normals[1].Set(1, 0);
this.m_normals[2].Set(0, 1);
this.m_normals[3].Set(-1, 0);
this.m_centroid.SetZero();
if (i) {
this.m_centroid.Copy(i);
var r = new N();
r.SetPosition(i);
r.SetRotationAngle(n);
for (var s = 0; s < this.m_count; ++s) {
N.MulXV(r, this.m_vertices[s], this.m_vertices[s]);
F.MulRV(r.q, this.m_normals[s], this.m_normals[s]);
}
}
return this;
};
r.prototype.TestPoint = function(t, e) {
for (var i = N.MulTXV(t, e, r.TestPoint_s_pLocal), n = 0; n < this.m_count; ++n) {
if (D.DotVV(this.m_normals[n], D.SubVV(i, this.m_vertices[n], D.s_t0)) > 0) return !1;
}
return !0;
};
r.prototype.ComputeDistance = function(t, e, n, s) {
for (var o = N.MulTXV(t, e, r.ComputeDistance_s_pLocal), a = -i, c = r.ComputeDistance_s_normalForMaxDistance.Copy(o), l = 0; l < this.m_count; ++l) {
var u = D.DotVV(this.m_normals[l], D.SubVV(o, this.m_vertices[l], D.s_t0));
if (u > a) {
a = u;
c.Copy(this.m_normals[l]);
}
}
if (a > 0) {
var h = r.ComputeDistance_s_minDistance.Copy(c), _ = a * a;
for (l = 0; l < this.m_count; ++l) {
var f = D.SubVV(o, this.m_vertices[l], r.ComputeDistance_s_distance), d = f.LengthSquared();
if (_ > d) {
h.Copy(f);
_ = d;
}
}
F.MulRV(t.q, h, n);
n.Normalize();
return Math.sqrt(_);
}
F.MulRV(t.q, c, n);
return a;
};
r.prototype.RayCast = function(t, e, i, n) {
for (var s = N.MulTXV(i, e.p1, r.RayCast_s_p1), o = N.MulTXV(i, e.p2, r.RayCast_s_p2), a = D.SubVV(o, s, r.RayCast_s_d), c = 0, l = e.maxFraction, u = -1, h = 0; h < this.m_count; ++h) {
var _ = D.DotVV(this.m_normals[h], D.SubVV(this.m_vertices[h], s, D.s_t0)), f = D.DotVV(this.m_normals[h], a);
if (0 === f) {
if (_ < 0) return !1;
} else if (f < 0 && _ < c * f) {
c = _ / f;
u = h;
} else f > 0 && _ < l * f && (l = _ / f);
if (l < c) return !1;
}
if (u >= 0) {
t.fraction = c;
F.MulRV(i.q, this.m_normals[u], t.normal);
return !0;
}
return !1;
};
r.prototype.ComputeAABB = function(t, e, i) {
for (var n = N.MulXV(e, this.m_vertices[0], t.lowerBound), s = t.upperBound.Copy(n), o = 0; o < this.m_count; ++o) {
var a = N.MulXV(e, this.m_vertices[o], r.ComputeAABB_s_v);
D.MinV(a, n, n);
D.MaxV(a, s, s);
}
var c = this.m_radius;
n.SelfSubXY(c, c);
s.SelfAddXY(c, c);
};
r.prototype.ComputeMass = function(t, e) {
for (var i = r.ComputeMass_s_center.SetZero(), n = 0, s = 0, o = r.ComputeMass_s_s.SetZero(), a = 0; a < this.m_count; ++a) o.SelfAdd(this.m_vertices[a]);
o.SelfMul(1 / this.m_count);
for (a = 0; a < this.m_count; ++a) {
var c = D.SubVV(this.m_vertices[a], o, r.ComputeMass_s_e1), l = D.SubVV(this.m_vertices[(a + 1) % this.m_count], o, r.ComputeMass_s_e2), u = D.CrossVV(c, l), h = .5 * u;
n += h;
i.SelfAdd(D.MulSV(h * (1 / 3), D.AddVV(c, l, D.s_t0), D.s_t1));
var _ = c.x, f = c.y, d = l.x, p = l.y;
s += 1 / 3 * .25 * u * (_ * _ + d * _ + d * d + (f * f + p * f + p * p));
}
t.mass = e * n;
i.SelfMul(1 / n);
D.AddVV(i, o, t.center);
t.I = e * s;
t.I += t.mass * (D.DotVV(t.center, t.center) - D.DotVV(i, i));
};
r.prototype.Validate = function() {
for (var t = 0; t < this.m_count; ++t) for (var e = t, i = (t + 1) % this.m_count, n = this.m_vertices[e], s = D.SubVV(this.m_vertices[i], n, r.Validate_s_e), o = 0; o < this.m_count; ++o) if (o !== e && o !== i) {
var a = D.SubVV(this.m_vertices[o], n, r.Validate_s_v);
if (D.CrossVV(s, a) < 0) return !1;
}
return !0;
};
r.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = this.m_vertices;
t.m_count = this.m_count;
t.m_radius = this.m_radius;
};
r.prototype.ComputeSubmergedArea = function(t, e, i, s) {
for (var o = F.MulTRV(i.q, t, r.ComputeSubmergedArea_s_normalL), a = e - D.DotVV(t, i.p), c = r.ComputeSubmergedArea_s_depths, l = 0, u = -1, h = -1, _ = !1, f = 0; f < this.m_count; ++f) {
c[f] = D.DotVV(o, this.m_vertices[f]) - a;
var d = c[f] < -n;
if (f > 0) if (d) {
if (!_) {
u = f - 1;
l++;
}
} else if (_) {
h = f - 1;
l++;
}
_ = d;
}
switch (l) {
case 0:
if (_) {
var p = r.ComputeSubmergedArea_s_md;
this.ComputeMass(p, 1);
N.MulXV(i, p.center, s);
return p.mass;
}
return 0;

case 1:
-1 === u ? u = this.m_count - 1 : h = this.m_count - 1;
}
for (var m, y = (u + 1) % this.m_count, v = (h + 1) % this.m_count, g = (0 - c[u]) / (c[y] - c[u]), C = (0 - c[h]) / (c[v] - c[h]), x = r.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[u].x * (1 - g) + this.m_vertices[y].x * g, this.m_vertices[u].y * (1 - g) + this.m_vertices[y].y * g), A = r.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[h].x * (1 - C) + this.m_vertices[v].x * C, this.m_vertices[h].y * (1 - C) + this.m_vertices[v].y * C), b = 0, S = r.ComputeSubmergedArea_s_center.SetZero(), w = this.m_vertices[y], T = y; T !== v; ) {
m = (T = (T + 1) % this.m_count) === v ? A : this.m_vertices[T];
var B = .5 * ((w.x - x.x) * (m.y - x.y) - (w.y - x.y) * (m.x - x.x));
b += B;
S.x += B * (x.x + w.x + m.x) / 3;
S.y += B * (x.y + w.y + m.y) / 3;
w = m;
}
S.SelfMul(1 / b);
N.MulXV(i, S, s);
return b;
};
r.prototype.Dump = function(t) {
t("    const shape: b2PolygonShape = new b2PolygonShape();\n");
t("    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\n", a);
for (var e = 0; e < this.m_count; ++e) t("    vs[%d].Set(%.15f, %.15f);\n", e, this.m_vertices[e].x, this.m_vertices[e].y);
t("    shape.Set(vs, %d);\n", this.m_count);
};
r.ComputeCentroid = function(t, e, i) {
var n = i;
n.SetZero();
for (var s = 0, o = r.ComputeCentroid_s_pRef.SetZero(), a = 0; a < e; ++a) {
var c = o, l = t[a], u = t[(a + 1) % e], h = D.SubVV(l, c, r.ComputeCentroid_s_e1), _ = D.SubVV(u, c, r.ComputeCentroid_s_e2), f = .5 * D.CrossVV(h, _);
s += f;
n.x += f * (1 / 3) * (c.x + l.x + u.x);
n.y += f * (1 / 3) * (c.y + l.y + u.y);
}
n.SelfMul(1 / s);
return n;
};
r.Set_s_ps = D.MakeArray(a);
r.Set_s_hull = p(a);
r.Set_s_r = new D();
r.Set_s_v = new D();
r.TestPoint_s_pLocal = new D();
r.ComputeDistance_s_pLocal = new D();
r.ComputeDistance_s_normalForMaxDistance = new D();
r.ComputeDistance_s_minDistance = new D();
r.ComputeDistance_s_distance = new D();
r.RayCast_s_p1 = new D();
r.RayCast_s_p2 = new D();
r.RayCast_s_d = new D();
r.ComputeAABB_s_v = new D();
r.ComputeMass_s_center = new D();
r.ComputeMass_s_s = new D();
r.ComputeMass_s_e1 = new D();
r.ComputeMass_s_e2 = new D();
r.Validate_s_e = new D();
r.Validate_s_v = new D();
r.ComputeSubmergedArea_s_normalL = new D();
r.ComputeSubmergedArea_s_depths = p(a);
r.ComputeSubmergedArea_s_md = new Ze();
r.ComputeSubmergedArea_s_intoVec = new D();
r.ComputeSubmergedArea_s_outoVec = new D();
r.ComputeSubmergedArea_s_center = new D();
r.ComputeCentroid_s_pRef = new D();
r.ComputeCentroid_s_e1 = new D();
r.ComputeCentroid_s_e2 = new D();
return r;
})(Ke), ii = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2ShapeType.e_edgeShape, u) || this;
i.m_vertex1 = new D();
i.m_vertex2 = new D();
i.m_vertex0 = new D();
i.m_vertex3 = new D();
i.m_hasVertex0 = !1;
i.m_hasVertex3 = !1;
return i;
}
i.prototype.Set = function(t, e) {
this.m_vertex1.Copy(t);
this.m_vertex2.Copy(e);
this.m_hasVertex0 = !1;
this.m_hasVertex3 = !1;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_vertex1.Copy(t.m_vertex1);
this.m_vertex2.Copy(t.m_vertex2);
this.m_vertex0.Copy(t.m_vertex0);
this.m_vertex3.Copy(t.m_vertex3);
this.m_hasVertex0 = t.m_hasVertex0;
this.m_hasVertex3 = t.m_hasVertex3;
return this;
};
i.prototype.GetChildCount = function() {
return 1;
};
i.prototype.TestPoint = function(t, e) {
return !1;
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = N.MulXV(t, this.m_vertex1, i.ComputeDistance_s_v1), o = N.MulXV(t, this.m_vertex2, i.ComputeDistance_s_v2), a = D.SubVV(e, s, i.ComputeDistance_s_d), c = D.SubVV(o, s, i.ComputeDistance_s_s), l = D.DotVV(a, c);
if (l > 0) {
var u = D.DotVV(c, c);
l > u ? D.SubVV(e, o, a) : a.SelfMulSub(l / u, c);
}
n.Copy(a);
return n.Normalize();
};
i.prototype.RayCast = function(t, e, n, r) {
var s = N.MulTXV(n, e.p1, i.RayCast_s_p1), o = N.MulTXV(n, e.p2, i.RayCast_s_p2), a = D.SubVV(o, s, i.RayCast_s_d), c = this.m_vertex1, l = this.m_vertex2, u = D.SubVV(l, c, i.RayCast_s_e), h = t.normal.Set(u.y, -u.x).SelfNormalize(), _ = D.DotVV(h, D.SubVV(c, s, D.s_t0)), f = D.DotVV(h, a);
if (0 === f) return !1;
var d = _ / f;
if (d < 0 || e.maxFraction < d) return !1;
var p = D.AddVMulSV(s, d, a, i.RayCast_s_q), m = D.SubVV(l, c, i.RayCast_s_r), y = D.DotVV(m, m);
if (0 === y) return !1;
var v = D.DotVV(D.SubVV(p, c, D.s_t0), m) / y;
if (v < 0 || 1 < v) return !1;
t.fraction = d;
F.MulRV(n.q, t.normal, t.normal);
_ > 0 && t.normal.SelfNeg();
return !0;
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = N.MulXV(e, this.m_vertex1, i.ComputeAABB_s_v1), s = N.MulXV(e, this.m_vertex2, i.ComputeAABB_s_v2);
D.MinV(r, s, t.lowerBound);
D.MaxV(r, s, t.upperBound);
var o = this.m_radius;
t.lowerBound.SelfSubXY(o, o);
t.upperBound.SelfAddXY(o, o);
};
i.prototype.ComputeMass = function(t, e) {
t.mass = 0;
D.MidVV(this.m_vertex1, this.m_vertex2, t.center);
t.I = 0;
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_vertex1);
t.m_vertices[1].Copy(this.m_vertex2);
t.m_count = 2;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, n) {
n.SetZero();
return 0;
};
i.prototype.Dump = function(t) {
t("    const shape: b2EdgeShape = new b2EdgeShape();\n");
t("    shape.m_radius = %.15f;\n", this.m_radius);
t("    shape.m_vertex0.Set(%.15f, %.15f);\n", this.m_vertex0.x, this.m_vertex0.y);
t("    shape.m_vertex1.Set(%.15f, %.15f);\n", this.m_vertex1.x, this.m_vertex1.y);
t("    shape.m_vertex2.Set(%.15f, %.15f);\n", this.m_vertex2.x, this.m_vertex2.y);
t("    shape.m_vertex3.Set(%.15f, %.15f);\n", this.m_vertex3.x, this.m_vertex3.y);
t("    shape.m_hasVertex0 = %s;\n", this.m_hasVertex0);
t("    shape.m_hasVertex3 = %s;\n", this.m_hasVertex3);
};
i.ComputeDistance_s_v1 = new D();
i.ComputeDistance_s_v2 = new D();
i.ComputeDistance_s_d = new D();
i.ComputeDistance_s_s = new D();
i.RayCast_s_p1 = new D();
i.RayCast_s_p2 = new D();
i.RayCast_s_d = new D();
i.RayCast_s_e = new D();
i.RayCast_s_q = new D();
i.RayCast_s_r = new D();
i.ComputeAABB_s_v1 = new D();
i.ComputeAABB_s_v2 = new D();
return i;
})(Ke), ni = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2ShapeType.e_chainShape, u) || this;
i.m_vertices = [];
i.m_count = 0;
i.m_prevVertex = new D();
i.m_nextVertex = new D();
i.m_hasPrevVertex = !1;
i.m_hasNextVertex = !1;
return i;
}
i.prototype.CreateLoop = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
if (e < 3) return this;
this.m_count = e + 1;
this.m_vertices = D.MakeArray(this.m_count);
for (var n = 0; n < e; ++n) this.m_vertices[n].Copy(t[i + n]);
this.m_vertices[e].Copy(this.m_vertices[0]);
this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);
this.m_nextVertex.Copy(this.m_vertices[1]);
this.m_hasPrevVertex = !0;
this.m_hasNextVertex = !0;
return this;
};
i.prototype.CreateChain = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
this.m_count = e;
this.m_vertices = D.MakeArray(e);
for (var n = 0; n < e; ++n) this.m_vertices[n].Copy(t[i + n]);
this.m_hasPrevVertex = !1;
this.m_hasNextVertex = !1;
this.m_prevVertex.SetZero();
this.m_nextVertex.SetZero();
return this;
};
i.prototype.SetPrevVertex = function(t) {
this.m_prevVertex.Copy(t);
this.m_hasPrevVertex = !0;
return this;
};
i.prototype.SetNextVertex = function(t) {
this.m_nextVertex.Copy(t);
this.m_hasNextVertex = !0;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.CreateChain(t.m_vertices, t.m_count);
this.m_prevVertex.Copy(t.m_prevVertex);
this.m_nextVertex.Copy(t.m_nextVertex);
this.m_hasPrevVertex = t.m_hasPrevVertex;
this.m_hasNextVertex = t.m_hasNextVertex;
return this;
};
i.prototype.GetChildCount = function() {
return this.m_count - 1;
};
i.prototype.GetChildEdge = function(e, i) {
e.m_type = t.b2ShapeType.e_edgeShape;
e.m_radius = this.m_radius;
e.m_vertex1.Copy(this.m_vertices[i]);
e.m_vertex2.Copy(this.m_vertices[i + 1]);
if (i > 0) {
e.m_vertex0.Copy(this.m_vertices[i - 1]);
e.m_hasVertex0 = !0;
} else {
e.m_vertex0.Copy(this.m_prevVertex);
e.m_hasVertex0 = this.m_hasPrevVertex;
}
if (i < this.m_count - 2) {
e.m_vertex3.Copy(this.m_vertices[i + 2]);
e.m_hasVertex3 = !0;
} else {
e.m_vertex3.Copy(this.m_nextVertex);
e.m_hasVertex3 = this.m_hasNextVertex;
}
};
i.prototype.TestPoint = function(t, e) {
return !1;
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = i.ComputeDistance_s_edgeShape;
this.GetChildEdge(s, r);
return s.ComputeDistance(t, e, n, 0);
};
i.prototype.RayCast = function(t, e, n, r) {
var s = i.RayCast_s_edgeShape;
s.m_vertex1.Copy(this.m_vertices[r]);
s.m_vertex2.Copy(this.m_vertices[(r + 1) % this.m_count]);
return s.RayCast(t, e, n, 0);
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = this.m_vertices[n], s = this.m_vertices[(n + 1) % this.m_count], o = N.MulXV(e, r, i.ComputeAABB_s_v1), a = N.MulXV(e, s, i.ComputeAABB_s_v2);
D.MinV(o, a, t.lowerBound);
D.MaxV(o, a, t.upperBound);
};
i.prototype.ComputeMass = function(t, e) {
t.mass = 0;
t.center.SetZero();
t.I = 0;
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_vertices[e]);
e + 1 < this.m_count ? t.m_vertices[1].Copy(this.m_vertices[e + 1]) : t.m_vertices[1].Copy(this.m_vertices[0]);
t.m_count = 2;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, n) {
n.SetZero();
return 0;
};
i.prototype.Dump = function(t) {
t("    const shape: b2ChainShape = new b2ChainShape();\n");
t("    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\n", a);
for (var e = 0; e < this.m_count; ++e) t("    vs[%d].Set(%.15f, %.15f);\n", e, this.m_vertices[e].x, this.m_vertices[e].y);
t("    shape.CreateChain(vs, %d);\n", this.m_count);
t("    shape.m_prevVertex.Set(%.15f, %.15f);\n", this.m_prevVertex.x, this.m_prevVertex.y);
t("    shape.m_nextVertex.Set(%.15f, %.15f);\n", this.m_nextVertex.x, this.m_nextVertex.y);
t("    shape.m_hasPrevVertex = %s;\n", this.m_hasPrevVertex ? "true" : "false");
t("    shape.m_hasNextVertex = %s;\n", this.m_hasNextVertex ? "true" : "false");
};
i.ComputeDistance_s_edgeShape = new ii();
i.RayCast_s_edgeShape = new ii();
i.ComputeAABB_s_v1 = new D();
i.ComputeAABB_s_v2 = new D();
return i;
})(Ke), ri = (function() {
function t() {
this.categoryBits = 1;
this.maskBits = 65535;
this.groupIndex = 0;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.categoryBits = t.categoryBits;
this.maskBits = t.maskBits;
this.groupIndex = t.groupIndex || 0;
return this;
};
t.DEFAULT = new t();
return t;
})(), si = (function() {
return function() {
this.userData = null;
this.friction = .2;
this.restitution = 0;
this.density = 0;
this.isSensor = !1;
this.filter = new ri();
};
})(), oi = (function() {
return function(t) {
this.aabb = new Tt();
this.childIndex = 0;
this.fixture = t;
};
})(), ai = (function() {
function t(t, e) {
this.m_density = 0;
this.m_next = null;
this.m_friction = 0;
this.m_restitution = 0;
this.m_proxies = [];
this.m_proxyCount = 0;
this.m_filter = new ri();
this.m_isSensor = !1;
this.m_userData = null;
this.m_body = e;
this.m_shape = t.shape.Clone();
}
t.prototype.GetType = function() {
return this.m_shape.GetType();
};
t.prototype.GetShape = function() {
return this.m_shape;
};
t.prototype.SetSensor = function(t) {
if (t !== this.m_isSensor) {
this.m_body.SetAwake(!0);
this.m_isSensor = t;
}
};
t.prototype.IsSensor = function() {
return this.m_isSensor;
};
t.prototype.SetFilterData = function(t) {
this.m_filter.Copy(t);
this.Refilter();
};
t.prototype.GetFilterData = function() {
return this.m_filter;
};
t.prototype.Refilter = function() {
for (var t = this.m_body.GetContactList(); t; ) {
var e = t.contact, i = e.GetFixtureA(), n = e.GetFixtureB();
i !== this && n !== this || e.FlagForFiltering();
t = t.next;
}
var r = this.m_body.GetWorld();
if (null !== r) for (var s = r.m_contactManager.m_broadPhase, o = 0; o < this.m_proxyCount; ++o) s.TouchProxy(this.m_proxies[o].treeNode);
};
t.prototype.GetBody = function() {
return this.m_body;
};
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetUserData = function() {
return this.m_userData;
};
t.prototype.SetUserData = function(t) {
this.m_userData = t;
};
t.prototype.TestPoint = function(t) {
return this.m_shape.TestPoint(this.m_body.GetTransform(), t);
};
t.prototype.ComputeDistance = function(t, e, i) {
return this.m_shape.ComputeDistance(this.m_body.GetTransform(), t, e, i);
};
t.prototype.RayCast = function(t, e, i) {
return this.m_shape.RayCast(t, e, this.m_body.GetTransform(), i);
};
t.prototype.GetMassData = function(t) {
void 0 === t && (t = new Ze());
this.m_shape.ComputeMass(t, this.m_density);
return t;
};
t.prototype.SetDensity = function(t) {
this.m_density = t;
};
t.prototype.GetDensity = function() {
return this.m_density;
};
t.prototype.GetFriction = function() {
return this.m_friction;
};
t.prototype.SetFriction = function(t) {
this.m_friction = t;
};
t.prototype.GetRestitution = function() {
return this.m_restitution;
};
t.prototype.SetRestitution = function(t) {
this.m_restitution = t;
};
t.prototype.GetAABB = function(t) {
return this.m_proxies[t].aabb;
};
t.prototype.Dump = function(t, e) {
t("    const fd: b2FixtureDef = new b2FixtureDef();\n");
t("    fd.friction = %.15f;\n", this.m_friction);
t("    fd.restitution = %.15f;\n", this.m_restitution);
t("    fd.density = %.15f;\n", this.m_density);
t("    fd.isSensor = %s;\n", this.m_isSensor ? "true" : "false");
t("    fd.filter.categoryBits = %d;\n", this.m_filter.categoryBits);
t("    fd.filter.maskBits = %d;\n", this.m_filter.maskBits);
t("    fd.filter.groupIndex = %d;\n", this.m_filter.groupIndex);
this.m_shape.Dump(t);
t("\n");
t("    fd.shape = shape;\n");
t("\n");
t("    bodies[%d].CreateFixture(fd);\n", e);
};
t.prototype.Create = function(t) {
var i = this;
this.m_userData = t.userData;
this.m_friction = e(t.friction, .2);
this.m_restitution = e(t.restitution, 0);
this.m_next = null;
this.m_filter.Copy(e(t.filter, ri.DEFAULT));
this.m_isSensor = e(t.isSensor, !1);
this.m_proxies = d(this.m_shape.GetChildCount(), (function(t) {
return new oi(i);
}));
this.m_proxyCount = 0;
this.m_density = e(t.density, 0);
};
t.prototype.Destroy = function() {};
t.prototype.CreateProxies = function(t) {
var e = this.m_body.m_world.m_contactManager.m_broadPhase;
this.m_proxyCount = this.m_shape.GetChildCount();
for (var i = 0; i < this.m_proxyCount; ++i) {
var n = this.m_proxies[i] = new oi(this);
this.m_shape.ComputeAABB(n.aabb, t, i);
n.treeNode = e.CreateProxy(n.aabb, n);
n.childIndex = i;
}
};
t.prototype.DestroyProxies = function() {
for (var t = this.m_body.m_world.m_contactManager.m_broadPhase, e = 0; e < this.m_proxyCount; ++e) {
var i = this.m_proxies[e];
delete i.treeNode.userData;
t.DestroyProxy(i.treeNode);
delete i.treeNode;
}
this.m_proxyCount = 0;
};
t.prototype.TouchProxies = function() {
for (var t = this.m_body.m_world.m_contactManager.m_broadPhase, e = this.m_proxyCount, i = 0; i < e; ++i) t.TouchProxy(this.m_proxies[i].treeNode);
};
t.prototype.Synchronize = function(e, i) {
if (0 !== this.m_proxyCount) for (var n = this.m_body.m_world.m_contactManager.m_broadPhase, r = 0; r < this.m_proxyCount; ++r) {
var s = this.m_proxies[r], o = t.Synchronize_s_aabb1, a = t.Synchronize_s_aabb2;
this.m_shape.ComputeAABB(o, e, r);
this.m_shape.ComputeAABB(a, i, r);
s.aabb.Combine2(o, a);
var c = D.SubVV(i.p, e.p, t.Synchronize_s_displacement);
n.MoveProxy(s.treeNode, s.aabb, c);
}
};
t.Synchronize_s_aabb1 = new Tt();
t.Synchronize_s_aabb2 = new Tt();
t.Synchronize_s_displacement = new D();
return t;
})();
(function(t) {
t[t.b2_unknown = -1] = "b2_unknown";
t[t.b2_staticBody = 0] = "b2_staticBody";
t[t.b2_kinematicBody = 1] = "b2_kinematicBody";
t[t.b2_dynamicBody = 2] = "b2_dynamicBody";
})(t.b2BodyType || (t.b2BodyType = {}));
var ci = (function() {
return function() {
this.type = t.b2BodyType.b2_staticBody;
this.position = new D(0, 0);
this.angle = 0;
this.linearVelocity = new D(0, 0);
this.angularVelocity = 0;
this.linearDamping = 0;
this.angularDamping = 0;
this.allowSleep = !0;
this.awake = !0;
this.fixedRotation = !1;
this.bullet = !1;
this.active = !0;
this.userData = null;
this.gravityScale = 1;
};
})(), li = (function() {
function i(i, n) {
this.m_type = t.b2BodyType.b2_staticBody;
this.m_islandFlag = !1;
this.m_awakeFlag = !1;
this.m_autoSleepFlag = !1;
this.m_bulletFlag = !1;
this.m_fixedRotationFlag = !1;
this.m_activeFlag = !1;
this.m_toiFlag = !1;
this.m_islandIndex = 0;
this.m_xf = new N();
this.m_xf0 = new N();
this.m_sweep = new G();
this.m_linearVelocity = new D();
this.m_angularVelocity = 0;
this.m_force = new D();
this.m_torque = 0;
this.m_prev = null;
this.m_next = null;
this.m_fixtureList = null;
this.m_fixtureCount = 0;
this.m_jointList = null;
this.m_contactList = null;
this.m_mass = 1;
this.m_invMass = 1;
this.m_I = 0;
this.m_invI = 0;
this.m_linearDamping = 0;
this.m_angularDamping = 0;
this.m_gravityScale = 1;
this.m_sleepTime = 0;
this.m_userData = null;
this.m_controllerList = null;
this.m_controllerCount = 0;
this.m_bulletFlag = e(i.bullet, !1);
this.m_fixedRotationFlag = e(i.fixedRotation, !1);
this.m_autoSleepFlag = e(i.allowSleep, !0);
this.m_awakeFlag = e(i.awake, !0);
this.m_activeFlag = e(i.active, !0);
this.m_world = n;
this.m_xf.p.Copy(e(i.position, D.ZERO));
this.m_xf.q.SetAngle(e(i.angle, 0));
this.m_xf0.Copy(this.m_xf);
this.m_sweep.localCenter.SetZero();
this.m_sweep.c0.Copy(this.m_xf.p);
this.m_sweep.c.Copy(this.m_xf.p);
this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();
this.m_sweep.alpha0 = 0;
this.m_linearVelocity.Copy(e(i.linearVelocity, D.ZERO));
this.m_angularVelocity = e(i.angularVelocity, 0);
this.m_linearDamping = e(i.linearDamping, 0);
this.m_angularDamping = e(i.angularDamping, 0);
this.m_gravityScale = e(i.gravityScale, 1);
this.m_force.SetZero();
this.m_torque = 0;
this.m_sleepTime = 0;
this.m_type = e(i.type, t.b2BodyType.b2_staticBody);
if (i.type === t.b2BodyType.b2_dynamicBody) {
this.m_mass = 1;
this.m_invMass = 1;
} else {
this.m_mass = 0;
this.m_invMass = 0;
}
this.m_I = 0;
this.m_invI = 0;
this.m_userData = i.userData;
this.m_fixtureList = null;
this.m_fixtureCount = 0;
this.m_controllerList = null;
this.m_controllerCount = 0;
}
i.prototype.CreateFixture = function(t, e) {
void 0 === e && (e = 0);
return t instanceof Ke ? this.CreateFixtureShapeDensity(t, e) : this.CreateFixtureDef(t);
};
i.prototype.CreateFixtureDef = function(t) {
if (this.m_world.IsLocked()) throw new Error();
var e = new ai(t, this);
e.Create(t);
this.m_activeFlag && e.CreateProxies(this.m_xf);
e.m_next = this.m_fixtureList;
this.m_fixtureList = e;
++this.m_fixtureCount;
e.m_density > 0 && this.ResetMassData();
this.m_world.m_newFixture = !0;
return e;
};
i.prototype.CreateFixtureShapeDensity = function(t, e) {
void 0 === e && (e = 0);
var n = i.CreateFixtureShapeDensity_s_def;
n.shape = t;
n.density = e;
return this.CreateFixtureDef(n);
};
i.prototype.DestroyFixture = function(t) {
if (this.m_world.IsLocked()) throw new Error();
for (var e = this.m_fixtureList, i = null; null !== e; ) {
if (e === t) {
i ? i.m_next = t.m_next : this.m_fixtureList = t.m_next;
break;
}
i = e;
e = e.m_next;
}
for (var n = this.m_contactList; n; ) {
var r = n.contact;
n = n.next;
var s = r.GetFixtureA(), o = r.GetFixtureB();
t !== s && t !== o || this.m_world.m_contactManager.Destroy(r);
}
this.m_activeFlag && t.DestroyProxies();
t.m_next = null;
t.Destroy();
--this.m_fixtureCount;
this.ResetMassData();
};
i.prototype.SetTransformVec = function(t, e) {
this.SetTransformXY(t.x, t.y, e);
};
i.prototype.SetTransformXY = function(t, e, i) {
if (this.m_world.IsLocked()) throw new Error();
this.m_xf.q.SetAngle(i);
this.m_xf.p.Set(t, e);
this.m_xf0.Copy(this.m_xf);
N.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.a = i;
this.m_sweep.c0.Copy(this.m_sweep.c);
this.m_sweep.a0 = i;
for (var n = this.m_fixtureList; n; n = n.m_next) n.Synchronize(this.m_xf, this.m_xf);
this.m_world.m_contactManager.FindNewContacts();
};
i.prototype.SetTransform = function(t) {
this.SetTransformVec(t.p, t.GetAngle());
};
i.prototype.GetTransform = function() {
return this.m_xf;
};
i.prototype.GetPosition = function() {
return this.m_xf.p;
};
i.prototype.SetPosition = function(t) {
this.SetTransformVec(t, this.GetAngle());
};
i.prototype.SetPositionXY = function(t, e) {
this.SetTransformXY(t, e, this.GetAngle());
};
i.prototype.GetAngle = function() {
return this.m_sweep.a;
};
i.prototype.SetAngle = function(t) {
this.SetTransformVec(this.GetPosition(), t);
};
i.prototype.GetWorldCenter = function() {
return this.m_sweep.c;
};
i.prototype.GetLocalCenter = function() {
return this.m_sweep.localCenter;
};
i.prototype.SetLinearVelocity = function(e) {
if (this.m_type !== t.b2BodyType.b2_staticBody) {
D.DotVV(e, e) > 0 && this.SetAwake(!0);
this.m_linearVelocity.Copy(e);
}
};
i.prototype.GetLinearVelocity = function() {
return this.m_linearVelocity;
};
i.prototype.SetAngularVelocity = function(e) {
if (this.m_type !== t.b2BodyType.b2_staticBody) {
e * e > 0 && this.SetAwake(!0);
this.m_angularVelocity = e;
}
};
i.prototype.GetAngularVelocity = function() {
return this.m_angularVelocity;
};
i.prototype.GetDefinition = function(t) {
t.type = this.GetType();
t.allowSleep = this.m_autoSleepFlag;
t.angle = this.GetAngle();
t.angularDamping = this.m_angularDamping;
t.gravityScale = this.m_gravityScale;
t.angularVelocity = this.m_angularVelocity;
t.fixedRotation = this.m_fixedRotationFlag;
t.bullet = this.m_bulletFlag;
t.awake = this.m_awakeFlag;
t.linearDamping = this.m_linearDamping;
t.linearVelocity.Copy(this.GetLinearVelocity());
t.position.Copy(this.GetPosition());
t.userData = this.GetUserData();
return t;
};
i.prototype.ApplyForce = function(e, i, n) {
void 0 === n && (n = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
n && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_force.x += e.x;
this.m_force.y += e.y;
this.m_torque += (i.x - this.m_sweep.c.x) * e.y - (i.y - this.m_sweep.c.y) * e.x;
}
}
};
i.prototype.ApplyForceToCenter = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_force.x += e.x;
this.m_force.y += e.y;
}
}
};
i.prototype.ApplyTorque = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
this.m_awakeFlag && (this.m_torque += e);
}
};
i.prototype.ApplyLinearImpulse = function(e, i, n) {
void 0 === n && (n = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
n && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_linearVelocity.x += this.m_invMass * e.x;
this.m_linearVelocity.y += this.m_invMass * e.y;
this.m_angularVelocity += this.m_invI * ((i.x - this.m_sweep.c.x) * e.y - (i.y - this.m_sweep.c.y) * e.x);
}
}
};
i.prototype.ApplyLinearImpulseToCenter = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_linearVelocity.x += this.m_invMass * e.x;
this.m_linearVelocity.y += this.m_invMass * e.y;
}
}
};
i.prototype.ApplyAngularImpulse = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
this.m_awakeFlag && (this.m_angularVelocity += this.m_invI * e);
}
};
i.prototype.GetMass = function() {
return this.m_mass;
};
i.prototype.GetInertia = function() {
return this.m_I + this.m_mass * D.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);
};
i.prototype.GetMassData = function(t) {
t.mass = this.m_mass;
t.I = this.m_I + this.m_mass * D.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);
t.center.Copy(this.m_sweep.localCenter);
return t;
};
i.prototype.SetMassData = function(e) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
this.m_invMass = 0;
this.m_I = 0;
this.m_invI = 0;
this.m_mass = e.mass;
this.m_mass <= 0 && (this.m_mass = 1);
this.m_invMass = 1 / this.m_mass;
if (e.I > 0 && !this.m_fixedRotationFlag) {
this.m_I = e.I - this.m_mass * D.DotVV(e.center, e.center);
this.m_invI = 1 / this.m_I;
}
var n = i.SetMassData_s_oldCenter.Copy(this.m_sweep.c);
this.m_sweep.localCenter.Copy(e.center);
N.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.c0.Copy(this.m_sweep.c);
D.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, D.SubVV(this.m_sweep.c, n, D.s_t0), this.m_linearVelocity);
}
};
i.prototype.ResetMassData = function() {
this.m_mass = 0;
this.m_invMass = 0;
this.m_I = 0;
this.m_invI = 0;
this.m_sweep.localCenter.SetZero();
if (this.m_type !== t.b2BodyType.b2_staticBody && this.m_type !== t.b2BodyType.b2_kinematicBody) {
for (var e = i.ResetMassData_s_localCenter.SetZero(), n = this.m_fixtureList; n; n = n.m_next) if (0 !== n.m_density) {
var r = n.GetMassData(i.ResetMassData_s_massData);
this.m_mass += r.mass;
e.x += r.center.x * r.mass;
e.y += r.center.y * r.mass;
this.m_I += r.I;
}
if (this.m_mass > 0) {
this.m_invMass = 1 / this.m_mass;
e.x *= this.m_invMass;
e.y *= this.m_invMass;
} else {
this.m_mass = 1;
this.m_invMass = 1;
}
if (this.m_I > 0 && !this.m_fixedRotationFlag) {
this.m_I -= this.m_mass * D.DotVV(e, e);
this.m_invI = 1 / this.m_I;
} else {
this.m_I = 0;
this.m_invI = 0;
}
var s = i.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);
this.m_sweep.localCenter.Copy(e);
N.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.c0.Copy(this.m_sweep.c);
D.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, D.SubVV(this.m_sweep.c, s, D.s_t0), this.m_linearVelocity);
} else {
this.m_sweep.c0.Copy(this.m_xf.p);
this.m_sweep.c.Copy(this.m_xf.p);
this.m_sweep.a0 = this.m_sweep.a;
}
};
i.prototype.GetWorldPoint = function(t, e) {
return N.MulXV(this.m_xf, t, e);
};
i.prototype.GetWorldVector = function(t, e) {
return F.MulRV(this.m_xf.q, t, e);
};
i.prototype.GetLocalPoint = function(t, e) {
return N.MulTXV(this.m_xf, t, e);
};
i.prototype.GetLocalVector = function(t, e) {
return F.MulTRV(this.m_xf.q, t, e);
};
i.prototype.GetLinearVelocityFromWorldPoint = function(t, e) {
return D.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, D.SubVV(t, this.m_sweep.c, D.s_t0), e);
};
i.prototype.GetLinearVelocityFromLocalPoint = function(t, e) {
return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(t, e), e);
};
i.prototype.GetLinearDamping = function() {
return this.m_linearDamping;
};
i.prototype.SetLinearDamping = function(t) {
this.m_linearDamping = t;
};
i.prototype.GetAngularDamping = function() {
return this.m_angularDamping;
};
i.prototype.SetAngularDamping = function(t) {
this.m_angularDamping = t;
};
i.prototype.GetGravityScale = function() {
return this.m_gravityScale;
};
i.prototype.SetGravityScale = function(t) {
this.m_gravityScale = t;
};
i.prototype.SetType = function(e) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_type !== e) {
this.m_type = e;
this.ResetMassData();
if (this.m_type === t.b2BodyType.b2_staticBody) {
this.m_linearVelocity.SetZero();
this.m_angularVelocity = 0;
this.m_sweep.a0 = this.m_sweep.a;
this.m_sweep.c0.Copy(this.m_sweep.c);
this.SynchronizeFixtures();
}
this.SetAwake(!0);
this.m_force.SetZero();
this.m_torque = 0;
for (var i = this.m_contactList; i; ) {
var n = i;
i = i.next;
this.m_world.m_contactManager.Destroy(n.contact);
}
this.m_contactList = null;
for (var r = this.m_fixtureList; r; r = r.m_next) r.TouchProxies();
}
};
i.prototype.GetType = function() {
return this.m_type;
};
i.prototype.SetBullet = function(t) {
this.m_bulletFlag = t;
};
i.prototype.IsBullet = function() {
return this.m_bulletFlag;
};
i.prototype.SetSleepingAllowed = function(t) {
this.m_autoSleepFlag = t;
t || this.SetAwake(!0);
};
i.prototype.IsSleepingAllowed = function() {
return this.m_autoSleepFlag;
};
i.prototype.SetAwake = function(t) {
if (t) {
this.m_awakeFlag = !0;
this.m_sleepTime = 0;
} else {
this.m_awakeFlag = !1;
this.m_sleepTime = 0;
this.m_linearVelocity.SetZero();
this.m_angularVelocity = 0;
this.m_force.SetZero();
this.m_torque = 0;
}
};
i.prototype.IsAwake = function() {
return this.m_awakeFlag;
};
i.prototype.SetActive = function(t) {
if (this.m_world.IsLocked()) throw new Error();
if (t !== this.IsActive()) {
this.m_activeFlag = t;
if (t) for (var e = this.m_fixtureList; e; e = e.m_next) e.CreateProxies(this.m_xf); else {
for (e = this.m_fixtureList; e; e = e.m_next) e.DestroyProxies();
for (var i = this.m_contactList; i; ) {
var n = i;
i = i.next;
this.m_world.m_contactManager.Destroy(n.contact);
}
this.m_contactList = null;
}
}
};
i.prototype.IsActive = function() {
return this.m_activeFlag;
};
i.prototype.SetFixedRotation = function(t) {
if (this.m_fixedRotationFlag !== t) {
this.m_fixedRotationFlag = t;
this.m_angularVelocity = 0;
this.ResetMassData();
}
};
i.prototype.IsFixedRotation = function() {
return this.m_fixedRotationFlag;
};
i.prototype.GetFixtureList = function() {
return this.m_fixtureList;
};
i.prototype.GetJointList = function() {
return this.m_jointList;
};
i.prototype.GetContactList = function() {
return this.m_contactList;
};
i.prototype.GetNext = function() {
return this.m_next;
};
i.prototype.GetUserData = function() {
return this.m_userData;
};
i.prototype.SetUserData = function(t) {
this.m_userData = t;
};
i.prototype.GetWorld = function() {
return this.m_world;
};
i.prototype.Dump = function(e) {
var i = this.m_islandIndex;
e("{\n");
e("  const bd: b2BodyDef = new b2BodyDef();\n");
var n = "";
switch (this.m_type) {
case t.b2BodyType.b2_staticBody:
n = "b2BodyType.b2_staticBody";
break;

case t.b2BodyType.b2_kinematicBody:
n = "b2BodyType.b2_kinematicBody";
break;

case t.b2BodyType.b2_dynamicBody:
n = "b2BodyType.b2_dynamicBody";
}
e("  bd.type = %s;\n", n);
e("  bd.position.Set(%.15f, %.15f);\n", this.m_xf.p.x, this.m_xf.p.y);
e("  bd.angle = %.15f;\n", this.m_sweep.a);
e("  bd.linearVelocity.Set(%.15f, %.15f);\n", this.m_linearVelocity.x, this.m_linearVelocity.y);
e("  bd.angularVelocity = %.15f;\n", this.m_angularVelocity);
e("  bd.linearDamping = %.15f;\n", this.m_linearDamping);
e("  bd.angularDamping = %.15f;\n", this.m_angularDamping);
e("  bd.allowSleep = %s;\n", this.m_autoSleepFlag ? "true" : "false");
e("  bd.awake = %s;\n", this.m_awakeFlag ? "true" : "false");
e("  bd.fixedRotation = %s;\n", this.m_fixedRotationFlag ? "true" : "false");
e("  bd.bullet = %s;\n", this.m_bulletFlag ? "true" : "false");
e("  bd.active = %s;\n", this.m_activeFlag ? "true" : "false");
e("  bd.gravityScale = %.15f;\n", this.m_gravityScale);
e("\n");
e("  bodies[%d] = this.m_world.CreateBody(bd);\n", this.m_islandIndex);
e("\n");
for (var r = this.m_fixtureList; r; r = r.m_next) {
e("  {\n");
r.Dump(e, i);
e("  }\n");
}
e("}\n");
};
i.prototype.SynchronizeFixtures = function() {
var t = i.SynchronizeFixtures_s_xf1;
t.q.SetAngle(this.m_sweep.a0);
F.MulRV(t.q, this.m_sweep.localCenter, t.p);
D.SubVV(this.m_sweep.c0, t.p, t.p);
for (var e = this.m_fixtureList; e; e = e.m_next) e.Synchronize(t, this.m_xf);
};
i.prototype.SynchronizeTransform = function() {
this.m_xf.q.SetAngle(this.m_sweep.a);
F.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);
D.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);
};
i.prototype.ShouldCollide = function(e) {
return (this.m_type !== t.b2BodyType.b2_staticBody || e.m_type !== t.b2BodyType.b2_staticBody) && this.ShouldCollideConnected(e);
};
i.prototype.ShouldCollideConnected = function(t) {
for (var e = this.m_jointList; e; e = e.next) if (e.other === t && !e.joint.m_collideConnected) return !1;
return !0;
};
i.prototype.Advance = function(t) {
this.m_sweep.Advance(t);
this.m_sweep.c.Copy(this.m_sweep.c0);
this.m_sweep.a = this.m_sweep.a0;
this.m_xf.q.SetAngle(this.m_sweep.a);
F.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);
D.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);
};
i.prototype.GetControllerList = function() {
return this.m_controllerList;
};
i.prototype.GetControllerCount = function() {
return this.m_controllerCount;
};
i.CreateFixtureShapeDensity_s_def = new si();
i.SetMassData_s_oldCenter = new D();
i.ResetMassData_s_localCenter = new D();
i.ResetMassData_s_oldCenter = new D();
i.ResetMassData_s_massData = new Ze();
i.SynchronizeFixtures_s_xf1 = new N();
return i;
})();
(function(t) {
t[t.e_unknownJoint = 0] = "e_unknownJoint";
t[t.e_revoluteJoint = 1] = "e_revoluteJoint";
t[t.e_prismaticJoint = 2] = "e_prismaticJoint";
t[t.e_distanceJoint = 3] = "e_distanceJoint";
t[t.e_pulleyJoint = 4] = "e_pulleyJoint";
t[t.e_mouseJoint = 5] = "e_mouseJoint";
t[t.e_gearJoint = 6] = "e_gearJoint";
t[t.e_wheelJoint = 7] = "e_wheelJoint";
t[t.e_weldJoint = 8] = "e_weldJoint";
t[t.e_frictionJoint = 9] = "e_frictionJoint";
t[t.e_ropeJoint = 10] = "e_ropeJoint";
t[t.e_motorJoint = 11] = "e_motorJoint";
t[t.e_areaJoint = 12] = "e_areaJoint";
})(t.b2JointType || (t.b2JointType = {}));
(function(t) {
t[t.e_inactiveLimit = 0] = "e_inactiveLimit";
t[t.e_atLowerLimit = 1] = "e_atLowerLimit";
t[t.e_atUpperLimit = 2] = "e_atUpperLimit";
t[t.e_equalLimits = 3] = "e_equalLimits";
})(t.b2LimitState || (t.b2LimitState = {}));
var ui = (function() {
function t() {
this.linear = new D();
this.angularA = 0;
this.angularB = 0;
}
t.prototype.SetZero = function() {
this.linear.SetZero();
this.angularA = 0;
this.angularB = 0;
return this;
};
t.prototype.Set = function(t, e, i) {
this.linear.Copy(t);
this.angularA = e;
this.angularB = i;
return this;
};
return t;
})(), hi = (function() {
return function(t, e) {
this.prev = null;
this.next = null;
this.joint = t;
this.other = e;
};
})(), _i = (function() {
return function(e) {
this.type = t.b2JointType.e_unknownJoint;
this.userData = null;
this.collideConnected = !1;
this.type = e;
};
})(), fi = (function() {
function i(i) {
this.m_type = t.b2JointType.e_unknownJoint;
this.m_prev = null;
this.m_next = null;
this.m_index = 0;
this.m_islandFlag = !1;
this.m_collideConnected = !1;
this.m_userData = null;
this.m_type = i.type;
this.m_edgeA = new hi(this, i.bodyB);
this.m_edgeB = new hi(this, i.bodyA);
this.m_bodyA = i.bodyA;
this.m_bodyB = i.bodyB;
this.m_collideConnected = e(i.collideConnected, !1);
this.m_userData = i.userData;
}
i.prototype.GetType = function() {
return this.m_type;
};
i.prototype.GetBodyA = function() {
return this.m_bodyA;
};
i.prototype.GetBodyB = function() {
return this.m_bodyB;
};
i.prototype.GetNext = function() {
return this.m_next;
};
i.prototype.GetUserData = function() {
return this.m_userData;
};
i.prototype.SetUserData = function(t) {
this.m_userData = t;
};
i.prototype.IsActive = function() {
return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();
};
i.prototype.GetCollideConnected = function() {
return this.m_collideConnected;
};
i.prototype.Dump = function(t) {
t("// Dump is not supported for this joint type.\n");
};
i.prototype.ShiftOrigin = function(t) {};
return i;
})(), di = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_distanceJoint) || this;
i.localAnchorA = new D();
i.localAnchorB = new D();
i.length = 1;
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(n, this.localAnchorB);
this.length = D.DistanceVV(i, n);
this.frequencyHz = 0;
this.dampingRatio = 0;
};
return i;
})(_i), pi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_bias = 0;
n.m_localAnchorA = new D();
n.m_localAnchorB = new D();
n.m_gamma = 0;
n.m_impulse = 0;
n.m_length = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_u = new D();
n.m_rA = new D();
n.m_rB = new D();
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = 0;
n.m_qA = new F();
n.m_qB = new F();
n.m_lalcA = new D();
n.m_lalcB = new D();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_localAnchorA.Copy(i.localAnchorA);
n.m_localAnchorB.Copy(i.localAnchorB);
n.m_length = i.length;
return n;
}
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse * this.m_u.x;
e.y = t * this.m_impulse * this.m_u.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.SetLength = function(t) {
this.m_length = t;
};
i.prototype.Length = function() {
return this.m_length;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2DistanceJointDef = new b2DistanceJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.length = %.15f;\n", this.m_length);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.velocities[this.m_indexA].v, o = t.velocities[this.m_indexA].w, a = t.positions[this.m_indexB].c, l = t.positions[this.m_indexB].a, u = t.velocities[this.m_indexB].v, h = t.velocities[this.m_indexB].w, _ = this.m_qA.SetAngle(n), f = this.m_qB.SetAngle(l);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
F.MulRV(_, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(f, this.m_lalcB, this.m_rB);
this.m_u.x = a.x + this.m_rB.x - e.x - this.m_rA.x;
this.m_u.y = a.y + this.m_rB.y - e.y - this.m_rA.y;
var d = this.m_u.Length();
d > c ? this.m_u.SelfMul(1 / d) : this.m_u.SetZero();
var p = D.CrossVV(this.m_rA, this.m_u), m = D.CrossVV(this.m_rB, this.m_u), y = this.m_invMassA + this.m_invIA * p * p + this.m_invMassB + this.m_invIB * m * m;
this.m_mass = 0 !== y ? 1 / y : 0;
if (this.m_frequencyHz > 0) {
var v = d - this.m_length, g = 2 * s * this.m_frequencyHz, C = 2 * this.m_mass * this.m_dampingRatio * g, x = this.m_mass * g * g, A = t.step.dt;
this.m_gamma = A * (C + A * x);
this.m_gamma = 0 !== this.m_gamma ? 1 / this.m_gamma : 0;
this.m_bias = v * A * x * this.m_gamma;
y += this.m_gamma;
this.m_mass = 0 !== y ? 1 / y : 0;
} else {
this.m_gamma = 0;
this.m_bias = 0;
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
var b = D.MulSV(this.m_impulse, this.m_u, i.InitVelocityConstraints_s_P);
r.SelfMulSub(this.m_invMassA, b);
o -= this.m_invIA * D.CrossVV(this.m_rA, b);
u.SelfMulAdd(this.m_invMassB, b);
h += this.m_invIB * D.CrossVV(this.m_rB, b);
} else this.m_impulse = 0;
t.velocities[this.m_indexA].w = o;
t.velocities[this.m_indexB].w = h;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = D.AddVCrossSV(e, n, this.m_rA, i.SolveVelocityConstraints_s_vpA), a = D.AddVCrossSV(r, s, this.m_rB, i.SolveVelocityConstraints_s_vpB), c = D.DotVV(this.m_u, D.SubVV(a, o, D.s_t0)), l = -this.m_mass * (c + this.m_bias + this.m_gamma * this.m_impulse);
this.m_impulse += l;
var u = D.MulSV(l, this.m_u, i.SolveVelocityConstraints_s_P);
e.SelfMulSub(this.m_invMassA, u);
n -= this.m_invIA * D.CrossVV(this.m_rA, u);
r.SelfMulAdd(this.m_invMassB, u);
s += this.m_invIB * D.CrossVV(this.m_rB, u);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
if (this.m_frequencyHz > 0) return !0;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s), l = F.MulRV(o, this.m_lalcA, this.m_rA), u = F.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_u;
h.x = r.x + u.x - e.x - l.x;
h.y = r.y + u.y - e.y - l.y;
var _ = this.m_u.Normalize() - this.m_length;
_ = x(_, -.2, .2);
var f = -this.m_mass * _, d = D.MulSV(f, h, i.SolvePositionConstraints_s_P);
e.SelfMulSub(this.m_invMassA, d);
n -= this.m_invIA * D.CrossVV(l, d);
r.SelfMulAdd(this.m_invMassB, d);
s += this.m_invIB * D.CrossVV(u, d);
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return v(_) < c;
};
i.InitVelocityConstraints_s_P = new D();
i.SolveVelocityConstraints_s_vpA = new D();
i.SolveVelocityConstraints_s_vpB = new D();
i.SolveVelocityConstraints_s_P = new D();
i.SolvePositionConstraints_s_P = new D();
return i;
})(fi), mi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_areaJoint) || this;
i.bodies = [];
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.AddBody = function(t) {
this.bodies.push(t);
1 === this.bodies.length ? this.bodyA = t : 2 === this.bodies.length && (this.bodyB = t);
};
return i;
})(_i), yi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_impulse = 0;
n.m_targetArea = 0;
n.m_bodies = i.bodies;
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_targetLengths = p(i.bodies.length);
n.m_normals = D.MakeArray(i.bodies.length);
n.m_joints = [];
n.m_deltas = D.MakeArray(i.bodies.length);
n.m_delta = new D();
var r = new di();
r.frequencyHz = n.m_frequencyHz;
r.dampingRatio = n.m_dampingRatio;
n.m_targetArea = 0;
for (var s = 0; s < n.m_bodies.length; ++s) {
var o = n.m_bodies[s], a = n.m_bodies[(s + 1) % n.m_bodies.length], c = o.GetWorldCenter(), l = a.GetWorldCenter();
n.m_targetLengths[s] = D.DistanceVV(c, l);
n.m_targetArea += D.CrossVV(c, l);
r.Initialize(o, a, c, l);
n.m_joints[s] = o.GetWorld().CreateJoint(r);
}
n.m_targetArea *= .5;
return n;
}
i.prototype.GetAnchorA = function(t) {
return t;
};
i.prototype.GetAnchorB = function(t) {
return t;
};
i.prototype.GetReactionForce = function(t, e) {
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
for (var e = 0; e < this.m_joints.length; ++e) this.m_joints[e].SetFrequency(t);
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
for (var e = 0; e < this.m_joints.length; ++e) this.m_joints[e].SetDampingRatio(t);
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
t("Area joint dumping is not supported.\n");
};
i.prototype.InitVelocityConstraints = function(t) {
for (var e = 0; e < this.m_bodies.length; ++e) {
var i = this.m_bodies[(e + this.m_bodies.length - 1) % this.m_bodies.length], n = this.m_bodies[(e + 1) % this.m_bodies.length], r = t.positions[i.m_islandIndex].c, s = t.positions[n.m_islandIndex].c, o = this.m_deltas[e];
D.SubVV(s, r, o);
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
for (e = 0; e < this.m_bodies.length; ++e) {
var a = this.m_bodies[e], c = t.velocities[a.m_islandIndex].v;
o = this.m_deltas[e];
c.x += a.m_invMass * o.y * .5 * this.m_impulse;
c.y += a.m_invMass * -o.x * .5 * this.m_impulse;
}
} else this.m_impulse = 0;
};
i.prototype.SolveVelocityConstraints = function(t) {
for (var e = 0, i = 0, n = 0; n < this.m_bodies.length; ++n) {
var r = this.m_bodies[n], s = t.velocities[r.m_islandIndex].v;
e += (a = this.m_deltas[n]).LengthSquared() / r.GetMass();
i += D.CrossVV(s, a);
}
var o = -2 * i / e;
this.m_impulse += o;
for (n = 0; n < this.m_bodies.length; ++n) {
r = this.m_bodies[n], s = t.velocities[r.m_islandIndex].v;
var a = this.m_deltas[n];
s.x += r.m_invMass * a.y * .5 * o;
s.y += r.m_invMass * -a.x * .5 * o;
}
};
i.prototype.SolvePositionConstraints = function(t) {
for (var e = 0, i = 0, r = 0; r < this.m_bodies.length; ++r) {
var s = this.m_bodies[r], o = this.m_bodies[(r + 1) % this.m_bodies.length], a = t.positions[s.m_islandIndex].c, l = t.positions[o.m_islandIndex].c, u = (f = D.SubVV(l, a, this.m_delta)).Length();
u < n && (u = 1);
this.m_normals[r].x = f.y / u;
this.m_normals[r].y = -f.x / u;
e += u;
i += D.CrossVV(a, l);
}
i *= .5;
var h = .5 * (this.m_targetArea - i) / e, _ = !0;
for (r = 0; r < this.m_bodies.length; ++r) {
s = this.m_bodies[r], a = t.positions[s.m_islandIndex].c;
var f, d = (r + 1) % this.m_bodies.length;
(f = D.AddVV(this.m_normals[r], this.m_normals[d], this.m_delta)).SelfMul(h);
var p = f.LengthSquared();
p > b(.2) && f.SelfMul(.2 / w(p));
p > b(c) && (_ = !1);
a.x += f.x;
a.y += f.y;
}
return _;
};
return i;
})(fi), vi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_frictionJoint) || this;
i.localAnchorA = new D();
i.localAnchorB = new D();
i.maxForce = 0;
i.maxTorque = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
};
return i;
})(_i), gi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_localAnchorA = new D();
n.m_localAnchorB = new D();
n.m_linearImpulse = new D();
n.m_angularImpulse = 0;
n.m_maxForce = 0;
n.m_maxTorque = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new D();
n.m_rB = new D();
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_linearMass = new L();
n.m_angularMass = 0;
n.m_qA = new F();
n.m_qB = new F();
n.m_lalcA = new D();
n.m_lalcB = new D();
n.m_K = new L();
n.m_localAnchorA.Copy(i.localAnchorA);
n.m_localAnchorB.Copy(i.localAnchorB);
n.m_linearImpulse.SetZero();
n.m_maxForce = e(i.maxForce, 0);
n.m_maxTorque = e(i.maxTorque, 0);
n.m_linearMass.SetZero();
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].a, i = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.positions[this.m_indexB].a, s = t.velocities[this.m_indexB].v, o = t.velocities[this.m_indexB].w, a = this.m_qA.SetAngle(e), c = this.m_qB.SetAngle(r);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = F.MulRV(a, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = F.MulRV(c, this.m_lalcB, this.m_rB), h = this.m_invMassA, _ = this.m_invMassB, f = this.m_invIA, d = this.m_invIB, p = this.m_K;
p.ex.x = h + _ + f * l.y * l.y + d * u.y * u.y;
p.ex.y = -f * l.x * l.y - d * u.x * u.y;
p.ey.x = p.ex.y;
p.ey.y = h + _ + f * l.x * l.x + d * u.x * u.x;
p.GetInverse(this.m_linearMass);
this.m_angularMass = f + d;
this.m_angularMass > 0 && (this.m_angularMass = 1 / this.m_angularMass);
if (t.step.warmStarting) {
this.m_linearImpulse.SelfMul(t.step.dtRatio);
this.m_angularImpulse *= t.step.dtRatio;
var m = this.m_linearImpulse;
i.SelfMulSub(h, m);
n -= f * (D.CrossVV(this.m_rA, m) + this.m_angularImpulse);
s.SelfMulAdd(_, m);
o += d * (D.CrossVV(this.m_rB, m) + this.m_angularImpulse);
} else {
this.m_linearImpulse.SetZero();
this.m_angularImpulse = 0;
}
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = o;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB, u = t.step.dt, h = s - n, _ = -this.m_angularMass * h, f = this.m_angularImpulse, d = u * this.m_maxTorque;
this.m_angularImpulse = x(this.m_angularImpulse + _, -d, d);
n -= c * (_ = this.m_angularImpulse - f);
s += l * _;
var p = D.SubVV(D.AddVCrossSV(r, s, this.m_rB, D.s_t0), D.AddVCrossSV(e, n, this.m_rA, D.s_t1), i.SolveVelocityConstraints_s_Cdot_v2), m = L.MulMV(this.m_linearMass, p, i.SolveVelocityConstraints_s_impulseV).SelfNeg(), y = i.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);
this.m_linearImpulse.SelfAdd(m);
d = u * this.m_maxForce;
if (this.m_linearImpulse.LengthSquared() > d * d) {
this.m_linearImpulse.Normalize();
this.m_linearImpulse.SelfMul(d);
}
D.SubVV(this.m_linearImpulse, y, m);
e.SelfMulSub(o, m);
n -= c * D.CrossVV(this.m_rA, m);
r.SelfMulAdd(a, m);
s += l * D.CrossVV(this.m_rB, m);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_linearImpulse.x;
e.y = t * this.m_linearImpulse.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_angularImpulse;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetMaxTorque = function(t) {
this.m_maxTorque = t;
};
i.prototype.GetMaxTorque = function() {
return this.m_maxTorque;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2FrictionJointDef = new b2FrictionJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.maxForce = %.15f;\n", this.m_maxForce);
t("  jd.maxTorque = %.15f;\n", this.m_maxTorque);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.SolveVelocityConstraints_s_Cdot_v2 = new D();
i.SolveVelocityConstraints_s_impulseV = new D();
i.SolveVelocityConstraints_s_oldImpulseV = new D();
return i;
})(fi), Ci = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_gearJoint) || this;
i.ratio = 1;
return i;
}
return i;
})(_i), xi = (function(i) {
$e(n, i);
function n(n) {
var r, s, o = i.call(this, n) || this;
o.m_typeA = t.b2JointType.e_unknownJoint;
o.m_typeB = t.b2JointType.e_unknownJoint;
o.m_localAnchorA = new D();
o.m_localAnchorB = new D();
o.m_localAnchorC = new D();
o.m_localAnchorD = new D();
o.m_localAxisC = new D();
o.m_localAxisD = new D();
o.m_referenceAngleA = 0;
o.m_referenceAngleB = 0;
o.m_constant = 0;
o.m_ratio = 0;
o.m_impulse = 0;
o.m_indexA = 0;
o.m_indexB = 0;
o.m_indexC = 0;
o.m_indexD = 0;
o.m_lcA = new D();
o.m_lcB = new D();
o.m_lcC = new D();
o.m_lcD = new D();
o.m_mA = 0;
o.m_mB = 0;
o.m_mC = 0;
o.m_mD = 0;
o.m_iA = 0;
o.m_iB = 0;
o.m_iC = 0;
o.m_iD = 0;
o.m_JvAC = new D();
o.m_JvBD = new D();
o.m_JwA = 0;
o.m_JwB = 0;
o.m_JwC = 0;
o.m_JwD = 0;
o.m_mass = 0;
o.m_qA = new F();
o.m_qB = new F();
o.m_qC = new F();
o.m_qD = new F();
o.m_lalcA = new D();
o.m_lalcB = new D();
o.m_lalcC = new D();
o.m_lalcD = new D();
o.m_joint1 = n.joint1;
o.m_joint2 = n.joint2;
o.m_typeA = o.m_joint1.GetType();
o.m_typeB = o.m_joint2.GetType();
o.m_bodyC = o.m_joint1.GetBodyA();
o.m_bodyA = o.m_joint1.GetBodyB();
var a = o.m_bodyA.m_xf, c = o.m_bodyA.m_sweep.a, l = o.m_bodyC.m_xf, u = o.m_bodyC.m_sweep.a;
if (o.m_typeA === t.b2JointType.e_revoluteJoint) {
var h = n.joint1;
o.m_localAnchorC.Copy(h.m_localAnchorA);
o.m_localAnchorA.Copy(h.m_localAnchorB);
o.m_referenceAngleA = h.m_referenceAngle;
o.m_localAxisC.SetZero();
r = c - u - o.m_referenceAngleA;
} else {
var _ = n.joint1;
o.m_localAnchorC.Copy(_.m_localAnchorA);
o.m_localAnchorA.Copy(_.m_localAnchorB);
o.m_referenceAngleA = _.m_referenceAngle;
o.m_localAxisC.Copy(_.m_localXAxisA);
var f = o.m_localAnchorC, d = F.MulTRV(l.q, D.AddVV(F.MulRV(a.q, o.m_localAnchorA, D.s_t0), D.SubVV(a.p, l.p, D.s_t1), D.s_t0), D.s_t0);
r = D.DotVV(D.SubVV(d, f, D.s_t0), o.m_localAxisC);
}
o.m_bodyD = o.m_joint2.GetBodyA();
o.m_bodyB = o.m_joint2.GetBodyB();
var p = o.m_bodyB.m_xf, m = o.m_bodyB.m_sweep.a, y = o.m_bodyD.m_xf, v = o.m_bodyD.m_sweep.a;
if (o.m_typeB === t.b2JointType.e_revoluteJoint) {
h = n.joint2;
o.m_localAnchorD.Copy(h.m_localAnchorA);
o.m_localAnchorB.Copy(h.m_localAnchorB);
o.m_referenceAngleB = h.m_referenceAngle;
o.m_localAxisD.SetZero();
s = m - v - o.m_referenceAngleB;
} else {
_ = n.joint2;
o.m_localAnchorD.Copy(_.m_localAnchorA);
o.m_localAnchorB.Copy(_.m_localAnchorB);
o.m_referenceAngleB = _.m_referenceAngle;
o.m_localAxisD.Copy(_.m_localXAxisA);
var g = o.m_localAnchorD, C = F.MulTRV(y.q, D.AddVV(F.MulRV(p.q, o.m_localAnchorB, D.s_t0), D.SubVV(p.p, y.p, D.s_t1), D.s_t0), D.s_t0);
s = D.DotVV(D.SubVV(C, g, D.s_t0), o.m_localAxisD);
}
o.m_ratio = e(n.ratio, 1);
o.m_constant = r + o.m_ratio * s;
o.m_impulse = 0;
return o;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_indexC = this.m_bodyC.m_islandIndex;
this.m_indexD = this.m_bodyD.m_islandIndex;
this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);
this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);
this.m_mA = this.m_bodyA.m_invMass;
this.m_mB = this.m_bodyB.m_invMass;
this.m_mC = this.m_bodyC.m_invMass;
this.m_mD = this.m_bodyD.m_invMass;
this.m_iA = this.m_bodyA.m_invI;
this.m_iB = this.m_bodyB.m_invI;
this.m_iC = this.m_bodyC.m_invI;
this.m_iD = this.m_bodyD.m_invI;
var i = e.positions[this.m_indexA].a, r = e.velocities[this.m_indexA].v, s = e.velocities[this.m_indexA].w, o = e.positions[this.m_indexB].a, a = e.velocities[this.m_indexB].v, c = e.velocities[this.m_indexB].w, l = e.positions[this.m_indexC].a, u = e.velocities[this.m_indexC].v, h = e.velocities[this.m_indexC].w, _ = e.positions[this.m_indexD].a, f = e.velocities[this.m_indexD].v, d = e.velocities[this.m_indexD].w, p = this.m_qA.SetAngle(i), m = this.m_qB.SetAngle(o), y = this.m_qC.SetAngle(l), v = this.m_qD.SetAngle(_);
this.m_mass = 0;
if (this.m_typeA === t.b2JointType.e_revoluteJoint) {
this.m_JvAC.SetZero();
this.m_JwA = 1;
this.m_JwC = 1;
this.m_mass += this.m_iA + this.m_iC;
} else {
var g = F.MulRV(y, this.m_localAxisC, n.InitVelocityConstraints_s_u);
D.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);
var C = F.MulRV(y, this.m_lalcC, n.InitVelocityConstraints_s_rC);
D.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);
var x = F.MulRV(p, this.m_lalcA, n.InitVelocityConstraints_s_rA);
this.m_JvAC.Copy(g);
this.m_JwC = D.CrossVV(C, g);
this.m_JwA = D.CrossVV(x, g);
this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;
}
if (this.m_typeB === t.b2JointType.e_revoluteJoint) {
this.m_JvBD.SetZero();
this.m_JwB = this.m_ratio;
this.m_JwD = this.m_ratio;
this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);
} else {
g = F.MulRV(v, this.m_localAxisD, n.InitVelocityConstraints_s_u);
D.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);
var A = F.MulRV(v, this.m_lalcD, n.InitVelocityConstraints_s_rD);
D.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);
var b = F.MulRV(m, this.m_lalcB, n.InitVelocityConstraints_s_rB);
D.MulSV(this.m_ratio, g, this.m_JvBD);
this.m_JwD = this.m_ratio * D.CrossVV(A, g);
this.m_JwB = this.m_ratio * D.CrossVV(b, g);
this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;
}
this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;
if (e.step.warmStarting) {
r.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);
s += this.m_iA * this.m_impulse * this.m_JwA;
a.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);
c += this.m_iB * this.m_impulse * this.m_JwB;
u.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);
h -= this.m_iC * this.m_impulse * this.m_JwC;
f.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);
d -= this.m_iD * this.m_impulse * this.m_JwD;
} else this.m_impulse = 0;
e.velocities[this.m_indexA].w = s;
e.velocities[this.m_indexB].w = c;
e.velocities[this.m_indexC].w = h;
e.velocities[this.m_indexD].w = d;
};
n.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, i = t.velocities[this.m_indexA].w, n = t.velocities[this.m_indexB].v, r = t.velocities[this.m_indexB].w, s = t.velocities[this.m_indexC].v, o = t.velocities[this.m_indexC].w, a = t.velocities[this.m_indexD].v, c = t.velocities[this.m_indexD].w, l = D.DotVV(this.m_JvAC, D.SubVV(e, s, D.s_t0)) + D.DotVV(this.m_JvBD, D.SubVV(n, a, D.s_t0));
l += this.m_JwA * i - this.m_JwC * o + (this.m_JwB * r - this.m_JwD * c);
var u = -this.m_mass * l;
this.m_impulse += u;
e.SelfMulAdd(this.m_mA * u, this.m_JvAC);
i += this.m_iA * u * this.m_JwA;
n.SelfMulAdd(this.m_mB * u, this.m_JvBD);
r += this.m_iB * u * this.m_JwB;
s.SelfMulSub(this.m_mC * u, this.m_JvAC);
o -= this.m_iC * u * this.m_JwC;
a.SelfMulSub(this.m_mD * u, this.m_JvBD);
c -= this.m_iD * u * this.m_JwD;
t.velocities[this.m_indexA].w = i;
t.velocities[this.m_indexB].w = r;
t.velocities[this.m_indexC].w = o;
t.velocities[this.m_indexD].w = c;
};
n.prototype.SolvePositionConstraints = function(e) {
var i, r, s, o, a, l, u = e.positions[this.m_indexA].c, h = e.positions[this.m_indexA].a, _ = e.positions[this.m_indexB].c, f = e.positions[this.m_indexB].a, d = e.positions[this.m_indexC].c, p = e.positions[this.m_indexC].a, m = e.positions[this.m_indexD].c, y = e.positions[this.m_indexD].a, v = this.m_qA.SetAngle(h), g = this.m_qB.SetAngle(f), C = this.m_qC.SetAngle(p), x = this.m_qD.SetAngle(y), A = this.m_JvAC, b = this.m_JvBD, S = 0;
if (this.m_typeA === t.b2JointType.e_revoluteJoint) {
A.SetZero();
s = 1;
a = 1;
S += this.m_iA + this.m_iC;
i = h - p - this.m_referenceAngleA;
} else {
var w = F.MulRV(C, this.m_localAxisC, n.SolvePositionConstraints_s_u), T = F.MulRV(C, this.m_lalcC, n.SolvePositionConstraints_s_rC), B = F.MulRV(v, this.m_lalcA, n.SolvePositionConstraints_s_rA);
A.Copy(w);
a = D.CrossVV(T, w);
s = D.CrossVV(B, w);
S += this.m_mC + this.m_mA + this.m_iC * a * a + this.m_iA * s * s;
var E = this.m_lalcC, M = F.MulTRV(C, D.AddVV(B, D.SubVV(u, d, D.s_t0), D.s_t0), D.s_t0);
i = D.DotVV(D.SubVV(M, E, D.s_t0), this.m_localAxisC);
}
if (this.m_typeB === t.b2JointType.e_revoluteJoint) {
b.SetZero();
o = this.m_ratio;
l = this.m_ratio;
S += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);
r = f - y - this.m_referenceAngleB;
} else {
w = F.MulRV(x, this.m_localAxisD, n.SolvePositionConstraints_s_u);
var I = F.MulRV(x, this.m_lalcD, n.SolvePositionConstraints_s_rD), R = F.MulRV(g, this.m_lalcB, n.SolvePositionConstraints_s_rB);
D.MulSV(this.m_ratio, w, b);
l = this.m_ratio * D.CrossVV(I, w);
o = this.m_ratio * D.CrossVV(R, w);
S += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * l * l + this.m_iB * o * o;
var P = this.m_lalcD, V = F.MulTRV(x, D.AddVV(R, D.SubVV(_, m, D.s_t0), D.s_t0), D.s_t0);
r = D.DotVV(D.SubVV(V, P, D.s_t0), this.m_localAxisD);
}
var L = i + this.m_ratio * r - this.m_constant, O = 0;
S > 0 && (O = -L / S);
u.SelfMulAdd(this.m_mA * O, A);
h += this.m_iA * O * s;
_.SelfMulAdd(this.m_mB * O, b);
f += this.m_iB * O * o;
d.SelfMulSub(this.m_mC * O, A);
p -= this.m_iC * O * a;
m.SelfMulSub(this.m_mD * O, b);
y -= this.m_iD * O * l;
e.positions[this.m_indexA].a = h;
e.positions[this.m_indexB].a = f;
e.positions[this.m_indexC].a = p;
e.positions[this.m_indexD].a = y;
return 0 < c;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
return D.MulSV(t * this.m_impulse, this.m_JvAC, e);
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse * this.m_JwA;
};
n.prototype.GetJoint1 = function() {
return this.m_joint1;
};
n.prototype.GetJoint2 = function() {
return this.m_joint2;
};
n.prototype.GetRatio = function() {
return this.m_ratio;
};
n.prototype.SetRatio = function(t) {
this.m_ratio = t;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex, n = this.m_joint1.m_index, r = this.m_joint2.m_index;
t("  const jd: b2GearJointDef = new b2GearJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.joint1 = joints[%d];\n", n);
t("  jd.joint2 = joints[%d];\n", r);
t("  jd.ratio = %.15f;\n", this.m_ratio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_u = new D();
n.InitVelocityConstraints_s_rA = new D();
n.InitVelocityConstraints_s_rB = new D();
n.InitVelocityConstraints_s_rC = new D();
n.InitVelocityConstraints_s_rD = new D();
n.SolvePositionConstraints_s_u = new D();
n.SolvePositionConstraints_s_rA = new D();
n.SolvePositionConstraints_s_rB = new D();
n.SolvePositionConstraints_s_rC = new D();
n.SolvePositionConstraints_s_rD = new D();
return n;
})(fi), Ai = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_motorJoint) || this;
i.linearOffset = new D(0, 0);
i.angularOffset = 0;
i.maxForce = 1;
i.maxTorque = 1;
i.correctionFactor = .3;
return i;
}
i.prototype.Initialize = function(t, e) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);
var i = this.bodyA.GetAngle(), n = this.bodyB.GetAngle();
this.angularOffset = n - i;
};
return i;
})(_i), bi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_linearOffset = new D();
n.m_angularOffset = 0;
n.m_linearImpulse = new D();
n.m_angularImpulse = 0;
n.m_maxForce = 0;
n.m_maxTorque = 0;
n.m_correctionFactor = .3;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new D();
n.m_rB = new D();
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_linearError = new D();
n.m_angularError = 0;
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_linearMass = new L();
n.m_angularMass = 0;
n.m_qA = new F();
n.m_qB = new F();
n.m_K = new L();
n.m_linearOffset.Copy(e(i.linearOffset, D.ZERO));
n.m_linearImpulse.SetZero();
n.m_maxForce = e(i.maxForce, 0);
n.m_maxTorque = e(i.maxTorque, 0);
n.m_correctionFactor = e(i.correctionFactor, .3);
return n;
}
i.prototype.GetAnchorA = function(t) {
var e = this.m_bodyA.GetPosition();
t.x = e.x;
t.y = e.y;
return t;
};
i.prototype.GetAnchorB = function(t) {
var e = this.m_bodyB.GetPosition();
t.x = e.x;
t.y = e.y;
return t;
};
i.prototype.GetReactionForce = function(t, e) {
return D.MulSV(t, this.m_linearImpulse, e);
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_angularImpulse;
};
i.prototype.SetLinearOffset = function(t) {
if (!D.IsEqualToV(t, this.m_linearOffset)) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_linearOffset.Copy(t);
}
};
i.prototype.GetLinearOffset = function() {
return this.m_linearOffset;
};
i.prototype.SetAngularOffset = function(t) {
if (t !== this.m_angularOffset) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_angularOffset = t;
}
};
i.prototype.GetAngularOffset = function() {
return this.m_angularOffset;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetMaxTorque = function(t) {
this.m_maxTorque = t;
};
i.prototype.GetMaxTorque = function() {
return this.m_maxTorque;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, n = t.velocities[this.m_indexA].v, r = t.velocities[this.m_indexA].w, s = t.positions[this.m_indexB].c, o = t.positions[this.m_indexB].a, a = t.velocities[this.m_indexB].v, c = t.velocities[this.m_indexB].w, l = this.m_qA.SetAngle(i), u = this.m_qB.SetAngle(o), h = F.MulRV(l, D.SubVV(this.m_linearOffset, this.m_localCenterA, D.s_t0), this.m_rA), _ = F.MulRV(u, D.NegV(this.m_localCenterB, D.s_t0), this.m_rB), f = this.m_invMassA, d = this.m_invMassB, p = this.m_invIA, m = this.m_invIB, y = this.m_K;
y.ex.x = f + d + p * h.y * h.y + m * _.y * _.y;
y.ex.y = -p * h.x * h.y - m * _.x * _.y;
y.ey.x = y.ex.y;
y.ey.y = f + d + p * h.x * h.x + m * _.x * _.x;
y.GetInverse(this.m_linearMass);
this.m_angularMass = p + m;
this.m_angularMass > 0 && (this.m_angularMass = 1 / this.m_angularMass);
D.SubVV(D.AddVV(s, _, D.s_t0), D.AddVV(e, h, D.s_t1), this.m_linearError);
this.m_angularError = o - i - this.m_angularOffset;
if (t.step.warmStarting) {
this.m_linearImpulse.SelfMul(t.step.dtRatio);
this.m_angularImpulse *= t.step.dtRatio;
var v = this.m_linearImpulse;
n.SelfMulSub(f, v);
r -= p * (D.CrossVV(h, v) + this.m_angularImpulse);
a.SelfMulAdd(d, v);
c += m * (D.CrossVV(_, v) + this.m_angularImpulse);
} else {
this.m_linearImpulse.SetZero();
this.m_angularImpulse = 0;
}
t.velocities[this.m_indexA].w = r;
t.velocities[this.m_indexB].w = c;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB, u = t.step.dt, h = t.step.inv_dt, _ = s - n + h * this.m_correctionFactor * this.m_angularError, f = -this.m_angularMass * _, d = this.m_angularImpulse, p = u * this.m_maxTorque;
this.m_angularImpulse = x(this.m_angularImpulse + f, -p, p);
n -= c * (f = this.m_angularImpulse - d);
s += l * f;
var m = this.m_rA, y = this.m_rB, v = D.AddVV(D.SubVV(D.AddVV(r, D.CrossSV(s, y, D.s_t0), D.s_t0), D.AddVV(e, D.CrossSV(n, m, D.s_t1), D.s_t1), D.s_t2), D.MulSV(h * this.m_correctionFactor, this.m_linearError, D.s_t3), i.SolveVelocityConstraints_s_Cdot_v2), g = L.MulMV(this.m_linearMass, v, i.SolveVelocityConstraints_s_impulse_v2).SelfNeg(), C = i.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);
this.m_linearImpulse.SelfAdd(g);
p = u * this.m_maxForce;
if (this.m_linearImpulse.LengthSquared() > p * p) {
this.m_linearImpulse.Normalize();
this.m_linearImpulse.SelfMul(p);
}
D.SubVV(this.m_linearImpulse, C, g);
e.SelfMulSub(o, g);
n -= c * D.CrossVV(m, g);
r.SelfMulAdd(a, g);
s += l * D.CrossVV(y, g);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2MotorJointDef = new b2MotorJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.linearOffset.Set(%.15f, %.15f);\n", this.m_linearOffset.x, this.m_linearOffset.y);
t("  jd.angularOffset = %.15f;\n", this.m_angularOffset);
t("  jd.maxForce = %.15f;\n", this.m_maxForce);
t("  jd.maxTorque = %.15f;\n", this.m_maxTorque);
t("  jd.correctionFactor = %.15f;\n", this.m_correctionFactor);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.SolveVelocityConstraints_s_Cdot_v2 = new D();
i.SolveVelocityConstraints_s_impulse_v2 = new D();
i.SolveVelocityConstraints_s_oldImpulse_v2 = new D();
return i;
})(fi), Si = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_mouseJoint) || this;
i.target = new D();
i.maxForce = 0;
i.frequencyHz = 5;
i.dampingRatio = .7;
return i;
}
return i;
})(_i), wi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_localAnchorB = new D();
n.m_targetA = new D();
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_beta = 0;
n.m_impulse = new D();
n.m_maxForce = 0;
n.m_gamma = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rB = new D();
n.m_localCenterB = new D();
n.m_invMassB = 0;
n.m_invIB = 0;
n.m_mass = new L();
n.m_C = new D();
n.m_qB = new F();
n.m_lalcB = new D();
n.m_K = new L();
n.m_targetA.Copy(e(i.target, D.ZERO));
N.MulTXV(n.m_bodyB.GetTransform(), n.m_targetA, n.m_localAnchorB);
n.m_maxForce = e(i.maxForce, 0);
n.m_impulse.SetZero();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_beta = 0;
n.m_gamma = 0;
return n;
}
i.prototype.SetTarget = function(t) {
this.m_bodyB.IsAwake() || this.m_bodyB.SetAwake(!0);
this.m_targetA.Copy(t);
};
i.prototype.GetTarget = function() {
return this.m_targetA;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexB].c, i = t.positions[this.m_indexB].a, n = t.velocities[this.m_indexB].v, r = t.velocities[this.m_indexB].w, o = this.m_qB.SetAngle(i), a = this.m_bodyB.GetMass(), c = 2 * s * this.m_frequencyHz, l = 2 * a * this.m_dampingRatio * c, u = a * (c * c), h = t.step.dt;
this.m_gamma = h * (l + h * u);
0 !== this.m_gamma && (this.m_gamma = 1 / this.m_gamma);
this.m_beta = h * u * this.m_gamma;
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(o, this.m_lalcB, this.m_rB);
var _ = this.m_K;
_.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;
_.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;
_.ey.x = _.ex.y;
_.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;
_.GetInverse(this.m_mass);
this.m_C.x = e.x + this.m_rB.x - this.m_targetA.x;
this.m_C.y = e.y + this.m_rB.y - this.m_targetA.y;
this.m_C.SelfMul(this.m_beta);
r *= .98;
if (t.step.warmStarting) {
this.m_impulse.SelfMul(t.step.dtRatio);
n.x += this.m_invMassB * this.m_impulse.x;
n.y += this.m_invMassB * this.m_impulse.y;
r += this.m_invIB * D.CrossVV(this.m_rB, this.m_impulse);
} else this.m_impulse.SetZero();
t.velocities[this.m_indexB].w = r;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexB].v, n = t.velocities[this.m_indexB].w, r = D.AddVCrossSV(e, n, this.m_rB, i.SolveVelocityConstraints_s_Cdot), s = L.MulMV(this.m_mass, D.AddVV(r, D.AddVV(this.m_C, D.MulSV(this.m_gamma, this.m_impulse, D.s_t0), D.s_t0), D.s_t0).SelfNeg(), i.SolveVelocityConstraints_s_impulse), o = i.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);
this.m_impulse.SelfAdd(s);
var a = t.step.dt * this.m_maxForce;
this.m_impulse.LengthSquared() > a * a && this.m_impulse.SelfMul(a / this.m_impulse.Length());
D.SubVV(this.m_impulse, o, s);
e.SelfMulAdd(this.m_invMassB, s);
n += this.m_invIB * D.CrossVV(this.m_rB, s);
t.velocities[this.m_indexB].w = n;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.GetAnchorA = function(t) {
t.x = this.m_targetA.x;
t.y = this.m_targetA.y;
return t;
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
return D.MulSV(t, this.m_impulse, e);
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.Dump = function(t) {
t("Mouse joint dumping is not supported.\n");
};
i.prototype.ShiftOrigin = function(t) {
this.m_targetA.SelfSub(t);
};
i.SolveVelocityConstraints_s_Cdot = new D();
i.SolveVelocityConstraints_s_impulse = new D();
i.SolveVelocityConstraints_s_oldImpulse = new D();
return i;
})(fi), Ti = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_prismaticJoint) || this;
i.localAnchorA = new D();
i.localAnchorB = new D();
i.localAxisA = new D(1, 0);
i.referenceAngle = 0;
i.enableLimit = !1;
i.lowerTranslation = 0;
i.upperTranslation = 0;
i.enableMotor = !1;
i.maxMotorForce = 0;
i.motorSpeed = 0;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.bodyA.GetLocalVector(n, this.localAxisA);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(_i), Bi = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new D();
r.m_localAnchorB = new D();
r.m_localXAxisA = new D();
r.m_localYAxisA = new D();
r.m_referenceAngle = 0;
r.m_impulse = new V(0, 0, 0);
r.m_motorImpulse = 0;
r.m_lowerTranslation = 0;
r.m_upperTranslation = 0;
r.m_maxMotorForce = 0;
r.m_motorSpeed = 0;
r.m_enableLimit = !1;
r.m_enableMotor = !1;
r.m_limitState = t.b2LimitState.e_inactiveLimit;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_localCenterA = new D();
r.m_localCenterB = new D();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_axis = new D(0, 0);
r.m_perp = new D(0, 0);
r.m_s1 = 0;
r.m_s2 = 0;
r.m_a1 = 0;
r.m_a2 = 0;
r.m_K = new O();
r.m_K3 = new O();
r.m_K2 = new L();
r.m_motorMass = 0;
r.m_qA = new F();
r.m_qB = new F();
r.m_lalcA = new D();
r.m_lalcB = new D();
r.m_rA = new D();
r.m_rB = new D();
r.m_localAnchorA.Copy(e(n.localAnchorA, D.ZERO));
r.m_localAnchorB.Copy(e(n.localAnchorB, D.ZERO));
r.m_localXAxisA.Copy(e(n.localAxisA, new D(1, 0))).SelfNormalize();
D.CrossOneV(r.m_localXAxisA, r.m_localYAxisA);
r.m_referenceAngle = e(n.referenceAngle, 0);
r.m_lowerTranslation = e(n.lowerTranslation, 0);
r.m_upperTranslation = e(n.upperTranslation, 0);
r.m_maxMotorForce = e(n.maxMotorForce, 0);
r.m_motorSpeed = e(n.motorSpeed, 0);
r.m_enableLimit = e(n.enableLimit, !1);
r.m_enableMotor = e(n.enableMotor, !1);
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].c, r = e.positions[this.m_indexA].a, s = e.velocities[this.m_indexA].v, o = e.velocities[this.m_indexA].w, a = e.positions[this.m_indexB].c, l = e.positions[this.m_indexB].a, u = e.velocities[this.m_indexB].v, h = e.velocities[this.m_indexB].w, _ = this.m_qA.SetAngle(r), f = this.m_qB.SetAngle(l);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var d = F.MulRV(_, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var p = F.MulRV(f, this.m_lalcB, this.m_rB), m = D.AddVV(D.SubVV(a, i, D.s_t0), D.SubVV(p, d, D.s_t1), n.InitVelocityConstraints_s_d), y = this.m_invMassA, g = this.m_invMassB, C = this.m_invIA, x = this.m_invIB;
F.MulRV(_, this.m_localXAxisA, this.m_axis);
this.m_a1 = D.CrossVV(D.AddVV(m, d, D.s_t0), this.m_axis);
this.m_a2 = D.CrossVV(p, this.m_axis);
this.m_motorMass = y + g + C * this.m_a1 * this.m_a1 + x * this.m_a2 * this.m_a2;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
F.MulRV(_, this.m_localYAxisA, this.m_perp);
this.m_s1 = D.CrossVV(D.AddVV(m, d, D.s_t0), this.m_perp);
this.m_s2 = D.CrossVV(p, this.m_perp);
this.m_K.ex.x = y + g + C * this.m_s1 * this.m_s1 + x * this.m_s2 * this.m_s2;
this.m_K.ex.y = C * this.m_s1 + x * this.m_s2;
this.m_K.ex.z = C * this.m_s1 * this.m_a1 + x * this.m_s2 * this.m_a2;
this.m_K.ey.x = this.m_K.ex.y;
this.m_K.ey.y = C + x;
0 === this.m_K.ey.y && (this.m_K.ey.y = 1);
this.m_K.ey.z = C * this.m_a1 + x * this.m_a2;
this.m_K.ez.x = this.m_K.ex.z;
this.m_K.ez.y = this.m_K.ey.z;
this.m_K.ez.z = y + g + C * this.m_a1 * this.m_a1 + x * this.m_a2 * this.m_a2;
if (this.m_enableLimit) {
var A = D.DotVV(this.m_axis, m);
if (v(this.m_upperTranslation - this.m_lowerTranslation) < 2 * c) this.m_limitState = t.b2LimitState.e_equalLimits; else if (A <= this.m_lowerTranslation) {
if (this.m_limitState !== t.b2LimitState.e_atLowerLimit) {
this.m_limitState = t.b2LimitState.e_atLowerLimit;
this.m_impulse.z = 0;
}
} else if (A >= this.m_upperTranslation) {
if (this.m_limitState !== t.b2LimitState.e_atUpperLimit) {
this.m_limitState = t.b2LimitState.e_atUpperLimit;
this.m_impulse.z = 0;
}
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
this.m_enableMotor || (this.m_motorImpulse = 0);
if (e.step.warmStarting) {
this.m_impulse.SelfMul(e.step.dtRatio);
this.m_motorImpulse *= e.step.dtRatio;
var b = D.AddVV(D.MulSV(this.m_impulse.x, this.m_perp, D.s_t0), D.MulSV(this.m_motorImpulse + this.m_impulse.z, this.m_axis, D.s_t1), n.InitVelocityConstraints_s_P), S = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1, w = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;
s.SelfMulSub(y, b);
o -= C * S;
u.SelfMulAdd(g, b);
h += x * w;
} else {
this.m_impulse.SetZero();
this.m_motorImpulse = 0;
}
e.velocities[this.m_indexA].w = o;
e.velocities[this.m_indexB].w = h;
};
n.prototype.SolveVelocityConstraints = function(e) {
var i = e.velocities[this.m_indexA].v, r = e.velocities[this.m_indexA].w, s = e.velocities[this.m_indexB].v, o = e.velocities[this.m_indexB].w, a = this.m_invMassA, c = this.m_invMassB, l = this.m_invIA, u = this.m_invIB;
if (this.m_enableMotor && this.m_limitState !== t.b2LimitState.e_equalLimits) {
var h = D.DotVV(this.m_axis, D.SubVV(s, i, D.s_t0)) + this.m_a2 * o - this.m_a1 * r, _ = this.m_motorMass * (this.m_motorSpeed - h), f = this.m_motorImpulse, d = e.step.dt * this.m_maxMotorForce;
this.m_motorImpulse = x(this.m_motorImpulse + _, -d, d);
_ = this.m_motorImpulse - f;
var p = D.MulSV(_, this.m_axis, n.SolveVelocityConstraints_s_P), m = _ * this.m_a1, y = _ * this.m_a2;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
}
var v = D.DotVV(this.m_perp, D.SubVV(s, i, D.s_t0)) + this.m_s2 * o - this.m_s1 * r, A = o - r;
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit) {
var b = D.DotVV(this.m_axis, D.SubVV(s, i, D.s_t0)) + this.m_a2 * o - this.m_a1 * r, S = n.SolveVelocityConstraints_s_f1.Copy(this.m_impulse), w = this.m_K.Solve33(-v, -A, -b, n.SolveVelocityConstraints_s_df3);
this.m_impulse.SelfAdd(w);
this.m_limitState === t.b2LimitState.e_atLowerLimit ? this.m_impulse.z = C(this.m_impulse.z, 0) : this.m_limitState === t.b2LimitState.e_atUpperLimit && (this.m_impulse.z = g(this.m_impulse.z, 0));
var T = -v - (this.m_impulse.z - S.z) * this.m_K.ez.x, B = -A - (this.m_impulse.z - S.z) * this.m_K.ez.y, E = this.m_K.Solve22(T, B, n.SolveVelocityConstraints_s_f2r);
E.x += S.x;
E.y += S.y;
this.m_impulse.x = E.x;
this.m_impulse.y = E.y;
w.x = this.m_impulse.x - S.x;
w.y = this.m_impulse.y - S.y;
w.z = this.m_impulse.z - S.z;
p = D.AddVV(D.MulSV(w.x, this.m_perp, D.s_t0), D.MulSV(w.z, this.m_axis, D.s_t1), n.SolveVelocityConstraints_s_P), 
m = w.x * this.m_s1 + w.y + w.z * this.m_a1, y = w.x * this.m_s2 + w.y + w.z * this.m_a2;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
} else {
var M = this.m_K.Solve22(-v, -A, n.SolveVelocityConstraints_s_df2);
this.m_impulse.x += M.x;
this.m_impulse.y += M.y;
p = D.MulSV(M.x, this.m_perp, n.SolveVelocityConstraints_s_P), m = M.x * this.m_s1 + M.y, 
y = M.x * this.m_s2 + M.y;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
}
e.velocities[this.m_indexA].w = r;
e.velocities[this.m_indexB].w = o;
};
n.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(i), a = this.m_qB.SetAngle(s), u = this.m_invMassA, h = this.m_invMassB, _ = this.m_invIA, f = this.m_invIB, d = F.MulRV(o, this.m_lalcA, this.m_rA), p = F.MulRV(a, this.m_lalcB, this.m_rB), m = D.SubVV(D.AddVV(r, p, D.s_t0), D.AddVV(e, d, D.s_t1), n.SolvePositionConstraints_s_d), y = F.MulRV(o, this.m_localXAxisA, this.m_axis), g = D.CrossVV(D.AddVV(m, d, D.s_t0), y), A = D.CrossVV(p, y), b = F.MulRV(o, this.m_localYAxisA, this.m_perp), S = D.CrossVV(D.AddVV(m, d, D.s_t0), b), w = D.CrossVV(p, b), T = n.SolvePositionConstraints_s_impulse, B = D.DotVV(b, m), E = s - i - this.m_referenceAngle, M = v(B), I = v(E), R = !1, P = 0;
if (this.m_enableLimit) {
var V = D.DotVV(y, m);
if (v(this.m_upperTranslation - this.m_lowerTranslation) < 2 * c) {
P = x(V, -.2, .2);
M = C(M, v(V));
R = !0;
} else if (V <= this.m_lowerTranslation) {
P = x(V - this.m_lowerTranslation + c, -.2, 0);
M = C(M, this.m_lowerTranslation - V);
R = !0;
} else if (V >= this.m_upperTranslation) {
P = x(V - this.m_upperTranslation - c, 0, .2);
M = C(M, V - this.m_upperTranslation);
R = !0;
}
}
if (R) {
var L = u + h + _ * S * S + f * w * w, O = _ * S + f * w, N = _ * S * g + f * w * A;
0 === (U = _ + f) && (U = 1);
var G = _ * g + f * A, z = u + h + _ * g * g + f * A * A, k = this.m_K3;
k.ex.SetXYZ(L, O, N);
k.ey.SetXYZ(O, U, G);
k.ez.SetXYZ(N, G, z);
T = k.Solve33(-B, -E, -P, T);
} else {
var U;
L = u + h + _ * S * S + f * w * w, O = _ * S + f * w;
0 === (U = _ + f) && (U = 1);
var j = this.m_K2;
j.ex.Set(L, O);
j.ey.Set(O, U);
var W = j.Solve(-B, -E, n.SolvePositionConstraints_s_impulse1);
T.x = W.x;
T.y = W.y;
T.z = 0;
}
var H = D.AddVV(D.MulSV(T.x, b, D.s_t0), D.MulSV(T.z, y, D.s_t1), n.SolvePositionConstraints_s_P), q = T.x * S + T.y + T.z * g, X = T.x * w + T.y + T.z * A;
e.SelfMulSub(u, H);
i -= _ * q;
r.SelfMulAdd(h, H);
s += f * X;
t.positions[this.m_indexA].a = i;
t.positions[this.m_indexB].a = s;
return M <= c && I <= l;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
e.x = t * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x);
e.y = t * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y);
return e;
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.y;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.GetLocalAxisA = function() {
return this.m_localXAxisA;
};
n.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
n.prototype.GetJointTranslation = function() {
var t = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, n.GetJointTranslation_s_pA), e = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, n.GetJointTranslation_s_pB), i = D.SubVV(e, t, n.GetJointTranslation_s_d), r = this.m_bodyA.GetWorldVector(this.m_localXAxisA, n.GetJointTranslation_s_axis);
return D.DotVV(i, r);
};
n.prototype.GetJointSpeed = function() {
var t = this.m_bodyA, e = this.m_bodyB;
D.SubVV(this.m_localAnchorA, t.m_sweep.localCenter, this.m_lalcA);
var i = F.MulRV(t.m_xf.q, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, e.m_sweep.localCenter, this.m_lalcB);
var n = F.MulRV(e.m_xf.q, this.m_lalcB, this.m_rB), r = D.AddVV(t.m_sweep.c, i, D.s_t0), s = D.AddVV(e.m_sweep.c, n, D.s_t1), o = D.SubVV(s, r, D.s_t2), a = t.GetWorldVector(this.m_localXAxisA, this.m_axis), c = t.m_linearVelocity, l = e.m_linearVelocity, u = t.m_angularVelocity, h = e.m_angularVelocity;
return D.DotVV(o, D.CrossSV(u, a, D.s_t0)) + D.DotVV(a, D.SubVV(D.AddVCrossSV(l, h, n, D.s_t0), D.AddVCrossSV(c, u, i, D.s_t1), D.s_t0));
};
n.prototype.IsLimitEnabled = function() {
return this.m_enableLimit;
};
n.prototype.EnableLimit = function(t) {
if (t !== this.m_enableLimit) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableLimit = t;
this.m_impulse.z = 0;
}
};
n.prototype.GetLowerLimit = function() {
return this.m_lowerTranslation;
};
n.prototype.GetUpperLimit = function() {
return this.m_upperTranslation;
};
n.prototype.SetLimits = function(t, e) {
if (t !== this.m_lowerTranslation || e !== this.m_upperTranslation) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_lowerTranslation = t;
this.m_upperTranslation = e;
this.m_impulse.z = 0;
}
};
n.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
n.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
n.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
n.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
n.prototype.SetMaxMotorForce = function(t) {
if (t !== this.m_maxMotorForce) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorForce = t;
}
};
n.prototype.GetMaxMotorForce = function() {
return this.m_maxMotorForce;
};
n.prototype.GetMotorForce = function(t) {
return t * this.m_motorImpulse;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.localAxisA.Set(%.15f, %.15f);\n", this.m_localXAxisA.x, this.m_localXAxisA.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.enableLimit = %s;\n", this.m_enableLimit ? "true" : "false");
t("  jd.lowerTranslation = %.15f;\n", this.m_lowerTranslation);
t("  jd.upperTranslation = %.15f;\n", this.m_upperTranslation);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorForce = %.15f;\n", this.m_maxMotorForce);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_d = new D();
n.InitVelocityConstraints_s_P = new D();
n.SolveVelocityConstraints_s_P = new D();
n.SolveVelocityConstraints_s_f2r = new D();
n.SolveVelocityConstraints_s_f1 = new V();
n.SolveVelocityConstraints_s_df3 = new V();
n.SolveVelocityConstraints_s_df2 = new D();
n.SolvePositionConstraints_s_d = new D();
n.SolvePositionConstraints_s_impulse = new V();
n.SolvePositionConstraints_s_impulse1 = new D();
n.SolvePositionConstraints_s_P = new D();
n.GetJointTranslation_s_pA = new D();
n.GetJointTranslation_s_pB = new D();
n.GetJointTranslation_s_d = new D();
n.GetJointTranslation_s_axis = new D();
return n;
})(fi), Ei = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_pulleyJoint) || this;
i.groundAnchorA = new D(-1, 1);
i.groundAnchorB = new D(1, 1);
i.localAnchorA = new D(-1, 0);
i.localAnchorB = new D(1, 0);
i.lengthA = 0;
i.lengthB = 0;
i.ratio = 1;
i.collideConnected = !0;
return i;
}
i.prototype.Initialize = function(t, e, i, n, r, s, o) {
this.bodyA = t;
this.bodyB = e;
this.groundAnchorA.Copy(i);
this.groundAnchorB.Copy(n);
this.bodyA.GetLocalPoint(r, this.localAnchorA);
this.bodyB.GetLocalPoint(s, this.localAnchorB);
this.lengthA = D.DistanceVV(r, i);
this.lengthB = D.DistanceVV(s, n);
this.ratio = o;
};
return i;
})(_i), Mi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_groundAnchorA = new D();
n.m_groundAnchorB = new D();
n.m_lengthA = 0;
n.m_lengthB = 0;
n.m_localAnchorA = new D();
n.m_localAnchorB = new D();
n.m_constant = 0;
n.m_ratio = 0;
n.m_impulse = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_uA = new D();
n.m_uB = new D();
n.m_rA = new D();
n.m_rB = new D();
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = 0;
n.m_qA = new F();
n.m_qB = new F();
n.m_lalcA = new D();
n.m_lalcB = new D();
n.m_groundAnchorA.Copy(e(i.groundAnchorA, new D(-1, 1)));
n.m_groundAnchorB.Copy(e(i.groundAnchorB, new D(1, 0)));
n.m_localAnchorA.Copy(e(i.localAnchorA, new D(-1, 0)));
n.m_localAnchorB.Copy(e(i.localAnchorB, new D(1, 0)));
n.m_lengthA = e(i.lengthA, 0);
n.m_lengthB = e(i.lengthB, 0);
n.m_ratio = e(i.ratio, 1);
n.m_constant = e(i.lengthA, 0) + n.m_ratio * e(i.lengthB, 0);
n.m_impulse = 0;
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.velocities[this.m_indexA].v, s = t.velocities[this.m_indexA].w, o = t.positions[this.m_indexB].c, a = t.positions[this.m_indexB].a, l = t.velocities[this.m_indexB].v, u = t.velocities[this.m_indexB].w, h = this.m_qA.SetAngle(n), _ = this.m_qB.SetAngle(a);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
F.MulRV(h, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(_, this.m_lalcB, this.m_rB);
this.m_uA.Copy(e).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);
this.m_uB.Copy(o).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);
var f = this.m_uA.Length(), d = this.m_uB.Length();
f > 10 * c ? this.m_uA.SelfMul(1 / f) : this.m_uA.SetZero();
d > 10 * c ? this.m_uB.SelfMul(1 / d) : this.m_uB.SetZero();
var p = D.CrossVV(this.m_rA, this.m_uA), m = D.CrossVV(this.m_rB, this.m_uB), y = this.m_invMassA + this.m_invIA * p * p, v = this.m_invMassB + this.m_invIB * m * m;
this.m_mass = y + this.m_ratio * this.m_ratio * v;
this.m_mass > 0 && (this.m_mass = 1 / this.m_mass);
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
var g = D.MulSV(-this.m_impulse, this.m_uA, i.InitVelocityConstraints_s_PA), C = D.MulSV(-this.m_ratio * this.m_impulse, this.m_uB, i.InitVelocityConstraints_s_PB);
r.SelfMulAdd(this.m_invMassA, g);
s += this.m_invIA * D.CrossVV(this.m_rA, g);
l.SelfMulAdd(this.m_invMassB, C);
u += this.m_invIB * D.CrossVV(this.m_rB, C);
} else this.m_impulse = 0;
t.velocities[this.m_indexA].w = s;
t.velocities[this.m_indexB].w = u;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = D.AddVCrossSV(e, n, this.m_rA, i.SolveVelocityConstraints_s_vpA), a = D.AddVCrossSV(r, s, this.m_rB, i.SolveVelocityConstraints_s_vpB), c = -D.DotVV(this.m_uA, o) - this.m_ratio * D.DotVV(this.m_uB, a), l = -this.m_mass * c;
this.m_impulse += l;
var u = D.MulSV(-l, this.m_uA, i.SolveVelocityConstraints_s_PA), h = D.MulSV(-this.m_ratio * l, this.m_uB, i.SolveVelocityConstraints_s_PB);
e.SelfMulAdd(this.m_invMassA, u);
n += this.m_invIA * D.CrossVV(this.m_rA, u);
r.SelfMulAdd(this.m_invMassB, h);
s += this.m_invIB * D.CrossVV(this.m_rB, h);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = F.MulRV(o, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = F.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_uA.Copy(e).SelfAdd(l).SelfSub(this.m_groundAnchorA), _ = this.m_uB.Copy(r).SelfAdd(u).SelfSub(this.m_groundAnchorB), f = h.Length(), d = _.Length();
f > 10 * c ? h.SelfMul(1 / f) : h.SetZero();
d > 10 * c ? _.SelfMul(1 / d) : _.SetZero();
var p = D.CrossVV(l, h), m = D.CrossVV(u, _), y = this.m_invMassA + this.m_invIA * p * p, g = this.m_invMassB + this.m_invIB * m * m, C = y + this.m_ratio * this.m_ratio * g;
C > 0 && (C = 1 / C);
var x = this.m_constant - f - this.m_ratio * d, A = v(x), b = -C * x, S = D.MulSV(-b, h, i.SolvePositionConstraints_s_PA), w = D.MulSV(-this.m_ratio * b, _, i.SolvePositionConstraints_s_PB);
e.SelfMulAdd(this.m_invMassA, S);
n += this.m_invIA * D.CrossVV(l, S);
r.SelfMulAdd(this.m_invMassB, w);
s += this.m_invIB * D.CrossVV(u, w);
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return A < c;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse * this.m_uB.x;
e.y = t * this.m_impulse * this.m_uB.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.GetGroundAnchorA = function() {
return this.m_groundAnchorA;
};
i.prototype.GetGroundAnchorB = function() {
return this.m_groundAnchorB;
};
i.prototype.GetLengthA = function() {
return this.m_lengthA;
};
i.prototype.GetLengthB = function() {
return this.m_lengthB;
};
i.prototype.GetRatio = function() {
return this.m_ratio;
};
i.prototype.GetCurrentLengthA = function() {
var t = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, i.GetCurrentLengthA_s_p), e = this.m_groundAnchorA;
return D.DistanceVV(t, e);
};
i.prototype.GetCurrentLengthB = function() {
var t = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, i.GetCurrentLengthB_s_p), e = this.m_groundAnchorB;
return D.DistanceVV(t, e);
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2PulleyJointDef = new b2PulleyJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.groundAnchorA.Set(%.15f, %.15f);\n", this.m_groundAnchorA.x, this.m_groundAnchorA.y);
t("  jd.groundAnchorB.Set(%.15f, %.15f);\n", this.m_groundAnchorB.x, this.m_groundAnchorB.y);
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.lengthA = %.15f;\n", this.m_lengthA);
t("  jd.lengthB = %.15f;\n", this.m_lengthB);
t("  jd.ratio = %.15f;\n", this.m_ratio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.prototype.ShiftOrigin = function(t) {
this.m_groundAnchorA.SelfSub(t);
this.m_groundAnchorB.SelfSub(t);
};
i.InitVelocityConstraints_s_PA = new D();
i.InitVelocityConstraints_s_PB = new D();
i.SolveVelocityConstraints_s_vpA = new D();
i.SolveVelocityConstraints_s_vpB = new D();
i.SolveVelocityConstraints_s_PA = new D();
i.SolveVelocityConstraints_s_PB = new D();
i.SolvePositionConstraints_s_PA = new D();
i.SolvePositionConstraints_s_PB = new D();
i.GetCurrentLengthA_s_p = new D();
i.GetCurrentLengthB_s_p = new D();
return i;
})(fi), Ii = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_revoluteJoint) || this;
i.localAnchorA = new D(0, 0);
i.localAnchorB = new D(0, 0);
i.referenceAngle = 0;
i.enableLimit = !1;
i.lowerAngle = 0;
i.upperAngle = 0;
i.enableMotor = !1;
i.motorSpeed = 0;
i.maxMotorTorque = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(_i), Ri = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new D();
r.m_localAnchorB = new D();
r.m_impulse = new V();
r.m_motorImpulse = 0;
r.m_enableMotor = !1;
r.m_maxMotorTorque = 0;
r.m_motorSpeed = 0;
r.m_enableLimit = !1;
r.m_referenceAngle = 0;
r.m_lowerAngle = 0;
r.m_upperAngle = 0;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_rA = new D();
r.m_rB = new D();
r.m_localCenterA = new D();
r.m_localCenterB = new D();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_mass = new O();
r.m_motorMass = 0;
r.m_limitState = t.b2LimitState.e_inactiveLimit;
r.m_qA = new F();
r.m_qB = new F();
r.m_lalcA = new D();
r.m_lalcB = new D();
r.m_K = new L();
r.m_localAnchorA.Copy(e(n.localAnchorA, D.ZERO));
r.m_localAnchorB.Copy(e(n.localAnchorB, D.ZERO));
r.m_referenceAngle = e(n.referenceAngle, 0);
r.m_impulse.SetZero();
r.m_motorImpulse = 0;
r.m_lowerAngle = e(n.lowerAngle, 0);
r.m_upperAngle = e(n.upperAngle, 0);
r.m_maxMotorTorque = e(n.maxMotorTorque, 0);
r.m_motorSpeed = e(n.motorSpeed, 0);
r.m_enableLimit = e(n.enableLimit, !1);
r.m_enableMotor = e(n.enableMotor, !1);
r.m_limitState = t.b2LimitState.e_inactiveLimit;
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].a, r = e.velocities[this.m_indexA].v, s = e.velocities[this.m_indexA].w, o = e.positions[this.m_indexB].a, a = e.velocities[this.m_indexB].v, c = e.velocities[this.m_indexB].w, u = this.m_qA.SetAngle(i), h = this.m_qB.SetAngle(o);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
F.MulRV(u, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(h, this.m_lalcB, this.m_rB);
var _ = this.m_invMassA, f = this.m_invMassB, d = this.m_invIA, p = this.m_invIB, m = d + p === 0;
this.m_mass.ex.x = _ + f + this.m_rA.y * this.m_rA.y * d + this.m_rB.y * this.m_rB.y * p;
this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * d - this.m_rB.y * this.m_rB.x * p;
this.m_mass.ez.x = -this.m_rA.y * d - this.m_rB.y * p;
this.m_mass.ex.y = this.m_mass.ey.x;
this.m_mass.ey.y = _ + f + this.m_rA.x * this.m_rA.x * d + this.m_rB.x * this.m_rB.x * p;
this.m_mass.ez.y = this.m_rA.x * d + this.m_rB.x * p;
this.m_mass.ex.z = this.m_mass.ez.x;
this.m_mass.ey.z = this.m_mass.ez.y;
this.m_mass.ez.z = d + p;
this.m_motorMass = d + p;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
this.m_enableMotor && !m || (this.m_motorImpulse = 0);
if (this.m_enableLimit && !m) {
var y = o - i - this.m_referenceAngle;
if (v(this.m_upperAngle - this.m_lowerAngle) < 2 * l) this.m_limitState = t.b2LimitState.e_equalLimits; else if (y <= this.m_lowerAngle) {
this.m_limitState !== t.b2LimitState.e_atLowerLimit && (this.m_impulse.z = 0);
this.m_limitState = t.b2LimitState.e_atLowerLimit;
} else if (y >= this.m_upperAngle) {
this.m_limitState !== t.b2LimitState.e_atUpperLimit && (this.m_impulse.z = 0);
this.m_limitState = t.b2LimitState.e_atUpperLimit;
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
} else this.m_limitState = t.b2LimitState.e_inactiveLimit;
if (e.step.warmStarting) {
this.m_impulse.SelfMul(e.step.dtRatio);
this.m_motorImpulse *= e.step.dtRatio;
var g = n.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);
r.SelfMulSub(_, g);
s -= d * (D.CrossVV(this.m_rA, g) + this.m_motorImpulse + this.m_impulse.z);
a.SelfMulAdd(f, g);
c += p * (D.CrossVV(this.m_rB, g) + this.m_motorImpulse + this.m_impulse.z);
} else {
this.m_impulse.SetZero();
this.m_motorImpulse = 0;
}
e.velocities[this.m_indexA].w = s;
e.velocities[this.m_indexB].w = c;
};
n.prototype.SolveVelocityConstraints = function(e) {
var i = e.velocities[this.m_indexA].v, r = e.velocities[this.m_indexA].w, s = e.velocities[this.m_indexB].v, o = e.velocities[this.m_indexB].w, a = this.m_invMassA, c = this.m_invMassB, l = this.m_invIA, u = this.m_invIB, h = l + u === 0;
if (this.m_enableMotor && this.m_limitState !== t.b2LimitState.e_equalLimits && !h) {
var _ = o - r - this.m_motorSpeed, f = -this.m_motorMass * _, d = this.m_motorImpulse, p = e.step.dt * this.m_maxMotorTorque;
this.m_motorImpulse = x(this.m_motorImpulse + f, -p, p);
r -= l * (f = this.m_motorImpulse - d);
o += u * f;
}
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit && !h) {
var m = D.SubVV(D.AddVCrossSV(s, o, this.m_rB, D.s_t0), D.AddVCrossSV(i, r, this.m_rA, D.s_t1), n.SolveVelocityConstraints_s_Cdot1), y = o - r, v = this.m_mass.Solve33(m.x, m.y, y, n.SolveVelocityConstraints_s_impulse_v3).SelfNeg();
if (this.m_limitState === t.b2LimitState.e_equalLimits) this.m_impulse.SelfAdd(v); else if (this.m_limitState === t.b2LimitState.e_atLowerLimit) {
if (this.m_impulse.z + v.z < 0) {
var g = -m.x + this.m_impulse.z * this.m_mass.ez.x, C = -m.y + this.m_impulse.z * this.m_mass.ez.y, A = this.m_mass.Solve22(g, C, n.SolveVelocityConstraints_s_reduced_v2);
v.x = A.x;
v.y = A.y;
v.z = -this.m_impulse.z;
this.m_impulse.x += A.x;
this.m_impulse.y += A.y;
this.m_impulse.z = 0;
} else this.m_impulse.SelfAdd(v);
} else if (this.m_limitState === t.b2LimitState.e_atUpperLimit) {
if (this.m_impulse.z + v.z > 0) {
g = -m.x + this.m_impulse.z * this.m_mass.ez.x, C = -m.y + this.m_impulse.z * this.m_mass.ez.y, 
A = this.m_mass.Solve22(g, C, n.SolveVelocityConstraints_s_reduced_v2);
v.x = A.x;
v.y = A.y;
v.z = -this.m_impulse.z;
this.m_impulse.x += A.x;
this.m_impulse.y += A.y;
this.m_impulse.z = 0;
} else this.m_impulse.SelfAdd(v);
}
var b = n.SolveVelocityConstraints_s_P.Set(v.x, v.y);
i.SelfMulSub(a, b);
r -= l * (D.CrossVV(this.m_rA, b) + v.z);
s.SelfMulAdd(c, b);
o += u * (D.CrossVV(this.m_rB, b) + v.z);
} else {
var S = D.SubVV(D.AddVCrossSV(s, o, this.m_rB, D.s_t0), D.AddVCrossSV(i, r, this.m_rA, D.s_t1), n.SolveVelocityConstraints_s_Cdot_v2), w = this.m_mass.Solve22(-S.x, -S.y, n.SolveVelocityConstraints_s_impulse_v2);
this.m_impulse.x += w.x;
this.m_impulse.y += w.y;
i.SelfMulSub(a, w);
r -= l * D.CrossVV(this.m_rA, w);
s.SelfMulAdd(c, w);
o += u * D.CrossVV(this.m_rB, w);
}
e.velocities[this.m_indexA].w = r;
e.velocities[this.m_indexB].w = o;
};
n.prototype.SolvePositionConstraints = function(e) {
var i, r = e.positions[this.m_indexA].c, s = e.positions[this.m_indexA].a, o = e.positions[this.m_indexB].c, a = e.positions[this.m_indexB].a, u = this.m_qA.SetAngle(s), h = this.m_qB.SetAngle(a), _ = 0, f = this.m_invIA + this.m_invIB === 0;
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit && !f) {
var d = a - s - this.m_referenceAngle, p = 0;
if (this.m_limitState === t.b2LimitState.e_equalLimits) {
var m = x(d - this.m_lowerAngle, -.13962634015955555, .13962634015955555);
p = -this.m_motorMass * m;
_ = v(m);
} else if (this.m_limitState === t.b2LimitState.e_atLowerLimit) {
_ = -(m = d - this.m_lowerAngle);
m = x(m + l, -.13962634015955555, 0);
p = -this.m_motorMass * m;
} else if (this.m_limitState === t.b2LimitState.e_atUpperLimit) {
_ = m = d - this.m_upperAngle;
m = x(m - l, 0, .13962634015955555);
p = -this.m_motorMass * m;
}
s -= this.m_invIA * p;
a += this.m_invIB * p;
}
u.SetAngle(s);
h.SetAngle(a);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var y = F.MulRV(u, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var g = F.MulRV(h, this.m_lalcB, this.m_rB), C = D.SubVV(D.AddVV(o, g, D.s_t0), D.AddVV(r, y, D.s_t1), n.SolvePositionConstraints_s_C_v2);
i = C.Length();
var A = this.m_invMassA, b = this.m_invMassB, S = this.m_invIA, w = this.m_invIB, T = this.m_K;
T.ex.x = A + b + S * y.y * y.y + w * g.y * g.y;
T.ex.y = -S * y.x * y.y - w * g.x * g.y;
T.ey.x = T.ex.y;
T.ey.y = A + b + S * y.x * y.x + w * g.x * g.x;
var B = T.Solve(C.x, C.y, n.SolvePositionConstraints_s_impulse).SelfNeg();
r.SelfMulSub(A, B);
s -= S * D.CrossVV(y, B);
o.SelfMulAdd(b, B);
a += w * D.CrossVV(g, B);
e.positions[this.m_indexA].a = s;
e.positions[this.m_indexB].a = a;
return i <= c && _ <= l;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse.x;
e.y = t * this.m_impulse.y;
return e;
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.z;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
n.prototype.GetJointAngle = function() {
return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;
};
n.prototype.GetJointSpeed = function() {
return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;
};
n.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
n.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
n.prototype.GetMotorTorque = function(t) {
return t * this.m_motorImpulse;
};
n.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
n.prototype.SetMaxMotorTorque = function(t) {
if (t !== this.m_maxMotorTorque) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorTorque = t;
}
};
n.prototype.GetMaxMotorTorque = function() {
return this.m_maxMotorTorque;
};
n.prototype.IsLimitEnabled = function() {
return this.m_enableLimit;
};
n.prototype.EnableLimit = function(t) {
if (t !== this.m_enableLimit) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableLimit = t;
this.m_impulse.z = 0;
}
};
n.prototype.GetLowerLimit = function() {
return this.m_lowerAngle;
};
n.prototype.GetUpperLimit = function() {
return this.m_upperAngle;
};
n.prototype.SetLimits = function(t, e) {
if (t !== this.m_lowerAngle || e !== this.m_upperAngle) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_impulse.z = 0;
this.m_lowerAngle = t;
this.m_upperAngle = e;
}
};
n.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.enableLimit = %s;\n", this.m_enableLimit ? "true" : "false");
t("  jd.lowerAngle = %.15f;\n", this.m_lowerAngle);
t("  jd.upperAngle = %.15f;\n", this.m_upperAngle);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorTorque = %.15f;\n", this.m_maxMotorTorque);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_P = new D();
n.SolveVelocityConstraints_s_P = new D();
n.SolveVelocityConstraints_s_Cdot_v2 = new D();
n.SolveVelocityConstraints_s_Cdot1 = new D();
n.SolveVelocityConstraints_s_impulse_v3 = new V();
n.SolveVelocityConstraints_s_reduced_v2 = new D();
n.SolveVelocityConstraints_s_impulse_v2 = new D();
n.SolvePositionConstraints_s_C_v2 = new D();
n.SolvePositionConstraints_s_impulse = new D();
return n;
})(fi), Di = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_ropeJoint) || this;
i.localAnchorA = new D(-1, 0);
i.localAnchorB = new D(1, 0);
i.maxLength = 0;
return i;
}
return i;
})(_i), Pi = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new D();
r.m_localAnchorB = new D();
r.m_maxLength = 0;
r.m_length = 0;
r.m_impulse = 0;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_u = new D();
r.m_rA = new D();
r.m_rB = new D();
r.m_localCenterA = new D();
r.m_localCenterB = new D();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_mass = 0;
r.m_state = t.b2LimitState.e_inactiveLimit;
r.m_qA = new F();
r.m_qB = new F();
r.m_lalcA = new D();
r.m_lalcB = new D();
r.m_localAnchorA.Copy(e(n.localAnchorA, new D(-1, 0)));
r.m_localAnchorB.Copy(e(n.localAnchorB, new D(1, 0)));
r.m_maxLength = e(n.maxLength, 0);
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].c, r = e.positions[this.m_indexA].a, s = e.velocities[this.m_indexA].v, o = e.velocities[this.m_indexA].w, a = e.positions[this.m_indexB].c, l = e.positions[this.m_indexB].a, u = e.velocities[this.m_indexB].v, h = e.velocities[this.m_indexB].w, _ = this.m_qA.SetAngle(r), f = this.m_qB.SetAngle(l);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
F.MulRV(_, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(f, this.m_lalcB, this.m_rB);
this.m_u.Copy(a).SelfAdd(this.m_rB).SelfSub(i).SelfSub(this.m_rA);
this.m_length = this.m_u.Length();
var d = this.m_length - this.m_maxLength;
this.m_state = d > 0 ? t.b2LimitState.e_atUpperLimit : t.b2LimitState.e_inactiveLimit;
if (this.m_length > c) {
this.m_u.SelfMul(1 / this.m_length);
var p = D.CrossVV(this.m_rA, this.m_u), m = D.CrossVV(this.m_rB, this.m_u), y = this.m_invMassA + this.m_invIA * p * p + this.m_invMassB + this.m_invIB * m * m;
this.m_mass = 0 !== y ? 1 / y : 0;
if (e.step.warmStarting) {
this.m_impulse *= e.step.dtRatio;
var v = D.MulSV(this.m_impulse, this.m_u, n.InitVelocityConstraints_s_P);
s.SelfMulSub(this.m_invMassA, v);
o -= this.m_invIA * D.CrossVV(this.m_rA, v);
u.SelfMulAdd(this.m_invMassB, v);
h += this.m_invIB * D.CrossVV(this.m_rB, v);
} else this.m_impulse = 0;
e.velocities[this.m_indexA].w = o;
e.velocities[this.m_indexB].w = h;
} else {
this.m_u.SetZero();
this.m_mass = 0;
this.m_impulse = 0;
}
};
n.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, i = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = D.AddVCrossSV(e, i, this.m_rA, n.SolveVelocityConstraints_s_vpA), a = D.AddVCrossSV(r, s, this.m_rB, n.SolveVelocityConstraints_s_vpB), c = this.m_length - this.m_maxLength, l = D.DotVV(this.m_u, D.SubVV(a, o, D.s_t0));
c < 0 && (l += t.step.inv_dt * c);
var u = -this.m_mass * l, h = this.m_impulse;
this.m_impulse = g(0, this.m_impulse + u);
u = this.m_impulse - h;
var _ = D.MulSV(u, this.m_u, n.SolveVelocityConstraints_s_P);
e.SelfMulSub(this.m_invMassA, _);
i -= this.m_invIA * D.CrossVV(this.m_rA, _);
r.SelfMulAdd(this.m_invMassB, _);
s += this.m_invIB * D.CrossVV(this.m_rB, _);
t.velocities[this.m_indexA].w = i;
t.velocities[this.m_indexB].w = s;
};
n.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(i), a = this.m_qB.SetAngle(s);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = F.MulRV(o, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = F.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_u.Copy(r).SelfAdd(u).SelfSub(e).SelfSub(l), _ = h.Normalize(), f = _ - this.m_maxLength;
f = x(f, 0, .2);
var d = -this.m_mass * f, p = D.MulSV(d, h, n.SolvePositionConstraints_s_P);
e.SelfMulSub(this.m_invMassA, p);
i -= this.m_invIA * D.CrossVV(l, p);
r.SelfMulAdd(this.m_invMassB, p);
s += this.m_invIB * D.CrossVV(u, p);
t.positions[this.m_indexA].a = i;
t.positions[this.m_indexB].a = s;
return _ - this.m_maxLength < c;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
return D.MulSV(t * this.m_impulse, this.m_u, e);
};
n.prototype.GetReactionTorque = function(t) {
return 0;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.SetMaxLength = function(t) {
this.m_maxLength = t;
};
n.prototype.GetMaxLength = function() {
return this.m_maxLength;
};
n.prototype.GetLimitState = function() {
return this.m_state;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2RopeJointDef = new b2RopeJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.maxLength = %.15f;\n", this.m_maxLength);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_P = new D();
n.SolveVelocityConstraints_s_vpA = new D();
n.SolveVelocityConstraints_s_vpB = new D();
n.SolveVelocityConstraints_s_P = new D();
n.SolvePositionConstraints_s_P = new D();
return n;
})(fi), Vi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_weldJoint) || this;
i.localAnchorA = new D();
i.localAnchorB = new D();
i.referenceAngle = 0;
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(_i), Li = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_bias = 0;
n.m_localAnchorA = new D();
n.m_localAnchorB = new D();
n.m_referenceAngle = 0;
n.m_gamma = 0;
n.m_impulse = new V(0, 0, 0);
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new D();
n.m_rB = new D();
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = new O();
n.m_qA = new F();
n.m_qB = new F();
n.m_lalcA = new D();
n.m_lalcB = new D();
n.m_K = new O();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_localAnchorA.Copy(e(i.localAnchorA, D.ZERO));
n.m_localAnchorB.Copy(e(i.localAnchorB, D.ZERO));
n.m_referenceAngle = e(i.referenceAngle, 0);
n.m_impulse.SetZero();
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].a, n = t.velocities[this.m_indexA].v, r = t.velocities[this.m_indexA].w, o = t.positions[this.m_indexB].a, a = t.velocities[this.m_indexB].v, c = t.velocities[this.m_indexB].w, l = this.m_qA.SetAngle(e), u = this.m_qB.SetAngle(o);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
F.MulRV(l, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
F.MulRV(u, this.m_lalcB, this.m_rB);
var h = this.m_invMassA, _ = this.m_invMassB, f = this.m_invIA, d = this.m_invIB, p = this.m_K;
p.ex.x = h + _ + this.m_rA.y * this.m_rA.y * f + this.m_rB.y * this.m_rB.y * d;
p.ey.x = -this.m_rA.y * this.m_rA.x * f - this.m_rB.y * this.m_rB.x * d;
p.ez.x = -this.m_rA.y * f - this.m_rB.y * d;
p.ex.y = p.ey.x;
p.ey.y = h + _ + this.m_rA.x * this.m_rA.x * f + this.m_rB.x * this.m_rB.x * d;
p.ez.y = this.m_rA.x * f + this.m_rB.x * d;
p.ex.z = p.ez.x;
p.ey.z = p.ez.y;
p.ez.z = f + d;
if (this.m_frequencyHz > 0) {
p.GetInverse22(this.m_mass);
var m = f + d, y = m > 0 ? 1 / m : 0, v = o - e - this.m_referenceAngle, g = 2 * s * this.m_frequencyHz, C = 2 * y * this.m_dampingRatio * g, x = y * g * g, A = t.step.dt;
this.m_gamma = A * (C + A * x);
this.m_gamma = 0 !== this.m_gamma ? 1 / this.m_gamma : 0;
this.m_bias = v * A * x * this.m_gamma;
m += this.m_gamma;
this.m_mass.ez.z = 0 !== m ? 1 / m : 0;
} else {
p.GetSymInverse33(this.m_mass);
this.m_gamma = 0;
this.m_bias = 0;
}
if (t.step.warmStarting) {
this.m_impulse.SelfMul(t.step.dtRatio);
var b = i.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);
n.SelfMulSub(h, b);
r -= f * (D.CrossVV(this.m_rA, b) + this.m_impulse.z);
a.SelfMulAdd(_, b);
c += d * (D.CrossVV(this.m_rB, b) + this.m_impulse.z);
} else this.m_impulse.SetZero();
t.velocities[this.m_indexA].w = r;
t.velocities[this.m_indexB].w = c;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB;
if (this.m_frequencyHz > 0) {
var u = s - n, h = -this.m_mass.ez.z * (u + this.m_bias + this.m_gamma * this.m_impulse.z);
this.m_impulse.z += h;
n -= c * h;
s += l * h;
var _ = D.SubVV(D.AddVCrossSV(r, s, this.m_rB, D.s_t0), D.AddVCrossSV(e, n, this.m_rA, D.s_t1), i.SolveVelocityConstraints_s_Cdot1), f = O.MulM33XY(this.m_mass, _.x, _.y, i.SolveVelocityConstraints_s_impulse1).SelfNeg();
this.m_impulse.x += f.x;
this.m_impulse.y += f.y;
var d = f;
e.SelfMulSub(o, d);
n -= c * D.CrossVV(this.m_rA, d);
r.SelfMulAdd(a, d);
s += l * D.CrossVV(this.m_rB, d);
} else {
_ = D.SubVV(D.AddVCrossSV(r, s, this.m_rB, D.s_t0), D.AddVCrossSV(e, n, this.m_rA, D.s_t1), i.SolveVelocityConstraints_s_Cdot1), 
u = s - n;
var p = O.MulM33XYZ(this.m_mass, _.x, _.y, u, i.SolveVelocityConstraints_s_impulse).SelfNeg();
this.m_impulse.SelfAdd(p);
d = i.SolveVelocityConstraints_s_P.Set(p.x, p.y);
e.SelfMulSub(o, d);
n -= c * (D.CrossVV(this.m_rA, d) + p.z);
r.SelfMulAdd(a, d);
s += l * (D.CrossVV(this.m_rB, d) + p.z);
}
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s), u = this.m_invMassA, h = this.m_invMassB, _ = this.m_invIA, f = this.m_invIB;
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var d = F.MulRV(o, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var p, m, y = F.MulRV(a, this.m_lalcB, this.m_rB), g = this.m_K;
g.ex.x = u + h + d.y * d.y * _ + y.y * y.y * f;
g.ey.x = -d.y * d.x * _ - y.y * y.x * f;
g.ez.x = -d.y * _ - y.y * f;
g.ex.y = g.ey.x;
g.ey.y = u + h + d.x * d.x * _ + y.x * y.x * f;
g.ez.y = d.x * _ + y.x * f;
g.ex.z = g.ez.x;
g.ey.z = g.ez.y;
g.ez.z = _ + f;
if (this.m_frequencyHz > 0) {
p = (x = D.SubVV(D.AddVV(r, y, D.s_t0), D.AddVV(e, d, D.s_t1), i.SolvePositionConstraints_s_C1)).Length();
m = 0;
var C = g.Solve22(x.x, x.y, i.SolvePositionConstraints_s_P).SelfNeg();
e.SelfMulSub(u, C);
n -= _ * D.CrossVV(d, C);
r.SelfMulAdd(h, C);
s += f * D.CrossVV(y, C);
} else {
var x = D.SubVV(D.AddVV(r, y, D.s_t0), D.AddVV(e, d, D.s_t1), i.SolvePositionConstraints_s_C1), A = s - n - this.m_referenceAngle;
p = x.Length();
m = v(A);
var b = g.Solve33(x.x, x.y, A, i.SolvePositionConstraints_s_impulse).SelfNeg();
C = i.SolvePositionConstraints_s_P.Set(b.x, b.y);
e.SelfMulSub(u, C);
n -= _ * (D.CrossVV(this.m_rA, C) + b.z);
r.SelfMulAdd(h, C);
s += f * (D.CrossVV(this.m_rB, C) + b.z);
}
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return p <= c && m <= l;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse.x;
e.y = t * this.m_impulse.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.z;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2WeldJointDef = new b2WeldJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.InitVelocityConstraints_s_P = new D();
i.SolveVelocityConstraints_s_Cdot1 = new D();
i.SolveVelocityConstraints_s_impulse1 = new D();
i.SolveVelocityConstraints_s_impulse = new V();
i.SolveVelocityConstraints_s_P = new D();
i.SolvePositionConstraints_s_C1 = new D();
i.SolvePositionConstraints_s_P = new D();
i.SolvePositionConstraints_s_impulse = new V();
return i;
})(fi), Oi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_wheelJoint) || this;
i.localAnchorA = new D(0, 0);
i.localAnchorB = new D(0, 0);
i.localAxisA = new D(1, 0);
i.enableMotor = !1;
i.maxMotorTorque = 0;
i.motorSpeed = 0;
i.frequencyHz = 2;
i.dampingRatio = .7;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.bodyA.GetLocalVector(n, this.localAxisA);
};
return i;
})(_i), Fi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_localAnchorA = new D();
n.m_localAnchorB = new D();
n.m_localXAxisA = new D();
n.m_localYAxisA = new D();
n.m_impulse = 0;
n.m_motorImpulse = 0;
n.m_springImpulse = 0;
n.m_maxMotorTorque = 0;
n.m_motorSpeed = 0;
n.m_enableMotor = !1;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_localCenterA = new D();
n.m_localCenterB = new D();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_ax = new D();
n.m_ay = new D();
n.m_sAx = 0;
n.m_sBx = 0;
n.m_sAy = 0;
n.m_sBy = 0;
n.m_mass = 0;
n.m_motorMass = 0;
n.m_springMass = 0;
n.m_bias = 0;
n.m_gamma = 0;
n.m_qA = new F();
n.m_qB = new F();
n.m_lalcA = new D();
n.m_lalcB = new D();
n.m_rA = new D();
n.m_rB = new D();
n.m_frequencyHz = e(i.frequencyHz, 2);
n.m_dampingRatio = e(i.dampingRatio, .7);
n.m_localAnchorA.Copy(e(i.localAnchorA, D.ZERO));
n.m_localAnchorB.Copy(e(i.localAnchorB, D.ZERO));
n.m_localXAxisA.Copy(e(i.localAxisA, D.UNITX));
D.CrossOneV(n.m_localXAxisA, n.m_localYAxisA);
n.m_maxMotorTorque = e(i.maxMotorTorque, 0);
n.m_motorSpeed = e(i.motorSpeed, 0);
n.m_enableMotor = e(i.enableMotor, !1);
n.m_ax.SetZero();
n.m_ay.SetZero();
return n;
}
i.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
i.prototype.GetMaxMotorTorque = function() {
return this.m_maxMotorTorque;
};
i.prototype.SetSpringFrequencyHz = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetSpringFrequencyHz = function() {
return this.m_frequencyHz;
};
i.prototype.SetSpringDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetSpringDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = this.m_invMassA, n = this.m_invMassB, r = this.m_invIA, o = this.m_invIB, a = t.positions[this.m_indexA].c, c = t.positions[this.m_indexA].a, l = t.velocities[this.m_indexA].v, u = t.velocities[this.m_indexA].w, h = t.positions[this.m_indexB].c, _ = t.positions[this.m_indexB].a, f = t.velocities[this.m_indexB].v, d = t.velocities[this.m_indexB].w, p = this.m_qA.SetAngle(c), m = this.m_qB.SetAngle(_);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var y = F.MulRV(p, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var v = F.MulRV(m, this.m_lalcB, this.m_rB), g = D.SubVV(D.AddVV(h, v, D.s_t0), D.AddVV(a, y, D.s_t1), i.InitVelocityConstraints_s_d);
F.MulRV(p, this.m_localYAxisA, this.m_ay);
this.m_sAy = D.CrossVV(D.AddVV(g, y, D.s_t0), this.m_ay);
this.m_sBy = D.CrossVV(v, this.m_ay);
this.m_mass = e + n + r * this.m_sAy * this.m_sAy + o * this.m_sBy * this.m_sBy;
this.m_mass > 0 && (this.m_mass = 1 / this.m_mass);
this.m_springMass = 0;
this.m_bias = 0;
this.m_gamma = 0;
if (this.m_frequencyHz > 0) {
F.MulRV(p, this.m_localXAxisA, this.m_ax);
this.m_sAx = D.CrossVV(D.AddVV(g, y, D.s_t0), this.m_ax);
this.m_sBx = D.CrossVV(v, this.m_ax);
var C = e + n + r * this.m_sAx * this.m_sAx + o * this.m_sBx * this.m_sBx;
if (C > 0) {
this.m_springMass = 1 / C;
var x = D.DotVV(g, this.m_ax), A = 2 * s * this.m_frequencyHz, b = 2 * this.m_springMass * this.m_dampingRatio * A, S = this.m_springMass * A * A, w = t.step.dt;
this.m_gamma = w * (b + w * S);
this.m_gamma > 0 && (this.m_gamma = 1 / this.m_gamma);
this.m_bias = x * w * S * this.m_gamma;
this.m_springMass = C + this.m_gamma;
this.m_springMass > 0 && (this.m_springMass = 1 / this.m_springMass);
}
} else this.m_springImpulse = 0;
if (this.m_enableMotor) {
this.m_motorMass = r + o;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
} else {
this.m_motorMass = 0;
this.m_motorImpulse = 0;
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
this.m_springImpulse *= t.step.dtRatio;
this.m_motorImpulse *= t.step.dtRatio;
var T = D.AddVV(D.MulSV(this.m_impulse, this.m_ay, D.s_t0), D.MulSV(this.m_springImpulse, this.m_ax, D.s_t1), i.InitVelocityConstraints_s_P), B = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse, E = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;
l.SelfMulSub(this.m_invMassA, T);
u -= this.m_invIA * B;
f.SelfMulAdd(this.m_invMassB, T);
d += this.m_invIB * E;
} else {
this.m_impulse = 0;
this.m_springImpulse = 0;
this.m_motorImpulse = 0;
}
t.velocities[this.m_indexA].w = u;
t.velocities[this.m_indexB].w = d;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = this.m_invMassA, n = this.m_invMassB, r = this.m_invIA, s = this.m_invIB, o = t.velocities[this.m_indexA].v, a = t.velocities[this.m_indexA].w, c = t.velocities[this.m_indexB].v, l = t.velocities[this.m_indexB].w, u = D.DotVV(this.m_ax, D.SubVV(c, o, D.s_t0)) + this.m_sBx * l - this.m_sAx * a, h = -this.m_springMass * (u + this.m_bias + this.m_gamma * this.m_springImpulse);
this.m_springImpulse += h;
var _ = D.MulSV(h, this.m_ax, i.SolveVelocityConstraints_s_P), f = h * this.m_sAx, d = h * this.m_sBx;
o.SelfMulSub(e, _);
a -= r * f;
c.SelfMulAdd(n, _);
u = (l += s * d) - a - this.m_motorSpeed, h = -this.m_motorMass * u;
var p = this.m_motorImpulse, m = t.step.dt * this.m_maxMotorTorque;
this.m_motorImpulse = x(this.m_motorImpulse + h, -m, m);
a -= r * (h = this.m_motorImpulse - p);
l += s * h;
u = D.DotVV(this.m_ay, D.SubVV(c, o, D.s_t0)) + this.m_sBy * l - this.m_sAy * a, 
h = -this.m_mass * u;
this.m_impulse += h;
_ = D.MulSV(h, this.m_ay, i.SolveVelocityConstraints_s_P), f = h * this.m_sAy, d = h * this.m_sBy;
o.SelfMulSub(e, _);
a -= r * f;
c.SelfMulAdd(n, _);
l += s * d;
t.velocities[this.m_indexA].w = a;
t.velocities[this.m_indexB].w = l;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s);
D.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = F.MulRV(o, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u, h = F.MulRV(a, this.m_lalcB, this.m_rB), _ = D.AddVV(D.SubVV(r, e, D.s_t0), D.SubVV(h, l, D.s_t1), i.SolvePositionConstraints_s_d), f = F.MulRV(o, this.m_localYAxisA, this.m_ay), d = D.CrossVV(D.AddVV(_, l, D.s_t0), f), p = D.CrossVV(h, f), m = D.DotVV(_, this.m_ay), y = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;
u = 0 !== y ? -m / y : 0;
var g = D.MulSV(u, f, i.SolvePositionConstraints_s_P), C = u * d, x = u * p;
e.SelfMulSub(this.m_invMassA, g);
n -= this.m_invIA * C;
r.SelfMulAdd(this.m_invMassB, g);
s += this.m_invIB * x;
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return v(m) <= c;
};
i.prototype.GetDefinition = function(t) {
return t;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);
e.y = t * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_motorImpulse;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.GetLocalAxisA = function() {
return this.m_localXAxisA;
};
i.prototype.GetJointTranslation = function() {
return this.GetPrismaticJointTranslation();
};
i.prototype.GetJointLinearSpeed = function() {
return this.GetPrismaticJointSpeed();
};
i.prototype.GetJointAngle = function() {
return this.GetRevoluteJointAngle();
};
i.prototype.GetJointAngularSpeed = function() {
return this.GetRevoluteJointSpeed();
};
i.prototype.GetPrismaticJointTranslation = function() {
var t = this.m_bodyA, e = this.m_bodyB, i = t.GetWorldPoint(this.m_localAnchorA, new D()), n = e.GetWorldPoint(this.m_localAnchorB, new D()), r = D.SubVV(n, i, new D()), s = t.GetWorldVector(this.m_localXAxisA, new D());
return D.DotVV(r, s);
};
i.prototype.GetPrismaticJointSpeed = function() {
var t = this.m_bodyA, e = this.m_bodyB;
D.SubVV(this.m_localAnchorA, t.m_sweep.localCenter, this.m_lalcA);
var i = F.MulRV(t.m_xf.q, this.m_lalcA, this.m_rA);
D.SubVV(this.m_localAnchorB, e.m_sweep.localCenter, this.m_lalcB);
var n = F.MulRV(e.m_xf.q, this.m_lalcB, this.m_rB), r = D.AddVV(t.m_sweep.c, i, D.s_t0), s = D.AddVV(e.m_sweep.c, n, D.s_t1), o = D.SubVV(s, r, D.s_t2), a = t.GetWorldVector(this.m_localXAxisA, new D()), c = t.m_linearVelocity, l = e.m_linearVelocity, u = t.m_angularVelocity, h = e.m_angularVelocity;
return D.DotVV(o, D.CrossSV(u, a, D.s_t0)) + D.DotVV(a, D.SubVV(D.AddVCrossSV(l, h, n, D.s_t0), D.AddVCrossSV(c, u, i, D.s_t1), D.s_t0));
};
i.prototype.GetRevoluteJointAngle = function() {
return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;
};
i.prototype.GetRevoluteJointSpeed = function() {
var t = this.m_bodyA.m_angularVelocity;
return this.m_bodyB.m_angularVelocity - t;
};
i.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
i.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
i.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
i.prototype.SetMaxMotorTorque = function(t) {
if (t !== this.m_maxMotorTorque) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorTorque = t;
}
};
i.prototype.GetMotorTorque = function(t) {
return t * this.m_motorImpulse;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2WheelJointDef = new b2WheelJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.localAxisA.Set(%.15f, %.15f);\n", this.m_localXAxisA.x, this.m_localXAxisA.y);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorTorque = %.15f;\n", this.m_maxMotorTorque);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.InitVelocityConstraints_s_d = new D();
i.InitVelocityConstraints_s_P = new D();
i.SolveVelocityConstraints_s_P = new D();
i.SolvePositionConstraints_s_d = new D();
i.SolvePositionConstraints_s_P = new D();
return i;
})(fi);
function Ni(t, e) {
return w(t * e);
}
function Gi(t, e) {
return t > e ? t : e;
}
var zi = (function() {
return function(t) {
this.prev = null;
this.next = null;
this.contact = t;
};
})(), ki = (function() {
function t() {
this.m_islandFlag = !1;
this.m_touchingFlag = !1;
this.m_enabledFlag = !1;
this.m_filterFlag = !1;
this.m_bulletHitFlag = !1;
this.m_toiFlag = !1;
this.m_prev = null;
this.m_next = null;
this.m_indexA = 0;
this.m_indexB = 0;
this.m_manifold = new xt();
this.m_toiCount = 0;
this.m_toi = 0;
this.m_friction = 0;
this.m_restitution = 0;
this.m_tangentSpeed = 0;
this.m_oldManifold = new xt();
this.m_nodeA = new zi(this);
this.m_nodeB = new zi(this);
}
t.prototype.GetManifold = function() {
return this.m_manifold;
};
t.prototype.GetWorldManifold = function(t) {
var e = this.m_fixtureA.GetBody(), i = this.m_fixtureB.GetBody(), n = this.m_fixtureA.GetShape(), r = this.m_fixtureB.GetShape();
t.Initialize(this.m_manifold, e.GetTransform(), n.m_radius, i.GetTransform(), r.m_radius);
};
t.prototype.IsTouching = function() {
return this.m_touchingFlag;
};
t.prototype.SetEnabled = function(t) {
this.m_enabledFlag = t;
};
t.prototype.IsEnabled = function() {
return this.m_enabledFlag;
};
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetFixtureA = function() {
return this.m_fixtureA;
};
t.prototype.GetChildIndexA = function() {
return this.m_indexA;
};
t.prototype.GetFixtureB = function() {
return this.m_fixtureB;
};
t.prototype.GetChildIndexB = function() {
return this.m_indexB;
};
t.prototype.FlagForFiltering = function() {
this.m_filterFlag = !0;
};
t.prototype.SetFriction = function(t) {
this.m_friction = t;
};
t.prototype.GetFriction = function() {
return this.m_friction;
};
t.prototype.ResetFriction = function() {
this.m_friction = Ni(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);
};
t.prototype.SetRestitution = function(t) {
this.m_restitution = t;
};
t.prototype.GetRestitution = function() {
return this.m_restitution;
};
t.prototype.ResetRestitution = function() {
this.m_restitution = Gi(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);
};
t.prototype.SetTangentSpeed = function(t) {
this.m_tangentSpeed = t;
};
t.prototype.GetTangentSpeed = function() {
return this.m_tangentSpeed;
};
t.prototype.Reset = function(t, e, i, n) {
this.m_islandFlag = !1;
this.m_touchingFlag = !1;
this.m_enabledFlag = !0;
this.m_filterFlag = !1;
this.m_bulletHitFlag = !1;
this.m_toiFlag = !1;
this.m_fixtureA = t;
this.m_fixtureB = i;
this.m_indexA = e;
this.m_indexB = n;
this.m_manifold.pointCount = 0;
this.m_prev = null;
this.m_next = null;
delete this.m_nodeA.contact;
this.m_nodeA.prev = null;
this.m_nodeA.next = null;
delete this.m_nodeA.other;
delete this.m_nodeB.contact;
this.m_nodeB.prev = null;
this.m_nodeB.next = null;
delete this.m_nodeB.other;
this.m_toiCount = 0;
this.m_friction = Ni(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);
this.m_restitution = Gi(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);
};
t.prototype.Update = function(t) {
var e = this.m_oldManifold;
this.m_oldManifold = this.m_manifold;
this.m_manifold = e;
this.m_enabledFlag = !0;
var i = !1, n = this.m_touchingFlag, r = this.m_fixtureA.IsSensor(), s = this.m_fixtureB.IsSensor(), o = r || s, a = this.m_fixtureA.GetBody(), c = this.m_fixtureB.GetBody(), l = a.GetTransform(), u = c.GetTransform();
if (o) {
var h = this.m_fixtureA.GetShape(), _ = this.m_fixtureB.GetShape();
i = Dt(h, this.m_indexA, _, this.m_indexB, l, u);
this.m_manifold.pointCount = 0;
} else {
this.Evaluate(this.m_manifold, l, u);
i = this.m_manifold.pointCount > 0;
for (var f = 0; f < this.m_manifold.pointCount; ++f) {
var d = this.m_manifold.points[f];
d.normalImpulse = 0;
d.tangentImpulse = 0;
for (var p = d.id, m = 0; m < this.m_oldManifold.pointCount; ++m) {
var y = this.m_oldManifold.points[m];
if (y.id.key === p.key) {
d.normalImpulse = y.normalImpulse;
d.tangentImpulse = y.tangentImpulse;
break;
}
}
}
if (i !== n) {
a.SetAwake(!0);
c.SetAwake(!0);
}
}
this.m_touchingFlag = i;
!n && i && t && t.BeginContact(this);
n && !i && t && t.EndContact(this);
!o && i && t && t.PreSolve(this, this.m_oldManifold);
};
t.prototype.ComputeTOI = function(e, i) {
var n = t.ComputeTOI_s_input;
n.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);
n.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);
n.sweepA.Copy(e);
n.sweepB.Copy(i);
n.tMax = c;
var r = t.ComputeTOI_s_output;
re(r, n);
return r.t;
};
t.ComputeTOI_s_input = new qt();
t.ComputeTOI_s_output = new Xt();
return t;
})(), Ui = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
ae(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(ki), ji = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
Le(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(ki), Wi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
he(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(ki), Hi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
We(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(ki), qi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
Je(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(ki), Xi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, i, n) {
var r = this.m_fixtureA.GetShape(), s = this.m_fixtureB.GetShape(), o = r, a = e.Evaluate_s_edge;
o.GetChildEdge(a, this.m_indexA);
We(t, a, i, s, n);
};
e.Evaluate_s_edge = new ii();
return e;
})(ki), Yi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, i, n) {
var r = this.m_fixtureA.GetShape(), s = this.m_fixtureB.GetShape(), o = r, a = e.Evaluate_s_edge;
o.GetChildEdge(a, this.m_indexA);
Je(t, a, i, s, n);
};
e.Evaluate_s_edge = new ii();
return e;
})(ki), Ji = (function() {
return function() {
this.createFcn = null;
this.destroyFcn = null;
this.primary = !1;
};
})(), Zi = (function() {
function e(t) {
this.m_allocator = null;
this.m_allocator = t;
this.InitializeRegisters();
}
e.prototype.AddType = function(t, e, i, n) {
var r = this, s = d(256, (function(e) {
return t(r.m_allocator);
}));
function o(e) {
return s.pop() || t(e);
}
function a(t, e) {
s.push(t);
}
this.m_registers[i][n].createFcn = o;
this.m_registers[i][n].destroyFcn = a;
this.m_registers[i][n].primary = !0;
if (i !== n) {
this.m_registers[n][i].createFcn = o;
this.m_registers[n][i].destroyFcn = a;
this.m_registers[n][i].primary = !1;
}
};
e.prototype.InitializeRegisters = function() {
this.m_registers = [];
for (var e = 0; e < t.b2ShapeType.e_shapeTypeCount; e++) {
this.m_registers[e] = [];
for (var i = 0; i < t.b2ShapeType.e_shapeTypeCount; i++) this.m_registers[e][i] = new Ji();
}
this.AddType(Ui.Create, Ui.Destroy, t.b2ShapeType.e_circleShape, t.b2ShapeType.e_circleShape);
this.AddType(Wi.Create, Wi.Destroy, t.b2ShapeType.e_polygonShape, t.b2ShapeType.e_circleShape);
this.AddType(ji.Create, ji.Destroy, t.b2ShapeType.e_polygonShape, t.b2ShapeType.e_polygonShape);
this.AddType(Hi.Create, Hi.Destroy, t.b2ShapeType.e_edgeShape, t.b2ShapeType.e_circleShape);
this.AddType(qi.Create, qi.Destroy, t.b2ShapeType.e_edgeShape, t.b2ShapeType.e_polygonShape);
this.AddType(Xi.Create, Xi.Destroy, t.b2ShapeType.e_chainShape, t.b2ShapeType.e_circleShape);
this.AddType(Yi.Create, Yi.Destroy, t.b2ShapeType.e_chainShape, t.b2ShapeType.e_polygonShape);
};
e.prototype.Create = function(t, e, i, n) {
var r = t.GetType(), s = i.GetType(), o = this.m_registers[r][s];
if (o.createFcn) {
var a = o.createFcn(this.m_allocator);
o.primary ? a.Reset(t, e, i, n) : a.Reset(i, n, t, e);
return a;
}
return null;
};
e.prototype.Destroy = function(t) {
var e = t.m_fixtureA, i = t.m_fixtureB;
if (t.m_manifold.pointCount > 0 && !e.IsSensor() && !i.IsSensor()) {
e.GetBody().SetAwake(!0);
i.GetBody().SetAwake(!0);
}
var n = e.GetType(), r = i.GetType(), s = this.m_registers[n][r];
s.destroyFcn && s.destroyFcn(t, this.m_allocator);
};
return e;
})(), Ki = (function() {
function t() {}
t.prototype.SayGoodbyeJoint = function(t) {};
t.prototype.SayGoodbyeFixture = function(t) {};
t.prototype.SayGoodbyeParticleGroup = function(t) {};
t.prototype.SayGoodbyeParticle = function(t, e) {};
return t;
})(), Qi = (function() {
function e() {}
e.prototype.ShouldCollide = function(e, i) {
var n = e.GetBody(), r = i.GetBody();
if (r.GetType() === t.b2BodyType.b2_staticBody && n.GetType() === t.b2BodyType.b2_staticBody) return !1;
if (!r.ShouldCollideConnected(n)) return !1;
var s = e.GetFilterData(), o = i.GetFilterData();
return s.groupIndex === o.groupIndex && 0 !== s.groupIndex ? s.groupIndex > 0 : 0 != (s.maskBits & o.categoryBits) && 0 != (s.categoryBits & o.maskBits);
};
e.prototype.ShouldCollideFixtureParticle = function(t, e, i) {
return !0;
};
e.prototype.ShouldCollideParticleParticle = function(t, e, i) {
return !0;
};
e.b2_defaultFilter = new e();
return e;
})(), $i = (function() {
return function() {
this.normalImpulses = p(o);
this.tangentImpulses = p(o);
this.count = 0;
};
})(), tn = (function() {
function t() {}
t.prototype.BeginContact = function(t) {};
t.prototype.EndContact = function(t) {};
t.prototype.BeginContactFixtureParticle = function(t, e) {};
t.prototype.EndContactFixtureParticle = function(t, e) {};
t.prototype.BeginContactParticleParticle = function(t, e) {};
t.prototype.EndContactParticleParticle = function(t, e) {};
t.prototype.PreSolve = function(t, e) {};
t.prototype.PostSolve = function(t, e) {};
t.b2_defaultListener = new t();
return t;
})(), en = (function() {
function t() {}
t.prototype.ReportFixture = function(t) {
return !0;
};
t.prototype.ReportParticle = function(t, e) {
return !1;
};
t.prototype.ShouldQueryParticleSystem = function(t) {
return !0;
};
return t;
})(), nn = (function() {
function t() {}
t.prototype.ReportFixture = function(t, e, i, n) {
return n;
};
t.prototype.ReportParticle = function(t, e, i, n, r) {
return 0;
};
t.prototype.ShouldQueryParticleSystem = function(t) {
return !0;
};
return t;
})(), rn = (function() {
function e() {
this.m_broadPhase = new Ft();
this.m_contactList = null;
this.m_contactCount = 0;
this.m_contactFilter = Qi.b2_defaultFilter;
this.m_contactListener = tn.b2_defaultListener;
this.m_allocator = null;
this.m_contactFactory = new Zi(this.m_allocator);
}
e.prototype.AddPair = function(t, e) {
var i = t.fixture, n = e.fixture, r = t.childIndex, s = e.childIndex, o = i.GetBody(), a = n.GetBody();
if (o !== a) {
for (var c = a.GetContactList(); c; ) {
if (c.other === o) {
var l = c.contact.GetFixtureA(), u = c.contact.GetFixtureB(), h = c.contact.GetChildIndexA(), _ = c.contact.GetChildIndexB();
if (l === i && u === n && h === r && _ === s) return;
if (l === n && u === i && h === s && _ === r) return;
}
c = c.next;
}
if (!this.m_contactFilter || this.m_contactFilter.ShouldCollide(i, n)) {
var f = this.m_contactFactory.Create(i, r, n, s);
if (null !== f) {
i = f.GetFixtureA();
n = f.GetFixtureB();
r = f.GetChildIndexA();
s = f.GetChildIndexB();
o = i.m_body;
a = n.m_body;
f.m_prev = null;
f.m_next = this.m_contactList;
null !== this.m_contactList && (this.m_contactList.m_prev = f);
this.m_contactList = f;
f.m_nodeA.contact = f;
f.m_nodeA.other = a;
f.m_nodeA.prev = null;
f.m_nodeA.next = o.m_contactList;
null !== o.m_contactList && (o.m_contactList.prev = f.m_nodeA);
o.m_contactList = f.m_nodeA;
f.m_nodeB.contact = f;
f.m_nodeB.other = o;
f.m_nodeB.prev = null;
f.m_nodeB.next = a.m_contactList;
null !== a.m_contactList && (a.m_contactList.prev = f.m_nodeB);
a.m_contactList = f.m_nodeB;
if (!i.IsSensor() && !n.IsSensor()) {
o.SetAwake(!0);
a.SetAwake(!0);
}
++this.m_contactCount;
}
}
}
};
e.prototype.FindNewContacts = function() {
var t = this;
this.m_broadPhase.UpdatePairs((function(e, i) {
t.AddPair(e, i);
}));
};
e.prototype.Destroy = function(t) {
var e = t.GetFixtureA(), i = t.GetFixtureB(), n = e.GetBody(), r = i.GetBody();
this.m_contactListener && t.IsTouching() && this.m_contactListener.EndContact(t);
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_contactList && (this.m_contactList = t.m_next);
t.m_nodeA.prev && (t.m_nodeA.prev.next = t.m_nodeA.next);
t.m_nodeA.next && (t.m_nodeA.next.prev = t.m_nodeA.prev);
t.m_nodeA === n.m_contactList && (n.m_contactList = t.m_nodeA.next);
t.m_nodeB.prev && (t.m_nodeB.prev.next = t.m_nodeB.next);
t.m_nodeB.next && (t.m_nodeB.next.prev = t.m_nodeB.prev);
t.m_nodeB === r.m_contactList && (r.m_contactList = t.m_nodeB.next);
this.m_contactFactory.Destroy(t);
--this.m_contactCount;
};
e.prototype.Collide = function() {
for (var e = this.m_contactList; e; ) {
var i = e.GetFixtureA(), n = e.GetFixtureB(), r = e.GetChildIndexA(), s = e.GetChildIndexB(), o = i.GetBody(), a = n.GetBody();
if (e.m_filterFlag) {
if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(i, n)) {
e = (_ = e).m_next;
this.Destroy(_);
continue;
}
e.m_filterFlag = !1;
}
var c = o.IsAwake() && o.m_type !== t.b2BodyType.b2_staticBody, l = a.IsAwake() && a.m_type !== t.b2BodyType.b2_staticBody;
if (c || l) {
var u = i.m_proxies[r].treeNode, h = n.m_proxies[s].treeNode;
if (Bt(u.aabb, h.aabb)) {
e.Update(this.m_contactListener);
e = e.m_next;
} else {
var _;
e = (_ = e).m_next;
this.Destroy(_);
}
} else e = e.m_next;
}
};
return e;
})(), sn = (function() {
function t() {
this.step = 0;
this.collide = 0;
this.solve = 0;
this.solveInit = 0;
this.solveVelocity = 0;
this.solvePosition = 0;
this.broadphase = 0;
this.solveTOI = 0;
}
t.prototype.Reset = function() {
this.step = 0;
this.collide = 0;
this.solve = 0;
this.solveInit = 0;
this.solveVelocity = 0;
this.solvePosition = 0;
this.broadphase = 0;
this.solveTOI = 0;
return this;
};
return t;
})(), on = (function() {
function t() {
this.dt = 0;
this.inv_dt = 0;
this.dtRatio = 0;
this.velocityIterations = 0;
this.positionIterations = 0;
this.particleIterations = 0;
this.warmStarting = !1;
}
t.prototype.Copy = function(t) {
this.dt = t.dt;
this.inv_dt = t.inv_dt;
this.dtRatio = t.dtRatio;
this.positionIterations = t.positionIterations;
this.velocityIterations = t.velocityIterations;
this.particleIterations = t.particleIterations;
this.warmStarting = t.warmStarting;
return this;
};
return t;
})(), an = (function() {
function t() {
this.c = new D();
this.a = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), cn = (function() {
function t() {
this.v = new D();
this.w = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), ln = (function() {
return function() {
this.step = new on();
};
})(), un = (function() {
function t() {
this.rA = new D();
this.rB = new D();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.normalMass = 0;
this.tangentMass = 0;
this.velocityBias = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), hn = (function() {
function t() {
this.points = un.MakeArray(o);
this.normal = new D();
this.tangent = new D();
this.normalMass = new L();
this.K = new L();
this.indexA = 0;
this.indexB = 0;
this.invMassA = 0;
this.invMassB = 0;
this.invIA = 0;
this.invIB = 0;
this.friction = 0;
this.restitution = 0;
this.tangentSpeed = 0;
this.pointCount = 0;
this.contactIndex = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), _n = (function() {
function e() {
this.localPoints = D.MakeArray(o);
this.localNormal = new D();
this.localPoint = new D();
this.indexA = 0;
this.indexB = 0;
this.invMassA = 0;
this.invMassB = 0;
this.localCenterA = new D();
this.localCenterB = new D();
this.invIA = 0;
this.invIB = 0;
this.type = t.b2ManifoldType.e_unknown;
this.radiusA = 0;
this.radiusB = 0;
this.pointCount = 0;
}
e.MakeArray = function(t) {
return d(t, (function(t) {
return new e();
}));
};
return e;
})(), fn = (function() {
return function() {
this.step = new on();
this.count = 0;
this.allocator = null;
};
})(), dn = (function() {
function e() {
this.normal = new D();
this.point = new D();
this.separation = 0;
}
e.prototype.Initialize = function(i, n, r, s) {
var o = e.Initialize_s_pointA, a = e.Initialize_s_pointB, c = e.Initialize_s_planePoint, l = e.Initialize_s_clipPoint;
switch (i.type) {
case t.b2ManifoldType.e_circles:
N.MulXV(n, i.localPoint, o);
N.MulXV(r, i.localPoints[0], a);
D.SubVV(a, o, this.normal).SelfNormalize();
D.MidVV(o, a, this.point);
this.separation = D.DotVV(D.SubVV(a, o, D.s_t0), this.normal) - i.radiusA - i.radiusB;
break;

case t.b2ManifoldType.e_faceA:
F.MulRV(n.q, i.localNormal, this.normal);
N.MulXV(n, i.localPoint, c);
N.MulXV(r, i.localPoints[s], l);
this.separation = D.DotVV(D.SubVV(l, c, D.s_t0), this.normal) - i.radiusA - i.radiusB;
this.point.Copy(l);
break;

case t.b2ManifoldType.e_faceB:
F.MulRV(r.q, i.localNormal, this.normal);
N.MulXV(r, i.localPoint, c);
N.MulXV(n, i.localPoints[s], l);
this.separation = D.DotVV(D.SubVV(l, c, D.s_t0), this.normal) - i.radiusA - i.radiusB;
this.point.Copy(l);
this.normal.SelfNeg();
}
};
e.Initialize_s_pointA = new D();
e.Initialize_s_pointB = new D();
e.Initialize_s_planePoint = new D();
e.Initialize_s_clipPoint = new D();
return e;
})(), pn = (function() {
function t() {
this.m_step = new on();
this.m_allocator = null;
this.m_positionConstraints = _n.MakeArray(1024);
this.m_velocityConstraints = hn.MakeArray(1024);
this.m_count = 0;
}
t.prototype.Initialize = function(t) {
this.m_step.Copy(t.step);
this.m_allocator = t.allocator;
this.m_count = t.count;
if (this.m_positionConstraints.length < this.m_count) for (var e = C(2 * this.m_positionConstraints.length, this.m_count); this.m_positionConstraints.length < e; ) this.m_positionConstraints[this.m_positionConstraints.length] = new _n();
if (this.m_velocityConstraints.length < this.m_count) for (e = C(2 * this.m_velocityConstraints.length, this.m_count); this.m_velocityConstraints.length < e; ) this.m_velocityConstraints[this.m_velocityConstraints.length] = new hn();
this.m_positions = t.positions;
this.m_velocities = t.velocities;
this.m_contacts = t.contacts;
for (var i = 0; i < this.m_count; ++i) {
var n = this.m_contacts[i], r = n.m_fixtureA, s = n.m_fixtureB, o = r.GetShape(), a = s.GetShape(), c = o.m_radius, l = a.m_radius, u = r.GetBody(), h = s.GetBody(), _ = n.GetManifold(), f = _.pointCount, d = this.m_velocityConstraints[i];
d.friction = n.m_friction;
d.restitution = n.m_restitution;
d.tangentSpeed = n.m_tangentSpeed;
d.indexA = u.m_islandIndex;
d.indexB = h.m_islandIndex;
d.invMassA = u.m_invMass;
d.invMassB = h.m_invMass;
d.invIA = u.m_invI;
d.invIB = h.m_invI;
d.contactIndex = i;
d.pointCount = f;
d.K.SetZero();
d.normalMass.SetZero();
var p = this.m_positionConstraints[i];
p.indexA = u.m_islandIndex;
p.indexB = h.m_islandIndex;
p.invMassA = u.m_invMass;
p.invMassB = h.m_invMass;
p.localCenterA.Copy(u.m_sweep.localCenter);
p.localCenterB.Copy(h.m_sweep.localCenter);
p.invIA = u.m_invI;
p.invIB = h.m_invI;
p.localNormal.Copy(_.localNormal);
p.localPoint.Copy(_.localPoint);
p.pointCount = f;
p.radiusA = c;
p.radiusB = l;
p.type = _.type;
for (var m = 0; m < f; ++m) {
var y = _.points[m], v = d.points[m];
if (this.m_step.warmStarting) {
v.normalImpulse = this.m_step.dtRatio * y.normalImpulse;
v.tangentImpulse = this.m_step.dtRatio * y.tangentImpulse;
} else {
v.normalImpulse = 0;
v.tangentImpulse = 0;
}
v.rA.SetZero();
v.rB.SetZero();
v.normalMass = 0;
v.tangentMass = 0;
v.velocityBias = 0;
p.localPoints[m].Copy(y.localPoint);
}
}
return this;
};
t.prototype.InitializeVelocityConstraints = function() {
for (var e = t.InitializeVelocityConstraints_s_xfA, i = t.InitializeVelocityConstraints_s_xfB, n = t.InitializeVelocityConstraints_s_worldManifold, r = 0; r < this.m_count; ++r) {
var s = this.m_velocityConstraints[r], o = this.m_positionConstraints[r], a = o.radiusA, c = o.radiusB, l = this.m_contacts[s.contactIndex].GetManifold(), u = s.indexA, h = s.indexB, _ = s.invMassA, f = s.invMassB, d = s.invIA, p = s.invIB, m = o.localCenterA, y = o.localCenterB, v = this.m_positions[u].c, g = this.m_positions[u].a, C = this.m_velocities[u].v, x = this.m_velocities[u].w, A = this.m_positions[h].c, b = this.m_positions[h].a, S = this.m_velocities[h].v, w = this.m_velocities[h].w;
e.q.SetAngle(g);
i.q.SetAngle(b);
D.SubVV(v, F.MulRV(e.q, m, D.s_t0), e.p);
D.SubVV(A, F.MulRV(i.q, y, D.s_t0), i.p);
n.Initialize(l, e, a, i, c);
s.normal.Copy(n.normal);
D.CrossVOne(s.normal, s.tangent);
for (var T = s.pointCount, B = 0; B < T; ++B) {
var E = s.points[B];
D.SubVV(n.points[B], v, E.rA);
D.SubVV(n.points[B], A, E.rB);
var M = D.CrossVV(E.rA, s.normal), I = D.CrossVV(E.rB, s.normal), R = _ + f + d * M * M + p * I * I;
E.normalMass = R > 0 ? 1 / R : 0;
var P = s.tangent, V = D.CrossVV(E.rA, P), L = D.CrossVV(E.rB, P), O = _ + f + d * V * V + p * L * L;
E.tangentMass = O > 0 ? 1 / O : 0;
E.velocityBias = 0;
var N = D.DotVV(s.normal, D.SubVV(D.AddVCrossSV(S, w, E.rB, D.s_t0), D.AddVCrossSV(C, x, E.rA, D.s_t1), D.s_t0));
N < -1 && (E.velocityBias += -s.restitution * N);
}
s.pointCount;
}
};
t.prototype.WarmStart = function() {
for (var e = t.WarmStart_s_P, i = 0; i < this.m_count; ++i) {
for (var n = this.m_velocityConstraints[i], r = n.indexA, s = n.indexB, o = n.invMassA, a = n.invIA, c = n.invMassB, l = n.invIB, u = n.pointCount, h = this.m_velocities[r].v, _ = this.m_velocities[r].w, f = this.m_velocities[s].v, d = this.m_velocities[s].w, p = n.normal, m = n.tangent, y = 0; y < u; ++y) {
var v = n.points[y];
D.AddVV(D.MulSV(v.normalImpulse, p, D.s_t0), D.MulSV(v.tangentImpulse, m, D.s_t1), e);
_ -= a * D.CrossVV(v.rA, e);
h.SelfMulSub(o, e);
d += l * D.CrossVV(v.rB, e);
f.SelfMulAdd(c, e);
}
this.m_velocities[r].w = _;
this.m_velocities[s].w = d;
}
};
t.prototype.SolveVelocityConstraints = function() {
for (var e = t.SolveVelocityConstraints_s_dv, i = (t.SolveVelocityConstraints_s_dv1, 
t.SolveVelocityConstraints_s_dv2, t.SolveVelocityConstraints_s_P), n = (t.SolveVelocityConstraints_s_a, 
t.SolveVelocityConstraints_s_b, t.SolveVelocityConstraints_s_x, t.SolveVelocityConstraints_s_d, 
t.SolveVelocityConstraints_s_P1, t.SolveVelocityConstraints_s_P2, t.SolveVelocityConstraints_s_P1P2, 
0); n < this.m_count; ++n) {
for (var r = this.m_velocityConstraints[n], s = r.indexA, o = r.indexB, a = r.invMassA, c = r.invIA, l = r.invMassB, u = r.invIB, h = r.pointCount, _ = this.m_velocities[s].v, f = this.m_velocities[s].w, d = this.m_velocities[o].v, p = this.m_velocities[o].w, m = r.normal, y = r.tangent, v = r.friction, g = 0; g < h; ++g) {
var A = r.points[g];
D.SubVV(D.AddVCrossSV(d, p, A.rB, D.s_t0), D.AddVCrossSV(_, f, A.rA, D.s_t1), e);
var b = D.DotVV(e, y) - r.tangentSpeed, S = A.tangentMass * -b, w = v * A.normalImpulse;
S = (T = x(A.tangentImpulse + S, -w, w)) - A.tangentImpulse;
A.tangentImpulse = T;
D.MulSV(S, y, i);
_.SelfMulSub(a, i);
f -= c * D.CrossVV(A.rA, i);
d.SelfMulAdd(l, i);
p += u * D.CrossVV(A.rB, i);
}
r.pointCount;
for (g = 0; g < h; ++g) {
A = r.points[g];
D.SubVV(D.AddVCrossSV(d, p, A.rB, D.s_t0), D.AddVCrossSV(_, f, A.rA, D.s_t1), e);
var T, B = D.DotVV(e, m);
S = -A.normalMass * (B - A.velocityBias);
S = (T = C(A.normalImpulse + S, 0)) - A.normalImpulse;
A.normalImpulse = T;
D.MulSV(S, m, i);
_.SelfMulSub(a, i);
f -= c * D.CrossVV(A.rA, i);
d.SelfMulAdd(l, i);
p += u * D.CrossVV(A.rB, i);
}
this.m_velocities[s].w = f;
this.m_velocities[o].w = p;
}
};
t.prototype.StoreImpulses = function() {
for (var t = 0; t < this.m_count; ++t) for (var e = this.m_velocityConstraints[t], i = this.m_contacts[e.contactIndex].GetManifold(), n = 0; n < e.pointCount; ++n) {
i.points[n].normalImpulse = e.points[n].normalImpulse;
i.points[n].tangentImpulse = e.points[n].tangentImpulse;
}
};
t.prototype.SolvePositionConstraints = function() {
for (var e = t.SolvePositionConstraints_s_xfA, i = t.SolvePositionConstraints_s_xfB, n = t.SolvePositionConstraints_s_psm, r = t.SolvePositionConstraints_s_rA, s = t.SolvePositionConstraints_s_rB, o = t.SolvePositionConstraints_s_P, a = 0, l = 0; l < this.m_count; ++l) {
for (var u = this.m_positionConstraints[l], h = u.indexA, _ = u.indexB, f = u.localCenterA, d = u.invMassA, p = u.invIA, m = u.localCenterB, y = u.invMassB, v = u.invIB, C = u.pointCount, A = this.m_positions[h].c, b = this.m_positions[h].a, S = this.m_positions[_].c, w = this.m_positions[_].a, T = 0; T < C; ++T) {
e.q.SetAngle(b);
i.q.SetAngle(w);
D.SubVV(A, F.MulRV(e.q, f, D.s_t0), e.p);
D.SubVV(S, F.MulRV(i.q, m, D.s_t0), i.p);
n.Initialize(u, e, i, T);
var B = n.normal, E = n.point, M = n.separation;
D.SubVV(E, A, r);
D.SubVV(E, S, s);
a = g(a, M);
var I = x(.2 * (M + c), -.2, 0), R = D.CrossVV(r, B), P = D.CrossVV(s, B), V = d + y + p * R * R + v * P * P, L = V > 0 ? -I / V : 0;
D.MulSV(L, B, o);
A.SelfMulSub(d, o);
b -= p * D.CrossVV(r, o);
S.SelfMulAdd(y, o);
w += v * D.CrossVV(s, o);
}
this.m_positions[h].a = b;
this.m_positions[_].a = w;
}
return a > -3 * c;
};
t.prototype.SolveTOIPositionConstraints = function(e, i) {
for (var n = t.SolveTOIPositionConstraints_s_xfA, r = t.SolveTOIPositionConstraints_s_xfB, s = t.SolveTOIPositionConstraints_s_psm, o = t.SolveTOIPositionConstraints_s_rA, a = t.SolveTOIPositionConstraints_s_rB, l = t.SolveTOIPositionConstraints_s_P, u = 0, h = 0; h < this.m_count; ++h) {
var _ = this.m_positionConstraints[h], f = _.indexA, d = _.indexB, p = _.localCenterA, m = _.localCenterB, y = _.pointCount, v = 0, C = 0;
if (f === e || f === i) {
v = _.invMassA;
C = _.invIA;
}
var A = 0, b = 0;
if (d === e || d === i) {
A = _.invMassB;
b = _.invIB;
}
for (var S = this.m_positions[f].c, w = this.m_positions[f].a, T = this.m_positions[d].c, B = this.m_positions[d].a, E = 0; E < y; ++E) {
n.q.SetAngle(w);
r.q.SetAngle(B);
D.SubVV(S, F.MulRV(n.q, p, D.s_t0), n.p);
D.SubVV(T, F.MulRV(r.q, m, D.s_t0), r.p);
s.Initialize(_, n, r, E);
var M = s.normal, I = s.point, R = s.separation;
D.SubVV(I, S, o);
D.SubVV(I, T, a);
u = g(u, R);
var P = x(.75 * (R + c), -.2, 0), V = D.CrossVV(o, M), L = D.CrossVV(a, M), O = v + A + C * V * V + b * L * L, N = O > 0 ? -P / O : 0;
D.MulSV(N, M, l);
S.SelfMulSub(v, l);
w -= C * D.CrossVV(o, l);
T.SelfMulAdd(A, l);
B += b * D.CrossVV(a, l);
}
this.m_positions[f].a = w;
this.m_positions[d].a = B;
}
return u >= -1.5 * c;
};
t.InitializeVelocityConstraints_s_xfA = new N();
t.InitializeVelocityConstraints_s_xfB = new N();
t.InitializeVelocityConstraints_s_worldManifold = new At();
t.WarmStart_s_P = new D();
t.SolveVelocityConstraints_s_dv = new D();
t.SolveVelocityConstraints_s_dv1 = new D();
t.SolveVelocityConstraints_s_dv2 = new D();
t.SolveVelocityConstraints_s_P = new D();
t.SolveVelocityConstraints_s_a = new D();
t.SolveVelocityConstraints_s_b = new D();
t.SolveVelocityConstraints_s_x = new D();
t.SolveVelocityConstraints_s_d = new D();
t.SolveVelocityConstraints_s_P1 = new D();
t.SolveVelocityConstraints_s_P2 = new D();
t.SolveVelocityConstraints_s_P1P2 = new D();
t.SolvePositionConstraints_s_xfA = new N();
t.SolvePositionConstraints_s_xfB = new N();
t.SolvePositionConstraints_s_psm = new dn();
t.SolvePositionConstraints_s_rA = new D();
t.SolvePositionConstraints_s_rB = new D();
t.SolvePositionConstraints_s_P = new D();
t.SolveTOIPositionConstraints_s_xfA = new N();
t.SolveTOIPositionConstraints_s_xfB = new N();
t.SolveTOIPositionConstraints_s_psm = new dn();
t.SolveTOIPositionConstraints_s_rA = new D();
t.SolveTOIPositionConstraints_s_rB = new D();
t.SolveTOIPositionConstraints_s_P = new D();
return t;
})(), mn = (function() {
function e() {
this.m_allocator = null;
this.m_bodies = [];
this.m_contacts = [];
this.m_joints = [];
this.m_positions = an.MakeArray(1024);
this.m_velocities = cn.MakeArray(1024);
this.m_bodyCount = 0;
this.m_jointCount = 0;
this.m_contactCount = 0;
this.m_bodyCapacity = 0;
this.m_contactCapacity = 0;
this.m_jointCapacity = 0;
}
e.prototype.Initialize = function(t, e, i, n, r) {
this.m_bodyCapacity = t;
this.m_contactCapacity = e;
this.m_jointCapacity = i;
this.m_bodyCount = 0;
this.m_contactCount = 0;
this.m_jointCount = 0;
this.m_allocator = n;
this.m_listener = r;
if (this.m_positions.length < t) for (var s = C(2 * this.m_positions.length, t); this.m_positions.length < s; ) this.m_positions[this.m_positions.length] = new an();
if (this.m_velocities.length < t) for (s = C(2 * this.m_velocities.length, t); this.m_velocities.length < s; ) this.m_velocities[this.m_velocities.length] = new cn();
};
e.prototype.Clear = function() {
this.m_bodyCount = 0;
this.m_contactCount = 0;
this.m_jointCount = 0;
};
e.prototype.AddBody = function(t) {
t.m_islandIndex = this.m_bodyCount;
this.m_bodies[this.m_bodyCount++] = t;
};
e.prototype.AddContact = function(t) {
this.m_contacts[this.m_contactCount++] = t;
};
e.prototype.AddJoint = function(t) {
this.m_joints[this.m_jointCount++] = t;
};
e.prototype.Solve = function(n, r, s, o) {
for (var a = e.s_timer.Reset(), c = r.dt, l = 0; l < this.m_bodyCount; ++l) {
var u = this.m_bodies[l];
this.m_positions[l].c.Copy(u.m_sweep.c);
var h = u.m_sweep.a, _ = this.m_velocities[l].v.Copy(u.m_linearVelocity), f = u.m_angularVelocity;
u.m_sweep.c0.Copy(u.m_sweep.c);
u.m_sweep.a0 = u.m_sweep.a;
if (u.m_type === t.b2BodyType.b2_dynamicBody) {
_.x += c * (u.m_gravityScale * s.x + u.m_invMass * u.m_force.x);
_.y += c * (u.m_gravityScale * s.y + u.m_invMass * u.m_force.y);
f += c * u.m_invI * u.m_torque;
_.SelfMul(1 / (1 + c * u.m_linearDamping));
f *= 1 / (1 + c * u.m_angularDamping);
}
this.m_positions[l].a = h;
this.m_velocities[l].w = f;
}
a.Reset();
var d = e.s_solverData;
d.step.Copy(r);
d.positions = this.m_positions;
d.velocities = this.m_velocities;
var p = e.s_contactSolverDef;
p.step.Copy(r);
p.contacts = this.m_contacts;
p.count = this.m_contactCount;
p.positions = this.m_positions;
p.velocities = this.m_velocities;
p.allocator = this.m_allocator;
var m = e.s_contactSolver.Initialize(p);
m.InitializeVelocityConstraints();
r.warmStarting && m.WarmStart();
for (l = 0; l < this.m_jointCount; ++l) this.m_joints[l].InitVelocityConstraints(d);
n.solveInit = a.GetMilliseconds();
a.Reset();
for (l = 0; l < r.velocityIterations; ++l) {
for (var y = 0; y < this.m_jointCount; ++y) this.m_joints[y].SolveVelocityConstraints(d);
m.SolveVelocityConstraints();
}
m.StoreImpulses();
n.solveVelocity = a.GetMilliseconds();
for (l = 0; l < this.m_bodyCount; ++l) {
var C = this.m_positions[l].c, x = (h = this.m_positions[l].a, _ = this.m_velocities[l].v, 
f = this.m_velocities[l].w, D.MulSV(c, _, e.s_translation));
if (D.DotVV(x, x) > 4) {
var A = 2 / x.Length();
_.SelfMul(A);
}
var b = c * f;
if (b * b > 2.4674011002726646) {
f *= A = 1.570796326795 / v(b);
}
C.x += c * _.x;
C.y += c * _.y;
h += c * f;
this.m_positions[l].a = h;
this.m_velocities[l].w = f;
}
a.Reset();
var S = !1;
for (l = 0; l < r.positionIterations; ++l) {
var w = m.SolvePositionConstraints(), T = !0;
for (y = 0; y < this.m_jointCount; ++y) {
var B = this.m_joints[y].SolvePositionConstraints(d);
T = T && B;
}
if (w && T) {
S = !0;
break;
}
}
for (l = 0; l < this.m_bodyCount; ++l) {
var E = this.m_bodies[l];
E.m_sweep.c.Copy(this.m_positions[l].c);
E.m_sweep.a = this.m_positions[l].a;
E.m_linearVelocity.Copy(this.m_velocities[l].v);
E.m_angularVelocity = this.m_velocities[l].w;
E.SynchronizeTransform();
}
n.solvePosition = a.GetMilliseconds();
this.Report(m.m_velocityConstraints);
if (o) {
var M = i;
for (l = 0; l < this.m_bodyCount; ++l) {
if ((u = this.m_bodies[l]).GetType() !== t.b2BodyType.b2_staticBody) if (!u.m_autoSleepFlag || u.m_angularVelocity * u.m_angularVelocity > .0012184696791469947 || D.DotVV(u.m_linearVelocity, u.m_linearVelocity) > 1e-4) {
u.m_sleepTime = 0;
M = 0;
} else {
u.m_sleepTime += c;
M = g(M, u.m_sleepTime);
}
}
if (M >= .5 && S) for (l = 0; l < this.m_bodyCount; ++l) {
(u = this.m_bodies[l]).SetAwake(!1);
}
}
};
e.prototype.SolveTOI = function(t, i, n) {
for (var r = 0; r < this.m_bodyCount; ++r) {
var s = this.m_bodies[r];
this.m_positions[r].c.Copy(s.m_sweep.c);
this.m_positions[r].a = s.m_sweep.a;
this.m_velocities[r].v.Copy(s.m_linearVelocity);
this.m_velocities[r].w = s.m_angularVelocity;
}
var o = e.s_contactSolverDef;
o.contacts = this.m_contacts;
o.count = this.m_contactCount;
o.allocator = this.m_allocator;
o.step.Copy(t);
o.positions = this.m_positions;
o.velocities = this.m_velocities;
var a = e.s_contactSolver.Initialize(o);
for (r = 0; r < t.positionIterations; ++r) {
if (a.SolveTOIPositionConstraints(i, n)) break;
}
this.m_bodies[i].m_sweep.c0.Copy(this.m_positions[i].c);
this.m_bodies[i].m_sweep.a0 = this.m_positions[i].a;
this.m_bodies[n].m_sweep.c0.Copy(this.m_positions[n].c);
this.m_bodies[n].m_sweep.a0 = this.m_positions[n].a;
a.InitializeVelocityConstraints();
for (r = 0; r < t.velocityIterations; ++r) a.SolveVelocityConstraints();
var c = t.dt;
for (r = 0; r < this.m_bodyCount; ++r) {
var l = this.m_positions[r].c, u = this.m_positions[r].a, h = this.m_velocities[r].v, _ = this.m_velocities[r].w, f = D.MulSV(c, h, e.s_translation);
if (D.DotVV(f, f) > 4) {
var d = 2 / f.Length();
h.SelfMul(d);
}
var p = c * _;
if (p * p > 2.4674011002726646) {
_ *= d = 1.570796326795 / v(p);
}
l.SelfMulAdd(c, h);
u += c * _;
this.m_positions[r].a = u;
this.m_velocities[r].w = _;
var m = this.m_bodies[r];
m.m_sweep.c.Copy(l);
m.m_sweep.a = u;
m.m_linearVelocity.Copy(h);
m.m_angularVelocity = _;
m.SynchronizeTransform();
}
this.Report(a.m_velocityConstraints);
};
e.prototype.Report = function(t) {
if (null !== this.m_listener) for (var i = 0; i < this.m_contactCount; ++i) {
var n = this.m_contacts[i];
if (n) {
var r = t[i], s = e.s_impulse;
s.count = r.pointCount;
for (var o = 0; o < r.pointCount; ++o) {
s.normalImpulses[o] = r.points[o].normalImpulse;
s.tangentImpulses[o] = r.points[o].tangentImpulse;
}
this.m_listener.PostSolve(n, s);
}
}
};
e.s_timer = new U();
e.s_solverData = new ln();
e.s_contactSolverDef = new fn();
e.s_contactSolver = new pn();
e.s_translation = new D();
e.s_impulse = new $i();
return e;
})();
(function(t) {
t[t.b2_waterParticle = 0] = "b2_waterParticle";
t[t.b2_zombieParticle = 2] = "b2_zombieParticle";
t[t.b2_wallParticle = 4] = "b2_wallParticle";
t[t.b2_springParticle = 8] = "b2_springParticle";
t[t.b2_elasticParticle = 16] = "b2_elasticParticle";
t[t.b2_viscousParticle = 32] = "b2_viscousParticle";
t[t.b2_powderParticle = 64] = "b2_powderParticle";
t[t.b2_tensileParticle = 128] = "b2_tensileParticle";
t[t.b2_colorMixingParticle = 256] = "b2_colorMixingParticle";
t[t.b2_destructionListenerParticle = 512] = "b2_destructionListenerParticle";
t[t.b2_barrierParticle = 1024] = "b2_barrierParticle";
t[t.b2_staticPressureParticle = 2048] = "b2_staticPressureParticle";
t[t.b2_reactiveParticle = 4096] = "b2_reactiveParticle";
t[t.b2_repulsiveParticle = 8192] = "b2_repulsiveParticle";
t[t.b2_fixtureContactListenerParticle = 16384] = "b2_fixtureContactListenerParticle";
t[t.b2_particleContactListenerParticle = 32768] = "b2_particleContactListenerParticle";
t[t.b2_fixtureContactFilterParticle = 65536] = "b2_fixtureContactFilterParticle";
t[t.b2_particleContactFilterParticle = 131072] = "b2_particleContactFilterParticle";
})(t.b2ParticleFlag || (t.b2ParticleFlag = {}));
var yn = (function() {
return function() {
this.flags = 0;
this.position = new D();
this.velocity = new D();
this.color = new z(0, 0, 0, 0);
this.lifetime = 0;
this.userData = null;
this.group = null;
};
})();
function vn(t, e, i) {
return x(Math.ceil(Math.sqrt(t / (.01 * e)) * i), 1, 8);
}
var gn = (function() {
function t() {
this.m_index = h;
}
t.prototype.GetIndex = function() {
return this.m_index;
};
t.prototype.SetIndex = function(t) {
this.m_index = t;
};
return t;
})();
(function(t) {
t[t.b2_solidParticleGroup = 1] = "b2_solidParticleGroup";
t[t.b2_rigidParticleGroup = 2] = "b2_rigidParticleGroup";
t[t.b2_particleGroupCanBeEmpty = 4] = "b2_particleGroupCanBeEmpty";
t[t.b2_particleGroupWillBeDestroyed = 8] = "b2_particleGroupWillBeDestroyed";
t[t.b2_particleGroupNeedsUpdateDepth = 16] = "b2_particleGroupNeedsUpdateDepth";
t[t.b2_particleGroupInternalMask = 24] = "b2_particleGroupInternalMask";
})(t.b2ParticleGroupFlag || (t.b2ParticleGroupFlag = {}));
var Cn = (function() {
return function() {
this.flags = 0;
this.groupFlags = 0;
this.position = new D();
this.angle = 0;
this.linearVelocity = new D();
this.angularVelocity = 0;
this.color = new z();
this.strength = 1;
this.shapeCount = 0;
this.stride = 0;
this.particleCount = 0;
this.lifetime = 0;
this.userData = null;
this.group = null;
};
})(), xn = (function() {
function e(t) {
this.m_firstIndex = 0;
this.m_lastIndex = 0;
this.m_groupFlags = 0;
this.m_strength = 1;
this.m_prev = null;
this.m_next = null;
this.m_timestamp = -1;
this.m_mass = 0;
this.m_inertia = 0;
this.m_center = new D();
this.m_linearVelocity = new D();
this.m_angularVelocity = 0;
this.m_transform = new N();
this.m_userData = null;
this.m_system = t;
}
e.prototype.GetNext = function() {
return this.m_next;
};
e.prototype.GetParticleSystem = function() {
return this.m_system;
};
e.prototype.GetParticleCount = function() {
return this.m_lastIndex - this.m_firstIndex;
};
e.prototype.GetBufferIndex = function() {
return this.m_firstIndex;
};
e.prototype.ContainsParticle = function(t) {
return this.m_firstIndex <= t && t < this.m_lastIndex;
};
e.prototype.GetAllParticleFlags = function() {
if (!this.m_system.m_flagsBuffer.data) throw new Error();
for (var t = 0, e = this.m_firstIndex; e < this.m_lastIndex; e++) t |= this.m_system.m_flagsBuffer.data[e];
return t;
};
e.prototype.GetGroupFlags = function() {
return this.m_groupFlags;
};
e.prototype.SetGroupFlags = function(e) {
e |= this.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupInternalMask;
this.m_system.SetGroupFlags(this, e);
};
e.prototype.GetMass = function() {
this.UpdateStatistics();
return this.m_mass;
};
e.prototype.GetInertia = function() {
this.UpdateStatistics();
return this.m_inertia;
};
e.prototype.GetCenter = function() {
this.UpdateStatistics();
return this.m_center;
};
e.prototype.GetLinearVelocity = function() {
this.UpdateStatistics();
return this.m_linearVelocity;
};
e.prototype.GetAngularVelocity = function() {
this.UpdateStatistics();
return this.m_angularVelocity;
};
e.prototype.GetTransform = function() {
return this.m_transform;
};
e.prototype.GetPosition = function() {
return this.m_transform.p;
};
e.prototype.GetAngle = function() {
return this.m_transform.q.GetAngle();
};
e.prototype.GetLinearVelocityFromWorldPoint = function(t, i) {
var n = e.GetLinearVelocityFromWorldPoint_s_t0;
this.UpdateStatistics();
return D.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, D.SubVV(t, this.m_center, n), i);
};
e.prototype.GetUserData = function() {
return this.m_userData;
};
e.prototype.SetUserData = function(t) {
this.m_userData = t;
};
e.prototype.ApplyForce = function(t) {
this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, t);
};
e.prototype.ApplyLinearImpulse = function(t) {
this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, t);
};
e.prototype.DestroyParticles = function(t) {
if (this.m_system.m_world.IsLocked()) throw new Error();
for (var e = this.m_firstIndex; e < this.m_lastIndex; e++) this.m_system.DestroyParticle(e, t);
};
e.prototype.UpdateStatistics = function() {
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (!this.m_system.m_velocityBuffer.data) throw new Error();
var t = new D(), e = new D();
if (this.m_timestamp !== this.m_system.m_timestamp) {
var i = this.m_system.GetParticleMass();
this.m_mass = i * (this.m_lastIndex - this.m_firstIndex);
this.m_center.SetZero();
this.m_linearVelocity.SetZero();
for (var n = this.m_firstIndex; n < this.m_lastIndex; n++) {
this.m_center.SelfMulAdd(i, this.m_system.m_positionBuffer.data[n]);
this.m_linearVelocity.SelfMulAdd(i, this.m_system.m_velocityBuffer.data[n]);
}
if (this.m_mass > 0) {
var r = 1 / this.m_mass;
this.m_center.SelfMul(r);
this.m_linearVelocity.SelfMul(r);
}
this.m_inertia = 0;
this.m_angularVelocity = 0;
for (n = this.m_firstIndex; n < this.m_lastIndex; n++) {
D.SubVV(this.m_system.m_positionBuffer.data[n], this.m_center, t);
D.SubVV(this.m_system.m_velocityBuffer.data[n], this.m_linearVelocity, e);
this.m_inertia += i * D.DotVV(t, t);
this.m_angularVelocity += i * D.CrossVV(t, e);
}
this.m_inertia > 0 && (this.m_angularVelocity *= 1 / this.m_inertia);
this.m_timestamp = this.m_system.m_timestamp;
}
};
e.GetLinearVelocityFromWorldPoint_s_t0 = new D();
return e;
})(), An = (function() {
function t(t) {
this.m_front = 0;
this.m_back = 0;
this.m_capacity = 0;
this.m_buffer = d(t, (function(t) {
return null;
}));
this.m_capacity = t;
}
t.prototype.Push = function(t) {
if (this.m_back >= this.m_capacity) {
for (var e = this.m_front; e < this.m_back; e++) this.m_buffer[e - this.m_front] = this.m_buffer[e];
this.m_back -= this.m_front;
this.m_front = 0;
if (this.m_back >= this.m_capacity) if (this.m_capacity > 0) {
this.m_buffer.concat(d(this.m_capacity, (function(t) {
return null;
})));
this.m_capacity *= 2;
} else {
this.m_buffer.concat(d(1, (function(t) {
return null;
})));
this.m_capacity = 1;
}
}
this.m_buffer[this.m_back] = t;
this.m_back++;
};
t.prototype.Pop = function() {
this.m_buffer[this.m_front] = null;
this.m_front++;
};
t.prototype.Empty = function() {
return this.m_front === this.m_back;
};
t.prototype.Front = function() {
var t = this.m_buffer[this.m_front];
if (!t) throw new Error();
return t;
};
return t;
})(), bn = (function() {
function t(e) {
this.m_generatorCapacity = 0;
this.m_generatorCount = 0;
this.m_countX = 0;
this.m_countY = 0;
this.m_diagram = [];
this.m_generatorBuffer = d(e, (function(e) {
return new t.Generator();
}));
this.m_generatorCapacity = e;
}
t.prototype.AddGenerator = function(t, e, i) {
var n = this.m_generatorBuffer[this.m_generatorCount++];
n.center.Copy(t);
n.tag = e;
n.necessary = i;
};
t.prototype.Generate = function(e, n) {
for (var r = 1 / e, s = new D(+i, +i), o = new D(-i, -i), a = 0, c = 0; c < this.m_generatorCount; c++) {
if ((f = this.m_generatorBuffer[c]).necessary) {
D.MinV(s, f.center, s);
D.MaxV(o, f.center, o);
++a;
}
}
if (0 !== a) {
s.x -= n;
s.y -= n;
o.x += n;
o.y += n;
this.m_countX = 1 + Math.floor(r * (o.x - s.x));
this.m_countY = 1 + Math.floor(r * (o.y - s.y));
this.m_diagram = [];
var l = new An(4 * this.m_countX * this.m_countY);
for (c = 0; c < this.m_generatorCount; c++) {
(f = this.m_generatorBuffer[c]).center.SelfSub(s).SelfMul(r);
var u = Math.floor(f.center.x), h = Math.floor(f.center.y);
u >= 0 && h >= 0 && u < this.m_countX && h < this.m_countY && l.Push(new t.Task(u, h, u + h * this.m_countX, f));
}
for (;!l.Empty(); ) {
u = (d = l.Front()).m_x, h = d.m_y;
var _ = d.m_i, f = d.m_generator;
l.Pop();
if (!this.m_diagram[_]) {
this.m_diagram[_] = f;
u > 0 && l.Push(new t.Task(u - 1, h, _ - 1, f));
h > 0 && l.Push(new t.Task(u, h - 1, _ - this.m_countX, f));
u < this.m_countX - 1 && l.Push(new t.Task(u + 1, h, _ + 1, f));
h < this.m_countY - 1 && l.Push(new t.Task(u, h + 1, _ + this.m_countX, f));
}
}
for (h = 0; h < this.m_countY; h++) for (u = 0; u < this.m_countX - 1; u++) {
_ = u + h * this.m_countX;
if ((p = this.m_diagram[_]) !== (m = this.m_diagram[_ + 1])) {
l.Push(new t.Task(u, h, _, m));
l.Push(new t.Task(u + 1, h, _ + 1, p));
}
}
for (h = 0; h < this.m_countY - 1; h++) for (u = 0; u < this.m_countX; u++) {
_ = u + h * this.m_countX;
if ((p = this.m_diagram[_]) !== (m = this.m_diagram[_ + this.m_countX])) {
l.Push(new t.Task(u, h, _, m));
l.Push(new t.Task(u, h + 1, _ + this.m_countX, p));
}
}
for (;!l.Empty(); ) {
var d, p, m;
u = (d = l.Front()).m_x, h = d.m_y, _ = d.m_i, c = d.m_generator;
l.Pop();
if ((p = this.m_diagram[_]) !== (m = c)) {
var y = p.center.x - u, v = p.center.y - h, g = m.center.x - u, C = m.center.y - h;
if (y * y + v * v > g * g + C * C) {
this.m_diagram[_] = m;
u > 0 && l.Push(new t.Task(u - 1, h, _ - 1, m));
h > 0 && l.Push(new t.Task(u, h - 1, _ - this.m_countX, m));
u < this.m_countX - 1 && l.Push(new t.Task(u + 1, h, _ + 1, m));
h < this.m_countY - 1 && l.Push(new t.Task(u, h + 1, _ + this.m_countX, m));
}
}
}
} else {
this.m_countX = 0;
this.m_countY = 0;
}
};
t.prototype.GetNodes = function(t) {
for (var e = 0; e < this.m_countY - 1; e++) for (var i = 0; i < this.m_countX - 1; i++) {
var n = i + e * this.m_countX, r = this.m_diagram[n], s = this.m_diagram[n + 1], o = this.m_diagram[n + this.m_countX], a = this.m_diagram[n + 1 + this.m_countX];
if (s !== o) {
r !== s && r !== o && (r.necessary || s.necessary || o.necessary) && t(r.tag, s.tag, o.tag);
a !== s && a !== o && (r.necessary || s.necessary || o.necessary) && t(s.tag, a.tag, o.tag);
}
}
};
return t;
})();
(function(t) {
var e = (function() {
return function() {
this.center = new D();
this.tag = 0;
this.necessary = !1;
};
})();
t.Generator = e;
var i = (function() {
return function(t, e, i, n) {
this.m_x = t;
this.m_y = e;
this.m_i = i;
this.m_generator = n;
};
})();
t.Task = i;
})(bn || (bn = {}));
function Sn(t, e, i) {
var n = t[e];
t[e] = t[i];
t[i] = n;
}
function wn(t, e) {
return t < e;
}
function Tn(t, e, i, n) {
void 0 === e && (e = 0);
void 0 === i && (i = t.length - e);
void 0 === n && (n = wn);
for (var r = e, s = [], o = 0; ;) {
for (;r + 1 < i; i++) {
var a = t[r + Math.floor(Math.random() * (i - r))];
s[o++] = i;
for (var c = r - 1; ;) {
for (;n(t[++c], a); ) ;
for (;n(a, t[--i]); ) ;
if (c >= i) break;
Sn(t, c, i);
}
}
if (0 === o) break;
r = i;
i = s[--o];
}
return t;
}
function Bn(t, e, i, n) {
void 0 === e && (e = 0);
void 0 === i && (i = t.length - e);
void 0 === n && (n = wn);
return Tn(t, e, i, n);
}
function En(t, e, i) {
void 0 === i && (i = t.length);
for (var n = 0, r = 0; r < i; ++r) e(t[r]) || (r !== n ? Sn(t, n++, r) : ++n);
return n;
}
function Mn(t, e, i, n, r) {
void 0 === r && (r = wn);
for (var s = i - e; s > 0; ) {
var o = Math.floor(s / 2), a = e + o;
if (r(t[a], n)) {
e = ++a;
s -= o + 1;
} else s = o;
}
return e;
}
function In(t, e, i, n, r) {
void 0 === r && (r = wn);
for (var s = i - e; s > 0; ) {
var o = Math.floor(s / 2), a = e + o;
if (r(n, t[a])) s = o; else {
e = ++a;
s -= o + 1;
}
}
return e;
}
function Rn(t, e, i, n) {
for (var r = i; e !== r; ) {
Sn(t, e++, r++);
r === n ? r = i : e === i && (i = r);
}
}
function Dn(t, e, i, n) {
if (e === i) return i;
for (var r = e; ++e !== i; ) n(t[r], t[e]) || Sn(t, ++r, e);
return ++r;
}
var Pn = (function() {
function t(t) {
this.data = [];
this.count = 0;
this.capacity = 0;
this.allocator = t;
}
t.prototype.Append = function() {
this.count >= this.capacity && this.Grow();
return this.count++;
};
t.prototype.Reserve = function(t) {
if (!(this.capacity >= t)) {
for (var e = this.capacity; e < t; ++e) this.data[e] = this.allocator();
this.capacity = t;
}
};
t.prototype.Grow = function() {
var t = this.capacity ? 2 * this.capacity : 256;
this.Reserve(t);
};
t.prototype.Free = function() {
if (0 !== this.data.length) {
this.data = [];
this.capacity = 0;
this.count = 0;
}
};
t.prototype.Shorten = function(t) {};
t.prototype.Data = function() {
return this.data;
};
t.prototype.GetCount = function() {
return this.count;
};
t.prototype.SetCount = function(t) {
this.count = t;
};
t.prototype.GetCapacity = function() {
return this.capacity;
};
t.prototype.RemoveIf = function(t) {
this.count = En(this.data, t, this.count);
};
t.prototype.Unique = function(t) {
this.count = Dn(this.data, 0, this.count, t);
};
return t;
})(), Vn = (function(t) {
$e(e, t);
function e(e) {
var i = t.call(this) || this;
i.m_system = e;
return i;
}
e.prototype.ShouldQueryParticleSystem = function(t) {
return !1;
};
e.prototype.ReportFixture = function(t) {
if (t.IsSensor()) return !0;
for (var e = t.GetShape().GetChildCount(), i = 0; i < e; i++) for (var n = t.GetAABB(i), r = this.m_system.GetInsideBoundsEnumerator(n), s = void 0; (s = r.GetNext()) >= 0; ) this.ReportFixtureAndParticle(t, i, s);
return !0;
};
e.prototype.ReportParticle = function(t, e) {
return !1;
};
e.prototype.ReportFixtureAndParticle = function(t, e, i) {};
return e;
})(en), Ln = (function() {
function t() {
this.indexA = 0;
this.indexB = 0;
this.weight = 0;
this.normal = new D();
this.flags = 0;
}
t.prototype.SetIndices = function(t, e) {
this.indexA = t;
this.indexB = e;
};
t.prototype.SetWeight = function(t) {
this.weight = t;
};
t.prototype.SetNormal = function(t) {
this.normal.Copy(t);
};
t.prototype.SetFlags = function(t) {
this.flags = t;
};
t.prototype.GetIndexA = function() {
return this.indexA;
};
t.prototype.GetIndexB = function() {
return this.indexB;
};
t.prototype.GetWeight = function() {
return this.weight;
};
t.prototype.GetNormal = function() {
return this.normal;
};
t.prototype.GetFlags = function() {
return this.flags;
};
t.prototype.IsEqual = function(t) {
return this.indexA === t.indexA && this.indexB === t.indexB && this.flags === t.flags && this.weight === t.weight && this.normal.x === t.normal.x && this.normal.y === t.normal.y;
};
t.prototype.IsNotEqual = function(t) {
return !this.IsEqual(t);
};
t.prototype.ApproximatelyEqual = function(t) {
return this.indexA === t.indexA && this.indexB === t.indexB && this.flags === t.flags && v(this.weight - t.weight) < .01 && D.DistanceSquaredVV(this.normal, t.normal) < 1e-4;
};
return t;
})(), On = (function() {
return function() {
this.index = 0;
this.weight = 0;
this.normal = new D();
this.mass = 0;
};
})(), Fn = (function() {
return function() {
this.indexA = 0;
this.indexB = 0;
this.flags = 0;
this.strength = 0;
this.distance = 0;
};
})(), Nn = (function() {
return function() {
this.indexA = 0;
this.indexB = 0;
this.indexC = 0;
this.flags = 0;
this.strength = 0;
this.pa = new D(0, 0);
this.pb = new D(0, 0);
this.pc = new D(0, 0);
this.ka = 0;
this.kb = 0;
this.kc = 0;
this.s = 0;
};
})(), Gn = (function() {
function t() {
this.strictContactCheck = !1;
this.density = 1;
this.gravityScale = 1;
this.radius = 1;
this.maxCount = 0;
this.pressureStrength = .005;
this.dampingStrength = 1;
this.elasticStrength = .25;
this.springStrength = .25;
this.viscousStrength = .25;
this.surfaceTensionPressureStrength = .2;
this.surfaceTensionNormalStrength = .2;
this.repulsiveStrength = 1;
this.powderStrength = .5;
this.ejectionStrength = .5;
this.staticPressureStrength = .2;
this.staticPressureRelaxation = .2;
this.staticPressureIterations = 8;
this.colorMixingStrength = .5;
this.destroyByAge = !0;
this.lifetimeGranularity = 1 / 60;
}
t.prototype.Copy = function(t) {
this.strictContactCheck = t.strictContactCheck;
this.density = t.density;
this.gravityScale = t.gravityScale;
this.radius = t.radius;
this.maxCount = t.maxCount;
this.pressureStrength = t.pressureStrength;
this.dampingStrength = t.dampingStrength;
this.elasticStrength = t.elasticStrength;
this.springStrength = t.springStrength;
this.viscousStrength = t.viscousStrength;
this.surfaceTensionPressureStrength = t.surfaceTensionPressureStrength;
this.surfaceTensionNormalStrength = t.surfaceTensionNormalStrength;
this.repulsiveStrength = t.repulsiveStrength;
this.powderStrength = t.powderStrength;
this.ejectionStrength = t.ejectionStrength;
this.staticPressureStrength = t.staticPressureStrength;
this.staticPressureRelaxation = t.staticPressureRelaxation;
this.staticPressureIterations = t.staticPressureIterations;
this.colorMixingStrength = t.colorMixingStrength;
this.destroyByAge = t.destroyByAge;
this.lifetimeGranularity = t.lifetimeGranularity;
return this;
};
t.prototype.Clone = function() {
return new t().Copy(this);
};
return t;
})();
t.b2ParticleSystem = (function() {
function n(t, e) {
this.m_paused = !1;
this.m_timestamp = 0;
this.m_allParticleFlags = 0;
this.m_needsUpdateAllParticleFlags = !1;
this.m_allGroupFlags = 0;
this.m_needsUpdateAllGroupFlags = !1;
this.m_hasForce = !1;
this.m_iterationIndex = 0;
this.m_inverseDensity = 0;
this.m_particleDiameter = 0;
this.m_inverseDiameter = 0;
this.m_squaredDiameter = 0;
this.m_count = 0;
this.m_internalAllocatedCapacity = 0;
this.m_handleIndexBuffer = new n.UserOverridableBuffer();
this.m_flagsBuffer = new n.UserOverridableBuffer();
this.m_positionBuffer = new n.UserOverridableBuffer();
this.m_velocityBuffer = new n.UserOverridableBuffer();
this.m_forceBuffer = [];
this.m_weightBuffer = [];
this.m_staticPressureBuffer = [];
this.m_accumulationBuffer = [];
this.m_accumulation2Buffer = [];
this.m_depthBuffer = [];
this.m_colorBuffer = new n.UserOverridableBuffer();
this.m_groupBuffer = [];
this.m_userDataBuffer = new n.UserOverridableBuffer();
this.m_stuckThreshold = 0;
this.m_lastBodyContactStepBuffer = new n.UserOverridableBuffer();
this.m_bodyContactCountBuffer = new n.UserOverridableBuffer();
this.m_consecutiveContactStepsBuffer = new n.UserOverridableBuffer();
this.m_stuckParticleBuffer = new Pn(function() {
return 0;
});
this.m_proxyBuffer = new Pn(function() {
return new n.Proxy();
});
this.m_contactBuffer = new Pn(function() {
return new Ln();
});
this.m_bodyContactBuffer = new Pn(function() {
return new On();
});
this.m_pairBuffer = new Pn(function() {
return new Fn();
});
this.m_triadBuffer = new Pn(function() {
return new Nn();
});
this.m_expirationTimeBuffer = new n.UserOverridableBuffer();
this.m_indexByExpirationTimeBuffer = new n.UserOverridableBuffer();
this.m_timeElapsed = 0;
this.m_expirationTimeBufferRequiresSorting = !1;
this.m_groupCount = 0;
this.m_groupList = null;
this.m_def = new Gn();
this.m_prev = null;
this.m_next = null;
this.SetStrictContactCheck(t.strictContactCheck);
this.SetDensity(t.density);
this.SetGravityScale(t.gravityScale);
this.SetRadius(t.radius);
this.SetMaxParticleCount(t.maxCount);
this.m_def = t.Clone();
this.m_world = e;
this.SetDestructionByAge(this.m_def.destroyByAge);
}
n.computeTag = function(t, e) {
return (e + n.yOffset >>> 0 << n.yShift) + (n.xScale * t + n.xOffset >>> 0) >>> 0;
};
n.computeRelativeTag = function(t, e, i) {
return t + (i << n.yShift) + (e << n.xShift) >>> 0;
};
n.prototype.Drop = function() {
for (;this.m_groupList; ) this.DestroyParticleGroup(this.m_groupList);
this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);
this.FreeUserOverridableBuffer(this.m_flagsBuffer);
this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);
this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);
this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);
this.FreeUserOverridableBuffer(this.m_positionBuffer);
this.FreeUserOverridableBuffer(this.m_velocityBuffer);
this.FreeUserOverridableBuffer(this.m_colorBuffer);
this.FreeUserOverridableBuffer(this.m_userDataBuffer);
this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);
this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);
this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);
};
n.prototype.CreateParticle = function(t) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_count >= this.m_internalAllocatedCapacity) {
var i = this.m_count ? 2 * this.m_count : 256;
this.ReallocateInternalAllocatedBuffers(i);
}
if (this.m_count >= this.m_internalAllocatedCapacity) {
if (!this.m_def.destroyByAge) return h;
this.DestroyOldestParticle(0, !1);
this.SolveZombie();
}
var n = this.m_count++;
if (!this.m_flagsBuffer.data) throw new Error();
this.m_flagsBuffer.data[n] = 0;
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[n] = 0);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[n] = 0);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[n] = 0);
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
this.m_positionBuffer.data[n] = (this.m_positionBuffer.data[n] || new D()).Copy(e(t.position, D.ZERO));
this.m_velocityBuffer.data[n] = (this.m_velocityBuffer.data[n] || new D()).Copy(e(t.velocity, D.ZERO));
this.m_weightBuffer[n] = 0;
this.m_forceBuffer[n] = (this.m_forceBuffer[n] || new D()).SetZero();
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[n] = 0);
this.m_depthBuffer && (this.m_depthBuffer[n] = 0);
var r = new z().Copy(e(t.color, z.ZERO));
if (this.m_colorBuffer.data || !r.IsZero()) {
this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);
this.m_colorBuffer.data[n] = (this.m_colorBuffer.data[n] || new z()).Copy(r);
}
if (this.m_userDataBuffer.data || t.userData) {
this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);
this.m_userDataBuffer.data[n] = t.userData;
}
this.m_handleIndexBuffer.data && (this.m_handleIndexBuffer.data[n] = null);
var s = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()], o = e(t.lifetime, 0), a = o > 0;
if (this.m_expirationTimeBuffer.data || a) {
this.SetParticleLifetime(n, a ? o : this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
this.m_indexByExpirationTimeBuffer.data[n] = n;
}
s.index = n;
var c = e(t.group, null);
this.m_groupBuffer[n] = c;
if (c) if (c.m_firstIndex < c.m_lastIndex) {
this.RotateBuffer(c.m_firstIndex, c.m_lastIndex, n);
c.m_lastIndex = n + 1;
} else {
c.m_firstIndex = n;
c.m_lastIndex = n + 1;
}
this.SetParticleFlags(n, e(t.flags, 0));
return n;
};
n.prototype.GetParticleHandleFromIndex = function(t) {
this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);
var e = this.m_handleIndexBuffer.data[t];
if (e) return e;
(e = new gn()).SetIndex(t);
this.m_handleIndexBuffer.data[t] = e;
return e;
};
n.prototype.DestroyParticle = function(e, i) {
void 0 === i && (i = !1);
if (!this.m_flagsBuffer.data) throw new Error();
var n = t.b2ParticleFlag.b2_zombieParticle;
i && (n |= t.b2ParticleFlag.b2_destructionListenerParticle);
this.SetParticleFlags(e, this.m_flagsBuffer.data[e] | n);
};
n.prototype.DestroyOldestParticle = function(t, e) {
void 0 === e && (e = !1);
var i = this.GetParticleCount();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
if (!this.m_expirationTimeBuffer.data) throw new Error();
var n = this.m_indexByExpirationTimeBuffer.data[i - (t + 1)], r = this.m_indexByExpirationTimeBuffer.data[t];
this.DestroyParticle(this.m_expirationTimeBuffer.data[n] > 0 ? n : r, e);
};
n.prototype.DestroyParticlesInShape = function(t, e, i) {
void 0 === i && (i = !1);
var r = n.DestroyParticlesInShape_s_aabb;
if (this.m_world.IsLocked()) throw new Error();
var s = new n.DestroyParticlesInShapeCallback(this, t, e, i), o = r;
t.ComputeAABB(o, e, 0);
this.m_world.QueryAABB(s, o);
return s.Destroyed();
};
n.prototype.CreateParticleGroup = function(t) {
var i = n.CreateParticleGroup_s_transform;
if (this.m_world.IsLocked()) throw new Error();
var r = i;
r.SetPositionAngle(e(t.position, D.ZERO), e(t.angle, 0));
var s = this.m_count;
t.shape && this.CreateParticlesWithShapeForGroup(t.shape, t, r);
t.shapes && this.CreateParticlesWithShapesForGroup(t.shapes, e(t.shapeCount, t.shapes.length), t, r);
if (t.positionData) for (var o = e(t.particleCount, t.positionData.length), a = 0; a < o; a++) {
var c = t.positionData[a];
this.CreateParticleForGroup(t, r, c);
}
var l = this.m_count, u = new xn(this);
u.m_firstIndex = s;
u.m_lastIndex = l;
u.m_strength = e(t.strength, 1);
u.m_userData = t.userData;
u.m_transform.Copy(r);
u.m_prev = null;
u.m_next = this.m_groupList;
this.m_groupList && (this.m_groupList.m_prev = u);
this.m_groupList = u;
++this.m_groupCount;
for (a = s; a < l; a++) this.m_groupBuffer[a] = u;
this.SetGroupFlags(u, e(t.groupFlags, 0));
var h = new n.ConnectionFilter();
this.UpdateContacts(!0);
this.UpdatePairsAndTriads(s, l, h);
if (t.group) {
this.JoinParticleGroups(t.group, u);
u = t.group;
}
return u;
};
n.prototype.JoinParticleGroups = function(t, e) {
if (this.m_world.IsLocked()) throw new Error();
this.RotateBuffer(e.m_firstIndex, e.m_lastIndex, this.m_count);
this.RotateBuffer(t.m_firstIndex, t.m_lastIndex, e.m_firstIndex);
var i = new n.JoinParticleGroupsFilter(e.m_firstIndex);
this.UpdateContacts(!0);
this.UpdatePairsAndTriads(t.m_firstIndex, e.m_lastIndex, i);
for (var r = e.m_firstIndex; r < e.m_lastIndex; r++) this.m_groupBuffer[r] = t;
var s = t.m_groupFlags | e.m_groupFlags;
this.SetGroupFlags(t, s);
t.m_lastIndex = e.m_lastIndex;
e.m_firstIndex = e.m_lastIndex;
this.DestroyParticleGroup(e);
};
n.prototype.SplitParticleGroup = function(t) {
this.UpdateContacts(!0);
var e = d(t.GetParticleCount(), (function(t) {
return new n.ParticleListNode();
}));
n.InitializeParticleLists(t, e);
this.MergeParticleListsInContact(t, e);
var i = n.FindLongestParticleList(t, e);
this.MergeZombieParticleListNodes(t, e, i);
this.CreateParticleGroupsFromParticleList(t, e, i);
this.UpdatePairsAndTriadsWithParticleList(t, e);
};
n.prototype.GetParticleGroupList = function() {
return this.m_groupList;
};
n.prototype.GetParticleGroupCount = function() {
return this.m_groupCount;
};
n.prototype.GetParticleCount = function() {
return this.m_count;
};
n.prototype.GetMaxParticleCount = function() {
return this.m_def.maxCount;
};
n.prototype.SetMaxParticleCount = function(t) {
this.m_def.maxCount = t;
};
n.prototype.GetAllParticleFlags = function() {
return this.m_allParticleFlags;
};
n.prototype.GetAllGroupFlags = function() {
return this.m_allGroupFlags;
};
n.prototype.SetPaused = function(t) {
this.m_paused = t;
};
n.prototype.GetPaused = function() {
return this.m_paused;
};
n.prototype.SetDensity = function(t) {
this.m_def.density = t;
this.m_inverseDensity = 1 / this.m_def.density;
};
n.prototype.GetDensity = function() {
return this.m_def.density;
};
n.prototype.SetGravityScale = function(t) {
this.m_def.gravityScale = t;
};
n.prototype.GetGravityScale = function() {
return this.m_def.gravityScale;
};
n.prototype.SetDamping = function(t) {
this.m_def.dampingStrength = t;
};
n.prototype.GetDamping = function() {
return this.m_def.dampingStrength;
};
n.prototype.SetStaticPressureIterations = function(t) {
this.m_def.staticPressureIterations = t;
};
n.prototype.GetStaticPressureIterations = function() {
return this.m_def.staticPressureIterations;
};
n.prototype.SetRadius = function(t) {
this.m_particleDiameter = 2 * t;
this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;
this.m_inverseDiameter = 1 / this.m_particleDiameter;
};
n.prototype.GetRadius = function() {
return this.m_particleDiameter / 2;
};
n.prototype.GetPositionBuffer = function() {
if (!this.m_positionBuffer.data) throw new Error();
return this.m_positionBuffer.data;
};
n.prototype.GetVelocityBuffer = function() {
if (!this.m_velocityBuffer.data) throw new Error();
return this.m_velocityBuffer.data;
};
n.prototype.GetColorBuffer = function() {
this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);
return this.m_colorBuffer.data;
};
n.prototype.GetGroupBuffer = function() {
return this.m_groupBuffer;
};
n.prototype.GetWeightBuffer = function() {
return this.m_weightBuffer;
};
n.prototype.GetUserDataBuffer = function() {
this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);
return this.m_userDataBuffer.data;
};
n.prototype.GetFlagsBuffer = function() {
if (!this.m_flagsBuffer.data) throw new Error();
return this.m_flagsBuffer.data;
};
n.prototype.SetParticleFlags = function(e, i) {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_flagsBuffer.data[e] & ~i && (this.m_needsUpdateAllParticleFlags = !0);
if (~this.m_allParticleFlags & i) {
i & t.b2ParticleFlag.b2_tensileParticle && (this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer));
i & t.b2ParticleFlag.b2_colorMixingParticle && (this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data));
this.m_allParticleFlags |= i;
}
this.m_flagsBuffer.data[e] = i;
};
n.prototype.GetParticleFlags = function(t) {
if (!this.m_flagsBuffer.data) throw new Error();
return this.m_flagsBuffer.data[t];
};
n.prototype.SetFlagsBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_flagsBuffer, t, e);
};
n.prototype.SetPositionBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_positionBuffer, t, e);
};
n.prototype.SetVelocityBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_velocityBuffer, t, e);
};
n.prototype.SetColorBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_colorBuffer, t, e);
};
n.prototype.SetUserDataBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_userDataBuffer, t, e);
};
n.prototype.GetContacts = function() {
return this.m_contactBuffer.data;
};
n.prototype.GetContactCount = function() {
return this.m_contactBuffer.count;
};
n.prototype.GetBodyContacts = function() {
return this.m_bodyContactBuffer.data;
};
n.prototype.GetBodyContactCount = function() {
return this.m_bodyContactBuffer.count;
};
n.prototype.GetPairs = function() {
return this.m_pairBuffer.data;
};
n.prototype.GetPairCount = function() {
return this.m_pairBuffer.count;
};
n.prototype.GetTriads = function() {
return this.m_triadBuffer.data;
};
n.prototype.GetTriadCount = function() {
return this.m_triadBuffer.count;
};
n.prototype.SetStuckThreshold = function(t) {
this.m_stuckThreshold = t;
if (t > 0) {
this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);
this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);
this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);
}
};
n.prototype.GetStuckCandidates = function() {
return this.m_stuckParticleBuffer.Data();
};
n.prototype.GetStuckCandidateCount = function() {
return this.m_stuckParticleBuffer.GetCount();
};
n.prototype.ComputeCollisionEnergy = function() {
if (!this.m_velocityBuffer.data) throw new Error();
for (var t = n.ComputeCollisionEnergy_s_v, e = this.m_velocityBuffer.data, i = 0, r = 0; r < this.m_contactBuffer.count; r++) {
var s = this.m_contactBuffer.data[r], o = s.indexA, a = s.indexB, c = s.normal, l = D.SubVV(e[a], e[o], t), u = D.DotVV(l, c);
u < 0 && (i += u * u);
}
return .5 * this.GetParticleMass() * i;
};
n.prototype.SetStrictContactCheck = function(t) {
this.m_def.strictContactCheck = t;
};
n.prototype.GetStrictContactCheck = function() {
return this.m_def.strictContactCheck;
};
n.prototype.SetParticleLifetime = function(t, e) {
var i = null === this.m_indexByExpirationTimeBuffer.data;
this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);
this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);
if (i) for (var n = this.GetParticleCount(), r = 0; r < n; ++r) this.m_indexByExpirationTimeBuffer.data[r] = r;
var s = e / this.m_def.lifetimeGranularity, o = s > 0 ? this.GetQuantizedTimeElapsed() + s : s;
if (o !== this.m_expirationTimeBuffer.data[t]) {
this.m_expirationTimeBuffer.data[t] = o;
this.m_expirationTimeBufferRequiresSorting = !0;
}
};
n.prototype.GetParticleLifetime = function(t) {
return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[t]);
};
n.prototype.SetDestructionByAge = function(t) {
t && this.GetExpirationTimeBuffer();
this.m_def.destroyByAge = t;
};
n.prototype.GetDestructionByAge = function() {
return this.m_def.destroyByAge;
};
n.prototype.GetExpirationTimeBuffer = function() {
this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);
return this.m_expirationTimeBuffer.data;
};
n.prototype.ExpirationTimeToLifetime = function(t) {
return (t > 0 ? t - this.GetQuantizedTimeElapsed() : t) * this.m_def.lifetimeGranularity;
};
n.prototype.GetIndexByExpirationTimeBuffer = function() {
this.GetParticleCount() ? this.SetParticleLifetime(0, this.GetParticleLifetime(0)) : this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
return this.m_indexByExpirationTimeBuffer.data;
};
n.prototype.ParticleApplyLinearImpulse = function(t, e) {
this.ApplyLinearImpulse(t, t + 1, e);
};
n.prototype.ApplyLinearImpulse = function(t, e, i) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var n = this.m_velocityBuffer.data, r = (e - t) * this.GetParticleMass(), s = new D().Copy(i).SelfMul(1 / r), o = t; o < e; o++) n[o].SelfAdd(s);
};
n.IsSignificantForce = function(t) {
return 0 !== t.x || 0 !== t.y;
};
n.prototype.ParticleApplyForce = function(t, e) {
if (!this.m_flagsBuffer.data) throw new Error();
if (n.IsSignificantForce(e) && this.ForceCanBeApplied(this.m_flagsBuffer.data[t])) {
this.PrepareForceBuffer();
this.m_forceBuffer[t].SelfAdd(e);
}
};
n.prototype.ApplyForce = function(t, e, i) {
var r = new D().Copy(i).SelfMul(1 / (e - t));
if (n.IsSignificantForce(r)) {
this.PrepareForceBuffer();
for (var s = t; s < e; s++) this.m_forceBuffer[s].SelfAdd(r);
}
};
n.prototype.GetNext = function() {
return this.m_next;
};
n.prototype.QueryAABB = function(t, e) {
if (0 !== this.m_proxyBuffer.count) {
var i = this.m_proxyBuffer.count, r = Mn(this.m_proxyBuffer.data, 0, i, n.computeTag(this.m_inverseDiameter * e.lowerBound.x, this.m_inverseDiameter * e.lowerBound.y), n.Proxy.CompareProxyTag), s = In(this.m_proxyBuffer.data, r, i, n.computeTag(this.m_inverseDiameter * e.upperBound.x, this.m_inverseDiameter * e.upperBound.y), n.Proxy.CompareTagProxy);
if (!this.m_positionBuffer.data) throw new Error();
for (var o = this.m_positionBuffer.data, a = r; a < s; ++a) {
var c = this.m_proxyBuffer.data[a].index, l = o[c];
if (e.lowerBound.x < l.x && l.x < e.upperBound.x && e.lowerBound.y < l.y && l.y < e.upperBound.y && !t.ReportParticle(this, c)) break;
}
}
};
n.prototype.QueryShapeAABB = function(t, e, i, r) {
void 0 === r && (r = 0);
var s = n.QueryShapeAABB_s_aabb;
e.ComputeAABB(s, i, r);
this.QueryAABB(t, s);
};
n.prototype.QueryPointAABB = function(t, e, i) {
void 0 === i && (i = c);
var r = n.QueryPointAABB_s_aabb;
r.lowerBound.Set(e.x - i, e.y - i);
r.upperBound.Set(e.x + i, e.y + i);
this.QueryAABB(t, r);
};
n.prototype.RayCast = function(t, e, i) {
var r = n.RayCast_s_aabb, s = n.RayCast_s_p, o = n.RayCast_s_v, a = n.RayCast_s_n, c = n.RayCast_s_point;
if (0 !== this.m_proxyBuffer.count) {
if (!this.m_positionBuffer.data) throw new Error();
var l = this.m_positionBuffer.data, u = r;
D.MinV(e, i, u.lowerBound);
D.MaxV(e, i, u.upperBound);
for (var h, _ = 1, f = D.SubVV(i, e, o), d = D.DotVV(f, f), p = this.GetInsideBoundsEnumerator(u); (h = p.GetNext()) >= 0; ) {
var m = D.SubVV(e, l[h], s), y = D.DotVV(m, f), v = y * y - d * (D.DotVV(m, m) - this.m_squaredDiameter);
if (v >= 0) {
var C = w(v), x = (-y - C) / d;
if (x > _) continue;
if (x < 0 && ((x = (-y + C) / d) < 0 || x > _)) continue;
var A = D.AddVMulSV(m, x, f, a);
A.Normalize();
var b = t.ReportParticle(this, h, D.AddVMulSV(e, x, f, c), A, x);
if ((_ = g(_, b)) <= 0) break;
}
}
}
};
n.prototype.ComputeAABB = function(t) {
var e = this.GetParticleCount();
t.lowerBound.x = +i;
t.lowerBound.y = +i;
t.upperBound.x = -i;
t.upperBound.y = -i;
if (!this.m_positionBuffer.data) throw new Error();
for (var n = this.m_positionBuffer.data, r = 0; r < e; r++) {
var s = n[r];
D.MinV(t.lowerBound, s, t.lowerBound);
D.MaxV(t.upperBound, s, t.upperBound);
}
t.lowerBound.x -= this.m_particleDiameter;
t.lowerBound.y -= this.m_particleDiameter;
t.upperBound.x += this.m_particleDiameter;
t.upperBound.y += this.m_particleDiameter;
};
n.prototype.FreeBuffer = function(t, e) {
null !== t && (t.length = 0);
};
n.prototype.FreeUserOverridableBuffer = function(t) {
0 === t.userSuppliedCapacity && this.FreeBuffer(t.data, this.m_internalAllocatedCapacity);
};
n.prototype.ReallocateBuffer3 = function(t, e, i) {
if (i <= e) throw new Error();
var n = t ? t.slice() : [];
n.length = i;
return n;
};
n.prototype.ReallocateBuffer5 = function(t, e, i, n, r) {
if (n <= i) throw new Error();
if (e && !(n <= e)) throw new Error();
r && !t || e || (t = this.ReallocateBuffer3(t, i, n));
return t;
};
n.prototype.ReallocateBuffer4 = function(t, e, i, n) {
return this.ReallocateBuffer5(t.data, t.userSuppliedCapacity, e, i, n);
};
n.prototype.RequestBuffer = function(t) {
if (!t) {
0 === this.m_internalAllocatedCapacity && this.ReallocateInternalAllocatedBuffers(256);
(t = []).length = this.m_internalAllocatedCapacity;
}
return t;
};
n.prototype.ReallocateHandleBuffers = function(t) {
this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, t, !0);
};
n.prototype.ReallocateInternalAllocatedBuffers = function(t) {
function e(t, e) {
return e && t > e ? e : t;
}
t = e(t = e(t = e(t = e(t = e(t = e(t, this.m_def.maxCount), this.m_flagsBuffer.userSuppliedCapacity), this.m_positionBuffer.userSuppliedCapacity), this.m_velocityBuffer.userSuppliedCapacity), this.m_colorBuffer.userSuppliedCapacity), this.m_userDataBuffer.userSuppliedCapacity);
if (this.m_internalAllocatedCapacity < t) {
this.ReallocateHandleBuffers(t);
this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, t, !1);
var i = this.m_stuckThreshold > 0;
this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_internalAllocatedCapacity = t;
}
};
n.prototype.CreateParticleForGroup = function(t, i, n) {
var r = new yn();
r.flags = e(t.flags, 0);
N.MulXV(i, n, r.position);
D.AddVV(e(t.linearVelocity, D.ZERO), D.CrossSV(e(t.angularVelocity, 0), D.SubVV(r.position, e(t.position, D.ZERO), D.s_t0), D.s_t0), r.velocity);
r.color.Copy(e(t.color, z.ZERO));
r.lifetime = e(t.lifetime, 0);
r.userData = t.userData;
this.CreateParticle(r);
};
n.prototype.CreateParticlesStrokeShapeForGroup = function(i, r, s) {
var o = n.CreateParticlesStrokeShapeForGroup_s_edge, a = n.CreateParticlesStrokeShapeForGroup_s_d, c = n.CreateParticlesStrokeShapeForGroup_s_p, l = e(r.stride, 0);
0 === l && (l = this.GetParticleStride());
for (var u = 0, h = i.GetChildCount(), _ = 0; _ < h; _++) {
var f = null;
if (i.GetType() === t.b2ShapeType.e_edgeShape) f = i; else {
f = o;
i.GetChildEdge(f, _);
}
for (var d = D.SubVV(f.m_vertex2, f.m_vertex1, a), p = d.Length(); u < p; ) {
var m = D.AddVMulSV(f.m_vertex1, u / p, d, c);
this.CreateParticleForGroup(r, s, m);
u += l;
}
u -= p;
}
};
n.prototype.CreateParticlesFillShapeForGroup = function(t, i, r) {
var s = n.CreateParticlesFillShapeForGroup_s_aabb, o = n.CreateParticlesFillShapeForGroup_s_p, a = e(i.stride, 0);
0 === a && (a = this.GetParticleStride());
var c = N.IDENTITY, l = s;
t.ComputeAABB(l, c, 0);
for (var u = Math.floor(l.lowerBound.y / a) * a; u < l.upperBound.y; u += a) for (var h = Math.floor(l.lowerBound.x / a) * a; h < l.upperBound.x; h += a) {
var _ = o.Set(h, u);
t.TestPoint(c, _) && this.CreateParticleForGroup(i, r, _);
}
};
n.prototype.CreateParticlesWithShapeForGroup = function(e, i, n) {
switch (e.GetType()) {
case t.b2ShapeType.e_edgeShape:
case t.b2ShapeType.e_chainShape:
this.CreateParticlesStrokeShapeForGroup(e, i, n);
break;

case t.b2ShapeType.e_polygonShape:
case t.b2ShapeType.e_circleShape:
this.CreateParticlesFillShapeForGroup(e, i, n);
}
};
n.prototype.CreateParticlesWithShapesForGroup = function(t, e, i, r) {
var s = new n.CompositeShape(t, e);
this.CreateParticlesFillShapeForGroup(s, i, r);
};
n.prototype.CloneParticle = function(t, e) {
var i = new yn();
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
i.flags = this.m_flagsBuffer.data[t];
i.position.Copy(this.m_positionBuffer.data[t]);
i.velocity.Copy(this.m_velocityBuffer.data[t]);
this.m_colorBuffer.data && i.color.Copy(this.m_colorBuffer.data[t]);
this.m_userDataBuffer.data && (i.userData = this.m_userDataBuffer.data[t]);
i.group = e;
var n = this.CreateParticle(i);
if (this.m_handleIndexBuffer.data) {
var r = this.m_handleIndexBuffer.data[t];
r && r.SetIndex(n);
this.m_handleIndexBuffer.data[n] = r;
this.m_handleIndexBuffer.data[t] = null;
}
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[n] = this.m_lastBodyContactStepBuffer.data[t]);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[n] = this.m_bodyContactCountBuffer.data[t]);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[n] = this.m_consecutiveContactStepsBuffer.data[t]);
this.m_hasForce && this.m_forceBuffer[n].Copy(this.m_forceBuffer[t]);
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[n] = this.m_staticPressureBuffer[t]);
this.m_depthBuffer && (this.m_depthBuffer[n] = this.m_depthBuffer[t]);
this.m_expirationTimeBuffer.data && (this.m_expirationTimeBuffer.data[n] = this.m_expirationTimeBuffer.data[t]);
return n;
};
n.prototype.DestroyParticlesInGroup = function(t, e) {
void 0 === e && (e = !1);
for (var i = t.m_firstIndex; i < t.m_lastIndex; i++) this.DestroyParticle(i, e);
};
n.prototype.DestroyParticleGroup = function(t) {
this.m_world.m_destructionListener && this.m_world.m_destructionListener.SayGoodbyeParticleGroup(t);
this.SetGroupFlags(t, 0);
for (var e = t.m_firstIndex; e < t.m_lastIndex; e++) this.m_groupBuffer[e] = null;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_groupList && (this.m_groupList = t.m_next);
--this.m_groupCount;
};
n.ParticleCanBeConnected = function(e, i) {
return 0 != (e & (t.b2ParticleFlag.b2_wallParticle | t.b2ParticleFlag.b2_springParticle | t.b2ParticleFlag.b2_elasticParticle)) || null !== i && 0 != (i.GetGroupFlags() & t.b2ParticleGroupFlag.b2_rigidParticleGroup);
};
n.prototype.UpdatePairsAndTriads = function(e, i, r) {
var s = n.UpdatePairsAndTriads_s_dab, o = n.UpdatePairsAndTriads_s_dbc, a = n.UpdatePairsAndTriads_s_dca;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var c = this.m_positionBuffer.data, l = 0, u = e; u < i; u++) l |= this.m_flagsBuffer.data[u];
if (l & n.k_pairFlags) for (var h = 0; h < this.m_contactBuffer.count; h++) {
var _ = this.m_contactBuffer.data[h], f = _.indexA, d = _.indexB, p = this.m_flagsBuffer.data[f], m = this.m_flagsBuffer.data[d], y = this.m_groupBuffer[f], v = this.m_groupBuffer[d];
if (f >= e && f < i && d >= e && d < i && !((p | m) & t.b2ParticleFlag.b2_zombieParticle) && (p | m) & n.k_pairFlags && (r.IsNecessary(f) || r.IsNecessary(d)) && n.ParticleCanBeConnected(p, y) && n.ParticleCanBeConnected(m, v) && r.ShouldCreatePair(f, d)) {
var C = this.m_pairBuffer.data[this.m_pairBuffer.Append()];
C.indexA = f;
C.indexB = d;
C.flags = _.flags;
C.strength = g(y ? y.m_strength : 1, v ? v.m_strength : 1);
C.distance = D.DistanceVV(c[f], c[d]);
}
Bn(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, n.ComparePairIndices);
this.m_pairBuffer.Unique(n.MatchPairIndices);
}
if (l & n.k_triadFlags) {
var x = new bn(i - e);
for (u = e; u < i; u++) {
var A = this.m_flagsBuffer.data[u], b = this.m_groupBuffer[u];
A & t.b2ParticleFlag.b2_zombieParticle || !n.ParticleCanBeConnected(A, b) || x.AddGenerator(c[u], u, r.IsNecessary(u));
}
var S = this.GetParticleStride();
x.Generate(S / 2, 2 * S);
var w = this;
x.GetNodes((function(t, e, i) {
if (!w.m_flagsBuffer.data) throw new Error();
var l = w.m_flagsBuffer.data[t], u = w.m_flagsBuffer.data[e], h = w.m_flagsBuffer.data[i];
if ((l | u | h) & n.k_triadFlags && r.ShouldCreateTriad(t, e, i)) {
var _ = c[t], f = c[e], d = c[i], p = D.SubVV(_, f, s), m = D.SubVV(f, d, o), y = D.SubVV(d, _, a), v = 4 * w.m_squaredDiameter;
if (D.DotVV(p, p) > v || D.DotVV(m, m) > v || D.DotVV(y, y) > v) return;
var C = w.m_groupBuffer[t], x = w.m_groupBuffer[e], A = w.m_groupBuffer[i], b = w.m_triadBuffer.data[w.m_triadBuffer.Append()];
b.indexA = t;
b.indexB = e;
b.indexC = i;
b.flags = l | u | h;
b.strength = g(g(C ? C.m_strength : 1, x ? x.m_strength : 1), A ? A.m_strength : 1);
var S = (_.x + f.x + d.x) / 3, T = (_.y + f.y + d.y) / 3;
b.pa.x = _.x - S;
b.pa.y = _.y - T;
b.pb.x = f.x - S;
b.pb.y = f.y - T;
b.pc.x = d.x - S;
b.pc.y = d.y - T;
b.ka = -D.DotVV(y, p);
b.kb = -D.DotVV(p, m);
b.kc = -D.DotVV(m, y);
b.s = D.CrossVV(_, f) + D.CrossVV(f, d) + D.CrossVV(d, _);
}
}));
Bn(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, n.CompareTriadIndices);
this.m_triadBuffer.Unique(n.MatchTriadIndices);
}
};
n.prototype.UpdatePairsAndTriadsWithReactiveParticles = function() {
var e = new n.ReactiveFilter(this.m_flagsBuffer);
this.UpdatePairsAndTriads(0, this.m_count, e);
if (!this.m_flagsBuffer.data) throw new Error();
for (var i = 0; i < this.m_count; i++) this.m_flagsBuffer.data[i] &= ~t.b2ParticleFlag.b2_reactiveParticle;
this.m_allParticleFlags &= ~t.b2ParticleFlag.b2_reactiveParticle;
};
n.ComparePairIndices = function(t, e) {
var i = t.indexA - e.indexA;
return 0 !== i ? i < 0 : t.indexB < e.indexB;
};
n.MatchPairIndices = function(t, e) {
return t.indexA === e.indexA && t.indexB === e.indexB;
};
n.CompareTriadIndices = function(t, e) {
var i = t.indexA - e.indexA;
if (0 !== i) return i < 0;
var n = t.indexB - e.indexB;
return 0 !== n ? n < 0 : t.indexC < e.indexC;
};
n.MatchTriadIndices = function(t, e) {
return t.indexA === e.indexA && t.indexB === e.indexB && t.indexC === e.indexC;
};
n.InitializeParticleLists = function(t, e) {
for (var i = t.GetBufferIndex(), n = t.GetParticleCount(), r = 0; r < n; r++) {
var s = e[r];
s.list = s;
s.next = null;
s.count = 1;
s.index = r + i;
}
};
n.prototype.MergeParticleListsInContact = function(t, e) {
for (var i = t.GetBufferIndex(), r = 0; r < this.m_contactBuffer.count; r++) {
var s = this.m_contactBuffer.data[r], o = s.indexA, a = s.indexB;
if (t.ContainsParticle(o) && t.ContainsParticle(a)) {
var c = e[o - i].list, l = e[a - i].list;
if (c !== l) {
if (c.count < l.count) {
var u = c;
c = l;
l = u;
}
n.MergeParticleLists(c, l);
}
}
}
};
n.MergeParticleLists = function(t, e) {
for (var i = e; ;) {
i.list = t;
var n = i.next;
if (!n) {
i.next = t.next;
break;
}
i = n;
}
t.next = e;
t.count += e.count;
e.count = 0;
};
n.FindLongestParticleList = function(t, e) {
for (var i = t.GetParticleCount(), n = e[0], r = 0; r < i; r++) {
var s = e[r];
n.count < s.count && (n = s);
}
return n;
};
n.prototype.MergeZombieParticleListNodes = function(e, i, r) {
if (!this.m_flagsBuffer.data) throw new Error();
for (var s = e.GetParticleCount(), o = 0; o < s; o++) {
var a = i[o];
a !== r && this.m_flagsBuffer.data[a.index] & t.b2ParticleFlag.b2_zombieParticle && n.MergeParticleListAndNode(r, a);
}
};
n.MergeParticleListAndNode = function(t, e) {
e.list = t;
e.next = t.next;
t.next = e;
t.count++;
e.count = 0;
};
n.prototype.CreateParticleGroupsFromParticleList = function(e, i, n) {
if (!this.m_flagsBuffer.data) throw new Error();
var r = e.GetParticleCount(), s = new Cn();
s.groupFlags = e.GetGroupFlags();
s.userData = e.GetUserData();
for (var o = 0; o < r; o++) {
var a = i[o];
if (a.count && a !== n) for (var c = this.CreateParticleGroup(s), l = a; l; l = l.next) {
var u = l.index, h = this.CloneParticle(u, c);
this.m_flagsBuffer.data[u] |= t.b2ParticleFlag.b2_zombieParticle;
l.index = h;
}
}
};
n.prototype.UpdatePairsAndTriadsWithParticleList = function(t, e) {
for (var i = t.GetBufferIndex(), n = 0; n < this.m_pairBuffer.count; n++) {
var r = this.m_pairBuffer.data[n], s = r.indexA, o = r.indexB;
t.ContainsParticle(s) && (r.indexA = e[s - i].index);
t.ContainsParticle(o) && (r.indexB = e[o - i].index);
}
for (n = 0; n < this.m_triadBuffer.count; n++) {
var a = this.m_triadBuffer.data[n], c = (s = a.indexA, o = a.indexB, a.indexC);
t.ContainsParticle(s) && (a.indexA = e[s - i].index);
t.ContainsParticle(o) && (a.indexB = e[o - i].index);
t.ContainsParticle(c) && (a.indexC = e[c - i].index);
}
};
n.prototype.ComputeDepth = function() {
for (var e = [], n = 0, r = 0; r < this.m_contactBuffer.count; r++) {
var s = (v = this.m_contactBuffer.data[r]).indexA, o = v.indexB, a = this.m_groupBuffer[s], c = this.m_groupBuffer[o];
a && a === c && a.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth && (e[n++] = v);
}
for (var l = [], u = 0, h = this.m_groupList; h; h = h.GetNext()) if (h.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {
l[u++] = h;
this.SetGroupFlags(h, h.m_groupFlags & ~t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
for (var _ = h.m_firstIndex; _ < h.m_lastIndex; _++) this.m_accumulationBuffer[_] = 0;
}
for (r = 0; r < n; r++) {
s = (v = e[r]).indexA, o = v.indexB;
var f = v.weight;
this.m_accumulationBuffer[s] += f;
this.m_accumulationBuffer[o] += f;
}
for (_ = 0; _ < u; _++) for (var d = (h = l[_]).m_firstIndex; d < h.m_lastIndex; d++) {
f = this.m_accumulationBuffer[d];
this.m_depthBuffer[d] = f < .8 ? 0 : i;
}
for (var p = w(this.m_count) >> 0, m = 0; m < p; m++) {
var y = !1;
for (r = 0; r < n; r++) {
s = (v = e[r]).indexA, o = v.indexB;
var v, g = 1 - v.weight, C = this.m_depthBuffer[s], x = this.m_depthBuffer[o], A = x + g, b = C + g;
if (C > A) {
this.m_depthBuffer[s] = A;
y = !0;
}
if (x > b) {
this.m_depthBuffer[o] = b;
y = !0;
}
}
if (!y) break;
}
for (_ = 0; _ < u; _++) for (var S = (h = l[_]).m_firstIndex; S < h.m_lastIndex; S++) this.m_depthBuffer[S] < i ? this.m_depthBuffer[S] *= this.m_particleDiameter : this.m_depthBuffer[S] = 0;
};
n.prototype.GetInsideBoundsEnumerator = function(t) {
var e = n.computeTag(this.m_inverseDiameter * t.lowerBound.x - 1, this.m_inverseDiameter * t.lowerBound.y - 1), i = n.computeTag(this.m_inverseDiameter * t.upperBound.x + 1, this.m_inverseDiameter * t.upperBound.y + 1), r = this.m_proxyBuffer.count, s = Mn(this.m_proxyBuffer.data, 0, r, e, n.Proxy.CompareProxyTag), o = In(this.m_proxyBuffer.data, 0, r, i, n.Proxy.CompareTagProxy);
return new n.InsideBoundsEnumerator(this, e, i, s, o);
};
n.prototype.UpdateAllParticleFlags = function() {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_allParticleFlags = 0;
for (var t = 0; t < this.m_count; t++) this.m_allParticleFlags |= this.m_flagsBuffer.data[t];
this.m_needsUpdateAllParticleFlags = !1;
};
n.prototype.UpdateAllGroupFlags = function() {
this.m_allGroupFlags = 0;
for (var t = this.m_groupList; t; t = t.GetNext()) this.m_allGroupFlags |= t.m_groupFlags;
this.m_needsUpdateAllGroupFlags = !1;
};
n.prototype.AddContact = function(t, e, i) {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
var r = n.AddContact_s_d, s = this.m_positionBuffer.data, o = D.SubVV(s[e], s[t], r), a = D.DotVV(o, o);
if (a < this.m_squaredDiameter) {
var c = S(a);
isFinite(c) || (c = 198177537e11);
var l = this.m_contactBuffer.data[this.m_contactBuffer.Append()];
l.indexA = t;
l.indexB = e;
l.flags = this.m_flagsBuffer.data[t] | this.m_flagsBuffer.data[e];
l.weight = 1 - a * c * this.m_inverseDiameter;
D.MulSV(c, o, l.normal);
}
};
n.prototype.FindContacts_Reference = function(t) {
var e = this.m_proxyBuffer.count;
this.m_contactBuffer.count = 0;
for (var i = 0, r = 0; i < e; i++) {
for (var s = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, 1, 0), o = i + 1; o < e && !(s < this.m_proxyBuffer.data[o].tag); o++) this.AddContact(this.m_proxyBuffer.data[i].index, this.m_proxyBuffer.data[o].index, this.m_contactBuffer);
for (var a = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, -1, 1); r < e && !(a <= this.m_proxyBuffer.data[r].tag); r++) ;
var c = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, 1, 1);
for (o = r; o < e && !(c < this.m_proxyBuffer.data[o].tag); o++) this.AddContact(this.m_proxyBuffer.data[i].index, this.m_proxyBuffer.data[o].index, this.m_contactBuffer);
}
};
n.prototype.FindContacts = function(t) {
this.FindContacts_Reference(t);
};
n.prototype.UpdateProxies_Reference = function(t) {
if (!this.m_positionBuffer.data) throw new Error();
for (var e = this.m_positionBuffer.data, i = this.m_inverseDiameter, r = 0; r < this.m_proxyBuffer.count; ++r) {
var s = this.m_proxyBuffer.data[r], o = e[s.index];
s.tag = n.computeTag(i * o.x, i * o.y);
}
};
n.prototype.UpdateProxies = function(t) {
this.UpdateProxies_Reference(t);
};
n.prototype.SortProxies = function(t) {
Tn(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, n.Proxy.CompareProxyProxy);
};
n.prototype.FilterContacts = function(e) {
var i = this.GetParticleContactFilter();
if (null !== i) {
var n = this;
this.m_contactBuffer.RemoveIf((function(e) {
return 0 != (e.flags & t.b2ParticleFlag.b2_particleContactFilterParticle) && !i.ShouldCollideParticleParticle(n, e.indexA, e.indexB);
}));
}
};
n.prototype.NotifyContactListenerPreContact = function(t) {
if (null !== this.GetParticleContactListener()) {
t.Initialize(this.m_contactBuffer, this.m_flagsBuffer);
throw new Error();
}
};
n.prototype.NotifyContactListenerPostContact = function(t) {
var e = this.GetParticleContactListener();
if (null !== e) {
for (var i = 0; i < this.m_contactBuffer.count; ++i) {
var n = this.m_contactBuffer.data[i];
e.BeginContactParticleParticle(this, n);
}
throw new Error();
}
};
n.b2ParticleContactIsZombie = function(e) {
return (e.flags & t.b2ParticleFlag.b2_zombieParticle) === t.b2ParticleFlag.b2_zombieParticle;
};
n.prototype.UpdateContacts = function(t) {
this.UpdateProxies(this.m_proxyBuffer);
this.SortProxies(this.m_proxyBuffer);
var e = new n.b2ParticlePairSet();
this.NotifyContactListenerPreContact(e);
this.FindContacts(this.m_contactBuffer);
this.FilterContacts(this.m_contactBuffer);
this.NotifyContactListenerPostContact(e);
t && this.m_contactBuffer.RemoveIf(n.b2ParticleContactIsZombie);
};
n.prototype.NotifyBodyContactListenerPreContact = function(t) {
if (null !== this.GetFixtureContactListener()) {
t.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);
throw new Error();
}
};
n.prototype.NotifyBodyContactListenerPostContact = function(t) {
var e = this.GetFixtureContactListener();
if (null !== e) {
for (var i = 0; i < this.m_bodyContactBuffer.count; i++) {
var n = this.m_bodyContactBuffer.data[i];
e.BeginContactFixtureParticle(this, n);
}
throw new Error();
}
};
n.prototype.UpdateBodyContacts = function() {
var t = n.UpdateBodyContacts_s_aabb, e = new n.FixtureParticleSet();
this.NotifyBodyContactListenerPreContact(e);
if (this.m_stuckThreshold > 0) {
if (!this.m_bodyContactCountBuffer.data) throw new Error();
if (!this.m_lastBodyContactStepBuffer.data) throw new Error();
if (!this.m_consecutiveContactStepsBuffer.data) throw new Error();
for (var i = this.GetParticleCount(), r = 0; r < i; r++) {
this.m_bodyContactCountBuffer.data[r] = 0;
this.m_timestamp > this.m_lastBodyContactStepBuffer.data[r] + 1 && (this.m_consecutiveContactStepsBuffer.data[r] = 0);
}
}
this.m_bodyContactBuffer.SetCount(0);
this.m_stuckParticleBuffer.SetCount(0);
var s = t;
this.ComputeAABB(s);
var o = new n.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());
this.m_world.QueryAABB(o, s);
this.m_def.strictContactCheck && this.RemoveSpuriousBodyContacts();
this.NotifyBodyContactListenerPostContact(e);
};
n.prototype.Solve = function(e) {
var i = n.Solve_s_subStep;
if (0 !== this.m_count) {
this.m_expirationTimeBuffer.data && this.SolveLifetimes(e);
this.m_allParticleFlags & t.b2ParticleFlag.b2_zombieParticle && this.SolveZombie();
this.m_needsUpdateAllParticleFlags && this.UpdateAllParticleFlags();
this.m_needsUpdateAllGroupFlags && this.UpdateAllGroupFlags();
if (!this.m_paused) for (this.m_iterationIndex = 0; this.m_iterationIndex < e.particleIterations; this.m_iterationIndex++) {
++this.m_timestamp;
var r = i.Copy(e);
r.dt /= e.particleIterations;
r.inv_dt *= e.particleIterations;
this.UpdateContacts(!1);
this.UpdateBodyContacts();
this.ComputeWeight();
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth && this.ComputeDepth();
this.m_allParticleFlags & t.b2ParticleFlag.b2_reactiveParticle && this.UpdatePairsAndTriadsWithReactiveParticles();
this.m_hasForce && this.SolveForce(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_viscousParticle && this.SolveViscous();
this.m_allParticleFlags & t.b2ParticleFlag.b2_repulsiveParticle && this.SolveRepulsive(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_powderParticle && this.SolvePowder(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_tensileParticle && this.SolveTensile(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_solidParticleGroup && this.SolveSolid(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_colorMixingParticle && this.SolveColorMixing();
this.SolveGravity(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_staticPressureParticle && this.SolveStaticPressure(r);
this.SolvePressure(r);
this.SolveDamping(r);
this.m_allParticleFlags & n.k_extraDampingFlags && this.SolveExtraDamping();
this.m_allParticleFlags & t.b2ParticleFlag.b2_elasticParticle && this.SolveElastic(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_springParticle && this.SolveSpring(r);
this.LimitVelocity(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup && this.SolveRigidDamping();
this.m_allParticleFlags & t.b2ParticleFlag.b2_barrierParticle && this.SolveBarrier(r);
this.SolveCollision(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup && this.SolveRigid(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_wallParticle && this.SolveWall();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var s = 0; s < this.m_count; s++) this.m_positionBuffer.data[s].SelfMulAdd(r.dt, this.m_velocityBuffer.data[s]);
}
}
};
n.prototype.SolveCollision = function(t) {
var e = n.SolveCollision_s_aabb;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = e;
o.lowerBound.x = +i;
o.lowerBound.y = +i;
o.upperBound.x = -i;
o.upperBound.y = -i;
for (var a = 0; a < this.m_count; a++) {
var c = s[a], l = r[a], u = l.x + t.dt * c.x, h = l.y + t.dt * c.y;
o.lowerBound.x = g(o.lowerBound.x, g(l.x, u));
o.lowerBound.y = g(o.lowerBound.y, g(l.y, h));
o.upperBound.x = C(o.upperBound.x, C(l.x, u));
o.upperBound.y = C(o.upperBound.y, C(l.y, h));
}
var _ = new n.SolveCollisionCallback(this, t);
this.m_world.QueryAABB(_, o);
};
n.prototype.LimitVelocity = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = this.GetCriticalVelocitySquared(t), n = 0; n < this.m_count; n++) {
var r = e[n], s = D.DotVV(r, r);
s > i && r.SelfMul(w(i / s));
}
};
n.prototype.SolveGravity = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = n.SolveGravity_s_gravity, i = this.m_velocityBuffer.data, r = D.MulSV(t.dt * this.m_def.gravityScale, this.m_world.GetGravity(), e), s = 0; s < this.m_count; s++) i[s].SelfAdd(r);
};
n.prototype.SolveBarrier = function(e) {
var i = n.SolveBarrier_s_aabb, r = n.SolveBarrier_s_va, s = n.SolveBarrier_s_vb, o = n.SolveBarrier_s_pba, a = n.SolveBarrier_s_vba, c = n.SolveBarrier_s_vc, l = n.SolveBarrier_s_pca, u = n.SolveBarrier_s_vca, h = n.SolveBarrier_s_qba, _ = n.SolveBarrier_s_qca, f = n.SolveBarrier_s_dv, d = n.SolveBarrier_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var p = this.m_positionBuffer.data, m = this.m_velocityBuffer.data, y = 0; y < this.m_count; y++) {
0 != (this.m_flagsBuffer.data[y] & n.k_barrierWallFlags) && m[y].SetZero();
}
for (var v = 2.5 * e.dt, g = this.GetParticleMass(), C = 0; C < this.m_pairBuffer.count; C++) {
var x = this.m_pairBuffer.data[C];
if (x.flags & t.b2ParticleFlag.b2_barrierParticle) {
var A = x.indexA, b = x.indexB, S = p[A], T = p[b], B = i;
D.MinV(S, T, B.lowerBound);
D.MaxV(S, T, B.upperBound);
for (var E = this.m_groupBuffer[A], M = this.m_groupBuffer[b], I = this.GetLinearVelocity(E, A, S, r), R = this.GetLinearVelocity(M, b, T, s), P = D.SubVV(T, S, o), V = D.SubVV(R, I, a), L = this.GetInsideBoundsEnumerator(B), O = void 0; (O = L.GetNext()) >= 0; ) {
var F = p[O], N = this.m_groupBuffer[O];
if (E !== N && M !== N) {
var G = this.GetLinearVelocity(N, O, F, c), z = D.SubVV(F, S, l), k = D.SubVV(G, I, u), U = D.CrossVV(V, k), j = D.CrossVV(P, k) - D.CrossVV(z, V), W = D.CrossVV(P, z), H = void 0, q = void 0, X = h, Y = _;
if (0 === U) {
if (0 === j) continue;
if (!((q = -W / j) >= 0 && q < v)) continue;
D.AddVMulSV(P, q, V, X);
D.AddVMulSV(z, q, k, Y);
if (!((H = D.DotVV(X, Y) / D.DotVV(X, X)) >= 0 && H <= 1)) continue;
} else {
var J = j * j - 4 * W * U;
if (J < 0) continue;
var Z = w(J), K = (-j - Z) / (2 * U), Q = (-j + Z) / (2 * U);
if (K > Q) {
var $ = K;
K = Q;
Q = $;
}
q = K;
D.AddVMulSV(P, q, V, X);
D.AddVMulSV(z, q, k, Y);
H = D.DotVV(X, Y) / D.DotVV(X, X);
if (!(q >= 0 && q < v && H >= 0 && H <= 1)) {
if (!((q = Q) >= 0 && q < v)) continue;
D.AddVMulSV(P, q, V, X);
D.AddVMulSV(z, q, k, Y);
if (!((H = D.DotVV(X, Y) / D.DotVV(X, X)) >= 0 && H <= 1)) continue;
}
}
var tt = f;
tt.x = I.x + H * V.x - G.x;
tt.y = I.y + H * V.y - G.y;
var et = D.MulSV(g, tt, d);
if (N && this.IsRigidGroup(N)) {
var it = N.GetMass(), nt = N.GetInertia();
it > 0 && N.m_linearVelocity.SelfMulAdd(1 / it, et);
nt > 0 && (N.m_angularVelocity += D.CrossVV(D.SubVV(F, N.GetCenter(), D.s_t0), et) / nt);
} else m[O].SelfAdd(tt);
this.ParticleApplyForce(O, et.SelfMul(-e.inv_dt));
}
}
}
}
};
n.prototype.SolveStaticPressure = function(e) {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);
for (var i = this.GetCriticalPressure(e), n = this.m_def.staticPressureStrength * i, r = .25 * i, s = this.m_def.staticPressureRelaxation, o = 0; o < this.m_def.staticPressureIterations; o++) {
for (var a = 0; a < this.m_count; a++) this.m_accumulationBuffer[a] = 0;
for (var c = 0; c < this.m_contactBuffer.count; c++) {
var l = this.m_contactBuffer.data[c];
if (l.flags & t.b2ParticleFlag.b2_staticPressureParticle) {
var u = l.indexA, h = l.indexB, _ = l.weight;
this.m_accumulationBuffer[u] += _ * this.m_staticPressureBuffer[h];
this.m_accumulationBuffer[h] += _ * this.m_staticPressureBuffer[u];
}
}
for (a = 0; a < this.m_count; a++) {
_ = this.m_weightBuffer[a];
if (this.m_flagsBuffer.data[a] & t.b2ParticleFlag.b2_staticPressureParticle) {
var f = (this.m_accumulationBuffer[a] + n * (_ - 1)) / (_ + s);
this.m_staticPressureBuffer[a] = x(f, 0, r);
} else this.m_staticPressureBuffer[a] = 0;
}
}
};
n.prototype.ComputeWeight = function() {
for (var t = 0; t < this.m_count; t++) this.m_weightBuffer[t] = 0;
for (t = 0; t < this.m_bodyContactBuffer.count; t++) {
var e = (n = this.m_bodyContactBuffer.data[t]).index, i = n.weight;
this.m_weightBuffer[e] += i;
}
for (t = 0; t < this.m_contactBuffer.count; t++) {
e = (n = this.m_contactBuffer.data[t]).indexA;
var n, r = n.indexB;
i = n.weight;
this.m_weightBuffer[e] += i;
this.m_weightBuffer[r] += i;
}
};
n.prototype.SolvePressure = function(e) {
var i = n.SolvePressure_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.GetCriticalPressure(e), a = this.m_def.pressureStrength * o, c = .25 * o, l = 0; l < this.m_count; l++) {
var u = this.m_weightBuffer[l], h = a * C(0, u - 1);
this.m_accumulationBuffer[l] = g(h, c);
}
if (this.m_allParticleFlags & n.k_noPressureFlags) for (l = 0; l < this.m_count; l++) this.m_flagsBuffer.data[l] & n.k_noPressureFlags && (this.m_accumulationBuffer[l] = 0);
if (this.m_allParticleFlags & t.b2ParticleFlag.b2_staticPressureParticle) for (l = 0; l < this.m_count; l++) this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_staticPressureParticle && (this.m_accumulationBuffer[l] += this.m_staticPressureBuffer[l]);
for (var _ = e.dt / (this.m_def.density * this.m_particleDiameter), f = this.GetParticleInvMass(), d = 0; d < this.m_bodyContactBuffer.count; d++) {
var p = (b = this.m_bodyContactBuffer.data[d]).index, m = b.body, y = (u = b.weight, 
b.mass), v = b.normal, x = r[p], A = (h = this.m_accumulationBuffer[p] + a * u, 
D.MulSV(_ * u * y * h, v, i));
s[p].SelfMulSub(f, A);
m.ApplyLinearImpulse(A, x, !0);
}
for (d = 0; d < this.m_contactBuffer.count; d++) {
var b;
p = (b = this.m_contactBuffer.data[d]).indexA, m = b.indexB, u = b.weight, v = b.normal, 
h = this.m_accumulationBuffer[p] + this.m_accumulationBuffer[m], A = D.MulSV(_ * u * h, v, i);
s[p].SelfSub(A);
s[m].SelfAdd(A);
}
};
n.prototype.SolveDamping = function(t) {
var e = n.SolveDamping_s_v, i = n.SolveDamping_s_f;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.dampingStrength, a = 1 / this.GetCriticalVelocity(t), c = this.GetParticleInvMass(), l = 0; l < this.m_bodyContactBuffer.count; l++) {
var u = (x = this.m_bodyContactBuffer.data[l]).index, h = x.body, _ = x.weight, f = x.mass, d = x.normal, p = r[u], m = D.SubVV(h.GetLinearVelocityFromWorldPoint(p, D.s_t0), s[u], e);
if ((A = D.DotVV(m, d)) < 0) {
var y = C(o * _, g(-a * A, .5)), v = D.MulSV(y * f * A, d, i);
s[u].SelfMulAdd(c, v);
h.ApplyLinearImpulse(v.SelfNeg(), p, !0);
}
}
for (l = 0; l < this.m_contactBuffer.count; l++) {
var x, A;
u = (x = this.m_contactBuffer.data[l]).indexA, h = x.indexB, _ = x.weight, d = x.normal, 
m = D.SubVV(s[h], s[u], e);
if ((A = D.DotVV(m, d)) < 0) {
y = C(o * _, g(-a * A, .5)), v = D.MulSV(y * A, d, i);
s[u].SelfAdd(v);
s[h].SelfSub(v);
}
}
};
n.prototype.SolveRigidDamping = function() {
var t = n.SolveRigidDamping_s_t0, e = n.SolveRigidDamping_s_t1, i = n.SolveRigidDamping_s_p, r = n.SolveRigidDamping_s_v, s = [ 0 ], o = [ 0 ], a = [ 0 ], c = [ 0 ], l = [ 0 ], u = [ 0 ];
if (!this.m_positionBuffer.data) throw new Error();
for (var h = this.m_positionBuffer.data, _ = this.m_def.dampingStrength, f = 0; f < this.m_bodyContactBuffer.count; f++) {
var d = (A = this.m_bodyContactBuffer.data[f]).index;
if ((b = this.m_groupBuffer[d]) && this.IsRigidGroup(b)) {
var p = A.body, m = A.normal, y = A.weight, v = h[d], C = D.SubVV(p.GetLinearVelocityFromWorldPoint(v, t), b.GetLinearVelocityFromWorldPoint(v, e), r);
if ((B = D.DotVV(C, m)) < 0) {
this.InitDampingParameterWithRigidGroupOrParticle(s, o, a, !0, b, d, v, m);
this.InitDampingParameter(c, l, u, p.GetMass(), p.GetInertia() - p.GetMass() * p.GetLocalCenter().LengthSquared(), p.GetWorldCenter(), v, m);
var x = _ * g(y, 1) * this.ComputeDampingImpulse(s[0], o[0], a[0], c[0], l[0], u[0], B);
this.ApplyDamping(s[0], o[0], a[0], !0, b, d, x, m);
p.ApplyLinearImpulse(D.MulSV(-x, m, D.s_t0), v, !0);
}
}
}
for (f = 0; f < this.m_contactBuffer.count; f++) {
d = (A = this.m_contactBuffer.data[f]).indexA, p = A.indexB, m = A.normal, y = A.weight;
var A, b = this.m_groupBuffer[d], S = this.m_groupBuffer[p], w = this.IsRigidGroup(b), T = this.IsRigidGroup(S);
if (b !== S && (w || T)) {
var B;
v = D.MidVV(h[d], h[p], i), C = D.SubVV(this.GetLinearVelocity(S, p, v, t), this.GetLinearVelocity(b, d, v, e), r);
if ((B = D.DotVV(C, m)) < 0) {
this.InitDampingParameterWithRigidGroupOrParticle(s, o, a, w, b, d, v, m);
this.InitDampingParameterWithRigidGroupOrParticle(c, l, u, T, S, p, v, m);
x = _ * y * this.ComputeDampingImpulse(s[0], o[0], a[0], c[0], l[0], u[0], B);
this.ApplyDamping(s[0], o[0], a[0], w, b, d, x, m);
this.ApplyDamping(c[0], l[0], u[0], T, S, p, -x, m);
}
}
}
};
n.prototype.SolveExtraDamping = function() {
var t = n.SolveExtraDamping_s_v, e = n.SolveExtraDamping_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var i = this.m_velocityBuffer.data, r = this.m_positionBuffer.data, s = this.GetParticleInvMass(), o = 0; o < this.m_bodyContactBuffer.count; o++) {
var a = this.m_bodyContactBuffer.data[o], c = a.index;
if (this.m_flagsBuffer.data[c] & n.k_extraDampingFlags) {
var l = a.body, u = a.mass, h = a.normal, _ = r[c], f = D.SubVV(l.GetLinearVelocityFromWorldPoint(_, D.s_t0), i[c], t), d = D.DotVV(f, h);
if (d < 0) {
var p = D.MulSV(.5 * u * d, h, e);
i[c].SelfMulAdd(s, p);
l.ApplyLinearImpulse(p.SelfNeg(), _, !0);
}
}
}
};
n.prototype.SolveWall = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = 0; i < this.m_count; i++) this.m_flagsBuffer.data[i] & t.b2ParticleFlag.b2_wallParticle && e[i].SetZero();
};
n.prototype.SolveRigid = function(e) {
var i = n.SolveRigid_s_position, r = n.SolveRigid_s_rotation, s = n.SolveRigid_s_transform, o = n.SolveRigid_s_velocityTransform;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var a = this.m_positionBuffer.data, c = this.m_velocityBuffer.data, l = this.m_groupList; l; l = l.GetNext()) if (l.m_groupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup) {
l.UpdateStatistics();
var u = r;
u.SetAngle(e.dt * l.m_angularVelocity);
var h = D.AddVV(l.m_center, D.SubVV(D.MulSV(e.dt, l.m_linearVelocity, D.s_t0), F.MulRV(u, l.m_center, D.s_t1), D.s_t0), i), _ = s;
_.SetPositionRotation(h, u);
N.MulXX(_, l.m_transform, l.m_transform);
var f = o;
f.p.x = e.inv_dt * _.p.x;
f.p.y = e.inv_dt * _.p.y;
f.q.s = e.inv_dt * _.q.s;
f.q.c = e.inv_dt * (_.q.c - 1);
for (var d = l.m_firstIndex; d < l.m_lastIndex; d++) N.MulXV(f, a[d], c[d]);
}
};
n.prototype.SolveElastic = function(e) {
var i = n.SolveElastic_s_pa, r = n.SolveElastic_s_pb, s = n.SolveElastic_s_pc, o = n.SolveElastic_s_r, a = n.SolveElastic_s_t0;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var c = this.m_positionBuffer.data, l = this.m_velocityBuffer.data, u = e.inv_dt * this.m_def.elasticStrength, h = 0; h < this.m_triadBuffer.count; h++) {
var _ = this.m_triadBuffer.data[h];
if (_.flags & t.b2ParticleFlag.b2_elasticParticle) {
var f = _.indexA, d = _.indexB, p = _.indexC, m = _.pa, y = _.pb, v = _.pc, g = i.Copy(c[f]), C = r.Copy(c[d]), x = s.Copy(c[p]), A = l[f], b = l[d], w = l[p];
g.SelfMulAdd(e.dt, A);
C.SelfMulAdd(e.dt, b);
x.SelfMulAdd(e.dt, w);
var T = (g.x + C.x + x.x) / 3, B = (g.y + C.y + x.y) / 3;
g.x -= T;
g.y -= B;
C.x -= T;
C.y -= B;
x.x -= T;
x.y -= B;
var E = o;
E.s = D.CrossVV(m, g) + D.CrossVV(y, C) + D.CrossVV(v, x);
E.c = D.DotVV(m, g) + D.DotVV(y, C) + D.DotVV(v, x);
var M = S(E.s * E.s + E.c * E.c);
isFinite(M) || (M = 198177537e11);
E.s *= M;
E.c *= M;
var I = u * _.strength;
F.MulRV(E, m, a);
D.SubVV(a, g, a);
D.MulSV(I, a, a);
A.SelfAdd(a);
F.MulRV(E, y, a);
D.SubVV(a, C, a);
D.MulSV(I, a, a);
b.SelfAdd(a);
F.MulRV(E, v, a);
D.SubVV(a, x, a);
D.MulSV(I, a, a);
w.SelfAdd(a);
}
}
};
n.prototype.SolveSpring = function(e) {
var i = n.SolveSpring_s_pa, r = n.SolveSpring_s_pb, s = n.SolveSpring_s_d, o = n.SolveSpring_s_f;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var a = this.m_positionBuffer.data, c = this.m_velocityBuffer.data, l = e.inv_dt * this.m_def.springStrength, u = 0; u < this.m_pairBuffer.count; u++) {
var h = this.m_pairBuffer.data[u];
if (h.flags & t.b2ParticleFlag.b2_springParticle) {
var _ = h.indexA, f = h.indexB, d = i.Copy(a[_]), p = r.Copy(a[f]), m = c[_], y = c[f];
d.SelfMulAdd(e.dt, m);
p.SelfMulAdd(e.dt, y);
var v = D.SubVV(p, d, s), g = h.distance, C = v.Length(), x = l * h.strength, A = D.MulSV(x * (g - C) / C, v, o);
m.SelfSub(A);
y.SelfAdd(A);
}
}
};
n.prototype.SolveTensile = function(e) {
var i = n.SolveTensile_s_weightedNormal, r = n.SolveTensile_s_s, s = n.SolveTensile_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
for (var o = this.m_velocityBuffer.data, a = 0; a < this.m_count; a++) {
this.m_accumulation2Buffer[a] = new D();
this.m_accumulation2Buffer[a].SetZero();
}
for (var c = 0; c < this.m_contactBuffer.count; c++) {
if ((v = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_tensileParticle) {
var l = v.indexA, u = v.indexB, h = v.weight, _ = v.normal, f = D.MulSV((1 - h) * h, _, i);
this.m_accumulation2Buffer[l].SelfSub(f);
this.m_accumulation2Buffer[u].SelfAdd(f);
}
}
var d = this.GetCriticalVelocity(e), p = this.m_def.surfaceTensionPressureStrength * d, m = this.m_def.surfaceTensionNormalStrength * d, y = .5 * d;
for (c = 0; c < this.m_contactBuffer.count; c++) {
var v;
if ((v = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_tensileParticle) {
l = v.indexA, u = v.indexB, h = v.weight, _ = v.normal;
var C = this.m_weightBuffer[l] + this.m_weightBuffer[u], x = D.SubVV(this.m_accumulation2Buffer[u], this.m_accumulation2Buffer[l], r), A = g(p * (C - 2) + m * D.DotVV(x, _), y) * h, b = D.MulSV(A, _, s);
o[l].SelfSub(b);
o[u].SelfAdd(b);
}
}
};
n.prototype.SolveViscous = function() {
var e = n.SolveViscous_s_v, i = n.SolveViscous_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.viscousStrength, a = this.GetParticleInvMass(), c = 0; c < this.m_bodyContactBuffer.count; c++) {
var l = (m = this.m_bodyContactBuffer.data[c]).index;
if (this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_viscousParticle) {
var u = m.body, h = m.weight, _ = m.mass, f = r[l], d = D.SubVV(u.GetLinearVelocityFromWorldPoint(f, D.s_t0), s[l], e), p = D.MulSV(o * _ * h, d, i);
s[l].SelfMulAdd(a, p);
u.ApplyLinearImpulse(p.SelfNeg(), f, !0);
}
}
for (c = 0; c < this.m_contactBuffer.count; c++) {
var m;
if ((m = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_viscousParticle) {
l = m.indexA, u = m.indexB, h = m.weight, d = D.SubVV(s[u], s[l], e), p = D.MulSV(o * h, d, i);
s[l].SelfAdd(p);
s[u].SelfSub(p);
}
}
};
n.prototype.SolveRepulsive = function(e) {
var i = n.SolveRepulsive_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_velocityBuffer.data, s = this.m_def.repulsiveStrength * this.GetCriticalVelocity(e), o = 0; o < this.m_contactBuffer.count; o++) {
var a = this.m_contactBuffer.data[o];
if (a.flags & t.b2ParticleFlag.b2_repulsiveParticle) {
var c = a.indexA, l = a.indexB;
if (this.m_groupBuffer[c] !== this.m_groupBuffer[l]) {
var u = a.weight, h = a.normal, _ = D.MulSV(s * u, h, i);
r[c].SelfSub(_);
r[l].SelfAdd(_);
}
}
}
};
n.prototype.SolvePowder = function(e) {
var i = n.SolvePowder_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.powderStrength * this.GetCriticalVelocity(e), a = this.GetParticleInvMass(), c = 0; c < this.m_bodyContactBuffer.count; c++) {
var l = (p = this.m_bodyContactBuffer.data[c]).index;
if (this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_powderParticle) {
if ((m = p.weight) > .25) {
var u = p.body, h = p.mass, _ = r[l], f = p.normal, d = D.MulSV(o * h * (m - .25), f, i);
s[l].SelfMulSub(a, d);
u.ApplyLinearImpulse(d, _, !0);
}
}
}
for (c = 0; c < this.m_contactBuffer.count; c++) {
var p;
if ((p = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_powderParticle) {
var m;
if ((m = p.weight) > .25) {
l = p.indexA, u = p.indexB, f = p.normal, d = D.MulSV(o * (m - .25), f, i);
s[l].SelfSub(d);
s[u].SelfAdd(d);
}
}
}
};
n.prototype.SolveSolid = function(t) {
var e = n.SolveSolid_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
var i = this.m_velocityBuffer.data;
this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);
for (var r = t.inv_dt * this.m_def.ejectionStrength, s = 0; s < this.m_contactBuffer.count; s++) {
var o = this.m_contactBuffer.data[s], a = o.indexA, c = o.indexB;
if (this.m_groupBuffer[a] !== this.m_groupBuffer[c]) {
var l = o.weight, u = o.normal, h = this.m_depthBuffer[a] + this.m_depthBuffer[c], _ = D.MulSV(r * h * l, u, e);
i[a].SelfSub(_);
i[c].SelfAdd(_);
}
}
};
n.prototype.SolveForce = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = t.dt * this.GetParticleInvMass(), n = 0; n < this.m_count; n++) e[n].SelfMulAdd(i, this.m_forceBuffer[n]);
this.m_hasForce = !1;
};
n.prototype.SolveColorMixing = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_colorBuffer.data) throw new Error();
var e = .5 * this.m_def.colorMixingStrength;
if (e) for (var i = 0; i < this.m_contactBuffer.count; i++) {
var n = this.m_contactBuffer.data[i], r = n.indexA, s = n.indexB;
if (this.m_flagsBuffer.data[r] & this.m_flagsBuffer.data[s] & t.b2ParticleFlag.b2_colorMixingParticle) {
var o = this.m_colorBuffer.data[r], a = this.m_colorBuffer.data[s];
z.MixColors(o, a, e);
}
}
};
n.prototype.SolveZombie = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = 0, i = [], n = 0; n < this.m_count; n++) i[n] = h;
var r = 0;
for (n = 0; n < this.m_count; n++) {
var s = this.m_flagsBuffer.data[n];
if (s & t.b2ParticleFlag.b2_zombieParticle) {
var o = this.m_world.m_destructionListener;
s & t.b2ParticleFlag.b2_destructionListenerParticle && o && o.SayGoodbyeParticle(this, n);
if (this.m_handleIndexBuffer.data) {
if (a = this.m_handleIndexBuffer.data[n]) {
a.SetIndex(h);
this.m_handleIndexBuffer.data[n] = null;
}
}
i[n] = h;
} else {
i[n] = e;
if (n !== e) {
if (this.m_handleIndexBuffer.data) {
var a;
(a = this.m_handleIndexBuffer.data[n]) && a.SetIndex(e);
this.m_handleIndexBuffer.data[e] = a;
}
this.m_flagsBuffer.data[e] = this.m_flagsBuffer.data[n];
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[e] = this.m_lastBodyContactStepBuffer.data[n]);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[e] = this.m_bodyContactCountBuffer.data[n]);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[e] = this.m_consecutiveContactStepsBuffer.data[n]);
this.m_positionBuffer.data[e].Copy(this.m_positionBuffer.data[n]);
this.m_velocityBuffer.data[e].Copy(this.m_velocityBuffer.data[n]);
this.m_groupBuffer[e] = this.m_groupBuffer[n];
this.m_hasForce && this.m_forceBuffer[e].Copy(this.m_forceBuffer[n]);
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[e] = this.m_staticPressureBuffer[n]);
this.m_depthBuffer && (this.m_depthBuffer[e] = this.m_depthBuffer[n]);
this.m_colorBuffer.data && this.m_colorBuffer.data[e].Copy(this.m_colorBuffer.data[n]);
this.m_userDataBuffer.data && (this.m_userDataBuffer.data[e] = this.m_userDataBuffer.data[n]);
this.m_expirationTimeBuffer.data && (this.m_expirationTimeBuffer.data[e] = this.m_expirationTimeBuffer.data[n]);
}
e++;
r |= s;
}
}
for (var c = function(t) {
return t.index < 0;
}, l = function(t) {
return t.indexA < 0 || t.indexB < 0;
}, u = function(t) {
return t.index < 0;
}, _ = function(t) {
return t.indexA < 0 || t.indexB < 0;
}, f = function(t) {
return t.indexA < 0 || t.indexB < 0 || t.indexC < 0;
}, d = 0; d < this.m_proxyBuffer.count; d++) {
var p = this.m_proxyBuffer.data[d];
p.index = i[p.index];
}
this.m_proxyBuffer.RemoveIf(c);
for (d = 0; d < this.m_contactBuffer.count; d++) {
(m = this.m_contactBuffer.data[d]).indexA = i[m.indexA];
m.indexB = i[m.indexB];
}
this.m_contactBuffer.RemoveIf(l);
for (d = 0; d < this.m_bodyContactBuffer.count; d++) {
var m;
(m = this.m_bodyContactBuffer.data[d]).index = i[m.index];
}
this.m_bodyContactBuffer.RemoveIf(u);
for (d = 0; d < this.m_pairBuffer.count; d++) {
var y = this.m_pairBuffer.data[d];
y.indexA = i[y.indexA];
y.indexB = i[y.indexB];
}
this.m_pairBuffer.RemoveIf(_);
for (d = 0; d < this.m_triadBuffer.count; d++) {
var v = this.m_triadBuffer.data[d];
v.indexA = i[v.indexA];
v.indexB = i[v.indexB];
v.indexC = i[v.indexC];
}
this.m_triadBuffer.RemoveIf(f);
if (this.m_indexByExpirationTimeBuffer.data) for (var x = 0, A = 0; A < this.m_count; A++) {
var b = i[this.m_indexByExpirationTimeBuffer.data[A]];
b !== h && (this.m_indexByExpirationTimeBuffer.data[x++] = b);
}
for (var S = this.m_groupList; S; S = S.GetNext()) {
var w = e, T = 0, B = !1;
for (n = S.m_firstIndex; n < S.m_lastIndex; n++) {
var E = i[n];
if (E >= 0) {
w = g(w, E);
T = C(T, E + 1);
} else B = !0;
}
if (w < T) {
S.m_firstIndex = w;
S.m_lastIndex = T;
B && S.m_groupFlags & t.b2ParticleGroupFlag.b2_solidParticleGroup && this.SetGroupFlags(S, S.m_groupFlags | t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
} else {
S.m_firstIndex = 0;
S.m_lastIndex = 0;
S.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupCanBeEmpty || this.SetGroupFlags(S, S.m_groupFlags | t.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);
}
}
this.m_count = e;
this.m_allParticleFlags = r;
this.m_needsUpdateAllParticleFlags = !1;
for (S = this.m_groupList; S; ) {
var M = S.GetNext();
S.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed && this.DestroyParticleGroup(S);
S = M;
}
};
n.prototype.SolveLifetimes = function(t) {
if (!this.m_expirationTimeBuffer.data) throw new Error();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
this.m_timeElapsed = this.LifetimeToExpirationTime(t.dt);
var e = this.GetQuantizedTimeElapsed(), i = this.m_expirationTimeBuffer.data, n = this.m_indexByExpirationTimeBuffer.data, r = this.GetParticleCount();
if (this.m_expirationTimeBufferRequiresSorting) {
Tn(n, 0, r, (function(t, e) {
var n = i[t], r = i[e], s = n <= 0;
return s === r <= 0 ? n > r : s;
}));
this.m_expirationTimeBufferRequiresSorting = !1;
}
for (var s = r - 1; s >= 0; --s) {
var o = n[s], a = i[o];
if (e < a || a <= 0) break;
this.DestroyParticle(o);
}
};
n.prototype.RotateBuffer = function(t, e, i) {
if (t !== e && e !== i) {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
Rn(this.m_flagsBuffer.data, t, e, i);
this.m_lastBodyContactStepBuffer.data && Rn(this.m_lastBodyContactStepBuffer.data, t, e, i);
this.m_bodyContactCountBuffer.data && Rn(this.m_bodyContactCountBuffer.data, t, e, i);
this.m_consecutiveContactStepsBuffer.data && Rn(this.m_consecutiveContactStepsBuffer.data, t, e, i);
Rn(this.m_positionBuffer.data, t, e, i);
Rn(this.m_velocityBuffer.data, t, e, i);
Rn(this.m_groupBuffer, t, e, i);
this.m_hasForce && Rn(this.m_forceBuffer, t, e, i);
this.m_staticPressureBuffer && Rn(this.m_staticPressureBuffer, t, e, i);
this.m_depthBuffer && Rn(this.m_depthBuffer, t, e, i);
this.m_colorBuffer.data && Rn(this.m_colorBuffer.data, t, e, i);
this.m_userDataBuffer.data && Rn(this.m_userDataBuffer.data, t, e, i);
if (this.m_handleIndexBuffer.data) {
Rn(this.m_handleIndexBuffer.data, t, e, i);
for (var n = t; n < i; ++n) {
var r = this.m_handleIndexBuffer.data[n];
r && r.SetIndex(f(r.GetIndex()));
}
}
if (this.m_expirationTimeBuffer.data) {
Rn(this.m_expirationTimeBuffer.data, t, e, i);
var s = this.GetParticleCount();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
var o = this.m_indexByExpirationTimeBuffer.data;
for (n = 0; n < s; ++n) o[n] = f(o[n]);
}
for (var a = 0; a < this.m_proxyBuffer.count; a++) {
var c = this.m_proxyBuffer.data[a];
c.index = f(c.index);
}
for (a = 0; a < this.m_contactBuffer.count; a++) {
(l = this.m_contactBuffer.data[a]).indexA = f(l.indexA);
l.indexB = f(l.indexB);
}
for (a = 0; a < this.m_bodyContactBuffer.count; a++) {
var l;
(l = this.m_bodyContactBuffer.data[a]).index = f(l.index);
}
for (a = 0; a < this.m_pairBuffer.count; a++) {
var u = this.m_pairBuffer.data[a];
u.indexA = f(u.indexA);
u.indexB = f(u.indexB);
}
for (a = 0; a < this.m_triadBuffer.count; a++) {
var h = this.m_triadBuffer.data[a];
h.indexA = f(h.indexA);
h.indexB = f(h.indexB);
h.indexC = f(h.indexC);
}
for (var _ = this.m_groupList; _; _ = _.GetNext()) {
_.m_firstIndex = f(_.m_firstIndex);
_.m_lastIndex = f(_.m_lastIndex - 1) + 1;
}
}
function f(n) {
return n < t ? n : n < e ? n + i - e : n < i ? n + t - e : n;
}
};
n.prototype.GetCriticalVelocity = function(t) {
return this.m_particleDiameter * t.inv_dt;
};
n.prototype.GetCriticalVelocitySquared = function(t) {
var e = this.GetCriticalVelocity(t);
return e * e;
};
n.prototype.GetCriticalPressure = function(t) {
return this.m_def.density * this.GetCriticalVelocitySquared(t);
};
n.prototype.GetParticleStride = function() {
return .75 * this.m_particleDiameter;
};
n.prototype.GetParticleMass = function() {
var t = this.GetParticleStride();
return this.m_def.density * t * t;
};
n.prototype.GetParticleInvMass = function() {
var t = this.m_inverseDiameter * (1 / .75);
return this.m_inverseDensity * t * t;
};
n.prototype.GetFixtureContactFilter = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_fixtureContactFilterParticle ? this.m_world.m_contactManager.m_contactFilter : null;
};
n.prototype.GetParticleContactFilter = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_particleContactFilterParticle ? this.m_world.m_contactManager.m_contactFilter : null;
};
n.prototype.GetFixtureContactListener = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_fixtureContactListenerParticle ? this.m_world.m_contactManager.m_contactListener : null;
};
n.prototype.GetParticleContactListener = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_particleContactListenerParticle ? this.m_world.m_contactManager.m_contactListener : null;
};
n.prototype.SetUserOverridableBuffer = function(t, e, i) {
t.data = e;
t.userSuppliedCapacity = i;
};
n.prototype.SetGroupFlags = function(e, i) {
var n = e.m_groupFlags;
(n ^ i) & t.b2ParticleGroupFlag.b2_solidParticleGroup && (i |= t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
n & ~i && (this.m_needsUpdateAllGroupFlags = !0);
if (~this.m_allGroupFlags & i) {
i & t.b2ParticleGroupFlag.b2_solidParticleGroup && (this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer));
this.m_allGroupFlags |= i;
}
e.m_groupFlags = i;
};
n.BodyContactCompare = function(t, e) {
return t.index === e.index ? t.weight > e.weight : t.index < e.index;
};
n.prototype.RemoveSpuriousBodyContacts = function() {
Tn(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, n.BodyContactCompare);
var t = n.RemoveSpuriousBodyContacts_s_n, e = n.RemoveSpuriousBodyContacts_s_pos, i = n.RemoveSpuriousBodyContacts_s_normal, r = this, s = -1, o = 0;
this.m_bodyContactBuffer.count = En(this.m_bodyContactBuffer.data, (function(n) {
if (n.index !== s) {
o = 0;
s = n.index;
}
if (o++ > 3) return !0;
var a = t.Copy(n.normal);
a.SelfMul(r.m_particleDiameter * (1 - n.weight));
if (!r.m_positionBuffer.data) throw new Error();
var l = D.AddVV(r.m_positionBuffer.data[n.index], a, e);
if (!n.fixture.TestPoint(l)) {
for (var u = n.fixture.GetShape().GetChildCount(), h = 0; h < u; h++) {
var _ = i;
if (n.fixture.ComputeDistance(l, _, h) < c) return !1;
}
return !0;
}
return !1;
}), this.m_bodyContactBuffer.count);
};
n.prototype.DetectStuckParticle = function(t) {
if (!(this.m_stuckThreshold <= 0)) {
if (!this.m_bodyContactCountBuffer.data) throw new Error();
if (!this.m_consecutiveContactStepsBuffer.data) throw new Error();
if (!this.m_lastBodyContactStepBuffer.data) throw new Error();
++this.m_bodyContactCountBuffer.data[t];
if (2 === this.m_bodyContactCountBuffer.data[t]) {
++this.m_consecutiveContactStepsBuffer.data[t];
this.m_consecutiveContactStepsBuffer.data[t] > this.m_stuckThreshold && (this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = t);
}
this.m_lastBodyContactStepBuffer.data[t] = this.m_timestamp;
}
};
n.prototype.ValidateParticleIndex = function(t) {
return t >= 0 && t < this.GetParticleCount() && t !== h;
};
n.prototype.GetQuantizedTimeElapsed = function() {
return Math.floor(this.m_timeElapsed / 4294967296);
};
n.prototype.LifetimeToExpirationTime = function(t) {
return this.m_timeElapsed + Math.floor(t / this.m_def.lifetimeGranularity * 4294967296);
};
n.prototype.ForceCanBeApplied = function(e) {
return !(e & t.b2ParticleFlag.b2_wallParticle);
};
n.prototype.PrepareForceBuffer = function() {
if (!this.m_hasForce) {
for (var t = 0; t < this.m_count; t++) this.m_forceBuffer[t].SetZero();
this.m_hasForce = !0;
}
};
n.prototype.IsRigidGroup = function(e) {
return null !== e && 0 != (e.m_groupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup);
};
n.prototype.GetLinearVelocity = function(t, e, i, n) {
if (t && this.IsRigidGroup(t)) return t.GetLinearVelocityFromWorldPoint(i, n);
if (!this.m_velocityBuffer.data) throw new Error();
return n.Copy(this.m_velocityBuffer.data[e]);
};
n.prototype.InitDampingParameter = function(t, e, i, n, r, s, o, a) {
t[0] = n > 0 ? 1 / n : 0;
e[0] = r > 0 ? 1 / r : 0;
i[0] = D.CrossVV(D.SubVV(o, s, D.s_t0), a);
};
n.prototype.InitDampingParameterWithRigidGroupOrParticle = function(e, i, n, r, s, o, a, c) {
if (s && r) this.InitDampingParameter(e, i, n, s.GetMass(), s.GetInertia(), s.GetCenter(), a, c); else {
if (!this.m_flagsBuffer.data) throw new Error();
var l = this.m_flagsBuffer.data[o];
this.InitDampingParameter(e, i, n, l & t.b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, a, a, c);
}
};
n.prototype.ComputeDampingImpulse = function(t, e, i, n, r, s, o) {
var a = t + e * i * i + n + r * s * s;
return a > 0 ? o / a : 0;
};
n.prototype.ApplyDamping = function(t, e, i, n, r, s, o, a) {
if (r && n) {
r.m_linearVelocity.SelfMulAdd(o * t, a);
r.m_angularVelocity += o * i * e;
} else {
if (!this.m_velocityBuffer.data) throw new Error();
this.m_velocityBuffer.data[s].SelfMulAdd(o * t, a);
}
};
n.xTruncBits = 12;
n.yTruncBits = 12;
n.tagBits = 32;
n.yOffset = 1 << n.yTruncBits - 1;
n.yShift = n.tagBits - n.yTruncBits;
n.xShift = n.tagBits - n.yTruncBits - n.xTruncBits;
n.xScale = 1 << n.xShift;
n.xOffset = n.xScale * (1 << n.xTruncBits - 1);
n.yMask = (1 << n.yTruncBits) - 1 << n.yShift;
n.xMask = ~n.yMask;
n.DestroyParticlesInShape_s_aabb = new Tt();
n.CreateParticleGroup_s_transform = new N();
n.ComputeCollisionEnergy_s_v = new D();
n.QueryShapeAABB_s_aabb = new Tt();
n.QueryPointAABB_s_aabb = new Tt();
n.RayCast_s_aabb = new Tt();
n.RayCast_s_p = new D();
n.RayCast_s_v = new D();
n.RayCast_s_n = new D();
n.RayCast_s_point = new D();
n.k_pairFlags = t.b2ParticleFlag.b2_springParticle;
n.k_triadFlags = t.b2ParticleFlag.b2_elasticParticle;
n.k_noPressureFlags = t.b2ParticleFlag.b2_powderParticle | t.b2ParticleFlag.b2_tensileParticle;
n.k_extraDampingFlags = t.b2ParticleFlag.b2_staticPressureParticle;
n.k_barrierWallFlags = t.b2ParticleFlag.b2_barrierParticle | t.b2ParticleFlag.b2_wallParticle;
n.CreateParticlesStrokeShapeForGroup_s_edge = new ii();
n.CreateParticlesStrokeShapeForGroup_s_d = new D();
n.CreateParticlesStrokeShapeForGroup_s_p = new D();
n.CreateParticlesFillShapeForGroup_s_aabb = new Tt();
n.CreateParticlesFillShapeForGroup_s_p = new D();
n.UpdatePairsAndTriads_s_dab = new D();
n.UpdatePairsAndTriads_s_dbc = new D();
n.UpdatePairsAndTriads_s_dca = new D();
n.AddContact_s_d = new D();
n.UpdateBodyContacts_s_aabb = new Tt();
n.Solve_s_subStep = new on();
n.SolveCollision_s_aabb = new Tt();
n.SolveGravity_s_gravity = new D();
n.SolveBarrier_s_aabb = new Tt();
n.SolveBarrier_s_va = new D();
n.SolveBarrier_s_vb = new D();
n.SolveBarrier_s_pba = new D();
n.SolveBarrier_s_vba = new D();
n.SolveBarrier_s_vc = new D();
n.SolveBarrier_s_pca = new D();
n.SolveBarrier_s_vca = new D();
n.SolveBarrier_s_qba = new D();
n.SolveBarrier_s_qca = new D();
n.SolveBarrier_s_dv = new D();
n.SolveBarrier_s_f = new D();
n.SolvePressure_s_f = new D();
n.SolveDamping_s_v = new D();
n.SolveDamping_s_f = new D();
n.SolveRigidDamping_s_t0 = new D();
n.SolveRigidDamping_s_t1 = new D();
n.SolveRigidDamping_s_p = new D();
n.SolveRigidDamping_s_v = new D();
n.SolveExtraDamping_s_v = new D();
n.SolveExtraDamping_s_f = new D();
n.SolveRigid_s_position = new D();
n.SolveRigid_s_rotation = new F();
n.SolveRigid_s_transform = new N();
n.SolveRigid_s_velocityTransform = new N();
n.SolveElastic_s_pa = new D();
n.SolveElastic_s_pb = new D();
n.SolveElastic_s_pc = new D();
n.SolveElastic_s_r = new F();
n.SolveElastic_s_t0 = new D();
n.SolveSpring_s_pa = new D();
n.SolveSpring_s_pb = new D();
n.SolveSpring_s_d = new D();
n.SolveSpring_s_f = new D();
n.SolveTensile_s_weightedNormal = new D();
n.SolveTensile_s_s = new D();
n.SolveTensile_s_f = new D();
n.SolveViscous_s_v = new D();
n.SolveViscous_s_f = new D();
n.SolveRepulsive_s_f = new D();
n.SolvePowder_s_f = new D();
n.SolveSolid_s_f = new D();
n.RemoveSpuriousBodyContacts_s_n = new D();
n.RemoveSpuriousBodyContacts_s_pos = new D();
n.RemoveSpuriousBodyContacts_s_normal = new D();
return n;
})();
(function(e) {
var n = (function() {
return function() {
this.data = null;
this.userSuppliedCapacity = 0;
};
})();
e.UserOverridableBuffer = n;
var r = (function() {
function t() {
this.index = h;
this.tag = 0;
}
t.CompareProxyProxy = function(t, e) {
return t.tag < e.tag;
};
t.CompareTagProxy = function(t, e) {
return t < e.tag;
};
t.CompareProxyTag = function(t, e) {
return t.tag < e;
};
return t;
})();
e.Proxy = r;
var s = (function() {
function t(t, i, n, r, s) {
this.m_system = t;
this.m_xLower = (i & e.xMask) >>> 0;
this.m_xUpper = (n & e.xMask) >>> 0;
this.m_yLower = (i & e.yMask) >>> 0;
this.m_yUpper = (n & e.yMask) >>> 0;
this.m_first = r;
this.m_last = s;
}
t.prototype.GetNext = function() {
for (;this.m_first < this.m_last; ) {
var t = (this.m_system.m_proxyBuffer.data[this.m_first].tag & e.xMask) >>> 0;
if (t >= this.m_xLower && t <= this.m_xUpper) return this.m_system.m_proxyBuffer.data[this.m_first++].index;
this.m_first++;
}
return h;
};
return t;
})();
e.InsideBoundsEnumerator = s;
var o = (function() {
return function() {
this.next = null;
this.count = 0;
this.index = 0;
};
})();
e.ParticleListNode = o;
var a = (function() {
function t() {}
t.prototype.Allocate = function(t, e) {
return e;
};
t.prototype.Clear = function() {};
t.prototype.GetCount = function() {
return 0;
};
t.prototype.Invalidate = function(t) {};
t.prototype.GetValidBuffer = function() {
return [];
};
t.prototype.GetBuffer = function() {
return [];
};
t.prototype.SetCount = function(t) {};
return t;
})();
e.FixedSetAllocator = a;
var l = (function() {
return function(t, e) {
this.second = h;
this.first = t;
this.second = e;
};
})();
e.FixtureParticle = l;
var u = (function(t) {
$e(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.Initialize = function(t, e) {};
e.prototype.Find = function(t) {
return h;
};
return e;
})(e.FixedSetAllocator);
e.FixtureParticleSet = u;
var _ = (function() {
return function(t, e) {
this.first = h;
this.second = h;
this.first = t;
this.second = e;
};
})();
e.ParticlePair = _;
var f = (function(t) {
$e(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.Initialize = function(t, e) {};
e.prototype.Find = function(t) {
return h;
};
return e;
})(e.FixedSetAllocator);
e.b2ParticlePairSet = f;
var d = (function() {
function t() {}
t.prototype.IsNecessary = function(t) {
return !0;
};
t.prototype.ShouldCreatePair = function(t, e) {
return !0;
};
t.prototype.ShouldCreateTriad = function(t, e, i) {
return !0;
};
return t;
})();
e.ConnectionFilter = d;
var p = (function(t) {
$e(e, t);
function e(e, i, n, r) {
var s = t.call(this) || this;
s.m_callDestructionListener = !1;
s.m_destroyed = 0;
s.m_system = e;
s.m_shape = i;
s.m_xf = n;
s.m_callDestructionListener = r;
s.m_destroyed = 0;
return s;
}
e.prototype.ReportFixture = function(t) {
return !1;
};
e.prototype.ReportParticle = function(t, e) {
if (t !== this.m_system) return !1;
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[e])) {
this.m_system.DestroyParticle(e, this.m_callDestructionListener);
this.m_destroyed++;
}
return !0;
};
e.prototype.Destroyed = function() {
return this.m_destroyed;
};
return e;
})(en);
e.DestroyParticlesInShapeCallback = p;
var m = (function(t) {
$e(e, t);
function e(e) {
var i = t.call(this) || this;
i.m_threshold = 0;
i.m_threshold = e;
return i;
}
e.prototype.ShouldCreatePair = function(t, e) {
return t < this.m_threshold && this.m_threshold <= e || e < this.m_threshold && this.m_threshold <= t;
};
e.prototype.ShouldCreateTriad = function(t, e, i) {
return (t < this.m_threshold || e < this.m_threshold || i < this.m_threshold) && (this.m_threshold <= t || this.m_threshold <= e || this.m_threshold <= i);
};
return e;
})(e.ConnectionFilter);
e.JoinParticleGroupsFilter = m;
var y = (function(e) {
$e(n, e);
function n(i, n) {
void 0 === n && (n = i.length);
var r = e.call(this, t.b2ShapeType.e_unknown, 0) || this;
r.m_shapeCount = 0;
r.m_shapes = i;
r.m_shapeCount = n;
return r;
}
n.prototype.Clone = function() {
throw new Error();
};
n.prototype.GetChildCount = function() {
return 1;
};
n.prototype.TestPoint = function(t, e) {
for (var i = 0; i < this.m_shapeCount; i++) if (this.m_shapes[i].TestPoint(t, e)) return !0;
return !1;
};
n.prototype.ComputeDistance = function(t, e, i, n) {
return 0;
};
n.prototype.RayCast = function(t, e, i, n) {
return !1;
};
n.prototype.ComputeAABB = function(t, e, n) {
var r = new Tt();
t.lowerBound.x = +i;
t.lowerBound.y = +i;
t.upperBound.x = -i;
t.upperBound.y = -i;
for (var s = 0; s < this.m_shapeCount; s++) for (var o = this.m_shapes[s].GetChildCount(), a = 0; a < o; a++) {
var c = r;
this.m_shapes[s].ComputeAABB(c, e, a);
t.Combine1(c);
}
};
n.prototype.ComputeMass = function(t, e) {};
n.prototype.SetupDistanceProxy = function(t, e) {};
n.prototype.ComputeSubmergedArea = function(t, e, i, n) {
return 0;
};
n.prototype.Dump = function(t) {};
return n;
})(Ke);
e.CompositeShape = y;
var v = (function(e) {
$e(i, e);
function i(t) {
var i = e.call(this) || this;
i.m_flagsBuffer = t;
return i;
}
i.prototype.IsNecessary = function(e) {
if (!this.m_flagsBuffer.data) throw new Error();
return 0 != (this.m_flagsBuffer.data[e] & t.b2ParticleFlag.b2_reactiveParticle);
};
return i;
})(e.ConnectionFilter);
e.ReactiveFilter = v;
var g = (function(i) {
$e(n, i);
function n(t, e) {
var n = i.call(this, t) || this;
n.m_contactFilter = e;
return n;
}
n.prototype.ShouldCollideFixtureParticle = function(e, i, n) {
if (this.m_contactFilter) {
if (this.m_system.GetFlagsBuffer()[n] & t.b2ParticleFlag.b2_fixtureContactFilterParticle) return this.m_contactFilter.ShouldCollideFixtureParticle(e, this.m_system, n);
}
return !0;
};
n.prototype.ReportFixtureAndParticle = function(i, n, r) {
var s = e.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n, o = e.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;
if (!this.m_system.m_flagsBuffer.data) throw new Error();
if (!this.m_system.m_positionBuffer.data) throw new Error();
var a = this.m_system.m_positionBuffer.data[r], c = s, l = i.ComputeDistance(a, c, n);
if (l < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(i, this.m_system, r)) {
var u = i.GetBody(), h = u.GetWorldCenter(), _ = u.GetMass(), f = u.GetInertia() - _ * u.GetLocalCenter().LengthSquared(), d = _ > 0 ? 1 / _ : 0, p = f > 0 ? 1 / f : 0, m = this.m_system.m_flagsBuffer.data[r] & t.b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass(), y = D.SubVV(a, h, o), v = D.CrossVV(y, c), g = m + d + p * v * v, C = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];
C.index = r;
C.body = u;
C.fixture = i;
C.weight = 1 - l * this.m_system.m_inverseDiameter;
C.normal.Copy(c.SelfNeg());
C.mass = g > 0 ? 1 / g : 0;
this.m_system.DetectStuckParticle(r);
}
};
n.ReportFixtureAndParticle_s_n = new D();
n.ReportFixtureAndParticle_s_rp = new D();
return n;
})(Vn);
e.UpdateBodyContactsCallback = g;
var C = (function(i) {
$e(n, i);
function n(t, e) {
var n = i.call(this, t) || this;
n.m_step = e;
return n;
}
n.prototype.ReportFixtureAndParticle = function(i, n, r) {
var s = e.SolveCollisionCallback.ReportFixtureAndParticle_s_p1, o = e.SolveCollisionCallback.ReportFixtureAndParticle_s_output, a = e.SolveCollisionCallback.ReportFixtureAndParticle_s_input, l = e.SolveCollisionCallback.ReportFixtureAndParticle_s_p, u = e.SolveCollisionCallback.ReportFixtureAndParticle_s_v, h = e.SolveCollisionCallback.ReportFixtureAndParticle_s_f, _ = i.GetBody();
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (!this.m_system.m_velocityBuffer.data) throw new Error();
var f = this.m_system.m_positionBuffer.data[r], d = this.m_system.m_velocityBuffer.data[r], p = o, m = a;
if (0 === this.m_system.m_iterationIndex) {
var y = N.MulTXV(_.m_xf0, f, s);
if (i.GetShape().GetType() === t.b2ShapeType.e_circleShape) {
y.SelfSub(_.GetLocalCenter());
F.MulRV(_.m_xf0.q, y, y);
F.MulTRV(_.m_xf.q, y, y);
y.SelfAdd(_.GetLocalCenter());
}
N.MulXV(_.m_xf, y, m.p1);
} else m.p1.Copy(f);
D.AddVMulSV(f, this.m_step.dt, d, m.p2);
m.maxFraction = 1;
if (i.RayCast(p, m, n)) {
var v = p.normal, g = l;
g.x = (1 - p.fraction) * m.p1.x + p.fraction * m.p2.x + c * v.x;
g.y = (1 - p.fraction) * m.p1.y + p.fraction * m.p2.y + c * v.y;
var C = u;
C.x = this.m_step.inv_dt * (g.x - f.x);
C.y = this.m_step.inv_dt * (g.y - f.y);
this.m_system.m_velocityBuffer.data[r].Copy(C);
var x = h;
x.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (d.x - C.x);
x.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (d.y - C.y);
this.m_system.ParticleApplyForce(r, x);
}
};
n.prototype.ReportParticle = function(t, e) {
return !1;
};
n.ReportFixtureAndParticle_s_p1 = new D();
n.ReportFixtureAndParticle_s_output = new wt();
n.ReportFixtureAndParticle_s_input = new St();
n.ReportFixtureAndParticle_s_p = new D();
n.ReportFixtureAndParticle_s_v = new D();
n.ReportFixtureAndParticle_s_f = new D();
return n;
})(Vn);
e.SolveCollisionCallback = C;
})(t.b2ParticleSystem || (t.b2ParticleSystem = {}));
var zn = (function() {
function e(t) {
this.m_newFixture = !1;
this.m_locked = !1;
this.m_clearForces = !0;
this.m_contactManager = new rn();
this.m_bodyList = null;
this.m_jointList = null;
this.m_particleSystemList = null;
this.m_bodyCount = 0;
this.m_jointCount = 0;
this.m_gravity = new D();
this.m_allowSleep = !0;
this.m_destructionListener = null;
this.m_debugDraw = null;
this.m_inv_dt0 = 0;
this.m_warmStarting = !0;
this.m_continuousPhysics = !0;
this.m_subStepping = !1;
this.m_stepComplete = !0;
this.m_profile = new sn();
this.m_island = new mn();
this.s_stack = [];
this.m_controllerList = null;
this.m_controllerCount = 0;
this.m_gravity.Copy(t);
}
e.prototype.SetDestructionListener = function(t) {
this.m_destructionListener = t;
};
e.prototype.SetContactFilter = function(t) {
this.m_contactManager.m_contactFilter = t;
};
e.prototype.SetContactListener = function(t) {
this.m_contactManager.m_contactListener = t;
};
e.prototype.SetDebugDraw = function(t) {
this.m_debugDraw = t;
};
e.prototype.CreateBody = function(t) {
void 0 === t && (t = {});
if (this.IsLocked()) throw new Error();
var e = new li(t, this);
e.m_prev = null;
e.m_next = this.m_bodyList;
this.m_bodyList && (this.m_bodyList.m_prev = e);
this.m_bodyList = e;
++this.m_bodyCount;
return e;
};
e.prototype.DestroyBody = function(t) {
if (this.IsLocked()) throw new Error();
for (var e = t.m_jointList; e; ) {
var i = e;
e = e.next;
this.m_destructionListener && this.m_destructionListener.SayGoodbyeJoint(i.joint);
this.DestroyJoint(i.joint);
t.m_jointList = e;
}
t.m_jointList = null;
for (var n = t.m_controllerList; n; ) {
var r = n;
n = n.nextController;
r.controller.RemoveBody(t);
}
for (var s = t.m_contactList; s; ) {
var o = s;
s = s.next;
this.m_contactManager.Destroy(o.contact);
}
t.m_contactList = null;
for (var a = t.m_fixtureList; a; ) {
var c = a;
a = a.m_next;
this.m_destructionListener && this.m_destructionListener.SayGoodbyeFixture(c);
c.DestroyProxies();
c.Destroy();
t.m_fixtureList = a;
t.m_fixtureCount -= 1;
}
t.m_fixtureList = null;
t.m_fixtureCount = 0;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_bodyList && (this.m_bodyList = t.m_next);
--this.m_bodyCount;
};
e._Joint_Create = function(e, i) {
switch (e.type) {
case t.b2JointType.e_distanceJoint:
return new pi(e);

case t.b2JointType.e_mouseJoint:
return new wi(e);

case t.b2JointType.e_prismaticJoint:
return new Bi(e);

case t.b2JointType.e_revoluteJoint:
return new Ri(e);

case t.b2JointType.e_pulleyJoint:
return new Mi(e);

case t.b2JointType.e_gearJoint:
return new xi(e);

case t.b2JointType.e_wheelJoint:
return new Fi(e);

case t.b2JointType.e_weldJoint:
return new Li(e);

case t.b2JointType.e_frictionJoint:
return new gi(e);

case t.b2JointType.e_ropeJoint:
return new Pi(e);

case t.b2JointType.e_motorJoint:
return new bi(e);

case t.b2JointType.e_areaJoint:
return new yi(e);
}
throw new Error();
};
e._Joint_Destroy = function(t, e) {};
e.prototype.CreateJoint = function(t) {
if (this.IsLocked()) throw new Error();
var i = e._Joint_Create(t, null);
i.m_prev = null;
i.m_next = this.m_jointList;
this.m_jointList && (this.m_jointList.m_prev = i);
this.m_jointList = i;
++this.m_jointCount;
i.m_edgeA.prev = null;
i.m_edgeA.next = i.m_bodyA.m_jointList;
i.m_bodyA.m_jointList && (i.m_bodyA.m_jointList.prev = i.m_edgeA);
i.m_bodyA.m_jointList = i.m_edgeA;
i.m_edgeB.prev = null;
i.m_edgeB.next = i.m_bodyB.m_jointList;
i.m_bodyB.m_jointList && (i.m_bodyB.m_jointList.prev = i.m_edgeB);
i.m_bodyB.m_jointList = i.m_edgeB;
var n = t.bodyA, r = t.bodyB;
if (!t.collideConnected) for (var s = r.GetContactList(); s; ) {
s.other === n && s.contact.FlagForFiltering();
s = s.next;
}
return i;
};
e.prototype.DestroyJoint = function(t) {
if (this.IsLocked()) throw new Error();
var i = t.m_collideConnected;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_jointList && (this.m_jointList = t.m_next);
var n = t.m_bodyA, r = t.m_bodyB;
n.SetAwake(!0);
r.SetAwake(!0);
t.m_edgeA.prev && (t.m_edgeA.prev.next = t.m_edgeA.next);
t.m_edgeA.next && (t.m_edgeA.next.prev = t.m_edgeA.prev);
t.m_edgeA === n.m_jointList && (n.m_jointList = t.m_edgeA.next);
t.m_edgeA.prev = null;
t.m_edgeA.next = null;
t.m_edgeB.prev && (t.m_edgeB.prev.next = t.m_edgeB.next);
t.m_edgeB.next && (t.m_edgeB.next.prev = t.m_edgeB.prev);
t.m_edgeB === r.m_jointList && (r.m_jointList = t.m_edgeB.next);
t.m_edgeB.prev = null;
t.m_edgeB.next = null;
e._Joint_Destroy(t, null);
--this.m_jointCount;
if (!i) for (var s = r.GetContactList(); s; ) {
s.other === n && s.contact.FlagForFiltering();
s = s.next;
}
};
e.prototype.CreateParticleSystem = function(e) {
if (this.IsLocked()) throw new Error();
var i = new t.b2ParticleSystem(e, this);
i.m_prev = null;
i.m_next = this.m_particleSystemList;
this.m_particleSystemList && (this.m_particleSystemList.m_prev = i);
this.m_particleSystemList = i;
return i;
};
e.prototype.DestroyParticleSystem = function(t) {
if (this.IsLocked()) throw new Error();
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_particleSystemList && (this.m_particleSystemList = t.m_next);
};
e.prototype.CalculateReasonableParticleIterations = function(t) {
if (null === this.m_particleSystemList) return 1;
return vn(this.m_gravity.Length(), (function(t) {
for (var e = i, n = t.GetParticleSystemList(); null !== n; n = n.m_next) e = g(e, n.GetRadius());
return e;
})(this), t);
};
e.prototype.Step = function(t, i, n, r) {
void 0 === r && (r = this.CalculateReasonableParticleIterations(t));
var s = e.Step_s_stepTimer.Reset();
if (this.m_newFixture) {
this.m_contactManager.FindNewContacts();
this.m_newFixture = !1;
}
this.m_locked = !0;
var o = e.Step_s_step;
o.dt = t;
o.velocityIterations = i;
o.positionIterations = n;
o.particleIterations = r;
o.inv_dt = t > 0 ? 1 / t : 0;
o.dtRatio = this.m_inv_dt0 * t;
o.warmStarting = this.m_warmStarting;
var a = e.Step_s_timer.Reset();
this.m_contactManager.Collide();
this.m_profile.collide = a.GetMilliseconds();
if (this.m_stepComplete && o.dt > 0) {
for (var c = e.Step_s_timer.Reset(), l = this.m_particleSystemList; l; l = l.m_next) l.Solve(o);
this.Solve(o);
this.m_profile.solve = c.GetMilliseconds();
}
if (this.m_continuousPhysics && o.dt > 0) {
var u = e.Step_s_timer.Reset();
this.SolveTOI(o);
this.m_profile.solveTOI = u.GetMilliseconds();
}
o.dt > 0 && (this.m_inv_dt0 = o.inv_dt);
this.m_clearForces && this.ClearForces();
this.m_locked = !1;
this.m_profile.step = s.GetMilliseconds();
};
e.prototype.ClearForces = function() {
for (var t = this.m_bodyList; t; t = t.m_next) {
t.m_force.SetZero();
t.m_torque = 0;
}
};
e.prototype.DrawParticleSystem = function(t) {
if (null !== this.m_debugDraw) {
var e = t.GetParticleCount();
if (e) {
var i = t.GetRadius(), n = t.GetPositionBuffer();
if (t.m_colorBuffer.data) {
var r = t.GetColorBuffer();
this.m_debugDraw.DrawParticles(n, i, r, e);
} else this.m_debugDraw.DrawParticles(n, i, null, e);
}
}
};
e.prototype.DrawDebugData = function() {
if (null !== this.m_debugDraw) {
var i = this.m_debugDraw.GetFlags(), n = e.DrawDebugData_s_color.SetRGB(0, 0, 0);
if (i & t.b2DrawFlags.e_shapeBit) for (var r = this.m_bodyList; r; r = r.m_next) {
var s = r.m_xf;
this.m_debugDraw.PushTransform(s);
for (var o = r.GetFixtureList(); o; o = o.m_next) if (r.IsActive()) if (r.GetType() === t.b2BodyType.b2_staticBody) {
n.SetRGB(.5, .9, .5);
this.DrawShape(o, n);
} else if (r.GetType() === t.b2BodyType.b2_kinematicBody) {
n.SetRGB(.5, .5, .9);
this.DrawShape(o, n);
} else if (r.IsAwake()) {
n.SetRGB(.9, .7, .7);
this.DrawShape(o, n);
} else {
n.SetRGB(.6, .6, .6);
this.DrawShape(o, n);
} else {
n.SetRGB(.5, .5, .3);
this.DrawShape(o, n);
}
this.m_debugDraw.PopTransform(s);
}
if (i & t.b2DrawFlags.e_particleBit) for (var a = this.m_particleSystemList; a; a = a.m_next) this.DrawParticleSystem(a);
if (i & t.b2DrawFlags.e_jointBit) for (var c = this.m_jointList; c; c = c.m_next) this.DrawJoint(c);
if (i & t.b2DrawFlags.e_aabbBit) {
n.SetRGB(.9, .3, .9);
var l = e.DrawDebugData_s_vs;
for (r = this.m_bodyList; r; r = r.m_next) if (r.IsActive()) for (o = r.GetFixtureList(); o; o = o.m_next) for (var u = 0; u < o.m_proxyCount; ++u) {
var h = o.m_proxies[u].treeNode.aabb;
l[0].Set(h.lowerBound.x, h.lowerBound.y);
l[1].Set(h.upperBound.x, h.lowerBound.y);
l[2].Set(h.upperBound.x, h.upperBound.y);
l[3].Set(h.lowerBound.x, h.upperBound.y);
this.m_debugDraw.DrawPolygon(l, 4, n);
}
}
if (i & t.b2DrawFlags.e_centerOfMassBit) for (r = this.m_bodyList; r; r = r.m_next) {
(s = e.DrawDebugData_s_xf).q.Copy(r.m_xf.q);
s.p.Copy(r.GetWorldCenter());
this.m_debugDraw.DrawTransform(s);
}
if (i & t.b2DrawFlags.e_controllerBit) for (var _ = this.m_controllerList; _; _ = _.m_next) _.Draw(this.m_debugDraw);
}
};
e.prototype.QueryAABB = function(t, e, i) {
this.m_contactManager.m_broadPhase.Query(e, (function(e) {
var n = e.userData.fixture;
return t ? t.ReportFixture(n) : !i || i(n);
}));
if (t instanceof en) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryAABB(t, e);
};
e.prototype.QueryAllAABB = function(t, e) {
void 0 === e && (e = []);
this.QueryAABB(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.QueryPointAABB = function(t, e, i) {
this.m_contactManager.m_broadPhase.QueryPoint(e, (function(e) {
var n = e.userData.fixture;
return t ? t.ReportFixture(n) : !i || i(n);
}));
if (t instanceof en) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryPointAABB(t, e);
};
e.prototype.QueryAllPointAABB = function(t, e) {
void 0 === e && (e = []);
this.QueryPointAABB(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.QueryFixtureShape = function(t, i, n, r, s) {
var o = e.QueryFixtureShape_s_aabb;
i.ComputeAABB(o, r, n);
this.m_contactManager.m_broadPhase.Query(o, (function(e) {
var o = e.userData, a = o.fixture;
if (Dt(i, n, a.GetShape(), o.childIndex, r, a.GetBody().GetTransform())) {
if (t) return t.ReportFixture(a);
if (s) return s(a);
}
return !0;
}));
if (t instanceof en) for (var a = this.m_particleSystemList; a; a = a.m_next) t.ShouldQueryParticleSystem(a) && a.QueryAABB(t, o);
};
e.prototype.QueryAllFixtureShape = function(t, e, i, n) {
void 0 === n && (n = []);
this.QueryFixtureShape(null, t, e, i, (function(t) {
n.push(t);
return !0;
}));
return n;
};
e.prototype.QueryFixturePoint = function(t, e, i) {
this.m_contactManager.m_broadPhase.QueryPoint(e, (function(n) {
var r = n.userData.fixture;
if (r.TestPoint(e)) {
if (t) return t.ReportFixture(r);
if (i) return i(r);
}
return !0;
}));
if (t) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryPointAABB(t, e);
};
e.prototype.QueryAllFixturePoint = function(t, e) {
void 0 === e && (e = []);
this.QueryFixturePoint(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.RayCast = function(t, i, n, r) {
var s = e.RayCast_s_input;
s.maxFraction = 1;
s.p1.Copy(i);
s.p2.Copy(n);
this.m_contactManager.m_broadPhase.RayCast(s, (function(s, o) {
var a = o.userData, c = a.fixture, l = a.childIndex, u = e.RayCast_s_output;
if (c.RayCast(u, s, l)) {
var h = u.fraction, _ = e.RayCast_s_point;
_.Set((1 - h) * i.x + h * n.x, (1 - h) * i.y + h * n.y);
if (t) return t.ReportFixture(c, _, u.normal, h);
if (r) return r(c, _, u.normal, h);
}
return s.maxFraction;
}));
if (t) for (var o = this.m_particleSystemList; o; o = o.m_next) t.ShouldQueryParticleSystem(o) && o.RayCast(t, i, n);
};
e.prototype.RayCastOne = function(t, e) {
var i = null, n = 1;
this.RayCast(null, t, e, (function(t, e, r, s) {
if (s < n) {
n = s;
i = t;
}
return n;
}));
return i;
};
e.prototype.RayCastAll = function(t, e, i) {
void 0 === i && (i = []);
this.RayCast(null, t, e, (function(t, e, n, r) {
i.push(t);
return 1;
}));
return i;
};
e.prototype.GetBodyList = function() {
return this.m_bodyList;
};
e.prototype.GetJointList = function() {
return this.m_jointList;
};
e.prototype.GetParticleSystemList = function() {
return this.m_particleSystemList;
};
e.prototype.GetContactList = function() {
return this.m_contactManager.m_contactList;
};
e.prototype.SetAllowSleeping = function(t) {
if (t !== this.m_allowSleep) {
this.m_allowSleep = t;
if (!this.m_allowSleep) for (var e = this.m_bodyList; e; e = e.m_next) e.SetAwake(!0);
}
};
e.prototype.GetAllowSleeping = function() {
return this.m_allowSleep;
};
e.prototype.SetWarmStarting = function(t) {
this.m_warmStarting = t;
};
e.prototype.GetWarmStarting = function() {
return this.m_warmStarting;
};
e.prototype.SetContinuousPhysics = function(t) {
this.m_continuousPhysics = t;
};
e.prototype.GetContinuousPhysics = function() {
return this.m_continuousPhysics;
};
e.prototype.SetSubStepping = function(t) {
this.m_subStepping = t;
};
e.prototype.GetSubStepping = function() {
return this.m_subStepping;
};
e.prototype.GetProxyCount = function() {
return this.m_contactManager.m_broadPhase.GetProxyCount();
};
e.prototype.GetBodyCount = function() {
return this.m_bodyCount;
};
e.prototype.GetJointCount = function() {
return this.m_jointCount;
};
e.prototype.GetContactCount = function() {
return this.m_contactManager.m_contactCount;
};
e.prototype.GetTreeHeight = function() {
return this.m_contactManager.m_broadPhase.GetTreeHeight();
};
e.prototype.GetTreeBalance = function() {
return this.m_contactManager.m_broadPhase.GetTreeBalance();
};
e.prototype.GetTreeQuality = function() {
return this.m_contactManager.m_broadPhase.GetTreeQuality();
};
e.prototype.SetGravity = function(t, e) {
void 0 === e && (e = !0);
if (!D.IsEqualToV(this.m_gravity, t)) {
this.m_gravity.Copy(t);
if (e) for (var i = this.m_bodyList; i; i = i.m_next) i.SetAwake(!0);
}
};
e.prototype.GetGravity = function() {
return this.m_gravity;
};
e.prototype.IsLocked = function() {
return this.m_locked;
};
e.prototype.SetAutoClearForces = function(t) {
this.m_clearForces = t;
};
e.prototype.GetAutoClearForces = function() {
return this.m_clearForces;
};
e.prototype.ShiftOrigin = function(t) {
if (this.IsLocked()) throw new Error();
for (var e = this.m_bodyList; e; e = e.m_next) {
e.m_xf.p.SelfSub(t);
e.m_sweep.c0.SelfSub(t);
e.m_sweep.c.SelfSub(t);
}
for (var i = this.m_jointList; i; i = i.m_next) i.ShiftOrigin(t);
this.m_contactManager.m_broadPhase.ShiftOrigin(t);
};
e.prototype.GetContactManager = function() {
return this.m_contactManager;
};
e.prototype.GetProfile = function() {
return this.m_profile;
};
e.prototype.Dump = function(e) {
if (!this.m_locked) {
e("const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\n", this.m_gravity.x, this.m_gravity.y);
e("this.m_world.SetGravity(g);\n");
e("const bodies: b2Body[] = [];\n");
e("const joints: b2Joint[] = [];\n");
for (var i = 0, n = this.m_bodyList; n; n = n.m_next) {
n.m_islandIndex = i;
n.Dump(e);
++i;
}
i = 0;
for (var r = this.m_jointList; r; r = r.m_next) {
r.m_index = i;
++i;
}
for (r = this.m_jointList; r; r = r.m_next) if (r.m_type !== t.b2JointType.e_gearJoint) {
e("{\n");
r.Dump(e);
e("}\n");
}
for (r = this.m_jointList; r; r = r.m_next) if (r.m_type === t.b2JointType.e_gearJoint) {
e("{\n");
r.Dump(e);
e("}\n");
}
}
};
e.prototype.DrawJoint = function(i) {
if (null !== this.m_debugDraw) {
var n = i.GetBodyA(), r = i.GetBodyB(), s = n.m_xf, o = r.m_xf, a = s.p, c = o.p, l = i.GetAnchorA(e.DrawJoint_s_p1), u = i.GetAnchorB(e.DrawJoint_s_p2), h = e.DrawJoint_s_color.SetRGB(.5, .8, .8);
switch (i.m_type) {
case t.b2JointType.e_distanceJoint:
this.m_debugDraw.DrawSegment(l, u, h);
break;

case t.b2JointType.e_pulleyJoint:
var _ = i, f = _.GetGroundAnchorA(), d = _.GetGroundAnchorB();
this.m_debugDraw.DrawSegment(f, l, h);
this.m_debugDraw.DrawSegment(d, u, h);
this.m_debugDraw.DrawSegment(f, d, h);
break;

case t.b2JointType.e_mouseJoint:
var p = e.DrawJoint_s_c;
p.Set(0, 1, 0);
this.m_debugDraw.DrawPoint(l, 4, p);
this.m_debugDraw.DrawPoint(u, 4, p);
p.Set(.8, .8, .8);
this.m_debugDraw.DrawSegment(l, u, p);
break;

default:
this.m_debugDraw.DrawSegment(a, l, h);
this.m_debugDraw.DrawSegment(l, u, h);
this.m_debugDraw.DrawSegment(c, u, h);
}
}
};
e.prototype.DrawShape = function(i, n) {
if (null !== this.m_debugDraw) {
var r = i.GetShape();
switch (r.m_type) {
case t.b2ShapeType.e_circleShape:
var s = r, o = s.m_p, a = s.m_radius, c = D.UNITX;
this.m_debugDraw.DrawSolidCircle(o, a, c, n);
break;

case t.b2ShapeType.e_edgeShape:
var l = r, u = l.m_vertex1, h = l.m_vertex2;
this.m_debugDraw.DrawSegment(u, h, n);
break;

case t.b2ShapeType.e_chainShape:
var _ = r, f = _.m_count, d = _.m_vertices, p = e.DrawShape_s_ghostColor.SetRGBA(.75 * n.r, .75 * n.g, .75 * n.b, n.a);
u = d[0];
this.m_debugDraw.DrawPoint(u, 4, n);
if (_.m_hasPrevVertex) {
var m = _.m_prevVertex;
this.m_debugDraw.DrawSegment(m, u, p);
this.m_debugDraw.DrawCircle(m, .1, p);
}
for (var y = 1; y < f; ++y) {
h = d[y];
this.m_debugDraw.DrawSegment(u, h, n);
this.m_debugDraw.DrawPoint(h, 4, n);
u = h;
}
if (_.m_hasNextVertex) {
var v = _.m_nextVertex;
this.m_debugDraw.DrawSegment(v, u, p);
this.m_debugDraw.DrawCircle(v, .1, p);
}
break;

case t.b2ShapeType.e_polygonShape:
var g = r, C = g.m_count;
d = g.m_vertices;
this.m_debugDraw.DrawSolidPolygon(d, C, n);
}
}
};
e.prototype.Solve = function(e) {
for (var i = this.m_bodyList; i; i = i.m_next) i.m_xf0.Copy(i.m_xf);
for (var n = this.m_controllerList; n; n = n.m_next) n.Step(e);
this.m_profile.solveInit = 0;
this.m_profile.solveVelocity = 0;
this.m_profile.solvePosition = 0;
var r = this.m_island;
r.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener);
for (i = this.m_bodyList; i; i = i.m_next) i.m_islandFlag = !1;
for (var s = this.m_contactManager.m_contactList; s; s = s.m_next) s.m_islandFlag = !1;
for (var o = this.m_jointList; o; o = o.m_next) o.m_islandFlag = !1;
for (var a = this.s_stack, c = this.m_bodyList; c; c = c.m_next) if (!c.m_islandFlag && c.IsAwake() && c.IsActive() && c.GetType() !== t.b2BodyType.b2_staticBody) {
r.Clear();
var l = 0;
a[l++] = c;
c.m_islandFlag = !0;
for (;l > 0; ) {
if (!(i = a[--l])) throw new Error();
r.AddBody(i);
i.m_awakeFlag = !0;
if (i.GetType() !== t.b2BodyType.b2_staticBody) {
for (var u = i.m_contactList; u; u = u.next) {
var h = u.contact;
if (!h.m_islandFlag && (h.IsEnabled() && h.IsTouching())) {
var _ = h.m_fixtureA.m_isSensor, f = h.m_fixtureB.m_isSensor;
if (!_ && !f) {
r.AddContact(h);
h.m_islandFlag = !0;
if (!(p = u.other)) throw new Error();
if (!p.m_islandFlag) {
a[l++] = p;
p.m_islandFlag = !0;
}
}
}
}
for (var d = i.m_jointList; d; d = d.next) if (!d.joint.m_islandFlag) {
var p;
if ((p = d.other).IsActive()) {
r.AddJoint(d.joint);
d.joint.m_islandFlag = !0;
if (!p.m_islandFlag) {
a[l++] = p;
p.m_islandFlag = !0;
}
}
}
}
}
var m = new sn();
r.Solve(m, e, this.m_gravity, this.m_allowSleep);
this.m_profile.solveInit += m.solveInit;
this.m_profile.solveVelocity += m.solveVelocity;
this.m_profile.solvePosition += m.solvePosition;
for (var y = 0; y < r.m_bodyCount; ++y) {
(i = r.m_bodies[y]).GetType() === t.b2BodyType.b2_staticBody && (i.m_islandFlag = !1);
}
}
for (y = 0; y < a.length && a[y]; ++y) a[y] = null;
var v = new U();
for (i = this.m_bodyList; i; i = i.m_next) i.m_islandFlag && i.GetType() !== t.b2BodyType.b2_staticBody && i.SynchronizeFixtures();
this.m_contactManager.FindNewContacts();
this.m_profile.broadphase = v.GetMilliseconds();
};
e.prototype.SolveTOI = function(i) {
var r = this.m_island;
r.Initialize(64, 32, 0, null, this.m_contactManager.m_contactListener);
if (this.m_stepComplete) {
for (var s = this.m_bodyList; s; s = s.m_next) {
s.m_islandFlag = !1;
s.m_sweep.alpha0 = 0;
}
for (var o = this.m_contactManager.m_contactList; o; o = o.m_next) {
o.m_toiFlag = !1;
o.m_islandFlag = !1;
o.m_toiCount = 0;
o.m_toi = 1;
}
}
for (;;) {
var a = null, c = 1;
for (o = this.m_contactManager.m_contactList; o; o = o.m_next) if (o.IsEnabled() && !(o.m_toiCount > 8)) {
var l = 1;
if (o.m_toiFlag) l = o.m_toi; else {
var u = o.GetFixtureA(), h = o.GetFixtureB();
if (u.IsSensor() || h.IsSensor()) continue;
var _ = u.GetBody(), f = h.GetBody(), d = _.m_type, p = f.m_type, m = _.IsAwake() && d !== t.b2BodyType.b2_staticBody, y = f.IsAwake() && p !== t.b2BodyType.b2_staticBody;
if (!m && !y) continue;
var v = _.IsBullet() || d !== t.b2BodyType.b2_dynamicBody, C = f.IsBullet() || p !== t.b2BodyType.b2_dynamicBody;
if (!v && !C) continue;
var x = _.m_sweep.alpha0;
if (_.m_sweep.alpha0 < f.m_sweep.alpha0) {
x = f.m_sweep.alpha0;
_.m_sweep.Advance(x);
} else if (f.m_sweep.alpha0 < _.m_sweep.alpha0) {
x = _.m_sweep.alpha0;
f.m_sweep.Advance(x);
}
var A = o.GetChildIndexA(), b = o.GetChildIndexB(), S = e.SolveTOI_s_toi_input;
S.proxyA.SetShape(u.GetShape(), A);
S.proxyB.SetShape(h.GetShape(), b);
S.sweepA.Copy(_.m_sweep);
S.sweepB.Copy(f.m_sweep);
S.tMax = 1;
var w = e.SolveTOI_s_toi_output;
re(w, S);
var T = w.t;
l = w.state === t.b2TOIOutputState.e_touching ? g(x + (1 - x) * T, 1) : 1;
o.m_toi = l;
o.m_toiFlag = !0;
}
if (l < c) {
a = o;
c = l;
}
}
if (null === a || 1 - 10 * n < c) {
this.m_stepComplete = !0;
break;
}
var B = a.GetFixtureA(), E = a.GetFixtureB(), M = B.GetBody(), I = E.GetBody(), R = e.SolveTOI_s_backup1.Copy(M.m_sweep), D = e.SolveTOI_s_backup2.Copy(I.m_sweep);
M.Advance(c);
I.Advance(c);
a.Update(this.m_contactManager.m_contactListener);
a.m_toiFlag = !1;
++a.m_toiCount;
if (a.IsEnabled() && a.IsTouching()) {
M.SetAwake(!0);
I.SetAwake(!0);
r.Clear();
r.AddBody(M);
r.AddBody(I);
r.AddContact(a);
M.m_islandFlag = !0;
I.m_islandFlag = !0;
a.m_islandFlag = !0;
for (var P = 0; P < 2; ++P) {
if ((k = 0 === P ? M : I).m_type === t.b2BodyType.b2_dynamicBody) for (var V = k.m_contactList; V && r.m_bodyCount !== r.m_bodyCapacity && r.m_contactCount !== r.m_contactCapacity; V = V.next) {
var L = V.contact;
if (!L.m_islandFlag) {
var O = V.other;
if (O.m_type !== t.b2BodyType.b2_dynamicBody || k.IsBullet() || O.IsBullet()) {
var F = L.m_fixtureA.m_isSensor, N = L.m_fixtureB.m_isSensor;
if (!F && !N) {
var G = e.SolveTOI_s_backup.Copy(O.m_sweep);
O.m_islandFlag || O.Advance(c);
L.Update(this.m_contactManager.m_contactListener);
if (L.IsEnabled()) if (L.IsTouching()) {
L.m_islandFlag = !0;
r.AddContact(L);
if (!O.m_islandFlag) {
O.m_islandFlag = !0;
O.m_type !== t.b2BodyType.b2_staticBody && O.SetAwake(!0);
r.AddBody(O);
}
} else {
O.m_sweep.Copy(G);
O.SynchronizeTransform();
} else {
O.m_sweep.Copy(G);
O.SynchronizeTransform();
}
}
}
}
}
}
var z = e.SolveTOI_s_subStep;
z.dt = (1 - c) * i.dt;
z.inv_dt = 1 / z.dt;
z.dtRatio = 1;
z.positionIterations = 20;
z.velocityIterations = i.velocityIterations;
z.particleIterations = i.particleIterations;
z.warmStarting = !1;
r.SolveTOI(z, M.m_islandIndex, I.m_islandIndex);
for (P = 0; P < r.m_bodyCount; ++P) {
var k;
(k = r.m_bodies[P]).m_islandFlag = !1;
if (k.m_type === t.b2BodyType.b2_dynamicBody) {
k.SynchronizeFixtures();
for (V = k.m_contactList; V; V = V.next) {
V.contact.m_toiFlag = !1;
V.contact.m_islandFlag = !1;
}
}
}
this.m_contactManager.FindNewContacts();
if (this.m_subStepping) {
this.m_stepComplete = !1;
break;
}
} else {
a.SetEnabled(!1);
M.m_sweep.Copy(R);
I.m_sweep.Copy(D);
M.SynchronizeTransform();
I.SynchronizeTransform();
}
}
};
e.prototype.AddController = function(t) {
t.m_next = this.m_controllerList;
t.m_prev = null;
this.m_controllerList && (this.m_controllerList.m_prev = t);
this.m_controllerList = t;
++this.m_controllerCount;
return t;
};
e.prototype.RemoveController = function(t) {
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
this.m_controllerList === t && (this.m_controllerList = t.m_next);
--this.m_controllerCount;
t.m_prev = null;
t.m_next = null;
return t;
};
e.Step_s_step = new on();
e.Step_s_stepTimer = new U();
e.Step_s_timer = new U();
e.DrawDebugData_s_color = new z(0, 0, 0);
e.DrawDebugData_s_vs = D.MakeArray(4);
e.DrawDebugData_s_xf = new N();
e.QueryFixtureShape_s_aabb = new Tt();
e.RayCast_s_input = new St();
e.RayCast_s_output = new wt();
e.RayCast_s_point = new D();
e.DrawJoint_s_p1 = new D();
e.DrawJoint_s_p2 = new D();
e.DrawJoint_s_color = new z(.5, .8, .8);
e.DrawJoint_s_c = new z();
e.DrawShape_s_ghostColor = new z();
e.SolveTOI_s_subStep = new on();
e.SolveTOI_s_backup = new G();
e.SolveTOI_s_backup1 = new G();
e.SolveTOI_s_backup2 = new G();
e.SolveTOI_s_toi_input = new qt();
e.SolveTOI_s_toi_output = new Xt();
return e;
})(), kn = (function() {
return function(t, e) {
this.prevBody = null;
this.nextBody = null;
this.prevController = null;
this.nextController = null;
this.controller = t;
this.body = e;
};
})(), Un = (function() {
function t() {
this.m_bodyList = null;
this.m_bodyCount = 0;
this.m_prev = null;
this.m_next = null;
}
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetPrev = function() {
return this.m_prev;
};
t.prototype.GetBodyList = function() {
return this.m_bodyList;
};
t.prototype.AddBody = function(t) {
var e = new kn(this, t);
e.nextBody = this.m_bodyList;
e.prevBody = null;
this.m_bodyList && (this.m_bodyList.prevBody = e);
this.m_bodyList = e;
++this.m_bodyCount;
e.nextController = t.m_controllerList;
e.prevController = null;
t.m_controllerList && (t.m_controllerList.prevController = e);
t.m_controllerList = e;
++t.m_controllerCount;
};
t.prototype.RemoveBody = function(t) {
if (this.m_bodyCount <= 0) throw new Error();
for (var e = this.m_bodyList; e && e.body !== t; ) e = e.nextBody;
if (null === e) throw new Error();
e.prevBody && (e.prevBody.nextBody = e.nextBody);
e.nextBody && (e.nextBody.prevBody = e.prevBody);
this.m_bodyList === e && (this.m_bodyList = e.nextBody);
--this.m_bodyCount;
e.nextController && (e.nextController.prevController = e.prevController);
e.prevController && (e.prevController.nextController = e.nextController);
t.m_controllerList === e && (t.m_controllerList = e.nextController);
--t.m_controllerCount;
};
t.prototype.Clear = function() {
for (;this.m_bodyList; ) this.RemoveBody(this.m_bodyList.body);
this.m_bodyCount = 0;
};
return t;
})(), jn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.normal = new D(0, 1);
e.offset = 0;
e.density = 0;
e.velocity = new D(0, 0);
e.linearDrag = 0;
e.angularDrag = 0;
e.useDensity = !1;
e.useWorldGravity = !0;
e.gravity = new D(0, 0);
return e;
}
e.prototype.Step = function(t) {
if (this.m_bodyList) {
this.useWorldGravity && this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());
for (var e = this.m_bodyList; e; e = e.nextBody) {
var i = e.body;
if (i.IsAwake()) {
for (var r = new D(), s = new D(), o = 0, a = 0, c = i.GetFixtureList(); c; c = c.m_next) {
var l = new D(), u = c.GetShape().ComputeSubmergedArea(this.normal, this.offset, i.GetTransform(), l);
o += u;
r.x += u * l.x;
r.y += u * l.y;
var h = 0;
a += u * (h = this.useDensity ? c.GetDensity() : 1);
s.x += u * l.x * h;
s.y += u * l.y * h;
}
r.x /= o;
r.y /= o;
s.x /= a;
s.y /= a;
if (!(o < n)) {
var _ = this.gravity.Clone().SelfNeg();
_.SelfMul(this.density * o);
i.ApplyForce(_, s);
var f = i.GetLinearVelocityFromWorldPoint(r, new D());
f.SelfSub(this.velocity);
f.SelfMul(-this.linearDrag * o);
i.ApplyForce(f, r);
i.ApplyTorque(-i.GetInertia() / i.GetMass() * o * i.GetAngularVelocity() * this.angularDrag);
}
}
}
}
};
e.prototype.Draw = function(t) {
var e = 100, i = new D(), n = new D();
i.x = this.normal.x * this.offset + this.normal.y * e;
i.y = this.normal.y * this.offset - this.normal.x * e;
n.x = this.normal.x * this.offset - this.normal.y * e;
n.y = this.normal.y * this.offset + this.normal.x * e;
var r = new z(0, 0, .8);
t.DrawSegment(i, n, r);
};
return e;
})(Un), Wn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.A = new D(0, 0);
return e;
}
e.prototype.Step = function(t) {
for (var i = D.MulSV(t.dt, this.A, e.Step_s_dtA), n = this.m_bodyList; n; n = n.nextBody) {
var r = n.body;
r.IsAwake() && r.SetLinearVelocity(D.AddVV(r.GetLinearVelocity(), i, D.s_t0));
}
};
e.prototype.Draw = function(t) {};
e.Step_s_dtA = new D();
return e;
})(Un), Hn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.F = new D(0, 0);
return e;
}
e.prototype.Step = function(t) {
for (var e = this.m_bodyList; e; e = e.nextBody) {
var i = e.body;
i.IsAwake() && i.ApplyForce(this.F, i.GetWorldCenter());
}
};
e.prototype.Draw = function(t) {};
return e;
})(Un), qn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.G = 1;
e.invSqr = !0;
return e;
}
e.prototype.Step = function(t) {
if (this.invSqr) for (var i = this.m_bodyList; i; i = i.nextBody) for (var r = (l = i.body).GetWorldCenter(), s = l.GetMass(), o = this.m_bodyList; o && o !== i; o = o.nextBody) {
var a = (u = o.body).GetWorldCenter(), c = u.GetMass();
if (!((f = (h = a.x - r.x) * h + (_ = a.y - r.y) * _) < n)) {
(d = e.Step_s_f.Set(h, _)).SelfMul(this.G / f / w(f) * s * c);
l.IsAwake() && l.ApplyForce(d, r);
u.IsAwake() && u.ApplyForce(d.SelfMul(-1), a);
}
} else for (i = this.m_bodyList; i; i = i.nextBody) {
var l;
for (r = (l = i.body).GetWorldCenter(), s = l.GetMass(), o = this.m_bodyList; o && o !== i; o = o.nextBody) {
var u, h, _, f;
a = (u = o.body).GetWorldCenter(), c = u.GetMass();
if (!((f = (h = a.x - r.x) * h + (_ = a.y - r.y) * _) < n)) {
var d;
(d = e.Step_s_f.Set(h, _)).SelfMul(this.G / f * s * c);
l.IsAwake() && l.ApplyForce(d, r);
u.IsAwake() && u.ApplyForce(d.SelfMul(-1), a);
}
}
}
};
e.prototype.Draw = function(t) {};
e.Step_s_f = new D();
return e;
})(Un), Xn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.T = new L();
e.maxTimestep = 0;
return e;
}
e.prototype.Step = function(t) {
var i = t.dt;
if (!(i <= n)) {
i > this.maxTimestep && this.maxTimestep > 0 && (i = this.maxTimestep);
for (var r = this.m_bodyList; r; r = r.nextBody) {
var s = r.body;
if (s.IsAwake()) {
var o = s.GetWorldVector(L.MulMV(this.T, s.GetLocalVector(s.GetLinearVelocity(), D.s_t0), D.s_t1), e.Step_s_damping);
s.SetLinearVelocity(D.AddVV(s.GetLinearVelocity(), D.MulSV(i, o, D.s_t0), D.s_t1));
}
}
}
};
e.prototype.Draw = function(t) {};
e.prototype.SetAxisAligned = function(t, e) {
this.T.ex.x = -t;
this.T.ex.y = 0;
this.T.ey.x = 0;
this.T.ey.y = -e;
this.maxTimestep = t > 0 || e > 0 ? 1 / C(t, e) : 0;
};
e.Step_s_damping = new D();
return e;
})(Un), Yn = (function() {
return function() {
this.vertices = [];
this.count = 0;
this.masses = [];
this.gravity = new D(0, 0);
this.damping = .1;
this.k2 = .9;
this.k3 = .1;
};
})(), Jn = (function() {
function t() {
this.m_count = 0;
this.m_ps = [];
this.m_p0s = [];
this.m_vs = [];
this.m_ims = [];
this.m_Ls = [];
this.m_as = [];
this.m_gravity = new D();
this.m_damping = 0;
this.m_k2 = 1;
this.m_k3 = .1;
}
t.prototype.GetVertexCount = function() {
return this.m_count;
};
t.prototype.GetVertices = function() {
return this.m_ps;
};
t.prototype.Initialize = function(t) {
this.m_count = t.count;
this.m_ps = D.MakeArray(this.m_count);
this.m_p0s = D.MakeArray(this.m_count);
this.m_vs = D.MakeArray(this.m_count);
this.m_ims = p(this.m_count);
for (var e = 0; e < this.m_count; ++e) {
this.m_ps[e].Copy(t.vertices[e]);
this.m_p0s[e].Copy(t.vertices[e]);
this.m_vs[e].SetZero();
var i = t.masses[e];
this.m_ims[e] = i > 0 ? 1 / i : 0;
}
var n = this.m_count - 1, r = this.m_count - 2;
this.m_Ls = p(n);
this.m_as = p(r);
for (e = 0; e < n; ++e) {
var s = this.m_ps[e], o = this.m_ps[e + 1];
this.m_Ls[e] = D.DistanceVV(s, o);
}
for (e = 0; e < r; ++e) {
s = this.m_ps[e], o = this.m_ps[e + 1];
var a = this.m_ps[e + 2], c = D.SubVV(o, s, D.s_t0), l = D.SubVV(a, o, D.s_t1), u = D.CrossVV(c, l), h = D.DotVV(c, l);
this.m_as[e] = R(u, h);
}
this.m_gravity.Copy(t.gravity);
this.m_damping = t.damping;
this.m_k2 = t.k2;
this.m_k3 = t.k3;
};
t.prototype.Step = function(t, e) {
if (0 !== t) {
for (var i = Math.exp(-t * this.m_damping), n = 0; n < this.m_count; ++n) {
this.m_p0s[n].Copy(this.m_ps[n]);
this.m_ims[n] > 0 && this.m_vs[n].SelfMulAdd(t, this.m_gravity);
this.m_vs[n].SelfMul(i);
this.m_ps[n].SelfMulAdd(t, this.m_vs[n]);
}
for (n = 0; n < e; ++n) {
this.SolveC2();
this.SolveC3();
this.SolveC2();
}
var r = 1 / t;
for (n = 0; n < this.m_count; ++n) D.MulSV(r, D.SubVV(this.m_ps[n], this.m_p0s[n], D.s_t0), this.m_vs[n]);
}
};
t.prototype.SolveC2 = function() {
for (var e = this.m_count - 1, i = 0; i < e; ++i) {
var n = this.m_ps[i], r = this.m_ps[i + 1], s = D.SubVV(r, n, t.s_d), o = s.Normalize(), a = this.m_ims[i], c = this.m_ims[i + 1];
if (a + c !== 0) {
var l = a / (a + c), u = c / (a + c);
n.SelfMulSub(this.m_k2 * l * (this.m_Ls[i] - o), s);
r.SelfMulAdd(this.m_k2 * u * (this.m_Ls[i] - o), s);
}
}
};
t.prototype.SetAngle = function(t) {
for (var e = this.m_count - 2, i = 0; i < e; ++i) this.m_as[i] = t;
};
t.prototype.SolveC3 = function() {
for (var e = this.m_count - 2, i = 0; i < e; ++i) {
var n = this.m_ps[i], r = this.m_ps[i + 1], o = this.m_ps[i + 2], a = this.m_ims[i], c = this.m_ims[i + 1], l = this.m_ims[i + 2], u = D.SubVV(r, n, t.s_d1), h = D.SubVV(o, r, t.s_d2), _ = u.LengthSquared(), f = h.LengthSquared();
if (_ * f != 0) {
var d = D.CrossVV(u, h), p = D.DotVV(u, h), m = R(d, p), y = D.MulSV(-1 / _, u.SelfSkew(), t.s_Jd1), v = D.MulSV(1 / f, h.SelfSkew(), t.s_Jd2), g = D.NegV(y, t.s_J1), C = D.SubVV(y, v, t.s_J2), x = v, A = a * D.DotVV(g, g) + c * D.DotVV(C, C) + l * D.DotVV(x, x);
if (0 !== A) {
A = 1 / A;
for (var b = m - this.m_as[i]; b > s; ) b = (m -= 2 * s) - this.m_as[i];
for (;b < -s; ) b = (m += 2 * s) - this.m_as[i];
var S = -this.m_k3 * A * b;
n.SelfMulAdd(a * S, g);
r.SelfMulAdd(c * S, C);
o.SelfMulAdd(l * S, x);
}
}
}
};
t.prototype.Draw = function(t) {
for (var e = new z(.4, .5, .7), i = 0; i < this.m_count - 1; ++i) t.DrawSegment(this.m_ps[i], this.m_ps[i + 1], e);
};
t.s_d = new D();
t.s_d1 = new D();
t.s_d2 = new D();
t.s_Jd1 = new D();
t.s_Jd2 = new D();
t.s_J1 = new D();
t.s_J2 = new D();
return t;
})();
t.b2Assert = function(t) {
for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
if (!t) throw new (Error.bind.apply(Error, [ void 0 ].concat(e)))();
};
t.b2Maybe = e;
t.b2_maxFloat = i;
t.b2_epsilon = n;
t.b2_epsilon_sq = r;
t.b2_pi = s;
t.b2_maxManifoldPoints = o;
t.b2_maxPolygonVertices = a;
t.b2_aabbExtension = .1;
t.b2_aabbMultiplier = 2;
t.b2_linearSlop = c;
t.b2_angularSlop = l;
t.b2_polygonRadius = u;
t.b2_maxSubSteps = 8;
t.b2_maxTOIContacts = 32;
t.b2_velocityThreshold = 1;
t.b2_maxLinearCorrection = .2;
t.b2_maxAngularCorrection = .13962634015955555;
t.b2_maxTranslation = 2;
t.b2_maxTranslationSquared = 4;
t.b2_maxRotation = 1.570796326795;
t.b2_maxRotationSquared = 2.4674011002726646;
t.b2_baumgarte = .2;
t.b2_toiBaumgarte = .75;
t.b2_invalidParticleIndex = h;
t.b2_maxParticleIndex = 2147483647;
t.b2_particleStride = .75;
t.b2_minParticleWeight = 1;
t.b2_maxParticlePressure = .25;
t.b2_maxParticleForce = .5;
t.b2_maxTriadDistance = 2;
t.b2_maxTriadDistanceSquared = 4;
t.b2_minParticleSystemBufferCapacity = 256;
t.b2_barrierCollisionTime = 2.5;
t.b2_timeToSleep = .5;
t.b2_linearSleepTolerance = .01;
t.b2_angularSleepTolerance = .03490658503988889;
t.b2Alloc = function(t) {
return null;
};
t.b2Free = function(t) {};
t.b2Log = function(t) {
for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
};
t.b2Version = _;
t.b2_version = f;
t.b2_branch = "master";
t.b2_commit = "fbf51801d80fc389d43dc46524520e89043b6faf";
t.b2ParseInt = function(t) {
return parseInt(t, 10);
};
t.b2ParseUInt = function(t) {
return Math.abs(parseInt(t, 10));
};
t.b2MakeArray = d;
t.b2MakeNullArray = function(t) {
for (var e = [], i = 0; i < t; ++i) e.push(null);
return e;
};
t.b2MakeNumberArray = p;
t.b2_pi_over_180 = m;
t.b2_180_over_pi = y;
t.b2_two_pi = 6.28318530718;
t.b2Abs = v;
t.b2Min = g;
t.b2Max = C;
t.b2Clamp = x;
t.b2Swap = function(t, e) {
var i = t[0];
t[0] = e[0];
e[0] = i;
};
t.b2IsValid = A;
t.b2Sq = b;
t.b2InvSqrt = S;
t.b2Sqrt = w;
t.b2Pow = T;
t.b2DegToRad = function(t) {
return t * m;
};
t.b2RadToDeg = function(t) {
return t * y;
};
t.b2Cos = B;
t.b2Sin = E;
t.b2Acos = M;
t.b2Asin = I;
t.b2Atan2 = R;
t.b2NextPowerOfTwo = function(t) {
t |= t >> 1 & 2147483647;
t |= t >> 2 & 1073741823;
t |= t >> 4 & 268435455;
t |= t >> 8 & 16777215;
return 1 + (t |= t >> 16 & 65535);
};
t.b2IsPowerOfTwo = function(t) {
return t > 0 && 0 == (t & t - 1);
};
t.b2Random = function() {
return 2 * Math.random() - 1;
};
t.b2RandomRange = function(t, e) {
return (e - t) * Math.random() + t;
};
t.b2Vec2 = D;
t.b2Vec2_zero = P;
t.b2Vec3 = V;
t.b2Mat22 = L;
t.b2Mat33 = O;
t.b2Rot = F;
t.b2Transform = N;
t.b2Sweep = G;
t.b2Color = z;
t.b2Draw = k;
t.b2Timer = U;
t.b2Counter = j;
t.b2GrowableStack = W;
t.b2BlockAllocator = H;
t.b2StackAllocator = q;
t.b2ContactFeature = vt;
t.b2ContactID = gt;
t.b2ManifoldPoint = Ct;
t.b2Manifold = xt;
t.b2WorldManifold = At;
t.b2GetPointStates = function(e, i, n, r) {
var s;
for (s = 0; s < n.pointCount; ++s) {
var a = n.points[s].id.key;
e[s] = t.b2PointState.b2_removeState;
for (var c = 0, l = r.pointCount; c < l; ++c) if (r.points[c].id.key === a) {
e[s] = t.b2PointState.b2_persistState;
break;
}
}
for (;s < o; ++s) e[s] = t.b2PointState.b2_nullState;
for (s = 0; s < r.pointCount; ++s) {
a = r.points[s].id.key;
i[s] = t.b2PointState.b2_addState;
for (c = 0, l = n.pointCount; c < l; ++c) if (n.points[c].id.key === a) {
i[s] = t.b2PointState.b2_persistState;
break;
}
}
for (;s < o; ++s) i[s] = t.b2PointState.b2_nullState;
};
t.b2ClipVertex = bt;
t.b2RayCastInput = St;
t.b2RayCastOutput = wt;
t.b2AABB = Tt;
t.b2TestOverlapAABB = Bt;
t.b2ClipSegmentToLine = Et;
t.b2TestOverlapShape = Dt;
t.b2DistanceProxy = X;
t.b2SimplexCache = Y;
t.b2DistanceInput = J;
t.b2DistanceOutput = Z;
t.b2ShapeCastInput = K;
t.b2ShapeCastOutput = Q;
t.b2_gjk_reset = function() {
t.b2_gjkCalls = 0;
t.b2_gjkIters = 0;
t.b2_gjkMaxIters = 0;
};
t.b2SimplexVertex = $;
t.b2Simplex = tt;
t.b2Distance = lt;
t.b2ShapeCast = function(t, e) {
t.iterations = 0;
t.lambda = 1;
t.normal.SetZero();
t.point.SetZero();
var i = e.proxyA, n = e.proxyB, r = C(i.m_radius, u) + C(n.m_radius, u), s = e.transformA, o = e.transformB, a = e.translationB, l = ut.Set(0, 0), h = 0, _ = ht;
_.m_count = 0;
for (var f = _.m_vertices, d = i.GetSupport(F.MulTRV(s.q, D.NegV(a, D.s_t1), D.s_t0)), p = N.MulXV(s, i.GetVertex(d), _t), m = n.GetSupport(F.MulTRV(o.q, a, D.s_t0)), y = N.MulXV(o, n.GetVertex(m), ft), g = D.SubVV(p, y, dt), x = C(u, r - u), A = .5 * c, b = 0; b < 20 && v(g.Length() - x) > A; ) {
t.iterations += 1;
d = i.GetSupport(F.MulTRV(s.q, D.NegV(g, D.s_t1), D.s_t0));
p = N.MulXV(s, i.GetVertex(d), _t);
m = n.GetSupport(F.MulTRV(o.q, g, D.s_t0));
y = N.MulXV(o, n.GetVertex(m), ft);
var S = D.SubVV(p, y, pt);
g.Normalize();
var w = D.DotVV(g, S), T = D.DotVV(g, a);
if (w - x > h * T) {
if (T <= 0) return !1;
if ((h = (w - x) / T) > 1) return !1;
l.Copy(g).SelfNeg();
_.m_count = 0;
}
var B = f[_.m_count];
B.indexA = m;
B.wA.Copy(y).SelfMulAdd(h, a);
B.indexB = d;
B.wB.Copy(p);
B.w.Copy(B.wB).SelfSub(B.wA);
B.a = 1;
_.m_count += 1;
switch (_.m_count) {
case 1:
break;

case 2:
_.Solve2();
break;

case 3:
_.Solve3();
}
if (3 === _.m_count) return !1;
_.GetClosestPoint(g);
++b;
}
var E = mt, M = yt;
_.GetWitnessPoints(E, M);
if (g.LengthSquared() > 0) {
l.Copy(g).SelfNeg();
l.Normalize();
}
t.normal.Copy(l);
t.lambda = h;
t.iterations = b;
return !0;
};
t.b2Pair = Ot;
t.b2BroadPhase = Ft;
t.b2PairLessThan = Nt;
t.b2TreeNode = Vt;
t.b2DynamicTree = Lt;
t.b2_toi_reset = function() {
t.b2_toiTime = 0;
t.b2_toiMaxTime = 0;
t.b2_toiCalls = 0;
t.b2_toiIters = 0;
t.b2_toiMaxIters = 0;
t.b2_toiRootIters = 0;
t.b2_toiMaxRootIters = 0;
};
t.b2TOIInput = qt;
t.b2TOIOutput = Xt;
t.b2SeparationFunction = Yt;
t.b2TimeOfImpact = re;
t.b2CollideCircles = ae;
t.b2CollidePolygonAndCircle = he;
t.b2CollidePolygons = Le;
t.b2CollideEdgeAndCircle = We;
t.b2CollideEdgeAndPolygon = Je;
t.b2MassData = Ze;
t.b2Shape = Ke;
t.b2CircleShape = ti;
t.b2PolygonShape = ei;
t.b2EdgeShape = ii;
t.b2ChainShape = ni;
t.b2Filter = ri;
t.b2FixtureDef = si;
t.b2FixtureProxy = oi;
t.b2Fixture = ai;
t.b2BodyDef = ci;
t.b2Body = li;
t.b2World = zn;
t.b2DestructionListener = Ki;
t.b2ContactFilter = Qi;
t.b2ContactImpulse = $i;
t.b2ContactListener = tn;
t.b2QueryCallback = en;
t.b2RayCastCallback = nn;
t.b2Island = mn;
t.b2Profile = sn;
t.b2TimeStep = on;
t.b2Position = an;
t.b2Velocity = cn;
t.b2SolverData = ln;
t.b2ContactManager = rn;
t.b2MixFriction = Ni;
t.b2MixRestitution = Gi;
t.b2ContactEdge = zi;
t.b2Contact = ki;
t.b2ContactRegister = Ji;
t.b2ContactFactory = Zi;
t.g_blockSolve = !1;
t.b2VelocityConstraintPoint = un;
t.b2ContactVelocityConstraint = hn;
t.b2ContactPositionConstraint = _n;
t.b2ContactSolverDef = fn;
t.b2PositionSolverManifold = dn;
t.b2ContactSolver = pn;
t.b2CircleContact = Ui;
t.b2PolygonContact = ji;
t.b2PolygonAndCircleContact = Wi;
t.b2EdgeAndCircleContact = Hi;
t.b2EdgeAndPolygonContact = qi;
t.b2ChainAndCircleContact = Xi;
t.b2ChainAndPolygonContact = Yi;
t.b2Jacobian = ui;
t.b2JointEdge = hi;
t.b2JointDef = _i;
t.b2Joint = fi;
t.b2AreaJointDef = mi;
t.b2AreaJoint = yi;
t.b2DistanceJointDef = di;
t.b2DistanceJoint = pi;
t.b2FrictionJointDef = vi;
t.b2FrictionJoint = gi;
t.b2GearJointDef = Ci;
t.b2GearJoint = xi;
t.b2MotorJointDef = Ai;
t.b2MotorJoint = bi;
t.b2MouseJointDef = Si;
t.b2MouseJoint = wi;
t.b2PrismaticJointDef = Ti;
t.b2PrismaticJoint = Bi;
t.b2_minPulleyLength = 2;
t.b2PulleyJointDef = Ei;
t.b2PulleyJoint = Mi;
t.b2RevoluteJointDef = Ii;
t.b2RevoluteJoint = Ri;
t.b2RopeJointDef = Di;
t.b2RopeJoint = Pi;
t.b2WeldJointDef = Vi;
t.b2WeldJoint = Li;
t.b2WheelJointDef = Oi;
t.b2WheelJoint = Fi;
t.b2ControllerEdge = kn;
t.b2Controller = Un;
t.b2BuoyancyController = jn;
t.b2ConstantAccelController = Wn;
t.b2ConstantForceController = Hn;
t.b2GravityController = qn;
t.b2TensorDampingController = Xn;
t.b2ParticleDef = yn;
t.b2CalculateParticleIterations = vn;
t.b2ParticleHandle = gn;
t.b2ParticleGroupDef = Cn;
t.b2ParticleGroup = xn;
t.b2GrowableBuffer = Pn;
t.b2FixtureParticleQueryCallback = Vn;
t.b2ParticleContact = Ln;
t.b2ParticleBodyContact = On;
t.b2ParticlePair = Fn;
t.b2ParticleTriad = Nn;
t.b2ParticleSystemDef = Gn;
t.b2RopeDef = Yn;
t.b2Rope = Jn;
Object.defineProperty(t, "__esModule", {
value: !0
});
}));
}), {} ],
255: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window;
n.cc = n.cc || {};
n._cc = n._cc || {};
t("./predefine");
t("./polyfill/string");
t("./polyfill/misc");
t("./polyfill/array");
t("./polyfill/object");
t("./polyfill/array-buffer");
t("./polyfill/number");
t("./polyfill/typescript");
t("./cocos2d/core/predefine");
t("./cocos2d");
t("./extends");
0;
e.exports = n.cc;
}), {
"./cocos2d": 237,
"./cocos2d/core/predefine": 151,
"./extends": 252,
"./package": void 0,
"./polyfill/array": 257,
"./polyfill/array-buffer": 256,
"./polyfill/misc": 258,
"./polyfill/number": 259,
"./polyfill/object": 260,
"./polyfill/string": 261,
"./polyfill/typescript": void 0,
"./predefine": 262
} ],
256: [ (function(t, e, i) {
"use strict";
if (!ArrayBuffer.isView) {
var n = Object.getPrototypeOf(Int8Array);
ArrayBuffer.isView = "function" == typeof n ? function(t) {
return t instanceof n;
} : function(t) {
var e = t.constructor;
return e === Float32Array || e === Uint8Array || e === Uint32Array || e === Int8Array;
};
}
}), {} ],
257: [ (function(t, e, i) {
"use strict";
Array.isArray || (Array.isArray = function(t) {
return "[object Array]" === Object.prototype.toString.call(t);
});
Array.prototype.find || (Array.prototype.find = function(t) {
for (var e = this.length, i = 0; i < e; i++) {
var n = this[i];
if (t.call(this, n, i, this)) return n;
}
});
Array.prototype.includes || (Array.prototype.includes = function(t) {
return -1 !== this.indexOf(t);
});
}), {} ],
258: [ (function(t, e, i) {
"use strict";
Math.sign || (Math.sign = function(t) {
return 0 === (t = +t) || isNaN(t) ? t : t > 0 ? 1 : -1;
});
Math.log2 || (Math.log2 = function(t) {
return Math.log(t) * Math.LOG2E;
});
Number.isInteger || (Number.isInteger = function(t) {
return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
});
var n = window.performance || Date, r = Object.create(null);
console.time = function(t) {
r[t] = n.now();
};
console.timeEnd = function(t) {
var e = r[t], i = n.now() - e;
console.log(t + ": " + i + "ms");
};
}), {} ],
259: [ (function(t, e, i) {
"use strict";
Number.parseFloat = Number.parseFloat || parseFloat;
Number.parseInt = Number.parseInt || parseInt;
}), {} ],
260: [ (function(t, e, i) {
"use strict";
Object.assign || (Object.assign = function(t, e) {
return cc.js.mixin(t, e);
});
Object.getOwnPropertyDescriptors || (Object.getOwnPropertyDescriptors = function(t) {
var e = {}, i = Object.getOwnPropertyNames(t);
Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(t)));
for (var n = 0; n < i.length; ++n) {
var r = i[n];
e[r] = Object.getOwnPropertyDescriptor(t, r);
}
return e;
});
}), {} ],
261: [ (function(t, e, i) {
"use strict";
String.prototype.startsWith || (String.prototype.startsWith = function(t, e) {
e = e || 0;
return this.lastIndexOf(t, e) === e;
});
String.prototype.endsWith || (String.prototype.endsWith = function(t, e) {
("undefined" == typeof e || e > this.length) && (e = this.length);
e -= t.length;
var i = this.indexOf(t, e);
return -1 !== i && i === e;
});
String.prototype.trimLeft || (String.prototype.trimLeft = function() {
return this.replace(/^\s+/, "");
});
}), {} ],
262: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window;
function r(t, e) {
"undefined" == typeof n[t] && (n[t] = e);
}
function s(t, e) {
"undefined" == typeof n[t] && Object.defineProperty(n, t, {
get: function() {
var i = void 0;
"CC_WECHATGAMESUB" === t ? i = "cc.sys.platform === cc.sys.WECHAT_GAME_SUB" : "CC_WECHATGAME" === t ? i = "cc.sys.platform === cc.sys.WECHAT_GAME" : "CC_QQPLAY" === t && (i = "cc.sys.platform === cc.sys.QQ_PLAY");
cc.warnID(1400, t, i);
return e;
}
});
}
function o(t) {
return "object" == typeof n[t];
}
r("CC_BUILD", !1);
n.CC_BUILD = !0;
n.CC_DEV = !1;
n.CC_DEBUG = !1;
n.CC_JSB = !0;
n.CC_NATIVERENDERER = !0;
n.CC_SUPPORT_JIT = !0;
r("CC_TEST", o("tap") || o("QUnit"));
r("CC_EDITOR", o("Editor") && o("process") && "electron" in process.versions);
r("CC_PREVIEW", !0);
r("CC_RUNTIME", "function" == typeof loadRuntime);
r("CC_JSB", o("jsb") && !0);
var a = !(!o("wx") || !wx.getSharedCanvas), c = !(!o("wx") || !wx.getSystemInfoSync && !wx.getSharedCanvas), l = o("bk");
s("CC_WECHATGAMESUB", a);
s("CC_WECHATGAME", c);
s("CC_QQPLAY", l);
0;
n.CocosEngine = cc.ENGINE_VERSION = "2.2.0";
}), {} ]
}, {}, [ 255 ]);